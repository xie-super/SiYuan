{"ID":"20231224112843-9h3btr2","Spec":"1","Type":"NodeDocument","Properties":{"id":"20231224112843-9h3btr2","title":"Template Method Pattern（模板方法模式）","updated":"20231226151530"},"Children":[{"ID":"20231226144841-c1e6tqy","Type":"NodeParagraph","Properties":{"id":"20231226144841-c1e6tqy","updated":"20231226145035"}},{"ID":"20231224112922-g0mt6pa","Type":"NodeHeading","HeadingLevel":1,"Properties":{"id":"20231224112922-g0mt6pa","updated":"20231226144323"},"Children":[{"Type":"NodeText","Data":"介绍"}]},{"ID":"20231224112922-d42uo57","Type":"NodeParagraph","Properties":{"id":"20231224112922-d42uo57","updated":"20231226144523"},"Children":[{"Type":"NodeText","Data":"Template Method Pattern 被认为是一种\""},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"作用于实现"},{"Type":"NodeText","Data":"\"（behavioral pattern）的设计模式，"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"模板方法模式在一个方法中定义一个算法的骨架，而将一些步骤延迟到子类中。模板方法使得子类可以在不改变算法结构的情况下，重新定义算法中的某些步骤。"}]},{"ID":"20231224112922-1te10uo","Type":"NodeHeading","HeadingLevel":1,"Properties":{"id":"20231224112922-1te10uo","updated":"20231226144616"},"Children":[{"Type":"NodeText","Data":"范例：茶饮店的饮品冲泡程序"}]},{"ID":"20231224112922-3wuqhkr","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20231224112922-3wuqhkr","updated":"20231224112922"},"Children":[{"Type":"NodeText","Data":"问题介绍"}]},{"ID":"20231224112922-86ki3d1","Type":"NodeParagraph","Properties":{"id":"20231224112922-86ki3d1","updated":"20231224112922"},"Children":[{"Type":"NodeText","Data":"​\nCoffee 和 Tea 制作过程有着自己的行为"}]},{"ID":"20231226144751-9856xl8","Type":"NodeTable","TableAligns":[0,0],"Properties":{"colgroup":"|","id":"20231226144751-9856xl8","updated":"20231226145901"},"Children":[{"Type":"NodeTableHead","Data":"thead","Children":[{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"th","Children":[{"Type":"NodeText","Data":"泡茶"}]},{"Type":"NodeTableCell","Data":"th","Children":[{"Type":"NodeText","Data":"咖啡"}]}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"1. 煮沸水"},{"Type":"NodeText","Data":"​"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"1. 煮沸水 "},{"Type":"NodeText","Data":"​"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Properties":{"colspan":"1"},"Children":[{"Type":"NodeKramdownSpanIAL","Data":"{: colspan=\"1\"}"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"2. 加入茶叶冲泡 "},{"Type":"NodeText","Data":"​"}]},{"Type":"NodeTableCell","Data":"td","Properties":{"colspan":"1"},"Children":[{"Type":"NodeKramdownSpanIAL","Data":"{: colspan=\"1\"}"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"2. 加入咖啡粉 "},{"Type":"NodeText","Data":"​"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"3. 装杯 "},{"Type":"NodeText","Data":"​"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"3. 装杯 "},{"Type":"NodeText","Data":"​"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"4. 加柠檬 "},{"Type":"NodeText","Data":"​"},{"Type":"NodeBr","Data":"br"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"4. 加 Sugar和 Milk"},{"Type":"NodeText","Data":"​"},{"Type":"NodeBr","Data":"br"}]}]}]},{"ID":"20231226145314-az9lj6k","Type":"NodeParagraph","Properties":{"id":"20231226145314-az9lj6k","updated":"20231226145947"},"Children":[{"Type":"NodeText","Data":"骨架类似，抽象为煮沸水、加原料、倒入杯子、加小料"}]},{"ID":"20231224112922-yn1fsnm","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20231224112922-yn1fsnm","updated":"20231226150040"},"Children":[{"Type":"NodeText","Data":"优化方式：模板方法模式​​"}]},{"ID":"20231226150041-uzakaxm","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20231226150041-uzakaxm","updated":"20231226150109"},"Children":[{"Type":"NodeText","Data":"代码"}]},{"ID":"20231226150109-ti3pt2m","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20231226150109-ti3pt2m","updated":"20231226151154"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ=="},{"Type":"NodeCodeBlockCode","Data":"abstract class CaffineBeverage {\n    public void prepareRecipe() {\n        boilWater();\n    }\n    public abstract void brew();\n    public void boilWater() {\n        System.out.println(\"Boil warter\");\n    }\n    public void pourInCup() {\n        System.out.println(\"Pour in cup\");\n    }\n    public abstract void addCondiments();\n}\nclass Coffee extends CaffineBeverage {\n\n    @Override\n    public void brew() {\n        System.out.println(\"加咖啡\");\n    }\n    @Override\n    public void addCondiments() {\n        System.out.println(\"加 Sugar 和Milk\");\n    }\n}\nclass Tea extends CaffineBeverage {\n    @Override\n    public void brew() {\n        System.out.println(\"加茶叶\");\n    }\n    @Override\n    public void addCondiments() {\n        System.out.println(\"加柠檬\");\n    }\n\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20231224112922-0npvjqe","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20231224112922-0npvjqe","updated":"20231226151230"},"Children":[{"Type":"NodeText","Data":"对应 UML 类图"}]},{"ID":"20231226151230-9syu7a6","Type":"NodeParagraph","Properties":{"id":"20231226151230-9syu7a6","updated":"20231226151256"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeImage","Data":"span","Properties":{"parent-style":"width: 50%;","style":"width: 10000px;"},"Children":[{"Type":"NodeBang"},{"Type":"NodeOpenBracket"},{"Type":"NodeLinkText","Data":"image.png"},{"Type":"NodeCloseBracket"},{"Type":"NodeOpenParen"},{"Type":"NodeLinkDest","Data":"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/99f07062b8914011a6ce5c0dc497f76e~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=1562\u0026h=988\u0026s=255373\u0026e=png\u0026b=fefefe"},{"Type":"NodeCloseParen"}]},{"Type":"NodeKramdownSpanIAL","Data":"{: style=\"width: 10000px;\" parent-style=\"width: 50%;\"}"},{"Type":"NodeText","Data":"​"}]},{"ID":"20231224112922-hug9n3g","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20231224112922-hug9n3g","updated":"20231226151511"},"Children":[{"Type":"NodeText","Data":"hook钩子"}]},{"ID":"20231224112922-dx9jbq7","Type":"NodeParagraph","Properties":{"id":"20231224112922-dx9jbq7","updated":"20231224112922"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeImage","Data":"span","Children":[{"Type":"NodeBang"},{"Type":"NodeOpenBracket"},{"Type":"NodeLinkText","Data":"image.png"},{"Type":"NodeCloseBracket"},{"Type":"NodeOpenParen"},{"Type":"NodeLinkDest","Data":"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/e8369893bed14b448e2a9cafc782c5c0~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=1498\u0026h=1220\u0026s=358242\u0026e=png\u0026b=ffffff"},{"Type":"NodeCloseParen"}]},{"Type":"NodeText","Data":"\nhooks 方法允许子类通过选择性地覆盖或实现这些方法，来对算法的某些步骤进行自定义。"}]},{"ID":"20231226151530-hwviq4g","Type":"NodeParagraph","Properties":{"id":"20231226151530-hwviq4g"}},{"ID":"20231226151530-0mp3jix","Type":"NodeParagraph","Properties":{"id":"20231226151530-0mp3jix","updated":"20231226151530"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"Use abstract methods when your subclass MUST provide an implementation of the method or step in the algorithm."}]},{"ID":"20231224112922-xexiiwq","Type":"NodeParagraph","Properties":{"id":"20231224112922-xexiiwq","updated":"20231224112922"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"Use hooks when that part of the algorithm is optional. With hooks, a subclass may choose to implement that hook, but it doesn’t have to."}]}]}