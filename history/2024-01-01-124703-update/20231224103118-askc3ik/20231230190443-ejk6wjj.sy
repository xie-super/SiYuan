{"ID":"20231230190443-ejk6wjj","Spec":"1","Type":"NodeDocument","Properties":{"id":"20231230190443-ejk6wjj","title":"Composite Pattern","updated":"20240101124701"},"Children":[{"ID":"20231230190443-fbkz7gx","Type":"NodeHeading","HeadingLevel":1,"Properties":{"id":"20231230190443-fbkz7gx","updated":"20240101124343"},"Children":[{"Type":"NodeText","Data":"案例：披萨店和煎饼店（续）"}]},{"ID":"20240101124653-l1vlsxj","Type":"NodeParagraph","Properties":{"id":"20240101124653-l1vlsxj","updated":"20240101124653"},"Children":[{"Type":"NodeText","Data":"基于前一篇迭代模式的案例进行需求更新，餐厅的菜单管理系统需要有煎饼屋菜单和披萨菜单。现在希望在披萨菜单中能够加上一份餐后甜点的子菜单。\n在迭代模式中，披萨菜单是用数组维护的，我们需要让披萨菜单持有一份子菜单，但是不能真的把他赋值给菜单项数组，因为类型不同，所以不能这么做。\n所以，需要重新实现煎饼屋菜单和披萨菜单了。事实是，我们已经到达了一个复杂级别，如果现在不重新设计，就无法容纳未来增加的菜单或子菜单的需求。我们需要一下改变："}]},{"ID":"20240101124653-clafoux","Type":"NodeParagraph","Properties":{"id":"20240101124653-clafoux","updated":"20240101124701"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"需要某种树形结构"},{"Type":"NodeText","Data":"，可以容纳菜单、子菜单和菜单项；\n需要确定能够在每个菜单的各个项之间游走，而且至少像用迭代器一样方便；\n需要能够更有弹性地在菜单项之间游走。比方说，可能只需要遍历甜点菜单，或者可以便利整个菜单；\n"},{"Type":"NodeBr","Data":"br"}]}]}