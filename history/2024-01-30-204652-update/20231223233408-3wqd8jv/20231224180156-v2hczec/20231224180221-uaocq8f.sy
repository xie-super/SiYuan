{"ID":"20231224180221-uaocq8f","Spec":"1","Type":"NodeDocument","Properties":{"id":"20231224180221-uaocq8f","title":"MySQL常见面试题总结","updated":"20240130204355"},"Children":[{"ID":"20231224180254-7grgq1s","Type":"NodeThematicBreak","Properties":{"id":"20231224180254-7grgq1s","updated":"20231224180254"}},{"ID":"20231224180254-9awvc13","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20231224180254-9awvc13","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"MySQL 基础"}]},{"ID":"20231224180254-exjw8tw","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20231224180254-exjw8tw","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"什么是关系型数据库？"}]},{"ID":"20231224180254-5n0h8gr","Type":"NodeParagraph","Properties":{"id":"20231224180254-5n0h8gr","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"顾名思义，关系型数据库（RDB，Relational Database）就是一种建立在关系模型的基础上的数据库。关系模型表明了数据库中所存储的数据之间的联系（一对一、一对多、多对多）。"}]},{"ID":"20231224180254-7jjiz3b","Type":"NodeParagraph","Properties":{"id":"20231224180254-7jjiz3b","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"关系型数据库中，我们的数据都被存放在了各种表中（比如用户表），表中的每一行就存放着一条数据（比如一个用户的信息）。"}]},{"ID":"20231224180254-invbes8","Type":"NodeParagraph","Properties":{"id":"20231224180254-invbes8","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeImage","Data":"span","Children":[{"Type":"NodeBang"},{"Type":"NodeOpenBracket"},{"Type":"NodeLinkText","Data":"关系型数据库表关系"},{"Type":"NodeCloseBracket"},{"Type":"NodeOpenParen"},{"Type":"NodeLinkDest","Data":"https://oss.javaguide.cn/java-guide-blog/5e3c1a71724a38245aa43b02_99bf70d46cc247be878de9d3a88f0c44.png"},{"Type":"NodeCloseParen"}]},{"Type":"NodeText","Data":"​"}]},{"ID":"20231224180254-f1o5svj","Type":"NodeParagraph","Properties":{"id":"20231224180254-f1o5svj","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"大部分关系型数据库都使用 SQL 来操作数据库中的数据。并且，大部分关系型数据库都支持事务的四大特性(ACID)。"}]},{"ID":"20231224180254-cknsit6","Type":"NodeParagraph","Properties":{"id":"20231224180254-cknsit6","updated":"20231224180254"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"有哪些常见的关系型数据库呢？"}]},{"ID":"20231224180254-staq1uk","Type":"NodeParagraph","Properties":{"id":"20231224180254-staq1uk","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"MySQL、PostgreSQL、Oracle、SQL Server、SQLite（微信本地的聊天记录的存储就是用的 SQLite） ……。"}]},{"ID":"20231224180254-6p89j1w","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20231224180254-6p89j1w","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"什么是 SQL？"}]},{"ID":"20231224180254-9cainzp","Type":"NodeParagraph","Properties":{"id":"20231224180254-9cainzp","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"SQL 是一种结构化查询语言(Structured Query Language)，专门用来与数据库打交道，目的是提供一种从数据库中读写数据的简单有效的方法。"}]},{"ID":"20231224180254-c9f7zms","Type":"NodeParagraph","Properties":{"id":"20231224180254-c9f7zms","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"几乎所有的主流关系数据库都支持 SQL ，适用性非常强。并且，一些非关系型数据库也兼容 SQL 或者使用的是类似于 SQL 的查询语言。"}]},{"ID":"20231224180254-pcl723a","Type":"NodeParagraph","Properties":{"id":"20231224180254-pcl723a","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"SQL 可以帮助我们："}]},{"ID":"20231224180254-2w8m19l","Type":"NodeList","ListData":{},"Properties":{"id":"20231224180254-2w8m19l","updated":"20231224180254"},"Children":[{"ID":"20231224180254-tlvwlhs","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20231224180254-tlvwlhs","updated":"20231224180254"},"Children":[{"ID":"20231224180254-z7oness","Type":"NodeParagraph","Properties":{"id":"20231224180254-z7oness","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"新建数据库、数据表、字段；"}]}]},{"ID":"20231224180254-uzc3qft","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20231224180254-uzc3qft","updated":"20231224180254"},"Children":[{"ID":"20231224180254-2o96fvf","Type":"NodeParagraph","Properties":{"id":"20231224180254-2o96fvf","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"在数据库中增加，删除，修改，查询数据；"}]}]},{"ID":"20231224180254-xz934kd","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20231224180254-xz934kd","updated":"20231224180254"},"Children":[{"ID":"20231224180254-fuxtx83","Type":"NodeParagraph","Properties":{"id":"20231224180254-fuxtx83","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"新建视图、函数、存储过程；"}]}]},{"ID":"20231224180254-1kdg3t0","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20231224180254-1kdg3t0","updated":"20231224180254"},"Children":[{"ID":"20231224180254-x38k0vz","Type":"NodeParagraph","Properties":{"id":"20231224180254-x38k0vz","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"对数据库中的数据进行简单的数据分析；"}]}]},{"ID":"20231224180254-teifxjh","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20231224180254-teifxjh","updated":"20231224180254"},"Children":[{"ID":"20231224180254-i7r77k5","Type":"NodeParagraph","Properties":{"id":"20231224180254-i7r77k5","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"搭配 Hive，Spark SQL 做大数据；"}]}]},{"ID":"20231224180254-eacv6yq","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20231224180254-eacv6yq","updated":"20231224180254"},"Children":[{"ID":"20231224180254-ovamhel","Type":"NodeParagraph","Properties":{"id":"20231224180254-ovamhel","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"搭配 SQLFlow 做机器学习；"}]}]},{"ID":"20231224180254-syzx2sj","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20231224180254-syzx2sj","updated":"20231224180254"},"Children":[{"ID":"20231224180254-frkr15o","Type":"NodeParagraph","Properties":{"id":"20231224180254-frkr15o","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"……"}]}]}]},{"ID":"20231224180254-o3dgjra","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20231224180254-o3dgjra","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"什么是 MySQL？"}]},{"ID":"20231224180254-eetivy9","Type":"NodeParagraph","Properties":{"id":"20231224180254-eetivy9","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeImage","Data":"span","Children":[{"Type":"NodeBang"},{"Type":"NodeOpenBracket"},{"Type":"NodeLinkText"},{"Type":"NodeCloseBracket"},{"Type":"NodeOpenParen"},{"Type":"NodeLinkDest","Data":"https://oss.javaguide.cn/github/javaguide/csdn/20210327143351823.png"},{"Type":"NodeCloseParen"}]},{"Type":"NodeText","Data":"​"}]},{"ID":"20231224180254-r2zusph","Type":"NodeParagraph","Properties":{"id":"20231224180254-r2zusph","updated":"20231224180254"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"MySQL 是一种关系型数据库，主要用于持久化存储我们的系统中的一些数据比如用户信息。"}]},{"ID":"20231224180254-3ep3x50","Type":"NodeParagraph","Properties":{"id":"20231224180254-3ep3x50","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"由于 MySQL 是开源免费并且比较成熟的数据库，因此，MySQL 被大量使用在各种系统中。任何人都可以在 GPL(General Public License) 的许可下下载并根据个性化的需要对其进行修改。MySQL 的默认端口号是"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"3306"},{"Type":"NodeText","Data":"。"}]},{"ID":"20231224180254-ofhtajf","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20231224180254-ofhtajf","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"MySQL 有什么优点？"}]},{"ID":"20231224180254-sagw6k8","Type":"NodeParagraph","Properties":{"id":"20231224180254-sagw6k8","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"这个问题本质上是在问 MySQL 如此流行的原因。"}]},{"ID":"20231224180254-11hgaqz","Type":"NodeParagraph","Properties":{"id":"20231224180254-11hgaqz","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"MySQL 主要具有下面这些优点："}]},{"ID":"20231224180254-ezl0km4","Type":"NodeList","ListData":{"Typ":1},"Properties":{"id":"20231224180254-ezl0km4","updated":"20231224180254"},"Children":[{"ID":"20231224180254-uxbuosn","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"MS4=","Num":1},"Properties":{"id":"20231224180254-uxbuosn","updated":"20231224180254"},"Children":[{"ID":"20231224180254-32fja8p","Type":"NodeParagraph","Properties":{"id":"20231224180254-32fja8p","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"成熟稳定，功能完善。"}]}]},{"ID":"20231224180254-xuhek85","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"Mi4=","Num":2},"Properties":{"id":"20231224180254-xuhek85","updated":"20231224180254"},"Children":[{"ID":"20231224180254-triw35e","Type":"NodeParagraph","Properties":{"id":"20231224180254-triw35e","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"开源免费。"}]}]},{"ID":"20231224180254-crtpl2u","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"My4=","Num":3},"Properties":{"id":"20231224180254-crtpl2u","updated":"20231224180254"},"Children":[{"ID":"20231224180254-pqxkep8","Type":"NodeParagraph","Properties":{"id":"20231224180254-pqxkep8","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"文档丰富，既有详细的官方文档，又有非常多优质文章可供参考学习。"}]}]},{"ID":"20231224180254-k2higea","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"NC4=","Num":4},"Properties":{"id":"20231224180254-k2higea","updated":"20231224180254"},"Children":[{"ID":"20231224180254-emh3o6a","Type":"NodeParagraph","Properties":{"id":"20231224180254-emh3o6a","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"开箱即用，操作简单，维护成本低。"}]}]},{"ID":"20231224180254-mmkqi1i","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"NS4=","Num":5},"Properties":{"id":"20231224180254-mmkqi1i","updated":"20231224180254"},"Children":[{"ID":"20231224180254-2vrb1f4","Type":"NodeParagraph","Properties":{"id":"20231224180254-2vrb1f4","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"兼容性好，支持常见的操作系统，支持多种开发语言。"}]}]},{"ID":"20231224180254-kmdro7v","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"Ni4=","Num":6},"Properties":{"id":"20231224180254-kmdro7v","updated":"20231224180254"},"Children":[{"ID":"20231224180254-fmtee8v","Type":"NodeParagraph","Properties":{"id":"20231224180254-fmtee8v","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"社区活跃，生态完善。"}]}]},{"ID":"20231224180254-ut9cf3l","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"Ny4=","Num":7},"Properties":{"id":"20231224180254-ut9cf3l","updated":"20231224180254"},"Children":[{"ID":"20231224180254-375gclr","Type":"NodeParagraph","Properties":{"id":"20231224180254-375gclr","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"事务支持优秀， InnoDB 存储引擎默认使用 REPEATABLE-READ 并不会有任何性能损失，并且，InnoDB 实现的 REPEATABLE-READ 隔离级别其实是可以解决幻读问题发生的。"}]}]},{"ID":"20231224180254-iyiy6aa","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"OC4=","Num":8},"Properties":{"id":"20231224180254-iyiy6aa","updated":"20231224180254"},"Children":[{"ID":"20231224180254-8f753n1","Type":"NodeParagraph","Properties":{"id":"20231224180254-8f753n1","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"支持分库分表、读写分离、高可用。"}]}]}]},{"ID":"20231224180254-p38x4ng","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20231224180254-p38x4ng","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"MySQL 字段类型"}]},{"ID":"20231224180254-u02fyrk","Type":"NodeParagraph","Properties":{"id":"20231224180254-u02fyrk","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"MySQL 字段类型可以简单分为三大类："}]},{"ID":"20231224180254-6vsphi7","Type":"NodeParagraph","Properties":{"id":"20231224180254-6vsphi7","updated":"20240128205011"}},{"ID":"20231224180254-efoa71w","Type":"NodeParagraph","Properties":{"id":"20231224180254-efoa71w","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeImage","Data":"span","Children":[{"Type":"NodeBang"},{"Type":"NodeOpenBracket"},{"Type":"NodeLinkText","Data":"MySQL 常见字段类型总结"},{"Type":"NodeCloseBracket"},{"Type":"NodeOpenParen"},{"Type":"NodeLinkDest","Data":"https://oss.javaguide.cn/github/javaguide/mysql/summary-of-mysql-field-types.png"},{"Type":"NodeCloseParen"}]},{"Type":"NodeText","Data":"​"}]},{"ID":"20231224180254-vhdi43g","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20231224180254-vhdi43g","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"整数类型的 UNSIGNED 属性有什么用？"}]},{"ID":"20231224180254-n5znt09","Type":"NodeParagraph","Properties":{"id":"20231224180254-n5znt09","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"MySQL 中的整数类型可以使用可选的 UNSIGNED 属性来表示不允许负值的无符号整数。使用 UNSIGNED 属性可以将正整数的上限提高一倍，因为它不需要存储负数值。"}]},{"ID":"20231224180254-bci8qm2","Type":"NodeParagraph","Properties":{"id":"20231224180254-bci8qm2","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"例如， TINYINT UNSIGNED 类型的取值范围是 0 ~ 255，而普通的 TINYINT 类型的值范围是 -128 ~ 127。INT UNSIGNED 类型的取值范围是 0 ~ 4,294,967,295，而普通的 INT 类型的值范围是 -2,147,483,648 ~ 2,147,483,647。"}]},{"ID":"20231224180254-jy4b6ay","Type":"NodeParagraph","Properties":{"id":"20231224180254-jy4b6ay","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"对于从 0 开始递增的 ID 列，使用 UNSIGNED 属性可以非常适合，因为不允许负值并且可以拥有更大的上限范围，提供了更多的 ID 值可用。"}]},{"ID":"20231224180254-mtr2m8b","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20231224180254-mtr2m8b","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"CHAR 和 VARCHAR 的区别是什么？"}]},{"ID":"20231224180254-1ecesi5","Type":"NodeParagraph","Properties":{"id":"20231224180254-1ecesi5","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"CHAR 和 VARCHAR 是最常用到的字符串类型，两者的主要区别在于："},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"CHAR 是定长字符串，VARCHAR 是变长字符串。"}]},{"ID":"20231224180254-etikhp5","Type":"NodeParagraph","Properties":{"id":"20231224180254-etikhp5","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"CHAR 在存储时会在右边填充空格以达到指定的长度，检索时会去掉空格；VARCHAR 在存储时需要使用 1 或 2 个额外字节记录字符串的长度，检索时不需要处理。"}]},{"ID":"20231224180254-nah39ua","Type":"NodeParagraph","Properties":{"id":"20231224180254-nah39ua","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"CHAR 更适合存储长度较短或者长度都差不多的字符串，例如 Bcrypt 算法、MD5 算法加密后的密码、身份证号码。VARCHAR 类型适合存储长度不确定或者差异较大的字符串，例如用户昵称、文章标题等。"}]},{"ID":"20231224180254-ugfmh57","Type":"NodeParagraph","Properties":{"id":"20231224180254-ugfmh57","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"CHAR(M) 和 VARCHAR(M) 的 M 都代表能够保存的字符数的最大值，无论是字母、数字还是中文，每个都只占用一个字符。"}]},{"ID":"20231224180254-3juzhui","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20231224180254-3juzhui","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"VARCHAR(100)和 VARCHAR(10)的区别是什么？"}]},{"ID":"20231224180254-93xejnd","Type":"NodeParagraph","Properties":{"id":"20231224180254-93xejnd","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"VARCHAR(100)和 VARCHAR(10)都是变长类型，表示能存储最多 100 个字符和 10 个字符。因此，VARCHAR (100) 可以满足更大范围的字符存储需求，有更好的业务拓展性。而 VARCHAR(10)存储超过 10 个字符时，就需要修改表结构才可以。"}]},{"ID":"20231224180254-28u5m2i","Type":"NodeParagraph","Properties":{"id":"20231224180254-28u5m2i","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"虽说 VARCHAR(100)和 VARCHAR(10)能存储的字符范围不同，但二者存储相同的字符串，所占用磁盘的存储空间其实是一样的，这也是很多人容易误解的一点。"}]},{"ID":"20231224180254-qfugzgy","Type":"NodeParagraph","Properties":{"id":"20231224180254-qfugzgy","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"不过，VARCHAR(100) 会消耗更多的内存。这是因为 VARCHAR 类型在内存中操作时，通常会分配固定大小的内存块来保存值，即使用字符类型中定义的长度。例如在进行排序的时候，VARCHAR(100)是按照 100 这个长度来进行的，也就会消耗更多内存。"}]},{"ID":"20231224180254-nex7b1u","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20231224180254-nex7b1u","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"DECIMAL 和 FLOAT/DOUBLE 的区别是什么？"}]},{"ID":"20231224180254-vxpb8k8","Type":"NodeParagraph","Properties":{"id":"20231224180254-vxpb8k8","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"DECIMAL 和 FLOAT 的区别是："},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"DECIMAL 是定点数，FLOAT/DOUBLE 是浮点数。DECIMAL 可以存储精确的小数值，FLOAT/DOUBLE 只能存储近似的小数值。"}]},{"ID":"20231224180254-qj5yotb","Type":"NodeParagraph","Properties":{"id":"20231224180254-qj5yotb","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"DECIMAL 用于存储具有精度要求的小数，例如与货币相关的数据，可以避免浮点数带来的精度损失。"}]},{"ID":"20231224180254-9hp4y55","Type":"NodeParagraph","Properties":{"id":"20231224180254-9hp4y55","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"在 Java 中，MySQL 的 DECIMAL 类型对应的是 Java 类 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"java.math.BigDecimal"},{"Type":"NodeText","Data":"​。"}]},{"ID":"20231224180254-fxbg1as","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20231224180254-fxbg1as","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"为什么不推荐使用 TEXT 和 BLOB？"}]},{"ID":"20231224180254-bpastlj","Type":"NodeParagraph","Properties":{"id":"20231224180254-bpastlj","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"TEXT 类型类似于 CHAR（0-255 字节）和 VARCHAR（0-65,535 字节），但可以存储更长的字符串，即长文本数据，例如博客内容。"}]},{"ID":"20231224180254-lvy6yju","Type":"NodeTable","TableAligns":[0,0,0],"Properties":{"colgroup":"||","id":"20231224180254-lvy6yju","updated":"20231224180254"},"Children":[{"Type":"NodeTableHead","Data":"thead","Children":[{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"th","Children":[{"Type":"NodeText","Data":"类型"}]},{"Type":"NodeTableCell","Data":"th","Children":[{"Type":"NodeText","Data":"可存储大小"}]},{"Type":"NodeTableCell","Data":"th","Children":[{"Type":"NodeText","Data":"用途"}]}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"TINYTEXT"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"0-255 字节"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"一般文本字符串"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"TEXT"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"0-65,535 字节"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"长文本字符串"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"MEDIUMTEXT"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"0-16,772,150 字节"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"较大文本数据"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"LONGTEXT"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"0-4,294,967,295 字节"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"极大文本数据"}]}]}]},{"ID":"20231224180254-bbdn2qy","Type":"NodeParagraph","Properties":{"id":"20231224180254-bbdn2qy","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"BLOB 类型主要用于存储二进制大对象，例如图片、音视频等文件。"}]},{"ID":"20231224180254-sax0xjp","Type":"NodeTable","TableAligns":[0,0,0],"Properties":{"colgroup":"||","id":"20231224180254-sax0xjp","updated":"20231224180254"},"Children":[{"Type":"NodeTableHead","Data":"thead","Children":[{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"th","Children":[{"Type":"NodeText","Data":"类型"}]},{"Type":"NodeTableCell","Data":"th","Children":[{"Type":"NodeText","Data":"可存储大小"}]},{"Type":"NodeTableCell","Data":"th","Children":[{"Type":"NodeText","Data":"用途"}]}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"TINYBLOB"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"0-255 字节"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"短文本二进制字符串"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"BLOB"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"0-65KB"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"二进制字符串"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"MEDIUMBLOB"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"0-16MB"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"二进制形式的长文本数据"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"LONGBLOB"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"0-4GB"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"二进制形式的极大文本数据"}]}]}]},{"ID":"20231224180254-6a4b5je","Type":"NodeParagraph","Properties":{"id":"20231224180254-6a4b5je","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"在日常开发中，很少使用 TEXT 类型，但偶尔会用到，而 BLOB 类型则基本不常用。如果预期长度范围可以通过 VARCHAR 来满足，建议避免使用 TEXT。"}]},{"ID":"20231224180254-88z6czt","Type":"NodeParagraph","Properties":{"id":"20231224180254-88z6czt","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"数据库规范通常不推荐使用 BLOB 和 TEXT 类型，这两种类型具有一些缺点和限制，例如："}]},{"ID":"20231224180254-hte1lvb","Type":"NodeList","ListData":{},"Properties":{"id":"20231224180254-hte1lvb","updated":"20231224180254"},"Children":[{"ID":"20231224180254-7mumykv","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20231224180254-7mumykv","updated":"20231224180254"},"Children":[{"ID":"20231224180254-dgmdjs0","Type":"NodeParagraph","Properties":{"id":"20231224180254-dgmdjs0","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"不能有默认值。"}]}]},{"ID":"20231224180254-q2rfker","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20231224180254-q2rfker","updated":"20231224180254"},"Children":[{"ID":"20231224180254-ipaz3mt","Type":"NodeParagraph","Properties":{"id":"20231224180254-ipaz3mt","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"在使用临时表时无法使用内存临时表，只能在磁盘上创建临时表（《高性能 MySQL》书中有提到）。"}]}]},{"ID":"20231224180254-fkeh0uy","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20231224180254-fkeh0uy","updated":"20231224180254"},"Children":[{"ID":"20231224180254-yit5iye","Type":"NodeParagraph","Properties":{"id":"20231224180254-yit5iye","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"检索效率较低。"}]}]},{"ID":"20231224180254-lk5hn1y","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20231224180254-lk5hn1y","updated":"20231224180254"},"Children":[{"ID":"20231224180254-524c2sc","Type":"NodeParagraph","Properties":{"id":"20231224180254-524c2sc","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"不能直接创建索引，需要指定前缀长度。"}]}]},{"ID":"20231224180254-x7l0kum","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20231224180254-x7l0kum","updated":"20231224180254"},"Children":[{"ID":"20231224180254-pr0odg7","Type":"NodeParagraph","Properties":{"id":"20231224180254-pr0odg7","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"可能会消耗大量的网络和 IO 带宽。"}]}]},{"ID":"20231224180254-89ui404","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20231224180254-89ui404","updated":"20231224180254"},"Children":[{"ID":"20231224180254-zvyq3x9","Type":"NodeParagraph","Properties":{"id":"20231224180254-zvyq3x9","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"可能导致表上的 DML 操作变慢。"}]}]},{"ID":"20231224180254-jbe5te5","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20231224180254-jbe5te5","updated":"20231224180254"},"Children":[{"ID":"20231224180254-8on6zbp","Type":"NodeParagraph","Properties":{"id":"20231224180254-8on6zbp","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"……"}]}]}]},{"ID":"20231224180254-otk59su","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20231224180254-otk59su","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"DATETIME 和 TIMESTAMP 的区别是什么？"}]},{"ID":"20231224180254-78ljhqs","Type":"NodeParagraph","Properties":{"id":"20231224180254-78ljhqs","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"DATETIME 类型没有时区信息，TIMESTAMP 和时区有关。"}]},{"ID":"20231224180254-to2je9g","Type":"NodeParagraph","Properties":{"id":"20231224180254-to2je9g","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"TIMESTAMP 只需要使用 4 个字节的存储空间，但是 DATETIME 需要耗费 8 个字节的存储空间。但是，这样同样造成了一个问题，Timestamp 表示的时间范围更小。"}]},{"ID":"20231224180254-u5x5sal","Type":"NodeList","ListData":{},"Properties":{"id":"20231224180254-u5x5sal","updated":"20231224180254"},"Children":[{"ID":"20231224180254-6s4xgp6","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20231224180254-6s4xgp6","updated":"20231224180254"},"Children":[{"ID":"20231224180254-akifp8g","Type":"NodeParagraph","Properties":{"id":"20231224180254-akifp8g","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"DATETIME：1000-01-01 00:00:00 ~ 9999-12-31 23:59:59"}]}]},{"ID":"20231224180254-1pl1xy1","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20231224180254-1pl1xy1","updated":"20231224180254"},"Children":[{"ID":"20231224180254-fhmzgl9","Type":"NodeParagraph","Properties":{"id":"20231224180254-fhmzgl9","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"Timestamp：1970-01-01 00:00:01 ~ 2037-12-31 23:59:59"}]}]}]},{"ID":"20231224180254-dcpneru","Type":"NodeParagraph","Properties":{"id":"20231224180254-dcpneru","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"关于两者的详细对比，请参考我写的"},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"./some-thoughts-on-database-storage-time.md","TextMarkTextContent":"MySQL 时间类型数据存储建议"},{"Type":"NodeText","Data":"。"}]},{"ID":"20231224180254-44altnv","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20231224180254-44altnv","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"NULL 和 '' 的区别是什么？"}]},{"ID":"20231224180254-8hnbcfa","Type":"NodeParagraph","Properties":{"id":"20231224180254-8hnbcfa","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"NULL"},{"Type":"NodeText","Data":"​ 跟 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"''"},{"Type":"NodeText","Data":"​(空字符串)是两个完全不一样的值，区别如下："}]},{"ID":"20231224180254-xxk0z66","Type":"NodeList","ListData":{},"Properties":{"id":"20231224180254-xxk0z66","updated":"20231224180254"},"Children":[{"ID":"20231224180254-t9yqryk","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20231224180254-t9yqryk","updated":"20231224180254"},"Children":[{"ID":"20231224180254-9ljas5b","Type":"NodeParagraph","Properties":{"id":"20231224180254-9ljas5b","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"NULL"},{"Type":"NodeText","Data":"​ 代表一个不确定的值,就算是两个 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"NULL"},{"Type":"NodeText","Data":"​,它俩也不一定相等。例如，"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"SELECT NULL=NULL"},{"Type":"NodeText","Data":"​的结果为 false，但是在我们使用"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"DISTINCT"},{"Type":"NodeText","Data":"​,"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"GROUP BY"},{"Type":"NodeText","Data":"​,"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"ORDER BY"},{"Type":"NodeText","Data":"​时,"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"NULL"},{"Type":"NodeText","Data":"​又被认为是相等的。"}]}]},{"ID":"20231224180254-m6rloiw","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20231224180254-m6rloiw","updated":"20231224180254"},"Children":[{"ID":"20231224180254-dhqokm0","Type":"NodeParagraph","Properties":{"id":"20231224180254-dhqokm0","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"''"},{"Type":"NodeText","Data":"​的长度是 0，是不占用空间的，而"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"NULL"},{"Type":"NodeText","Data":"​ 是需要占用空间的。"}]}]},{"ID":"20231224180254-ue43ib6","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20231224180254-ue43ib6","updated":"20231224180254"},"Children":[{"ID":"20231224180254-r2h896z","Type":"NodeParagraph","Properties":{"id":"20231224180254-r2h896z","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"NULL"},{"Type":"NodeText","Data":"​ 会影响聚合函数的结果。例如，"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"SUM"},{"Type":"NodeText","Data":"​、"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"AVG"},{"Type":"NodeText","Data":"​、"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"MIN"},{"Type":"NodeText","Data":"​、"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"MAX"},{"Type":"NodeText","Data":"​ 等聚合函数会忽略 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"NULL"},{"Type":"NodeText","Data":"​ 值。 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"COUNT"},{"Type":"NodeText","Data":"​ 的处理方式取决于参数的类型。如果参数是 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"*"},{"Type":"NodeText","Data":"​("},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"COUNT(*)"},{"Type":"NodeText","Data":"​)，则会统计所有的记录数，包括 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"NULL"},{"Type":"NodeText","Data":"​ 值；如果参数是某个字段名("},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"COUNT(列名)"},{"Type":"NodeText","Data":"​)，则会忽略 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"NULL"},{"Type":"NodeText","Data":"​ 值，只统计非空值的个数。"}]}]},{"ID":"20231224180254-y27b87a","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20231224180254-y27b87a","updated":"20231224180254"},"Children":[{"ID":"20231224180254-ganjgac","Type":"NodeParagraph","Properties":{"id":"20231224180254-ganjgac","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"查询 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"NULL"},{"Type":"NodeText","Data":"​ 值时，必须使用 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"IS NULL"},{"Type":"NodeText","Data":"​ 或 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"IS NOT NULLl"},{"Type":"NodeText","Data":"​ 来判断，而不能使用 =、!=、 \u003c、\u003e 之类的比较运算符。而"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"''"},{"Type":"NodeText","Data":"​是可以使用这些比较运算符的。"}]}]}]},{"ID":"20231224180254-h5z4yx1","Type":"NodeParagraph","Properties":{"id":"20231224180254-h5z4yx1","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"看了上面的介绍之后，相信你对另外一个高频面试题：“为什么 MySQL 不建议使用 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"NULL"},{"Type":"NodeText","Data":"​ 作为列默认值？”也有了答案。"}]},{"ID":"20231224180254-oe3menq","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20231224180254-oe3menq","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"Boolean 类型如何表示？"}]},{"ID":"20231224180254-kf1z76y","Type":"NodeParagraph","Properties":{"id":"20231224180254-kf1z76y","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"MySQL 中没有专门的布尔类型，而是用 TINYINT(1) 类型来表示布尔值。TINYINT(1) 类型可以存储 0 或 1，分别对应 false 或 true。"}]},{"ID":"20231224180254-83ml6nf","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20231224180254-83ml6nf","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"MySQL 基础架构"}]},{"ID":"20231224180254-3woa14x","Type":"NodeBlockquote","Properties":{"id":"20231224180254-3woa14x","updated":"20231224180254"},"Children":[{"Type":"NodeBlockquoteMarker","Data":"\u003e"},{"ID":"20231224180254-cs09yw0","Type":"NodeParagraph","Properties":{"id":"20231224180254-cs09yw0","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"建议配合 "},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"./how-sql-executed-in-mysql.md","TextMarkTextContent":"SQL 语句在 MySQL 中的执行过程"},{"Type":"NodeText","Data":" 这篇文章来理解 MySQL 基础架构。另外，“一个 SQL 语句在 MySQL 中的执行流程”也是面试中比较常问的一个问题。"}]}]},{"ID":"20231224180254-er51s9g","Type":"NodeParagraph","Properties":{"id":"20231224180254-er51s9g","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"下图是 MySQL 的一个简要架构图，从下图你可以很清晰的看到客户端的一条 SQL 语句在 MySQL 内部是如何执行的。"}]},{"ID":"20231224180254-9pgqj95","Type":"NodeParagraph","Properties":{"id":"20231224180254-9pgqj95","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeImage","Data":"span","Children":[{"Type":"NodeBang"},{"Type":"NodeOpenBracket"},{"Type":"NodeLinkText"},{"Type":"NodeCloseBracket"},{"Type":"NodeOpenParen"},{"Type":"NodeLinkDest","Data":"https://oss.javaguide.cn/javaguide/13526879-3037b144ed09eb88.png"},{"Type":"NodeCloseParen"}]},{"Type":"NodeText","Data":"​"}]},{"ID":"20231224180254-kc9gm1q","Type":"NodeParagraph","Properties":{"id":"20231224180254-kc9gm1q","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"从上图可以看出， MySQL 主要由下面几部分构成："}]},{"ID":"20231224180254-9ea5kbq","Type":"NodeList","ListData":{},"Properties":{"id":"20231224180254-9ea5kbq","updated":"20231224180254"},"Children":[{"ID":"20231224180254-fyt6xhv","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20231224180254-fyt6xhv","updated":"20231224180254"},"Children":[{"ID":"20231224180254-jgeuvy2","Type":"NodeParagraph","Properties":{"id":"20231224180254-jgeuvy2","updated":"20231224180254"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"连接器："},{"Type":"NodeText","Data":" 身份认证和权限相关(登录 MySQL 的时候)。"}]}]},{"ID":"20231224180254-n9zls9j","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20231224180254-n9zls9j","updated":"20231224180254"},"Children":[{"ID":"20231224180254-ag0ei9g","Type":"NodeParagraph","Properties":{"id":"20231224180254-ag0ei9g","updated":"20231224180254"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"查询缓存："},{"Type":"NodeText","Data":" 执行查询语句的时候，会先查询缓存（MySQL 8.0 版本后移除，因为这个功能不太实用）。"}]}]},{"ID":"20231224180254-lvqivc5","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20231224180254-lvqivc5","updated":"20231224180254"},"Children":[{"ID":"20231224180254-28bw9xw","Type":"NodeParagraph","Properties":{"id":"20231224180254-28bw9xw","updated":"20231224180254"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"分析器："},{"Type":"NodeText","Data":" 没有命中缓存的话，SQL 语句就会经过分析器，分析器说白了就是要先看你的 SQL 语句要干嘛，再检查你的 SQL 语句语法是否正确。"}]}]},{"ID":"20231224180254-4b5sdrn","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20231224180254-4b5sdrn","updated":"20231224180254"},"Children":[{"ID":"20231224180254-rnlsecf","Type":"NodeParagraph","Properties":{"id":"20231224180254-rnlsecf","updated":"20231224180254"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"优化器："},{"Type":"NodeText","Data":" 按照 MySQL 认为最优的方案去执行。"}]}]},{"ID":"20231224180254-4jaxev4","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20231224180254-4jaxev4","updated":"20231224180254"},"Children":[{"ID":"20231224180254-j84cbyi","Type":"NodeParagraph","Properties":{"id":"20231224180254-j84cbyi","updated":"20231224180254"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"执行器："},{"Type":"NodeText","Data":" 执行语句，然后从存储引擎返回数据。 执行语句之前会先判断是否有权限，如果没有权限的话，就会报错。"}]}]},{"ID":"20231224180254-b0q0c7k","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20231224180254-b0q0c7k","updated":"20231224180254"},"Children":[{"ID":"20231224180254-phdslny","Type":"NodeParagraph","Properties":{"id":"20231224180254-phdslny","updated":"20231224180254"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"插件式存储引擎"},{"Type":"NodeText","Data":"：主要负责数据的存储和读取，采用的是插件式架构，支持 InnoDB、MyISAM、Memory 等多种存储引擎。"}]}]}]},{"ID":"20231224180254-rh0ubgm","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20231224180254-rh0ubgm","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"MySQL 存储引擎"}]},{"ID":"20231224180254-7tcws5w","Type":"NodeParagraph","Properties":{"id":"20231224180254-7tcws5w","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"MySQL 核心在于存储引擎，想要深入学习 MySQL，必定要深入研究 MySQL 存储引擎。"}]},{"ID":"20231224180254-9apopml","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20231224180254-9apopml","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"MySQL 支持哪些存储引擎？默认使用哪个？"}]},{"ID":"20231224180254-5oq89lu","Type":"NodeParagraph","Properties":{"id":"20231224180254-5oq89lu","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"MySQL 支持多种存储引擎，你可以通过 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"SHOW ENGINES"},{"Type":"NodeText","Data":"​ 命令来查看 MySQL 支持的所有存储引擎。"}]},{"ID":"20231224180254-l5pvhq5","Type":"NodeParagraph","Properties":{"id":"20231224180254-l5pvhq5","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeImage","Data":"span","Children":[{"Type":"NodeBang"},{"Type":"NodeOpenBracket"},{"Type":"NodeLinkText","Data":"查看 MySQL 提供的所有存储引擎"},{"Type":"NodeCloseBracket"},{"Type":"NodeOpenParen"},{"Type":"NodeLinkDest","Data":"https://oss.javaguide.cn/github/javaguide/mysql/image-20220510105408703.png"},{"Type":"NodeCloseParen"}]},{"Type":"NodeText","Data":"​"}]},{"ID":"20231224180254-spk87w1","Type":"NodeParagraph","Properties":{"id":"20231224180254-spk87w1","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"从上图我们可以查看出， MySQL 当前默认的存储引擎是 InnoDB。并且，所有的存储引擎中只有 InnoDB 是事务性存储引擎，也就是说只有 InnoDB 支持事务。"}]},{"ID":"20231224180254-1xrgoaz","Type":"NodeParagraph","Properties":{"id":"20231224180254-1xrgoaz","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"我这里使用的 MySQL 版本是 8.x，不同的 MySQL 版本之间可能会有差别。"}]},{"ID":"20231224180254-5lz4yg7","Type":"NodeParagraph","Properties":{"id":"20231224180254-5lz4yg7","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"MySQL 5.5.5 之前，MyISAM 是 MySQL 的默认存储引擎。5.5.5 版本之后，InnoDB 是 MySQL 的默认存储引擎。"}]},{"ID":"20231224180254-xrh24q5","Type":"NodeParagraph","Properties":{"id":"20231224180254-xrh24q5","updated":"20240130173952"},"Children":[{"Type":"NodeText","Data":"你可以通过 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"SELECT VERSION()"},{"Type":"NodeText","Data":"​ 命令查看你的 MySQL 版本"}]},{"ID":"20231224180254-r3518cm","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20231224180254-r3518cm","updated":"20231224180254"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"YmFzaA=="},{"Type":"NodeCodeBlockCode","Data":"mysql\u003e SELECT VERSION();\n+-----------+\n| VERSION() |\n+-----------+\n| 8.0.27    |\n+-----------+\n1 row in set (0.00 sec)\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20231224180254-fhgfxyu","Type":"NodeParagraph","Properties":{"id":"20231224180254-fhgfxyu","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"你也可以通过 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"SHOW VARIABLES LIKE '%storage_engine%'"},{"Type":"NodeText","Data":"​ 命令直接查看 MySQL 当前默认的存储引擎。"}]},{"ID":"20231224180254-rqt5oe9","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20231224180254-rqt5oe9","updated":"20231224180254"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"YmFzaA=="},{"Type":"NodeCodeBlockCode","Data":"mysql\u003e SHOW VARIABLES  LIKE '%storage_engine%';\n+---------------------------------+-----------+\n| Variable_name                   | Value     |\n+---------------------------------+-----------+\n| default_storage_engine          | InnoDB    |\n| default_tmp_storage_engine      | InnoDB    |\n| disabled_storage_engines        |           |\n| internal_tmp_mem_storage_engine | TempTable |\n+---------------------------------+-----------+\n4 rows in set (0.00 sec)\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20231224180254-cpfikms","Type":"NodeParagraph","Properties":{"id":"20231224180254-cpfikms","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"​​"}]},{"ID":"20231224180254-r9vqg07","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20231224180254-r9vqg07","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"MySQL 存储引擎架构了解吗？"}]},{"ID":"20231224180254-8mtt86c","Type":"NodeParagraph","Properties":{"id":"20231224180254-8mtt86c","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"MySQL 存储引擎采用的是 "},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"插件式架构"},{"Type":"NodeText","Data":" ，支持多种存储引擎，我们甚至可以为不同的数据库表设置不同的存储引擎以适应不同场景的需要。"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"存储引擎是基于表的，而不是数据库。"}]},{"ID":"20231224180254-el5jpnl","Type":"NodeParagraph","Properties":{"id":"20231224180254-el5jpnl","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"并且，你还可以根据 MySQL 定义的存储引擎实现标准接口来编写一个属于自己的存储引擎。这些非官方提供的存储引擎可以称为第三方存储引擎，区别于官方存储引擎。像目前最常用的 InnoDB 其实刚开始就是一个第三方存储引擎，后面由于过于优秀，其被 Oracle 直接收购了。"}]},{"ID":"20231224180254-1dquxy1","Type":"NodeParagraph","Properties":{"id":"20231224180254-1dquxy1","updated":"20240130204355"}},{"ID":"20231224180254-piox7bk","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20231224180254-piox7bk","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"MyISAM 和 InnoDB 有什么区别？"}]},{"ID":"20231224180254-xw5b64x","Type":"NodeParagraph","Properties":{"id":"20231224180254-xw5b64x","updated":"20231224180254"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"1.是否支持行级锁"}]},{"ID":"20231224180254-rvk3atm","Type":"NodeParagraph","Properties":{"id":"20231224180254-rvk3atm","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"MyISAM 只有表级锁(table-level locking)，而 InnoDB 支持行级锁(row-level locking)和表级锁,默认为行级锁。"}]},{"ID":"20231224180254-maw9m90","Type":"NodeParagraph","Properties":{"id":"20231224180254-maw9m90","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"也就说，MyISAM 一锁就是锁住了整张表，这在并发写的情况下是多么滴憨憨啊！这也是为什么 InnoDB 在并发写的时候，性能更牛皮了！"}]},{"ID":"20231224180254-wjxf9hk","Type":"NodeParagraph","Properties":{"id":"20231224180254-wjxf9hk","updated":"20231224180254"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"2.是否支持事务"}]},{"ID":"20231224180254-cufyut4","Type":"NodeParagraph","Properties":{"id":"20231224180254-cufyut4","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"MyISAM 不提供事务支持。"}]},{"ID":"20231224180254-49mq87r","Type":"NodeParagraph","Properties":{"id":"20231224180254-49mq87r","updated":"20231224180254"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"3.是否支持外键"}]},{"ID":"20231224180254-bl8er9q","Type":"NodeParagraph","Properties":{"id":"20231224180254-bl8er9q","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"MyISAM 不支持，而 InnoDB 支持。"}]},{"ID":"20231224180254-6sladqu","Type":"NodeParagraph","Properties":{"id":"20231224180254-6sladqu","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"外键对于维护数据一致性非常有帮助，但是对性能有一定的损耗。因此，通常情况下，我们是不建议在实际生产项目中使用外键的，在业务代码中进行约束即可！"}]},{"ID":"20231224180254-szdk28k","Type":"NodeParagraph","Properties":{"id":"20231224180254-szdk28k","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"阿里的《Java 开发手册》也是明确规定禁止使用外键的。"}]},{"ID":"20231224180254-ketj0s3","Type":"NodeParagraph","Properties":{"id":"20231224180254-ketj0s3","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeImage","Data":"span","Children":[{"Type":"NodeBang"},{"Type":"NodeOpenBracket"},{"Type":"NodeLinkText"},{"Type":"NodeCloseBracket"},{"Type":"NodeOpenParen"},{"Type":"NodeLinkDest","Data":"https://oss.javaguide.cn/github/javaguide/mysql/image-20220510090309427.png"},{"Type":"NodeCloseParen"}]},{"Type":"NodeText","Data":"​"}]},{"ID":"20231224180254-cfvj5pm","Type":"NodeParagraph","Properties":{"id":"20231224180254-cfvj5pm","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"不过，在代码中进行约束的话，对程序员的能力要求更高，具体是否要采用外键还是要根据你的项目实际情况而定。"}]},{"ID":"20231224180254-miylpcb","Type":"NodeParagraph","Properties":{"id":"20231224180254-miylpcb","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"总结：一般我们也是不建议在数据库层面使用外键的，应用层面可以解决。不过，这样会对数据的一致性造成威胁。具体要不要使用外键还是要根据你的项目来决定。"}]},{"ID":"20231224180254-2iqwa54","Type":"NodeParagraph","Properties":{"id":"20231224180254-2iqwa54","updated":"20231224180254"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"4.是否支持数据库异常崩溃后的安全恢复"}]},{"ID":"20231224180254-5kdklrp","Type":"NodeParagraph","Properties":{"id":"20231224180254-5kdklrp","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"MyISAM 不支持，而 InnoDB 支持。"}]},{"ID":"20231224180254-nai88nq","Type":"NodeParagraph","Properties":{"id":"20231224180254-nai88nq","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"使用 InnoDB 的数据库在异常崩溃后，数据库重新启动的时候会保证数据库恢复到崩溃前的状态。这个恢复的过程依赖于 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"redo log"},{"Type":"NodeText","Data":"​ 。"}]},{"ID":"20231224180254-l4o67h6","Type":"NodeParagraph","Properties":{"id":"20231224180254-l4o67h6","updated":"20231224180254"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"5.是否支持 MVCC"}]},{"ID":"20231224180254-hl9hre3","Type":"NodeParagraph","Properties":{"id":"20231224180254-hl9hre3","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"MyISAM 不支持，而 InnoDB 支持。"}]},{"ID":"20231224180254-lbkxc9g","Type":"NodeParagraph","Properties":{"id":"20231224180254-lbkxc9g","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"讲真，这个对比有点废话，毕竟 MyISAM 连行级锁都不支持。MVCC 可以看作是行级锁的一个升级，可以有效减少加锁操作，提高性能。"}]},{"ID":"20231224180254-8r2eut8","Type":"NodeParagraph","Properties":{"id":"20231224180254-8r2eut8","updated":"20231224180254"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"6.索引实现不一样。"}]},{"ID":"20231224180254-rstro44","Type":"NodeParagraph","Properties":{"id":"20231224180254-rstro44","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"虽然 MyISAM 引擎和 InnoDB 引擎都是使用 B+Tree 作为索引结构，但是两者的实现方式不太一样。"}]},{"ID":"20231224180254-gg7qr0l","Type":"NodeParagraph","Properties":{"id":"20231224180254-gg7qr0l","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"InnoDB 引擎中，其数据文件本身就是索引文件。相比 MyISAM，索引文件和数据文件是分离的，其表数据文件本身就是按 B+Tree 组织的一个索引结构，树的叶节点 data 域保存了完整的数据记录。"}]},{"ID":"20231224180254-j9shf2h","Type":"NodeParagraph","Properties":{"id":"20231224180254-j9shf2h","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"详细区别，推荐你看看我写的这篇文章："},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"./mysql-index.md","TextMarkTextContent":"MySQL 索引详解"},{"Type":"NodeText","Data":"。"}]},{"ID":"20231224180254-3tinu2o","Type":"NodeParagraph","Properties":{"id":"20231224180254-3tinu2o","updated":"20231224180254"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"7.性能有差别。"}]},{"ID":"20231224180254-uzbcut8","Type":"NodeParagraph","Properties":{"id":"20231224180254-uzbcut8","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"InnoDB 的性能比 MyISAM 更强大，不管是在读写混合模式下还是只读模式下，随着 CPU 核数的增加，InnoDB 的读写能力呈线性增长。MyISAM 因为读写不能并发，它的处理能力跟核数没关系。"}]},{"ID":"20231224180254-539vqia","Type":"NodeParagraph","Properties":{"id":"20231224180254-539vqia","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeImage","Data":"span","Children":[{"Type":"NodeBang"},{"Type":"NodeOpenBracket"},{"Type":"NodeLinkText","Data":"InnoDB 和 MyISAM 性能对比"},{"Type":"NodeCloseBracket"},{"Type":"NodeOpenParen"},{"Type":"NodeLinkDest","Data":"https://oss.javaguide.cn/github/javaguide/mysql/innodb-myisam-performance-comparison.png"},{"Type":"NodeCloseParen"}]},{"Type":"NodeText","Data":"​"}]},{"ID":"20231224180254-nvobqwg","Type":"NodeParagraph","Properties":{"id":"20231224180254-nvobqwg","updated":"20231224180254"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"总结"},{"Type":"NodeText","Data":"："}]},{"ID":"20231224180254-ju3nx1m","Type":"NodeList","ListData":{},"Properties":{"id":"20231224180254-ju3nx1m","updated":"20231224180254"},"Children":[{"ID":"20231224180254-a49ng80","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20231224180254-a49ng80","updated":"20231224180254"},"Children":[{"ID":"20231224180254-1585j07","Type":"NodeParagraph","Properties":{"id":"20231224180254-1585j07","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"InnoDB 支持行级别的锁粒度，MyISAM 不支持，只支持表级别的锁粒度。"}]}]},{"ID":"20231224180254-voio3jj","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20231224180254-voio3jj","updated":"20231224180254"},"Children":[{"ID":"20231224180254-551rver","Type":"NodeParagraph","Properties":{"id":"20231224180254-551rver","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"MyISAM 不提供事务支持。InnoDB 提供事务支持，实现了 SQL 标准定义了四个隔离级别。"}]}]},{"ID":"20231224180254-yocq861","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20231224180254-yocq861","updated":"20231224180254"},"Children":[{"ID":"20231224180254-yi9rs3b","Type":"NodeParagraph","Properties":{"id":"20231224180254-yi9rs3b","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"MyISAM 不支持外键，而 InnoDB 支持。"}]}]},{"ID":"20231224180254-zlcp4au","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20231224180254-zlcp4au","updated":"20231224180254"},"Children":[{"ID":"20231224180254-qusfn60","Type":"NodeParagraph","Properties":{"id":"20231224180254-qusfn60","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"MyISAM 不支持 MVCC，而 InnoDB 支持。"}]}]},{"ID":"20231224180254-f27mhxd","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20231224180254-f27mhxd","updated":"20231224180254"},"Children":[{"ID":"20231224180254-9mau4ix","Type":"NodeParagraph","Properties":{"id":"20231224180254-9mau4ix","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"虽然 MyISAM 引擎和 InnoDB 引擎都是使用 B+Tree 作为索引结构，但是两者的实现方式不太一样。"}]}]},{"ID":"20231224180254-ek64xmm","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20231224180254-ek64xmm","updated":"20231224180254"},"Children":[{"ID":"20231224180254-ctnyjrv","Type":"NodeParagraph","Properties":{"id":"20231224180254-ctnyjrv","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"MyISAM 不支持数据库异常崩溃后的安全恢复，而 InnoDB 支持。"}]}]},{"ID":"20231224180254-fl4clko","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20231224180254-fl4clko","updated":"20231224180254"},"Children":[{"ID":"20231224180254-jgfppo5","Type":"NodeParagraph","Properties":{"id":"20231224180254-jgfppo5","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"InnoDB 的性能比 MyISAM 更强大。"}]}]}]},{"ID":"20231224180254-xl7i3k1","Type":"NodeParagraph","Properties":{"id":"20231224180254-xl7i3k1","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"最后，再分享一张图片给你，这张图片详细对比了常见的几种 MySQL 存储引擎。"}]},{"ID":"20231224180254-cz1mhjo","Type":"NodeParagraph","Properties":{"id":"20231224180254-cz1mhjo","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeImage","Data":"span","Children":[{"Type":"NodeBang"},{"Type":"NodeOpenBracket"},{"Type":"NodeLinkText","Data":"常见的几种 MySQL 存储引擎对比"},{"Type":"NodeCloseBracket"},{"Type":"NodeOpenParen"},{"Type":"NodeLinkDest","Data":"https://oss.javaguide.cn/github/javaguide/mysql/comparison-of-common-mysql-storage-engines.png"},{"Type":"NodeCloseParen"}]},{"Type":"NodeText","Data":"​"}]},{"ID":"20231224180254-nfgmzyy","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20231224180254-nfgmzyy","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"MyISAM 和 InnoDB 如何选择？"}]},{"ID":"20231224180254-reoh67l","Type":"NodeParagraph","Properties":{"id":"20231224180254-reoh67l","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"大多数时候我们使用的都是 InnoDB 存储引擎，在某些读密集的情况下，使用 MyISAM 也是合适的。不过，前提是你的项目不介意 MyISAM 不支持事务、崩溃恢复等缺点（可是~我们一般都会介意啊！）。"}]},{"ID":"20231224180254-2laz6td","Type":"NodeParagraph","Properties":{"id":"20231224180254-2laz6td","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"《MySQL 高性能》上面有一句话这样写到:"}]},{"ID":"20231224180254-vav44sn","Type":"NodeBlockquote","Properties":{"id":"20231224180254-vav44sn","updated":"20231224180254"},"Children":[{"Type":"NodeBlockquoteMarker","Data":"\u003e"},{"ID":"20231224180254-ty87zes","Type":"NodeParagraph","Properties":{"id":"20231224180254-ty87zes","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"不要轻易相信“MyISAM 比 InnoDB 快”之类的经验之谈，这个结论往往不是绝对的。在很多我们已知场景中，InnoDB 的速度都可以让 MyISAM 望尘莫及，尤其是用到了聚簇索引，或者需要访问的数据都可以放入内存的应用。"}]}]},{"ID":"20231224180254-j9eakzk","Type":"NodeParagraph","Properties":{"id":"20231224180254-j9eakzk","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"一般情况下我们选择 InnoDB 都是没有问题的，但是某些情况下你并不在乎可扩展能力和并发能力，也不需要事务支持，也不在乎崩溃后的安全恢复问题的话，选择 MyISAM 也是一个不错的选择。但是一般情况下，我们都是需要考虑到这些问题的。"}]},{"ID":"20231224180254-2coc021","Type":"NodeParagraph","Properties":{"id":"20231224180254-2coc021","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"因此，对于咱们日常开发的业务系统来说，你几乎找不到什么理由再使用 MyISAM 作为自己的 MySQL 数据库的存储引擎。"}]},{"ID":"20231224180254-n3furqg","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20231224180254-n3furqg","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"MySQL 索引"}]},{"ID":"20231224180254-dmqj4xw","Type":"NodeParagraph","Properties":{"id":"20231224180254-dmqj4xw","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"MySQL 索引相关的问题比较多，对于面试和工作都比较重要，于是，我单独抽了一篇文章专门来总结 MySQL 索引相关的知识点和问题："},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"./mysql-index.md","TextMarkTextContent":"MySQL 索引详解"},{"Type":"NodeText","Data":" 。"}]},{"ID":"20231224180254-3ambwnz","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20231224180254-3ambwnz","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"MySQL 查询缓存"}]},{"ID":"20231224180254-i4h4zjg","Type":"NodeParagraph","Properties":{"id":"20231224180254-i4h4zjg","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"执行查询语句的时候，会先查询缓存。不过，MySQL 8.0 版本后移除，因为这个功能不太实用"}]},{"ID":"20231224180254-605vqrj","Type":"NodeParagraph","Properties":{"id":"20231224180254-605vqrj","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"my.cnf"},{"Type":"NodeText","Data":"​ 加入以下配置，重启 MySQL 开启查询缓存"}]},{"ID":"20231224180254-auhl6wl","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20231224180254-auhl6wl","updated":"20231224180254"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"cHJvcGVydGllcw=="},{"Type":"NodeCodeBlockCode","Data":"query_cache_type=1\nquery_cache_size=600000\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20231224180254-omdzcp2","Type":"NodeParagraph","Properties":{"id":"20231224180254-omdzcp2","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"MySQL 执行以下命令也可以开启查询缓存"}]},{"ID":"20231224180254-ty8k02u","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20231224180254-ty8k02u","updated":"20231224180254"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"cHJvcGVydGllcw=="},{"Type":"NodeCodeBlockCode","Data":"set global  query_cache_type=1;\nset global  query_cache_size=600000;\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20231224180254-i4jnqk9","Type":"NodeParagraph","Properties":{"id":"20231224180254-i4jnqk9","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"如上，"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"开启查询缓存后在同样的查询条件以及数据情况下，会直接在缓存中返回结果"},{"Type":"NodeText","Data":"。这里的查询条件包括查询本身、当前要查询的数据库、客户端协议版本号等一些可能影响结果的信息。"}]},{"ID":"20231224180254-6fnlhhc","Type":"NodeParagraph","Properties":{"id":"20231224180254-6fnlhhc","updated":"20231224180254"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"查询缓存不命中的情况："}]},{"ID":"20231224180254-rvjcg3c","Type":"NodeList","ListData":{"Typ":1},"Properties":{"id":"20231224180254-rvjcg3c","updated":"20231224180254"},"Children":[{"ID":"20231224180254-xuu3ng2","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"MS4=","Num":1},"Properties":{"id":"20231224180254-xuu3ng2","updated":"20231224180254"},"Children":[{"ID":"20231224180254-s8x6dql","Type":"NodeParagraph","Properties":{"id":"20231224180254-s8x6dql","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"任何两个查询在任何字符上的不同都会导致缓存不命中。"}]}]},{"ID":"20231224180254-c2scr3p","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"Mi4=","Num":2},"Properties":{"id":"20231224180254-c2scr3p","updated":"20231224180254"},"Children":[{"ID":"20231224180254-i8p5dbh","Type":"NodeParagraph","Properties":{"id":"20231224180254-i8p5dbh","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"如果查询中包含任何用户自定义函数、存储函数、用户变量、临时表、MySQL 库中的系统表，其查询结果也不会被缓存。"}]}]},{"ID":"20231224180254-g8d8p67","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"My4=","Num":3},"Properties":{"id":"20231224180254-g8d8p67","updated":"20231224180254"},"Children":[{"ID":"20231224180254-cu4fiye","Type":"NodeParagraph","Properties":{"id":"20231224180254-cu4fiye","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"缓存建立之后，MySQL 的查询缓存系统会跟踪查询中涉及的每张表，如果这些表（数据或结构）发生变化，那么和这张表相关的所有缓存数据都将失效。"}]}]}]},{"ID":"20231224180254-2u4j39g","Type":"NodeParagraph","Properties":{"id":"20231224180254-2u4j39g","updated":"20231224180254"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"缓存虽然能够提升数据库的查询性能，但是缓存同时也带来了额外的开销，每次查询后都要做一次缓存操作，失效后还要销毁。"},{"Type":"NodeText","Data":" 因此，开启查询缓存要谨慎，尤其对于写密集的应用来说更是如此。如果开启，要注意合理控制缓存空间大小，一般来说其大小设置为几十 MB 比较合适。此外，"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"还可以通过 "},{"Type":"NodeTextMark","TextMarkType":"strong code","TextMarkTextContent":"sql_cache"},{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":" 和 "},{"Type":"NodeTextMark","TextMarkType":"strong code","TextMarkTextContent":"sql_no_cache"},{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":" 来控制某个查询语句是否需要缓存："}]},{"ID":"20231224180254-bb5ld2b","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20231224180254-bb5ld2b","updated":"20231224180254"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"c3Fs"},{"Type":"NodeCodeBlockCode","Data":"SELECT sql_no_cache COUNT(*) FROM usr;\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20231224180254-nhpcjx5","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20231224180254-nhpcjx5","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"MySQL 日志"}]},{"ID":"20231224180254-2bqd22x","Type":"NodeParagraph","Properties":{"id":"20231224180254-2bqd22x","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"MySQL 日志常见的面试题有："}]},{"ID":"20231224180254-joe06ej","Type":"NodeList","ListData":{},"Properties":{"id":"20231224180254-joe06ej","updated":"20231224180254"},"Children":[{"ID":"20231224180254-ody9i3e","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20231224180254-ody9i3e","updated":"20231224180254"},"Children":[{"ID":"20231224180254-rxqnulk","Type":"NodeParagraph","Properties":{"id":"20231224180254-rxqnulk","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"MySQL 中常见的日志有哪些？"}]}]},{"ID":"20231224180254-uuf57b3","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20231224180254-uuf57b3","updated":"20231224180254"},"Children":[{"ID":"20231224180254-0phsm1p","Type":"NodeParagraph","Properties":{"id":"20231224180254-0phsm1p","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"慢查询日志有什么用？"}]}]},{"ID":"20231224180254-mr6qp57","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20231224180254-mr6qp57","updated":"20231224180254"},"Children":[{"ID":"20231224180254-yuley44","Type":"NodeParagraph","Properties":{"id":"20231224180254-yuley44","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"binlog 主要记录了什么？"}]}]},{"ID":"20231224180254-zsxwscp","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20231224180254-zsxwscp","updated":"20231224180254"},"Children":[{"ID":"20231224180254-10h33dd","Type":"NodeParagraph","Properties":{"id":"20231224180254-10h33dd","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"redo log 如何保证事务的持久性？"}]}]},{"ID":"20231224180254-ugv1xaa","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20231224180254-ugv1xaa","updated":"20231224180254"},"Children":[{"ID":"20231224180254-7gdsho4","Type":"NodeParagraph","Properties":{"id":"20231224180254-7gdsho4","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"页修改之后为什么不直接刷盘呢？"}]}]},{"ID":"20231224180254-r3byvzj","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20231224180254-r3byvzj","updated":"20231224180254"},"Children":[{"ID":"20231224180254-tdb8rv1","Type":"NodeParagraph","Properties":{"id":"20231224180254-tdb8rv1","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"binlog 和 redolog 有什么区别？"}]}]},{"ID":"20231224180254-n2d20xh","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20231224180254-n2d20xh","updated":"20231224180254"},"Children":[{"ID":"20231224180254-u97u4pi","Type":"NodeParagraph","Properties":{"id":"20231224180254-u97u4pi","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"undo log 如何保证事务的原子性？"}]}]},{"ID":"20231224180254-c80eu08","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20231224180254-c80eu08","updated":"20231224180254"},"Children":[{"ID":"20231224180254-xgw4oow","Type":"NodeParagraph","Properties":{"id":"20231224180254-xgw4oow","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"……"}]}]}]},{"ID":"20231224180254-tipe32x","Type":"NodeParagraph","Properties":{"id":"20231224180254-tipe32x","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"上诉问题的答案可以在"},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"../../zhuanlan/java-mian-shi-zhi-bei.md","TextMarkTextContent":"《Java 面试指北》(付费)"},{"Type":"NodeText","Data":" 的 "},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"「技术面试题篇」"},{"Type":"NodeText","Data":" 中找到。"}]},{"ID":"20231224180254-j37t83t","Type":"NodeParagraph","Properties":{"id":"20231224180254-j37t83t","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeImage","Data":"span","Children":[{"Type":"NodeBang"},{"Type":"NodeOpenBracket"},{"Type":"NodeLinkText","Data":"《Java 面试指北》技术面试题篇"},{"Type":"NodeCloseBracket"},{"Type":"NodeOpenParen"},{"Type":"NodeLinkDest","Data":"https://oss.javaguide.cn/javamianshizhibei/technical-interview-questions.png"},{"Type":"NodeCloseParen"}]},{"Type":"NodeText","Data":"​"}]},{"ID":"20231224180254-9esix7o","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20231224180254-9esix7o","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"MySQL 事务"}]},{"ID":"20231224180254-j425s3n","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20231224180254-j425s3n","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"何谓事务？"}]},{"ID":"20231224180254-2mro724","Type":"NodeParagraph","Properties":{"id":"20231224180254-2mro724","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"我们设想一个场景，这个场景中我们需要插入多条相关联的数据到数据库，不幸的是，这个过程可能会遇到下面这些问题："}]},{"ID":"20231224180254-9nqexgx","Type":"NodeList","ListData":{},"Properties":{"id":"20231224180254-9nqexgx","updated":"20231224180254"},"Children":[{"ID":"20231224180254-wcxifnw","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20231224180254-wcxifnw","updated":"20231224180254"},"Children":[{"ID":"20231224180254-subo45d","Type":"NodeParagraph","Properties":{"id":"20231224180254-subo45d","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"数据库中途突然因为某些原因挂掉了。"}]}]},{"ID":"20231224180254-r0eduii","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20231224180254-r0eduii","updated":"20231224180254"},"Children":[{"ID":"20231224180254-1kow9eo","Type":"NodeParagraph","Properties":{"id":"20231224180254-1kow9eo","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"客户端突然因为网络原因连接不上数据库了。"}]}]},{"ID":"20231224180254-3ibjf6t","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20231224180254-3ibjf6t","updated":"20231224180254"},"Children":[{"ID":"20231224180254-7jayfzq","Type":"NodeParagraph","Properties":{"id":"20231224180254-7jayfzq","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"并发访问数据库时，多个线程同时写入数据库，覆盖了彼此的更改。"}]}]},{"ID":"20231224180254-hpycm5x","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20231224180254-hpycm5x","updated":"20231224180254"},"Children":[{"ID":"20231224180254-pzvcrt1","Type":"NodeParagraph","Properties":{"id":"20231224180254-pzvcrt1","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"……"}]}]}]},{"ID":"20231224180254-ewbcvkl","Type":"NodeParagraph","Properties":{"id":"20231224180254-ewbcvkl","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"上面的任何一个问题都可能会导致数据的不一致性。为了保证数据的一致性，系统必须能够处理这些问题。事务就是我们抽象出来简化这些问题的首选机制。事务的概念起源于数据库，目前，已经成为一个比较广泛的概念。"}]},{"ID":"20231224180254-ttw58do","Type":"NodeParagraph","Properties":{"id":"20231224180254-ttw58do","updated":"20231224180254"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"何为事务？"},{"Type":"NodeText","Data":" 一言蔽之，"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"事务是逻辑上的一组操作，要么都执行，要么都不执行。"}]},{"ID":"20231224180254-ez8kzcs","Type":"NodeParagraph","Properties":{"id":"20231224180254-ez8kzcs","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"事务最经典也经常被拿出来说例子就是转账了。假如小明要给小红转账 1000 元，这个转账会涉及到两个关键操作，这两个操作必须都成功或者都失败。"}]},{"ID":"20231224180254-lgdyob6","Type":"NodeList","ListData":{"Typ":1},"Properties":{"id":"20231224180254-lgdyob6","updated":"20231224180254"},"Children":[{"ID":"20231224180254-v2ouzat","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"MS4=","Num":1},"Properties":{"id":"20231224180254-v2ouzat","updated":"20231224180254"},"Children":[{"ID":"20231224180254-p9qmcb2","Type":"NodeParagraph","Properties":{"id":"20231224180254-p9qmcb2","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"将小明的余额减少 1000 元"}]}]},{"ID":"20231224180254-y0a5lb8","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"Mi4=","Num":2},"Properties":{"id":"20231224180254-y0a5lb8","updated":"20231224180254"},"Children":[{"ID":"20231224180254-umuzmh1","Type":"NodeParagraph","Properties":{"id":"20231224180254-umuzmh1","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"将小红的余额增加 1000 元。"}]}]}]},{"ID":"20231224180254-wtmvj3k","Type":"NodeParagraph","Properties":{"id":"20231224180254-wtmvj3k","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"事务会把这两个操作就可以看成逻辑上的一个整体，这个整体包含的操作要么都成功，要么都要失败。这样就不会出现小明余额减少而小红的余额却并没有增加的情况。"}]},{"ID":"20231224180254-dta0cjb","Type":"NodeParagraph","Properties":{"id":"20231224180254-dta0cjb","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeImage","Data":"span","Children":[{"Type":"NodeBang"},{"Type":"NodeOpenBracket"},{"Type":"NodeLinkText","Data":"事务示意图"},{"Type":"NodeCloseBracket"},{"Type":"NodeOpenParen"},{"Type":"NodeLinkDest","Data":"https://oss.javaguide.cn/github/javaguide/mysql/%E4%BA%8B%E5%8A%A1%E7%A4%BA%E6%84%8F%E5%9B%BE.png"},{"Type":"NodeCloseParen"}]},{"Type":"NodeText","Data":"​"}]},{"ID":"20231224180254-bsc6273","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20231224180254-bsc6273","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"何谓数据库事务？"}]},{"ID":"20231224180254-y3t4v1n","Type":"NodeParagraph","Properties":{"id":"20231224180254-y3t4v1n","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"大多数情况下，我们在谈论事务的时候，如果没有特指"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"分布式事务"},{"Type":"NodeText","Data":"，往往指的就是"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"数据库事务"},{"Type":"NodeText","Data":"。"}]},{"ID":"20231224180254-pn78m7n","Type":"NodeParagraph","Properties":{"id":"20231224180254-pn78m7n","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"数据库事务在我们日常开发中接触的最多了。如果你的项目属于单体架构的话，你接触到的往往就是数据库事务了。"}]},{"ID":"20231224180254-mve3jrb","Type":"NodeParagraph","Properties":{"id":"20231224180254-mve3jrb","updated":"20231224180254"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"那数据库事务有什么作用呢？"}]},{"ID":"20231224180254-4rhax5n","Type":"NodeParagraph","Properties":{"id":"20231224180254-4rhax5n","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"简单来说，数据库事务可以保证多个对数据库的操作（也就是 SQL 语句）构成一个逻辑上的整体。构成这个逻辑上的整体的这些数据库操作遵循："},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"要么全部执行成功,要么全部不执行"},{"Type":"NodeText","Data":" 。"}]},{"ID":"20231224180254-7du69n4","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20231224180254-7du69n4","updated":"20231224180254"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"c3Fs"},{"Type":"NodeCodeBlockCode","Data":"# 开启一个事务\nSTART TRANSACTION;\n# 多条 SQL 语句\nSQL1,SQL2...\n## 提交事务\nCOMMIT;\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20231224180254-9psmxtm","Type":"NodeParagraph","Properties":{"id":"20231224180254-9psmxtm","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeImage","Data":"span","Children":[{"Type":"NodeBang"},{"Type":"NodeOpenBracket"},{"Type":"NodeLinkText","Data":"数据库事务示意图"},{"Type":"NodeCloseBracket"},{"Type":"NodeOpenParen"},{"Type":"NodeLinkDest","Data":"https://oss.javaguide.cn/github/javaguide/mysql/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%BA%8B%E5%8A%A1%E7%A4%BA%E6%84%8F%E5%9B%BE.png"},{"Type":"NodeCloseParen"}]},{"Type":"NodeText","Data":"​"}]},{"ID":"20231224180254-glxu98z","Type":"NodeParagraph","Properties":{"id":"20231224180254-glxu98z","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"另外，关系型数据库（例如："},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"MySQL"},{"Type":"NodeText","Data":"​、"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"SQL Server"},{"Type":"NodeText","Data":"​、"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"Oracle"},{"Type":"NodeText","Data":"​ 等）事务都有 "},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"ACID"},{"Type":"NodeText","Data":" 特性："}]},{"ID":"20231224180254-2ja1cs1","Type":"NodeParagraph","Properties":{"id":"20231224180254-2ja1cs1","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeImage","Data":"span","Children":[{"Type":"NodeBang"},{"Type":"NodeOpenBracket"},{"Type":"NodeLinkText","Data":"ACID"},{"Type":"NodeCloseBracket"},{"Type":"NodeOpenParen"},{"Type":"NodeLinkDest","Data":"https://oss.javaguide.cn/github/javaguide/mysql/ACID.png"},{"Type":"NodeCloseParen"}]},{"Type":"NodeText","Data":"​"}]},{"ID":"20231224180254-c1105ej","Type":"NodeList","ListData":{"Typ":1},"Properties":{"id":"20231224180254-c1105ej","updated":"20231224180254"},"Children":[{"ID":"20231224180254-vwrranu","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"MS4=","Num":1},"Properties":{"id":"20231224180254-vwrranu","updated":"20231224180254"},"Children":[{"ID":"20231224180254-cs5e16t","Type":"NodeParagraph","Properties":{"id":"20231224180254-cs5e16t","updated":"20231224180254"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"原子性"},{"Type":"NodeText","Data":"（"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"Atomicity"},{"Type":"NodeText","Data":"​）：事务是最小的执行单位，不允许分割。事务的原子性确保动作要么全部完成，要么完全不起作用；"}]}]},{"ID":"20231224180254-d0o2hy9","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"Mi4=","Num":2},"Properties":{"id":"20231224180254-d0o2hy9","updated":"20231224180254"},"Children":[{"ID":"20231224180254-ixq8wx7","Type":"NodeParagraph","Properties":{"id":"20231224180254-ixq8wx7","updated":"20231224180254"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"一致性"},{"Type":"NodeText","Data":"（"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"Consistency"},{"Type":"NodeText","Data":"​）：执行事务前后，数据保持一致，例如转账业务中，无论事务是否成功，转账者和收款人的总额应该是不变的；"}]}]},{"ID":"20231224180254-zfmz4iz","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"My4=","Num":3},"Properties":{"id":"20231224180254-zfmz4iz","updated":"20231224180254"},"Children":[{"ID":"20231224180254-ny6y1sj","Type":"NodeParagraph","Properties":{"id":"20231224180254-ny6y1sj","updated":"20231224180254"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"隔离性"},{"Type":"NodeText","Data":"（"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"Isolation"},{"Type":"NodeText","Data":"​）：并发访问数据库时，一个用户的事务不被其他事务所干扰，各并发事务之间数据库是独立的；"}]}]},{"ID":"20231224180254-i28q4bi","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"NC4=","Num":4},"Properties":{"id":"20231224180254-i28q4bi","updated":"20231224180254"},"Children":[{"ID":"20231224180254-zcp0ade","Type":"NodeParagraph","Properties":{"id":"20231224180254-zcp0ade","updated":"20231224180254"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"持久性"},{"Type":"NodeText","Data":"（"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"Durability"},{"Type":"NodeText","Data":"​）：一个事务被提交之后。它对数据库中数据的改变是持久的，即使数据库发生故障也不应该对其有任何影响。"}]}]}]},{"ID":"20231224180254-f2u0yoh","Type":"NodeParagraph","Properties":{"id":"20231224180254-f2u0yoh","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"🌈 这里要额外补充一点："},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"只有保证了事务的持久性、原子性、隔离性之后，一致性才能得到保障。也就是说 A、I、D 是手段，C 是目的！"},{"Type":"NodeText","Data":" 想必大家也和我一样，被 ACID 这个概念被误导了很久! 我也是看周志明老师的公开课"},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://time.geekbang.org/opencourse/intro/100064201","TextMarkTextContent":"《周志明的软件架构课》"},{"Type":"NodeText","Data":"才搞清楚的（多看好书！！！）。"}]},{"ID":"20231224180254-e23isg6","Type":"NodeParagraph","Properties":{"id":"20231224180254-e23isg6","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeImage","Data":"span","Children":[{"Type":"NodeBang"},{"Type":"NodeOpenBracket"},{"Type":"NodeLinkText","Data":"AID-\u003eC"},{"Type":"NodeCloseBracket"},{"Type":"NodeOpenParen"},{"Type":"NodeLinkDest","Data":"https://oss.javaguide.cn/github/javaguide/mysql/AID-%3EC.png"},{"Type":"NodeCloseParen"}]},{"Type":"NodeText","Data":"​"}]},{"ID":"20231224180254-l5ss7e2","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20231224180254-l5ss7e2","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"并发事务带来了哪些问题?"}]},{"ID":"20231224180254-8z97e19","Type":"NodeParagraph","Properties":{"id":"20231224180254-8z97e19","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"在典型的应用程序中，多个事务并发运行，经常会操作相同的数据来完成各自的任务（多个用户对同一数据进行操作）。并发虽然是必须的，但可能会导致以下的问题。"}]},{"ID":"20231224180254-x5ysycn","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20231224180254-x5ysycn","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"脏读（Dirty read）"}]},{"ID":"20231224180254-vfuf0uz","Type":"NodeParagraph","Properties":{"id":"20231224180254-vfuf0uz","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"一个事务读取数据并且对数据进行了修改，这个修改对其他事务来说是可见的，即使当前事务没有提交。这时另外一个事务读取了这个还未提交的数据，但第一个事务突然回滚，导致数据并没有被提交到数据库，那第二个事务读取到的就是脏数据，这也就是脏读的由来。"}]},{"ID":"20231224180254-7zg5vs9","Type":"NodeParagraph","Properties":{"id":"20231224180254-7zg5vs9","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"例如：事务 1 读取某表中的数据 A=20，事务 1 修改 A=A-1，事务 2 读取到 A = 19,事务 1 回滚导致对 A 的修改并未提交到数据库， A 的值还是 20。"}]},{"ID":"20231224180254-zbxt1al","Type":"NodeParagraph","Properties":{"id":"20231224180254-zbxt1al","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeImage","Data":"span","Children":[{"Type":"NodeBang"},{"Type":"NodeOpenBracket"},{"Type":"NodeLinkText","Data":"脏读"},{"Type":"NodeCloseBracket"},{"Type":"NodeOpenParen"},{"Type":"NodeLinkDest","Data":"./images/concurrency-consistency-issues-dirty-reading.png"},{"Type":"NodeCloseParen"}]},{"Type":"NodeText","Data":"​"}]},{"ID":"20231224180254-1hm6qup","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20231224180254-1hm6qup","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"丢失修改（Lost to modify）"}]},{"ID":"20231224180254-qp4vlf3","Type":"NodeParagraph","Properties":{"id":"20231224180254-qp4vlf3","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"在一个事务读取一个数据时，另外一个事务也访问了该数据，那么在第一个事务中修改了这个数据后，第二个事务也修改了这个数据。这样第一个事务内的修改结果就被丢失，因此称为丢失修改。"}]},{"ID":"20231224180254-qj6lvwk","Type":"NodeParagraph","Properties":{"id":"20231224180254-qj6lvwk","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"例如：事务 1 读取某表中的数据 A=20，事务 2 也读取 A=20，事务 1 先修改 A=A-1，事务 2 后来也修改 A=A-1，最终结果 A=19，事务 1 的修改被丢失。"}]},{"ID":"20231224180254-rk19xts","Type":"NodeParagraph","Properties":{"id":"20231224180254-rk19xts","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeImage","Data":"span","Children":[{"Type":"NodeBang"},{"Type":"NodeOpenBracket"},{"Type":"NodeLinkText","Data":"丢失修改"},{"Type":"NodeCloseBracket"},{"Type":"NodeOpenParen"},{"Type":"NodeLinkDest","Data":"./images/concurrency-consistency-issues-missing-modifications.png"},{"Type":"NodeCloseParen"}]},{"Type":"NodeText","Data":"​"}]},{"ID":"20231224180254-zosz4hg","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20231224180254-zosz4hg","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"不可重复读（Unrepeatable read）"}]},{"ID":"20231224180254-ro1a7fx","Type":"NodeParagraph","Properties":{"id":"20231224180254-ro1a7fx","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"指在一个事务内多次读同一数据。在这个事务还没有结束时，另一个事务也访问该数据。那么，在第一个事务中的两次读数据之间，由于第二个事务的修改导致第一个事务两次读取的数据可能不太一样。这就发生了在一个事务内两次读到的数据是不一样的情况，因此称为不可重复读。"}]},{"ID":"20231224180254-ssko25b","Type":"NodeParagraph","Properties":{"id":"20231224180254-ssko25b","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"例如：事务 1 读取某表中的数据 A=20，事务 2 也读取 A=20，事务 1 修改 A=A-1，事务 2 再次读取 A =19，此时读取的结果和第一次读取的结果不同。"}]},{"ID":"20231224180254-b1wbg86","Type":"NodeParagraph","Properties":{"id":"20231224180254-b1wbg86","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeImage","Data":"span","Children":[{"Type":"NodeBang"},{"Type":"NodeOpenBracket"},{"Type":"NodeLinkText","Data":"不可重复读"},{"Type":"NodeCloseBracket"},{"Type":"NodeOpenParen"},{"Type":"NodeLinkDest","Data":"./images/concurrency-consistency-issues-unrepeatable-read.png"},{"Type":"NodeCloseParen"}]},{"Type":"NodeText","Data":"​"}]},{"ID":"20231224180254-9u6xeps","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20231224180254-9u6xeps","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"幻读（Phantom read）"}]},{"ID":"20231224180254-wzyu24k","Type":"NodeParagraph","Properties":{"id":"20231224180254-wzyu24k","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"幻读与不可重复读类似。它发生在一个事务读取了几行数据，接着另一个并发事务插入了一些数据时。在随后的查询中，第一个事务就会发现多了一些原本不存在的记录，就好像发生了幻觉一样，所以称为幻读。"}]},{"ID":"20231224180254-y44yqiz","Type":"NodeParagraph","Properties":{"id":"20231224180254-y44yqiz","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"例如：事务 2 读取某个范围的数据，事务 1 在这个范围插入了新的数据，事务 2 再次读取这个范围的数据发现相比于第一次读取的结果多了新的数据。"}]},{"ID":"20231224180254-96ialw2","Type":"NodeParagraph","Properties":{"id":"20231224180254-96ialw2","updated":"20231225085348"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeImage","Data":"span","Children":[{"Type":"NodeBang"},{"Type":"NodeOpenBracket"},{"Type":"NodeLinkText","Data":"幻读"},{"Type":"NodeCloseBracket"},{"Type":"NodeOpenParen"},{"Type":"NodeLinkDest","Data":"./images/concurrency-consistency-issues-phantom-read.png"},{"Type":"NodeCloseParen"}]},{"Type":"NodeText","Data":"​"}]},{"ID":"20231224180254-j4ja6t5","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20231224180254-j4ja6t5","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"不可重复读和幻读有什么区别？"}]},{"ID":"20231224180254-j5x1u1w","Type":"NodeList","ListData":{},"Properties":{"id":"20231224180254-j5x1u1w","updated":"20231224180254"},"Children":[{"ID":"20231224180254-hquaqqh","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20231224180254-hquaqqh","updated":"20231224180254"},"Children":[{"ID":"20231224180254-rvwk6v4","Type":"NodeParagraph","Properties":{"id":"20231224180254-rvwk6v4","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"不可重复读的重点是内容修改或者记录减少比如多次读取一条记录发现其中某些记录的值被修改；"}]}]},{"ID":"20231224180254-milcm39","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20231224180254-milcm39","updated":"20231224180254"},"Children":[{"ID":"20231224180254-11ry0y4","Type":"NodeParagraph","Properties":{"id":"20231224180254-11ry0y4","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"幻读的重点在于记录新增比如多次执行同一条查询语句（DQL）时，发现查到的记录增加了。"}]}]}]},{"ID":"20231224180254-kvx0fvy","Type":"NodeParagraph","Properties":{"id":"20231224180254-kvx0fvy","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"幻读其实可以看作是不可重复读的一种特殊情况，单独把区分幻读的原因主要是解决幻读和不可重复读的方案不一样。"}]},{"ID":"20231224180254-xkhbk6d","Type":"NodeParagraph","Properties":{"id":"20231224180254-xkhbk6d","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"举个例子：执行 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"delete"},{"Type":"NodeText","Data":"​ 和 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"update"},{"Type":"NodeText","Data":"​ 操作的时候，可以直接对记录加锁，保证事务安全。而执行 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"insert"},{"Type":"NodeText","Data":"​ 操作的时候，由于记录锁（Record Lock）只能锁住已经存在的记录，为了避免插入新记录，需要依赖间隙锁（Gap Lock）。也就是说执行 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"insert"},{"Type":"NodeText","Data":"​ 操作的时候需要依赖 Next-Key Lock（Record Lock+Gap Lock） 进行加锁来保证不出现幻读。"}]},{"ID":"20231224180254-s6ebjpj","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20231224180254-s6ebjpj","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"并发事务的控制方式有哪些？"}]},{"ID":"20231224180254-aa7on6e","Type":"NodeParagraph","Properties":{"id":"20231224180254-aa7on6e","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"MySQL 中并发事务的控制方式无非就两种："},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"锁"},{"Type":"NodeText","Data":" 和 "},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"MVCC"},{"Type":"NodeText","Data":"。锁可以看作是悲观控制的模式，多版本并发控制（MVCC，Multiversion concurrency control）可以看作是乐观控制的模式。"}]},{"ID":"20231224180254-wqjvxyo","Type":"NodeParagraph","Properties":{"id":"20231224180254-wqjvxyo","updated":"20231224180254"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"锁"},{"Type":"NodeText","Data":" 控制方式下会通过锁来显示控制共享资源而不是通过调度手段，MySQL 中主要是通过 "},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"读写锁"},{"Type":"NodeText","Data":" 来实现并发控制。"}]},{"ID":"20231224180254-qiwn1e4","Type":"NodeList","ListData":{},"Properties":{"id":"20231224180254-qiwn1e4","updated":"20231224180254"},"Children":[{"ID":"20231224180254-skbttb2","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20231224180254-skbttb2","updated":"20231224180254"},"Children":[{"ID":"20231224180254-srnjbtt","Type":"NodeParagraph","Properties":{"id":"20231224180254-srnjbtt","updated":"20231224180254"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"共享锁（S 锁）"},{"Type":"NodeText","Data":"：又称读锁，事务在读取记录的时候获取共享锁，允许多个事务同时获取（锁兼容）。"}]}]},{"ID":"20231224180254-ga0vd3t","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20231224180254-ga0vd3t","updated":"20231224180254"},"Children":[{"ID":"20231224180254-gqdl4al","Type":"NodeParagraph","Properties":{"id":"20231224180254-gqdl4al","updated":"20231224180254"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"排他锁（X 锁）"},{"Type":"NodeText","Data":"：又称写锁/独占锁，事务在修改记录的时候获取排他锁，不允许多个事务同时获取。如果一个记录已经被加了排他锁，那其他事务不能再对这条记录加任何类型的锁（锁不兼容）。"}]}]}]},{"ID":"20231224180254-9evatws","Type":"NodeParagraph","Properties":{"id":"20231224180254-9evatws","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"读写锁可以做到读读并行，但是无法做到写读、写写并行。另外，根据根据锁粒度的不同，又被分为 "},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"表级锁(table-level locking)"},{"Type":"NodeText","Data":" 和 "},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"行级锁(row-level locking)"},{"Type":"NodeText","Data":" 。InnoDB 不光支持表级锁，还支持行级锁，默认为行级锁。行级锁的粒度更小，仅对相关的记录上锁即可（对一行或者多行记录加锁），所以对于并发写入操作来说， InnoDB 的性能更高。不论是表级锁还是行级锁，都存在共享锁（Share Lock，S 锁）和排他锁（Exclusive Lock，X 锁）这两类。"}]},{"ID":"20231224180254-jexx9dv","Type":"NodeParagraph","Properties":{"id":"20231224180254-jexx9dv","updated":"20231224180254"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"MVCC"},{"Type":"NodeText","Data":" 是多版本并发控制方法，即对一份数据会存储多个版本，通过事务的可见性来保证事务能看到自己应该看到的版本。通常会有一个全局的版本分配器来为每一行数据设置版本号，版本号是唯一的。"}]},{"ID":"20231224180254-txmzfj6","Type":"NodeParagraph","Properties":{"id":"20231224180254-txmzfj6","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"MVCC 在 MySQL 中实现所依赖的手段主要是: "},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"隐藏字段、read view、undo log"},{"Type":"NodeText","Data":"。"}]},{"ID":"20231224180254-mp7nekv","Type":"NodeList","ListData":{},"Properties":{"id":"20231224180254-mp7nekv","updated":"20231224180254"},"Children":[{"ID":"20231224180254-ufzsrbg","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20231224180254-ufzsrbg","updated":"20231224180254"},"Children":[{"ID":"20231224180254-bbqbh24","Type":"NodeParagraph","Properties":{"id":"20231224180254-bbqbh24","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"undo log : undo log 用于记录某行数据的多个版本的数据。"}]}]},{"ID":"20231224180254-2pf1u8g","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20231224180254-2pf1u8g","updated":"20231224180254"},"Children":[{"ID":"20231224180254-nm8bovu","Type":"NodeParagraph","Properties":{"id":"20231224180254-nm8bovu","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"read view 和 隐藏字段 : 用来判断当前版本数据的可见性。"}]}]}]},{"ID":"20231224180254-3svos6f","Type":"NodeParagraph","Properties":{"id":"20231224180254-3svos6f","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"关于 InnoDB 对 MVCC 的具体实现可以看这篇文章："},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"./innodb-implementation-of-mvcc.md","TextMarkTextContent":"InnoDB 存储引擎对 MVCC 的实现"},{"Type":"NodeText","Data":" 。"}]},{"ID":"20231224180254-v7u4jnt","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20231224180254-v7u4jnt","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"SQL 标准定义了哪些事务隔离级别?"}]},{"ID":"20231224180254-m1nc7j6","Type":"NodeParagraph","Properties":{"id":"20231224180254-m1nc7j6","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"SQL 标准定义了四个隔离级别："}]},{"ID":"20231224180254-hys4h5x","Type":"NodeList","ListData":{},"Properties":{"id":"20231224180254-hys4h5x","updated":"20231224180254"},"Children":[{"ID":"20231224180254-pvocsoc","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20231224180254-pvocsoc","updated":"20231224180254"},"Children":[{"ID":"20231224180254-fylft6t","Type":"NodeParagraph","Properties":{"id":"20231224180254-fylft6t","updated":"20231224180254"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"READ-UNCOMMITTED(读取未提交)"},{"Type":"NodeText","Data":" ：最低的隔离级别，允许读取尚未提交的数据变更，可能会导致脏读、幻读或不可重复读。"}]}]},{"ID":"20231224180254-lefrix1","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20231224180254-lefrix1","updated":"20231224180254"},"Children":[{"ID":"20231224180254-ppn39ku","Type":"NodeParagraph","Properties":{"id":"20231224180254-ppn39ku","updated":"20231224180254"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"READ-COMMITTED(读取已提交)"},{"Type":"NodeText","Data":" ：允许读取并发事务已经提交的数据，可以阻止脏读，但是幻读或不可重复读仍有可能发生。"}]}]},{"ID":"20231224180254-bppwp7x","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20231224180254-bppwp7x","updated":"20231224180254"},"Children":[{"ID":"20231224180254-jpnz3rm","Type":"NodeParagraph","Properties":{"id":"20231224180254-jpnz3rm","updated":"20231224180254"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"REPEATABLE-READ(可重复读)"},{"Type":"NodeText","Data":" ：对同一字段的多次读取结果都是一致的，除非数据是被本身事务自己所修改，可以阻止脏读和不可重复读，但幻读仍有可能发生。"}]}]},{"ID":"20231224180254-zkgqb2u","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20231224180254-zkgqb2u","updated":"20231224180254"},"Children":[{"ID":"20231224180254-ai3zpbs","Type":"NodeParagraph","Properties":{"id":"20231224180254-ai3zpbs","updated":"20231224180254"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"SERIALIZABLE(可串行化)"},{"Type":"NodeText","Data":" ：最高的隔离级别，完全服从 ACID 的隔离级别。所有的事务依次逐个执行，这样事务之间就完全不可能产生干扰，也就是说，该级别可以防止脏读、不可重复读以及幻读。"}]}]}]},{"ID":"20231224180254-0qfv9al","Type":"NodeThematicBreak","Properties":{"id":"20231224180254-0qfv9al","updated":"20231224180254"}},{"ID":"20231224180254-fhwlexb","Type":"NodeTable","TableAligns":[2,2,2,2],"Properties":{"colgroup":"|||","id":"20231224180254-fhwlexb","updated":"20231224180254"},"Children":[{"Type":"NodeTableHead","Data":"thead","Children":[{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"th","TableCellAlign":2,"Children":[{"Type":"NodeText","Data":"隔离级别"}]},{"Type":"NodeTableCell","Data":"th","TableCellAlign":2,"Children":[{"Type":"NodeText","Data":"脏读"}]},{"Type":"NodeTableCell","Data":"th","TableCellAlign":2,"Children":[{"Type":"NodeText","Data":"不可重复读"}]},{"Type":"NodeTableCell","Data":"th","TableCellAlign":2,"Children":[{"Type":"NodeText","Data":"幻读"}]}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","TableCellAlign":2,"Children":[{"Type":"NodeText","Data":"READ-UNCOMMITTED"}]},{"Type":"NodeTableCell","Data":"td","TableCellAlign":2,"Children":[{"Type":"NodeText","Data":"√"}]},{"Type":"NodeTableCell","Data":"td","TableCellAlign":2,"Children":[{"Type":"NodeText","Data":"√"}]},{"Type":"NodeTableCell","Data":"td","TableCellAlign":2,"Children":[{"Type":"NodeText","Data":"√"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","TableCellAlign":2,"Children":[{"Type":"NodeText","Data":"READ-COMMITTED"}]},{"Type":"NodeTableCell","Data":"td","TableCellAlign":2,"Children":[{"Type":"NodeText","Data":"×"}]},{"Type":"NodeTableCell","Data":"td","TableCellAlign":2,"Children":[{"Type":"NodeText","Data":"√"}]},{"Type":"NodeTableCell","Data":"td","TableCellAlign":2,"Children":[{"Type":"NodeText","Data":"√"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","TableCellAlign":2,"Children":[{"Type":"NodeText","Data":"REPEATABLE-READ"}]},{"Type":"NodeTableCell","Data":"td","TableCellAlign":2,"Children":[{"Type":"NodeText","Data":"×"}]},{"Type":"NodeTableCell","Data":"td","TableCellAlign":2,"Children":[{"Type":"NodeText","Data":"×"}]},{"Type":"NodeTableCell","Data":"td","TableCellAlign":2,"Children":[{"Type":"NodeText","Data":"√"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","TableCellAlign":2,"Children":[{"Type":"NodeText","Data":"SERIALIZABLE"}]},{"Type":"NodeTableCell","Data":"td","TableCellAlign":2,"Children":[{"Type":"NodeText","Data":"×"}]},{"Type":"NodeTableCell","Data":"td","TableCellAlign":2,"Children":[{"Type":"NodeText","Data":"×"}]},{"Type":"NodeTableCell","Data":"td","TableCellAlign":2,"Children":[{"Type":"NodeText","Data":"×"}]}]}]},{"ID":"20231224180254-czjp8eb","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20231224180254-czjp8eb","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"MySQL 的隔离级别是基于锁实现的吗？"}]},{"ID":"20231224180254-mo0tymt","Type":"NodeParagraph","Properties":{"id":"20231224180254-mo0tymt","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"MySQL 的隔离级别基于锁和 MVCC 机制共同实现的。"}]},{"ID":"20231224180254-5kzjw9x","Type":"NodeParagraph","Properties":{"id":"20231224180254-5kzjw9x","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"SERIALIZABLE 隔离级别是通过锁来实现的，READ-COMMITTED 和 REPEATABLE-READ 隔离级别是基于 MVCC 实现的。不过， SERIALIZABLE 之外的其他隔离级别可能也需要用到锁机制，就比如 REPEATABLE-READ 在当前读情况下需要使用加锁读来保证不会出现幻读。"}]},{"ID":"20231224180254-hdwxyqr","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20231224180254-hdwxyqr","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"MySQL 的默认隔离级别是什么?"}]},{"ID":"20231224180254-jjj307p","Type":"NodeParagraph","Properties":{"id":"20231224180254-jjj307p","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"MySQL InnoDB 存储引擎的默认支持的隔离级别是 "},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"REPEATABLE-READ（可重读）"},{"Type":"NodeText","Data":"。我们可以通过"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"SELECT @@tx_isolation;"},{"Type":"NodeText","Data":"​命令来查看，MySQL 8.0 该命令改为"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"SELECT @@transaction_isolation;"},{"Type":"NodeText","Data":"​"}]},{"ID":"20231224180254-pnxgx45","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20231224180254-pnxgx45","updated":"20231224180254"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"c3Fs"},{"Type":"NodeCodeBlockCode","Data":"mysql\u003e SELECT @@tx_isolation;\n+-----------------+\n| @@tx_isolation  |\n+-----------------+\n| REPEATABLE-READ |\n+-----------------+\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20231224180254-s6ky36q","Type":"NodeParagraph","Properties":{"id":"20231224180254-s6ky36q","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"关于 MySQL 事务隔离级别的详细介绍，可以看看我写的这篇文章："},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"./transaction-isolation-level.md","TextMarkTextContent":"MySQL 事务隔离级别详解"},{"Type":"NodeText","Data":"。"}]},{"ID":"20231224180254-aph9hhj","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20231224180254-aph9hhj","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"MySQL 锁"}]},{"ID":"20231224180254-b1xyx2a","Type":"NodeParagraph","Properties":{"id":"20231224180254-b1xyx2a","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"锁是一种常见的并发事务的控制方式。"}]},{"ID":"20231224180254-esp46y5","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20231224180254-esp46y5","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"表级锁和行级锁了解吗？有什么区别？"}]},{"ID":"20231224180254-b8gusho","Type":"NodeParagraph","Properties":{"id":"20231224180254-b8gusho","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"MyISAM 仅仅支持表级锁(table-level locking)，一锁就锁整张表，这在并发写的情况下性非常差。InnoDB 不光支持表级锁(table-level locking)，还支持行级锁(row-level locking)，默认为行级锁。"}]},{"ID":"20231224180254-1m4lyc4","Type":"NodeParagraph","Properties":{"id":"20231224180254-1m4lyc4","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"行级锁的粒度更小，仅对相关的记录上锁即可（对一行或者多行记录加锁），所以对于并发写入操作来说， InnoDB 的性能更高。"}]},{"ID":"20231224180254-m0blp5m","Type":"NodeParagraph","Properties":{"id":"20231224180254-m0blp5m","updated":"20231224180254"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"表级锁和行级锁对比"},{"Type":"NodeText","Data":"："}]},{"ID":"20231224180254-q6124mq","Type":"NodeList","ListData":{},"Properties":{"id":"20231224180254-q6124mq","updated":"20231224180254"},"Children":[{"ID":"20231224180254-t9sm21c","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20231224180254-t9sm21c","updated":"20231224180254"},"Children":[{"ID":"20231224180254-4q6fxek","Type":"NodeParagraph","Properties":{"id":"20231224180254-4q6fxek","updated":"20231224180254"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"表级锁："},{"Type":"NodeText","Data":" MySQL 中锁定粒度最大的一种锁（全局锁除外），是针对非索引字段加的锁，对当前操作的整张表加锁，实现简单，资源消耗也比较少，加锁快，不会出现死锁。不过，触发锁冲突的概率最高，高并发下效率极低。表级锁和存储引擎无关，MyISAM 和 InnoDB 引擎都支持表级锁。"}]}]},{"ID":"20231224180254-p661mtm","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20231224180254-p661mtm","updated":"20231224180254"},"Children":[{"ID":"20231224180254-1nfi7gr","Type":"NodeParagraph","Properties":{"id":"20231224180254-1nfi7gr","updated":"20231224180254"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"行级锁："},{"Type":"NodeText","Data":" MySQL 中锁定粒度最小的一种锁，是 "},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"针对索引字段加的锁"},{"Type":"NodeText","Data":" ，只针对当前操作的行记录进行加锁。 行级锁能大大减少数据库操作的冲突。其加锁粒度最小，并发度高，但加锁的开销也最大，加锁慢，会出现死锁。行级锁和存储引擎有关，是在存储引擎层面实现的。"}]}]}]},{"ID":"20231224180254-hpuyrtc","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20231224180254-hpuyrtc","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"行级锁的使用有什么注意事项？"}]},{"ID":"20231224180254-4r3598j","Type":"NodeParagraph","Properties":{"id":"20231224180254-4r3598j","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"InnoDB 的行锁是针对索引字段加的锁，表级锁是针对非索引字段加的锁。当我们执行 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"UPDATE"},{"Type":"NodeText","Data":"​、"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"DELETE"},{"Type":"NodeText","Data":"​ 语句时，如果 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"WHERE"},{"Type":"NodeText","Data":"​条件中字段没有命中唯一索引或者索引失效的话，就会导致扫描全表对表中的所有行记录进行加锁。这个在我们日常工作开发中经常会遇到，一定要多多注意！！！"}]},{"ID":"20231224180254-qgqeo8c","Type":"NodeParagraph","Properties":{"id":"20231224180254-qgqeo8c","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"不过，很多时候即使用了索引也有可能会走全表扫描，这是因为 MySQL 优化器的原因。"}]},{"ID":"20231224180254-f3r9q3x","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20231224180254-f3r9q3x","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"InnoDB 有哪几类行锁？"}]},{"ID":"20231224180254-ptxeeah","Type":"NodeParagraph","Properties":{"id":"20231224180254-ptxeeah","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"InnoDB 行锁是通过对索引数据页上的记录加锁实现的，MySQL InnoDB 支持三种行锁定方式："}]},{"ID":"20231224180254-5qgxp6v","Type":"NodeList","ListData":{},"Properties":{"id":"20231224180254-5qgxp6v","updated":"20231224180254"},"Children":[{"ID":"20231224180254-ix0oi9w","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20231224180254-ix0oi9w","updated":"20231224180254"},"Children":[{"ID":"20231224180254-lk3i5k3","Type":"NodeParagraph","Properties":{"id":"20231224180254-lk3i5k3","updated":"20231224180254"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"记录锁（Record Lock）"},{"Type":"NodeText","Data":"：也被称为记录锁，属于单个行记录上的锁。"}]}]},{"ID":"20231224180254-u9tg73y","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20231224180254-u9tg73y","updated":"20231224180254"},"Children":[{"ID":"20231224180254-wez5n9c","Type":"NodeParagraph","Properties":{"id":"20231224180254-wez5n9c","updated":"20231224180254"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"间隙锁（Gap Lock）"},{"Type":"NodeText","Data":"：锁定一个范围，不包括记录本身。"}]}]},{"ID":"20231224180254-c0xyw2x","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20231224180254-c0xyw2x","updated":"20231224180254"},"Children":[{"ID":"20231224180254-krda3cb","Type":"NodeParagraph","Properties":{"id":"20231224180254-krda3cb","updated":"20231224180254"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"临键锁（Next-Key Lock）"},{"Type":"NodeText","Data":"：Record Lock+Gap Lock，锁定一个范围，包含记录本身，主要目的是为了解决幻读问题（MySQL 事务部分提到过）。记录锁只能锁住已经存在的记录，为了避免插入新记录，需要依赖间隙锁。"}]}]}]},{"ID":"20231224180254-spajsph","Type":"NodeParagraph","Properties":{"id":"20231224180254-spajsph","updated":"20231224180254"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"在 InnoDB 默认的隔离级别 REPEATABLE-READ 下，行锁默认使用的是 Next-Key Lock。但是，如果操作的索引是唯一索引或主键，InnoDB 会对 Next-Key Lock 进行优化，将其降级为 Record Lock，即仅锁住索引本身，而不是范围。"}]},{"ID":"20231224180254-panl3dk","Type":"NodeParagraph","Properties":{"id":"20231224180254-panl3dk","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"一些大厂面试中可能会问到 Next-Key Lock 的加锁范围，这里推荐一篇文章："},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://segmentfault.com/a/1190000040129107","TextMarkTextContent":"MySQL next-key lock 加锁范围是什么？ - 程序员小航 - 2021"},{"Type":"NodeText","Data":" 。"}]},{"ID":"20231224180254-b3tu85v","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20231224180254-b3tu85v","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"共享锁和排他锁呢？"}]},{"ID":"20231224180254-ud3gddc","Type":"NodeParagraph","Properties":{"id":"20231224180254-ud3gddc","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"不论是表级锁还是行级锁，都存在共享锁（Share Lock，S 锁）和排他锁（Exclusive Lock，X 锁）这两类："}]},{"ID":"20231224180254-yd20cf3","Type":"NodeList","ListData":{},"Properties":{"id":"20231224180254-yd20cf3","updated":"20231224180254"},"Children":[{"ID":"20231224180254-jqbpln4","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20231224180254-jqbpln4","updated":"20231224180254"},"Children":[{"ID":"20231224180254-smxsxgy","Type":"NodeParagraph","Properties":{"id":"20231224180254-smxsxgy","updated":"20231224180254"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"共享锁（S 锁）"},{"Type":"NodeText","Data":"：又称读锁，事务在读取记录的时候获取共享锁，允许多个事务同时获取（锁兼容）。"}]}]},{"ID":"20231224180254-87bthjc","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20231224180254-87bthjc","updated":"20231224180254"},"Children":[{"ID":"20231224180254-y6fah98","Type":"NodeParagraph","Properties":{"id":"20231224180254-y6fah98","updated":"20231224180254"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"排他锁（X 锁）"},{"Type":"NodeText","Data":"：又称写锁/独占锁，事务在修改记录的时候获取排他锁，不允许多个事务同时获取。如果一个记录已经被加了排他锁，那其他事务不能再对这条事务加任何类型的锁（锁不兼容）。"}]}]}]},{"ID":"20231224180254-w5t7lbq","Type":"NodeParagraph","Properties":{"id":"20231224180254-w5t7lbq","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"排他锁与任何的锁都不兼容，共享锁仅和共享锁兼容。"}]},{"ID":"20231224180254-04qt0a1","Type":"NodeTable","TableAligns":[1,1,1],"Properties":{"colgroup":"||","id":"20231224180254-04qt0a1","updated":"20231224180254"},"Children":[{"Type":"NodeTableHead","Data":"thead","Children":[{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"th","TableCellAlign":1},{"Type":"NodeTableCell","Data":"th","TableCellAlign":1,"Children":[{"Type":"NodeText","Data":"S 锁"}]},{"Type":"NodeTableCell","Data":"th","TableCellAlign":1,"Children":[{"Type":"NodeText","Data":"X 锁"}]}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","TableCellAlign":1,"Children":[{"Type":"NodeText","Data":"S 锁"}]},{"Type":"NodeTableCell","Data":"td","TableCellAlign":1,"Children":[{"Type":"NodeText","Data":"不冲突"}]},{"Type":"NodeTableCell","Data":"td","TableCellAlign":1,"Children":[{"Type":"NodeText","Data":"冲突"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","TableCellAlign":1,"Children":[{"Type":"NodeText","Data":"X 锁"}]},{"Type":"NodeTableCell","Data":"td","TableCellAlign":1,"Children":[{"Type":"NodeText","Data":"冲突"}]},{"Type":"NodeTableCell","Data":"td","TableCellAlign":1,"Children":[{"Type":"NodeText","Data":"冲突"}]}]}]},{"ID":"20231224180254-yy5plho","Type":"NodeParagraph","Properties":{"id":"20231224180254-yy5plho","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"由于 MVCC 的存在，对于一般的 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"SELECT"},{"Type":"NodeText","Data":"​ 语句，InnoDB 不会加任何锁。不过， 你可以通过以下语句显式加共享锁或排他锁。"}]},{"ID":"20231224180254-9y3gpye","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20231224180254-9y3gpye","updated":"20231224180254"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"c3Fs"},{"Type":"NodeCodeBlockCode","Data":"# 共享锁 可以在 MySQL 5.7 和 MySQL 8.0 中使用\nSELECT ... LOCK IN SHARE MODE;\n# 共享锁 可以在 MySQL 8.0 中使用\nSELECT ... FOR SHARE;\n# 排他锁\nSELECT ... FOR UPDATE;\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20231224180254-e0oaiuu","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20231224180254-e0oaiuu","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"意向锁有什么作用？"}]},{"ID":"20231224180254-vz7km8h","Type":"NodeParagraph","Properties":{"id":"20231224180254-vz7km8h","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"如果需要用到表锁的话，如何判断表中的记录没有行锁呢，一行一行遍历肯定是不行，性能太差。我们需要用到一个叫做意向锁的东东来快速判断是否可以对某个表使用表锁。"}]},{"ID":"20231224180254-a8jp235","Type":"NodeParagraph","Properties":{"id":"20231224180254-a8jp235","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"意向锁是表级锁，共有两种："}]},{"ID":"20231224180254-k24tdmd","Type":"NodeList","ListData":{},"Properties":{"id":"20231224180254-k24tdmd","updated":"20231224180254"},"Children":[{"ID":"20231224180254-h71jyx0","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20231224180254-h71jyx0","updated":"20231224180254"},"Children":[{"ID":"20231224180254-n2pmsdo","Type":"NodeParagraph","Properties":{"id":"20231224180254-n2pmsdo","updated":"20231224180254"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"意向共享锁（Intention Shared Lock，IS 锁）"},{"Type":"NodeText","Data":"：事务有意向对表中的某些记录加共享锁（S 锁），加共享锁前必须先取得该表的 IS 锁。"}]}]},{"ID":"20231224180254-hzrqg4u","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20231224180254-hzrqg4u","updated":"20231224180254"},"Children":[{"ID":"20231224180254-32dop82","Type":"NodeParagraph","Properties":{"id":"20231224180254-32dop82","updated":"20231224180254"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"意向排他锁（Intention Exclusive Lock，IX 锁）"},{"Type":"NodeText","Data":"：事务有意向对表中的某些记录加排他锁（X 锁），加排他锁之前必须先取得该表的 IX 锁。"}]}]}]},{"ID":"20231224180254-hb05xu3","Type":"NodeParagraph","Properties":{"id":"20231224180254-hb05xu3","updated":"20231224180254"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"意向锁是由数据引擎自己维护的，用户无法手动操作意向锁，在为数据行加共享/排他锁之前，InooDB 会先获取该数据行所在在数据表的对应意向锁。"}]},{"ID":"20231224180254-8hometv","Type":"NodeParagraph","Properties":{"id":"20231224180254-8hometv","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"意向锁之间是互相兼容的。"}]},{"ID":"20231224180254-aso13hb","Type":"NodeTable","TableAligns":[0,0,0],"Properties":{"colgroup":"||","id":"20231224180254-aso13hb","updated":"20231224180254"},"Children":[{"Type":"NodeTableHead","Data":"thead","Children":[{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"th"},{"Type":"NodeTableCell","Data":"th","Children":[{"Type":"NodeText","Data":"IS 锁"}]},{"Type":"NodeTableCell","Data":"th","Children":[{"Type":"NodeText","Data":"IX 锁"}]}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"IS 锁"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"兼容"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"兼容"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"IX 锁"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"兼容"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"兼容"}]}]}]},{"ID":"20231224180254-ehlgiw8","Type":"NodeParagraph","Properties":{"id":"20231224180254-ehlgiw8","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"意向锁和共享锁和排它锁互斥（这里指的是表级别的共享锁和排他锁，意向锁不会与行级的共享锁和排他锁互斥）。"}]},{"ID":"20231224180254-do99t87","Type":"NodeTable","TableAligns":[0,0,0],"Properties":{"colgroup":"||","id":"20231224180254-do99t87","updated":"20231224180254"},"Children":[{"Type":"NodeTableHead","Data":"thead","Children":[{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"th"},{"Type":"NodeTableCell","Data":"th","Children":[{"Type":"NodeText","Data":"IS 锁"}]},{"Type":"NodeTableCell","Data":"th","Children":[{"Type":"NodeText","Data":"IX 锁"}]}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"S 锁"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"兼容"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"互斥"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"X 锁"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"互斥"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"互斥"}]}]}]},{"ID":"20231224180254-3xuzcy5","Type":"NodeParagraph","Properties":{"id":"20231224180254-3xuzcy5","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"《MySQL 技术内幕 InnoDB 存储引擎》这本书对应的描述应该是笔误了。"}]},{"ID":"20231224180254-9t19gve","Type":"NodeParagraph","Properties":{"id":"20231224180254-9t19gve","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeImage","Data":"span","Children":[{"Type":"NodeBang"},{"Type":"NodeOpenBracket"},{"Type":"NodeLinkText"},{"Type":"NodeCloseBracket"},{"Type":"NodeOpenParen"},{"Type":"NodeLinkDest","Data":"https://oss.javaguide.cn/github/javaguide/mysql/image-20220511171419081.png"},{"Type":"NodeCloseParen"}]},{"Type":"NodeText","Data":"​"}]},{"ID":"20231224180254-8z1wief","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20231224180254-8z1wief","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"当前读和快照读有什么区别？"}]},{"ID":"20231224180254-s27khhz","Type":"NodeParagraph","Properties":{"id":"20231224180254-s27khhz","updated":"20231224180254"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"快照读"},{"Type":"NodeText","Data":"（一致性非锁定读）就是单纯的 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"SELECT"},{"Type":"NodeText","Data":"​ 语句，但不包括下面这两类 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"SELECT"},{"Type":"NodeText","Data":"​ 语句："}]},{"ID":"20231224180254-56lsc20","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20231224180254-56lsc20","updated":"20231224180254"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"c3Fs"},{"Type":"NodeCodeBlockCode","Data":"SELECT ... FOR UPDATE\n# 共享锁 可以在 MySQL 5.7 和 MySQL 8.0 中使用\nSELECT ... LOCK IN SHARE MODE;\n# 共享锁 可以在 MySQL 8.0 中使用\nSELECT ... FOR SHARE;\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20231224180254-ymf7r4p","Type":"NodeParagraph","Properties":{"id":"20231224180254-ymf7r4p","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"快照即记录的历史版本，每行记录可能存在多个历史版本（多版本技术）。"}]},{"ID":"20231224180254-ukfqfwb","Type":"NodeParagraph","Properties":{"id":"20231224180254-ukfqfwb","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"快照读的情况下，如果读取的记录正在执行 UPDATE/DELETE 操作，读取操作不会因此去等待记录上 X 锁的释放，而是会去读取行的一个快照。"}]},{"ID":"20231224180254-35lg3vb","Type":"NodeParagraph","Properties":{"id":"20231224180254-35lg3vb","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"只有在事务隔离级别 RC(读取已提交) 和 RR（可重读）下，InnoDB 才会使用一致性非锁定读："}]},{"ID":"20231224180254-ucyeqg1","Type":"NodeList","ListData":{},"Properties":{"id":"20231224180254-ucyeqg1","updated":"20231224180254"},"Children":[{"ID":"20231224180254-eatsxm0","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20231224180254-eatsxm0","updated":"20231224180254"},"Children":[{"ID":"20231224180254-tswgjwu","Type":"NodeParagraph","Properties":{"id":"20231224180254-tswgjwu","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"在 RC 级别下，对于快照数据，一致性非锁定读总是读取被锁定行的最新一份快照数据。"}]}]},{"ID":"20231224180254-2upword","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20231224180254-2upword","updated":"20231224180254"},"Children":[{"ID":"20231224180254-1l6nuo8","Type":"NodeParagraph","Properties":{"id":"20231224180254-1l6nuo8","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"在 RR 级别下，对于快照数据，一致性非锁定读总是读取本事务开始时的行数据版本。"}]}]}]},{"ID":"20231224180254-n3icjtr","Type":"NodeParagraph","Properties":{"id":"20231224180254-n3icjtr","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"快照读比较适合对于数据一致性要求不是特别高且追求极致性能的业务场景。"}]},{"ID":"20231224180254-yt9eq0d","Type":"NodeParagraph","Properties":{"id":"20231224180254-yt9eq0d","updated":"20231224180254"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"当前读"},{"Type":"NodeText","Data":" （一致性锁定读）就是给行记录加 X 锁或 S 锁。"}]},{"ID":"20231224180254-sx0ob4h","Type":"NodeParagraph","Properties":{"id":"20231224180254-sx0ob4h","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"当前读的一些常见 SQL 语句类型如下："}]},{"ID":"20231224180254-7a04gbb","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20231224180254-7a04gbb","updated":"20231224180254"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"c3Fs"},{"Type":"NodeCodeBlockCode","Data":"# 对读的记录加一个X锁\nSELECT...FOR UPDATE\n# 对读的记录加一个S锁\nSELECT...LOCK IN SHARE MODE\n# 对读的记录加一个S锁\nSELECT...FOR SHARE\n# 对修改的记录加一个X锁\nINSERT...\nUPDATE...\nDELETE...\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20231224180254-uj6aikx","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20231224180254-uj6aikx","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"自增锁有了解吗？"}]},{"ID":"20231224180254-7iiw8z1","Type":"NodeBlockquote","Properties":{"id":"20231224180254-7iiw8z1","updated":"20231224180254"},"Children":[{"Type":"NodeBlockquoteMarker","Data":"\u003e"},{"ID":"20231224180254-z70fb8u","Type":"NodeParagraph","Properties":{"id":"20231224180254-z70fb8u","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"不太重要的一个知识点，简单了解即可。"}]}]},{"ID":"20231224180254-acwgtul","Type":"NodeParagraph","Properties":{"id":"20231224180254-acwgtul","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"关系型数据库设计表的时候，通常会有一列作为自增主键。InnoDB 中的自增主键会涉及一种比较特殊的表级锁— "},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"自增锁（AUTO-INC Locks）"},{"Type":"NodeText","Data":" 。"}]},{"ID":"20231224180254-pxm6t7s","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20231224180254-pxm6t7s","updated":"20231224180254"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"c3Fs"},{"Type":"NodeCodeBlockCode","Data":"CREATE TABLE `sequence_id` (\n  `id` BIGINT(20) UNSIGNED NOT NULL AUTO_INCREMENT,\n  `stub` CHAR(10) NOT NULL DEFAULT '',\n  PRIMARY KEY (`id`),\n  UNIQUE KEY `stub` (`stub`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20231224180254-kf7lst1","Type":"NodeParagraph","Properties":{"id":"20231224180254-kf7lst1","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"更准确点来说，不仅仅是自增主键，"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"AUTO_INCREMENT"},{"Type":"NodeText","Data":"​的列都会涉及到自增锁，毕竟非主键也可以设置自增长。"}]},{"ID":"20231224180254-0ruk6dk","Type":"NodeParagraph","Properties":{"id":"20231224180254-0ruk6dk","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"如果一个事务正在插入数据到有自增列的表时，会先获取自增锁，拿不到就可能会被阻塞住。这里的阻塞行为只是自增锁行为的其中一种，可以理解为自增锁就是一个接口，其具体的实现有多种。具体的配置项为 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"innodb_autoinc_lock_mode"},{"Type":"NodeText","Data":"​ （MySQL 5.1.22 引入），可以选择的值如下："}]},{"ID":"20231224180254-6byrgne","Type":"NodeTable","TableAligns":[1,1],"Properties":{"colgroup":"|","id":"20231224180254-6byrgne","updated":"20231224180254"},"Children":[{"Type":"NodeTableHead","Data":"thead","Children":[{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"th","TableCellAlign":1,"Children":[{"Type":"NodeText","Data":"innodb_autoinc_lock_mode"}]},{"Type":"NodeTableCell","Data":"th","TableCellAlign":1,"Children":[{"Type":"NodeText","Data":"介绍"}]}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","TableCellAlign":1,"Children":[{"Type":"NodeText","Data":"0"}]},{"Type":"NodeTableCell","Data":"td","TableCellAlign":1,"Children":[{"Type":"NodeText","Data":"传统模式"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","TableCellAlign":1,"Children":[{"Type":"NodeText","Data":"1"}]},{"Type":"NodeTableCell","Data":"td","TableCellAlign":1,"Children":[{"Type":"NodeText","Data":"连续模式（MySQL 8.0 之前默认）"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","TableCellAlign":1,"Children":[{"Type":"NodeText","Data":"2"}]},{"Type":"NodeTableCell","Data":"td","TableCellAlign":1,"Children":[{"Type":"NodeText","Data":"交错模式(MySQL 8.0 之后默认)"}]}]}]},{"ID":"20231224180254-ih9a9od","Type":"NodeParagraph","Properties":{"id":"20231224180254-ih9a9od","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"交错模式下，所有的“INSERT-LIKE”语句（所有的插入语句，包括："},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"INSERT"},{"Type":"NodeText","Data":"​、"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"REPLACE"},{"Type":"NodeText","Data":"​、"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"INSERT…SELECT"},{"Type":"NodeText","Data":"​、"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"REPLACE…SELECT"},{"Type":"NodeText","Data":"​、"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"LOAD DATA"},{"Type":"NodeText","Data":"​等）都不使用表级锁，使用的是轻量级互斥锁实现，多条插入语句可以并发执行，速度更快，扩展性也更好。"}]},{"ID":"20231224180254-y5t940u","Type":"NodeParagraph","Properties":{"id":"20231224180254-y5t940u","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"不过，如果你的 MySQL 数据库有主从同步需求并且 Binlog 存储格式为 Statement 的话，不要将 InnoDB 自增锁模式设置为交叉模式，不然会有数据不一致性问题。这是因为并发情况下插入语句的执行顺序就无法得到保障。"}]},{"ID":"20231224180254-3rqcm95","Type":"NodeBlockquote","Properties":{"id":"20231224180254-3rqcm95","updated":"20231224180254"},"Children":[{"Type":"NodeBlockquoteMarker","Data":"\u003e"},{"ID":"20231224180254-b3ryiaj","Type":"NodeParagraph","Properties":{"id":"20231224180254-b3ryiaj","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"如果 MySQL 采用的格式为 Statement ，那么 MySQL 的主从同步实际上同步的就是一条一条的 SQL 语句。"}]}]},{"ID":"20231224180254-7b7rbzf","Type":"NodeParagraph","Properties":{"id":"20231224180254-7b7rbzf","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"最后，再推荐一篇文章："},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://draveness.me/whys-the-design-mysql-auto-increment/","TextMarkTextContent":"为什么 MySQL 的自增主键不单调也不连续"},{"Type":"NodeText","Data":" 。"}]},{"ID":"20231224180254-uib3co6","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20231224180254-uib3co6","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"MySQL 性能优化"}]},{"ID":"20231224180254-uh1l61g","Type":"NodeParagraph","Properties":{"id":"20231224180254-uh1l61g","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"关于 MySQL 性能优化的建议总结，请看这篇文章："},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"./mysql-high-performance-optimization-specification-recommendations.md","TextMarkTextContent":"MySQL 高性能优化规范建议总结"},{"Type":"NodeText","Data":" 。"}]},{"ID":"20231224180254-b21185i","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20231224180254-b21185i","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"能用 MySQL 直接存储文件（比如图片）吗？"}]},{"ID":"20231224180254-5xu7dek","Type":"NodeParagraph","Properties":{"id":"20231224180254-5xu7dek","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"可以是可以，直接存储文件对应的二进制数据即可。不过，还是建议不要在数据库中存储文件，会严重影响数据库性能，消耗过多存储空间。"}]},{"ID":"20231224180254-0k2c4ld","Type":"NodeParagraph","Properties":{"id":"20231224180254-0k2c4ld","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"可以选择使用云服务厂商提供的开箱即用的文件存储服务，成熟稳定，价格也比较低。"}]},{"ID":"20231224180254-mckzdur","Type":"NodeParagraph","Properties":{"id":"20231224180254-mckzdur","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeImage","Data":"span","Children":[{"Type":"NodeBang"},{"Type":"NodeOpenBracket"},{"Type":"NodeLinkText"},{"Type":"NodeCloseBracket"},{"Type":"NodeOpenParen"},{"Type":"NodeLinkDest","Data":"https://oss.javaguide.cn/github/javaguide/mysql/oss-search.png"},{"Type":"NodeCloseParen"}]},{"Type":"NodeText","Data":"​"}]},{"ID":"20231224180254-9wj1xaj","Type":"NodeParagraph","Properties":{"id":"20231224180254-9wj1xaj","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"也可以选择自建文件存储服务，实现起来也不难，基于 FastDFS、MinIO（推荐） 等开源项目就可以实现分布式文件服务。"}]},{"ID":"20231224180254-ma3wyia","Type":"NodeParagraph","Properties":{"id":"20231224180254-ma3wyia","updated":"20231224180254"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"数据库只存储文件地址信息，文件由文件存储服务负责存储。"}]},{"ID":"20231224180254-nxyzfyj","Type":"NodeParagraph","Properties":{"id":"20231224180254-nxyzfyj","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"相关阅读："},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://www.51cto.com/article/716978.html","TextMarkTextContent":"Spring Boot 整合 MinIO 实现分布式文件服务"},{"Type":"NodeText","Data":" 。"}]},{"ID":"20231224180254-86gy1m5","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20231224180254-86gy1m5","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"MySQL 如何存储 IP 地址？"}]},{"ID":"20231224180254-z9oaltf","Type":"NodeParagraph","Properties":{"id":"20231224180254-z9oaltf","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"可以将 IP 地址转换成整形数据存储，性能更好，占用空间也更小。"}]},{"ID":"20231224180254-qozntgu","Type":"NodeParagraph","Properties":{"id":"20231224180254-qozntgu","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"MySQL 提供了两个方法来处理 ip 地址"}]},{"ID":"20231224180254-ipzdy79","Type":"NodeList","ListData":{},"Properties":{"id":"20231224180254-ipzdy79","updated":"20231224180254"},"Children":[{"ID":"20231224180254-66uf264","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20231224180254-66uf264","updated":"20231224180254"},"Children":[{"ID":"20231224180254-fjq82ap","Type":"NodeParagraph","Properties":{"id":"20231224180254-fjq82ap","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"INET_ATON()"},{"Type":"NodeText","Data":"​：把 ip 转为无符号整型 (4-8 位)"}]}]},{"ID":"20231224180254-t4pvb3e","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20231224180254-t4pvb3e","updated":"20231224180254"},"Children":[{"ID":"20231224180254-yrukkp3","Type":"NodeParagraph","Properties":{"id":"20231224180254-yrukkp3","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"INET_NTOA()"},{"Type":"NodeText","Data":"​ :把整型的 ip 转为地址"}]}]}]},{"ID":"20231224180254-rt99tc9","Type":"NodeParagraph","Properties":{"id":"20231224180254-rt99tc9","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"插入数据前，先用 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"INET_ATON()"},{"Type":"NodeText","Data":"​ 把 ip 地址转为整型，显示数据时，使用 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"INET_NTOA()"},{"Type":"NodeText","Data":"​ 把整型的 ip 地址转为地址显示即可。"}]},{"ID":"20231224180254-nf5l7k2","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20231224180254-nf5l7k2","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"有哪些常见的 SQL 优化手段？"}]},{"ID":"20231224180254-irilqen","Type":"NodeParagraph","Properties":{"id":"20231224180254-irilqen","updated":"20231224180254"},"Children":[{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"../../zhuanlan/java-mian-shi-zhi-bei.md","TextMarkTextContent":"《Java 面试指北》(付费)"},{"Type":"NodeText","Data":" 的 "},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"「技术面试题篇」"},{"Type":"NodeText","Data":" 有一篇文章详细介绍了常见的 SQL 优化手段，非常全面，清晰易懂！"}]},{"ID":"20231224180254-dtvt0c6","Type":"NodeParagraph","Properties":{"id":"20231224180254-dtvt0c6","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeImage","Data":"span","Children":[{"Type":"NodeBang"},{"Type":"NodeOpenBracket"},{"Type":"NodeLinkText","Data":"常见的 SQL 优化手段"},{"Type":"NodeCloseBracket"},{"Type":"NodeOpenParen"},{"Type":"NodeLinkDest","Data":"https://oss.javaguide.cn/javamianshizhibei/javamianshizhibei-sql-optimization.png"},{"Type":"NodeCloseParen"}]},{"Type":"NodeText","Data":"​"}]},{"ID":"20231224180254-1bml0x9","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20231224180254-1bml0x9","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"如何分析 SQL 的性能？"}]},{"ID":"20231224180254-xgj8z1s","Type":"NodeParagraph","Properties":{"id":"20231224180254-xgj8z1s","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"我们可以使用 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"EXPLAIN"},{"Type":"NodeText","Data":"​ 命令来分析 SQL 的 "},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"执行计划"},{"Type":"NodeText","Data":" 。执行计划是指一条 SQL 语句在经过 MySQL 查询优化器的优化会后，具体的执行方式。"}]},{"ID":"20231224180254-hfjrpqn","Type":"NodeParagraph","Properties":{"id":"20231224180254-hfjrpqn","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"EXPLAIN"},{"Type":"NodeText","Data":"​ 并不会真的去执行相关的语句，而是通过 "},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"查询优化器"},{"Type":"NodeText","Data":" 对语句进行分析，找出最优的查询方案，并显示对应的信息。"}]},{"ID":"20231224180254-t4hjekk","Type":"NodeParagraph","Properties":{"id":"20231224180254-t4hjekk","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"EXPLAIN"},{"Type":"NodeText","Data":"​ 适用于 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"SELECT"},{"Type":"NodeText","Data":"​, "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"DELETE"},{"Type":"NodeText","Data":"​, "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"INSERT"},{"Type":"NodeText","Data":"​, "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"REPLACE"},{"Type":"NodeText","Data":"​, 和 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"UPDATE"},{"Type":"NodeText","Data":"​语句，我们一般分析 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"SELECT"},{"Type":"NodeText","Data":"​ 查询较多。"}]},{"ID":"20231224180254-9kdxlck","Type":"NodeParagraph","Properties":{"id":"20231224180254-9kdxlck","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"我们这里简单来演示一下 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"EXPLAIN"},{"Type":"NodeText","Data":"​ 的使用。"}]},{"ID":"20231224180254-a9wz30t","Type":"NodeParagraph","Properties":{"id":"20231224180254-a9wz30t","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"EXPLAIN"},{"Type":"NodeText","Data":"​ 的输出格式如下："}]},{"ID":"20231224180254-zjawwm7","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20231224180254-zjawwm7","updated":"20231224180254"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"c3Fs"},{"Type":"NodeCodeBlockCode","Data":"mysql\u003e EXPLAIN SELECT `score`,`name` FROM `cus_order` ORDER BY `score` DESC;\n+----+-------------+-----------+------------+------+---------------+------+---------+------+--------+----------+----------------+\n| id | select_type | table     | partitions | type | possible_keys | key  | key_len | ref  | rows   | filtered | Extra          |\n+----+-------------+-----------+------------+------+---------------+------+---------+------+--------+----------+----------------+\n|  1 | SIMPLE      | cus_order | NULL       | ALL  | NULL          | NULL | NULL    | NULL | 997572 |   100.00 | Using filesort |\n+----+-------------+-----------+------------+------+---------------+------+---------+------+--------+----------+----------------+\n1 row in set, 1 warning (0.00 sec)\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20231224180254-q4uusrb","Type":"NodeParagraph","Properties":{"id":"20231224180254-q4uusrb","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"各个字段的含义如下："}]},{"ID":"20231224180254-cqvipnh","Type":"NodeTable","TableAligns":[0,0],"Properties":{"colgroup":"|","id":"20231224180254-cqvipnh","updated":"20231224180254"},"Children":[{"Type":"NodeTableHead","Data":"thead","Children":[{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"th","Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"列名"}]},{"Type":"NodeTableCell","Data":"th","Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"含义"}]}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"id"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"SELECT 查询的序列标识符"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"select_type"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"SELECT 关键字对应的查询类型"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"table"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"用到的表名"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"partitions"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"匹配的分区，对于未分区的表，值为 NULL"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"type"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"表的访问方法"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"possible_keys"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"可能用到的索引"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"key"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"实际用到的索引"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"key_len"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"所选索引的长度"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"ref"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"当使用索引等值查询时，与索引作比较的列或常量"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"rows"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"预计要读取的行数"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"filtered"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"按表条件过滤后，留存的记录数的百分比"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"Extra"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"附加信息"}]}]}]},{"ID":"20231224180254-0wiedic","Type":"NodeParagraph","Properties":{"id":"20231224180254-0wiedic","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"篇幅问题，我这里只是简单介绍了一下 MySQL 执行计划，详细介绍请看："},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"./mysql-query-execution-plan.md","TextMarkTextContent":"SQL 的执行计划"},{"Type":"NodeText","Data":"这篇文章。"}]},{"ID":"20231224180254-3nvf3a8","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20231224180254-3nvf3a8","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"读写分离和分库分表了解吗？"}]},{"ID":"20231224180254-52h4ccl","Type":"NodeParagraph","Properties":{"id":"20231224180254-52h4ccl","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"读写分离和分库分表相关的问题比较多，于是，我单独写了一篇文章来介绍："},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"../../high-performance/read-and-write-separation-and-library-subtable.md","TextMarkTextContent":"读写分离和分库分表详解"},{"Type":"NodeText","Data":"。"}]},{"ID":"20231224180254-1e4ufpk","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20231224180254-1e4ufpk","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"MySQL 学习资料推荐"}]},{"ID":"20231224180254-4bf0e9h","Type":"NodeParagraph","Properties":{"id":"20231224180254-4bf0e9h","updated":"20231224180254"},"Children":[{"Type":"NodeTextMark","TextMarkType":"a strong","TextMarkAHref":"../../books/database.md#mysql","TextMarkTextContent":"书籍推荐"},{"Type":"NodeText","Data":" 。"}]},{"ID":"20231224180254-cyt4iy5","Type":"NodeParagraph","Properties":{"id":"20231224180254-cyt4iy5","updated":"20231224180254"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"文章推荐"},{"Type":"NodeText","Data":" :"}]},{"ID":"20231224180254-cqlliry","Type":"NodeList","ListData":{},"Properties":{"id":"20231224180254-cqlliry","updated":"20231224180254"},"Children":[{"ID":"20231224180254-qxfpgor","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20231224180254-qxfpgor","updated":"20231224180254"},"Children":[{"ID":"20231224180254-4h696ac","Type":"NodeParagraph","Properties":{"id":"20231224180254-4h696ac","updated":"20231224180254"},"Children":[{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://mp.weixin.qq.com/mp/appmsgalbum?__biz=Mzg3NTc3NjM4Nw==\u0026amp;action=getalbum\u0026amp;album_id=2372043523518300162\u0026amp;scene=173\u0026amp;from_msgid=2247484308\u0026amp;from_itemidx=1\u0026amp;count=3\u0026amp;nolastread=1#wechat_redirect","TextMarkTextContent":"一树一溪的 MySQL 系列教程"}]}]},{"ID":"20231224180254-8dl6fh6","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20231224180254-8dl6fh6","updated":"20231224180254"},"Children":[{"ID":"20231224180254-n7zv4s1","Type":"NodeParagraph","Properties":{"id":"20231224180254-n7zv4s1","updated":"20231224180254"},"Children":[{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://mp.weixin.qq.com/mp/appmsgalbum?__biz=MzkxNTE3NjQ3MA==\u0026amp;action=getalbum\u0026amp;album_id=1903249596194095112\u0026amp;scene=173\u0026amp;from_msgid=2247490365\u0026amp;from_itemidx=1\u0026amp;count=3\u0026amp;nolastread=1#wechat_redirect","TextMarkTextContent":"Yes 的 MySQL 系列教程"}]}]},{"ID":"20231224180254-x276ute","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20231224180254-x276ute","updated":"20231224180254"},"Children":[{"ID":"20231224180254-rc9u5q0","Type":"NodeParagraph","Properties":{"id":"20231224180254-rc9u5q0","updated":"20231224180254"},"Children":[{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://juejin.cn/post/7161964571853815822","TextMarkTextContent":"写完这篇 我的 SQL 优化能力直接进入新层次 - 变成派大星 - 2022"}]}]},{"ID":"20231224180254-h64xkj7","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20231224180254-h64xkj7","updated":"20231224180254"},"Children":[{"ID":"20231224180254-k3ham1o","Type":"NodeParagraph","Properties":{"id":"20231224180254-k3ham1o","updated":"20231224180254"},"Children":[{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://juejin.cn/post/7094049650428084232","TextMarkTextContent":"两万字详解！InnoDB 锁专题！ - 捡田螺的小男孩 - 2022"}]}]},{"ID":"20231224180254-538lt01","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20231224180254-538lt01","updated":"20231224180254"},"Children":[{"ID":"20231224180254-u2qeepp","Type":"NodeParagraph","Properties":{"id":"20231224180254-u2qeepp","updated":"20231224180254"},"Children":[{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://mp.weixin.qq.com/s/qci10h9rJx_COZbHV3aygQ","TextMarkTextContent":"MySQL 的自增主键一定是连续的吗？ - 飞天小牛肉 - 2022"}]}]},{"ID":"20231224180254-jtqt526","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20231224180254-jtqt526","updated":"20231224180254"},"Children":[{"ID":"20231224180254-435pp5k","Type":"NodeParagraph","Properties":{"id":"20231224180254-435pp5k","updated":"20231224180254"},"Children":[{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://zhuanlan.zhihu.com/p/113917726","TextMarkTextContent":"深入理解 MySQL 索引底层原理 - 腾讯技术工程 - 2020"}]}]}]},{"ID":"20231224180254-4s47hou","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20231224180254-4s47hou","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"参考"}]},{"ID":"20231224180254-svhdh3g","Type":"NodeList","ListData":{},"Properties":{"id":"20231224180254-svhdh3g","updated":"20231224180254"},"Children":[{"ID":"20231224180254-vs8q0ep","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20231224180254-vs8q0ep","updated":"20231224180254"},"Children":[{"ID":"20231224180254-mlqr3no","Type":"NodeParagraph","Properties":{"id":"20231224180254-mlqr3no","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"《高性能 MySQL》第 7 章 MySQL 高级特性"}]}]},{"ID":"20231224180254-eo0xubv","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20231224180254-eo0xubv","updated":"20231224180254"},"Children":[{"ID":"20231224180254-mqchtk1","Type":"NodeParagraph","Properties":{"id":"20231224180254-mqchtk1","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"《MySQL 技术内幕 InnoDB 存储引擎》第 6 章 锁"}]}]},{"ID":"20231224180254-uz0bngl","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20231224180254-uz0bngl","updated":"20231224180254"},"Children":[{"ID":"20231224180254-pwq1oyn","Type":"NodeParagraph","Properties":{"id":"20231224180254-pwq1oyn","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"Relational Database："},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://www.omnisci.com/technical-glossary/relational-database","TextMarkTextContent":"https://www.omnisci.com/technical-glossary/relational-database"}]}]},{"ID":"20231224180254-lntpn6h","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20231224180254-lntpn6h","updated":"20231224180254"},"Children":[{"ID":"20231224180254-yqf4sif","Type":"NodeParagraph","Properties":{"id":"20231224180254-yqf4sif","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"一篇文章看懂 mysql 中 varchar 能存多少汉字、数字，以及 varchar(100)和 varchar(10)的区别："},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://www.cnblogs.com/zhuyeshen/p/11642211.html","TextMarkTextContent":"https://www.cnblogs.com/zhuyeshen/p/11642211.html"}]}]},{"ID":"20231224180254-v4t4bzi","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20231224180254-v4t4bzi","updated":"20231224180254"},"Children":[{"ID":"20231224180254-h4dnz2q","Type":"NodeParagraph","Properties":{"id":"20231224180254-h4dnz2q","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"技术分享 | 隔离级别：正确理解幻读："},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://opensource.actionsky.com/20210818-mysql/","TextMarkTextContent":"https://opensource.actionsky.com/20210818-mysql/"}]}]},{"ID":"20231224180254-no651hc","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20231224180254-no651hc","updated":"20231224180254"},"Children":[{"ID":"20231224180254-27pz18a","Type":"NodeParagraph","Properties":{"id":"20231224180254-27pz18a","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"MySQL Server Logs - MySQL 5.7 Reference Manual："},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://dev.mysql.com/doc/refman/5.7/en/server-logs.html","TextMarkTextContent":"https://dev.mysql.com/doc/refman/5.7/en/server-logs.html"}]}]},{"ID":"20231224180254-enz2rrg","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20231224180254-enz2rrg","updated":"20231224180254"},"Children":[{"ID":"20231224180254-w01o8ad","Type":"NodeParagraph","Properties":{"id":"20231224180254-w01o8ad","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"Redo Log - MySQL 5.7 Reference Manual："},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://dev.mysql.com/doc/refman/5.7/en/innodb-redo-log.html","TextMarkTextContent":"https://dev.mysql.com/doc/refman/5.7/en/innodb-redo-log.html"}]}]},{"ID":"20231224180254-5umdv8b","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20231224180254-5umdv8b","updated":"20231224180254"},"Children":[{"ID":"20231224180254-zk8g5rm","Type":"NodeParagraph","Properties":{"id":"20231224180254-zk8g5rm","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"Locking Reads - MySQL 5.7 Reference Manual："},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://dev.mysql.com/doc/refman/5.7/en/innodb-locking-reads.html","TextMarkTextContent":"https://dev.mysql.com/doc/refman/5.7/en/innodb-locking-reads.html"}]}]},{"ID":"20231224180254-8asrwvr","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20231224180254-8asrwvr","updated":"20231224180254"},"Children":[{"ID":"20231224180254-t9j6h0h","Type":"NodeParagraph","Properties":{"id":"20231224180254-t9j6h0h","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"深入理解数据库行锁与表锁 "},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://zhuanlan.zhihu.com/p/52678870","TextMarkTextContent":"https://zhuanlan.zhihu.com/p/52678870"}]}]},{"ID":"20231224180254-3udh6sq","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20231224180254-3udh6sq","updated":"20231224180254"},"Children":[{"ID":"20231224180254-abobxky","Type":"NodeParagraph","Properties":{"id":"20231224180254-abobxky","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"详解 MySQL InnoDB 中意向锁的作用："},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://juejin.cn/post/6844903666332368909","TextMarkTextContent":"https://juejin.cn/post/6844903666332368909"}]}]},{"ID":"20231224180254-zv5eovr","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20231224180254-zv5eovr","updated":"20231224180254"},"Children":[{"ID":"20231224180254-159icxk","Type":"NodeParagraph","Properties":{"id":"20231224180254-159icxk","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"深入剖析 MySQL 自增锁："},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://juejin.cn/post/6968420054287253540","TextMarkTextContent":"https://juejin.cn/post/6968420054287253540"}]}]},{"ID":"20231224180254-65cxavj","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20231224180254-65cxavj","updated":"20231224180254"},"Children":[{"ID":"20231224180254-xod9mrh","Type":"NodeParagraph","Properties":{"id":"20231224180254-xod9mrh","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"在数据库中不可重复读和幻读到底应该怎么分？："},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://www.zhihu.com/question/392569386","TextMarkTextContent":"https://www.zhihu.com/question/392569386"}]}]}]},{"ID":"20231224180254-ir9l8k1","Type":"NodeParagraph","Properties":{"id":"20231224180254-ir9l8k1","updated":"20231224180254"},"Children":[{"Type":"NodeText","Data":"\u003c!-- @include: @article-footer.snippet.md --\u003e"}]},{"ID":"20240111154809-qfsv2z9","Type":"NodeParagraph","Properties":{"id":"20240111154809-qfsv2z9"}},{"ID":"20240111154810-q5btz4h","Type":"NodeParagraph","Properties":{"id":"20240111154810-q5btz4h","updated":"20240111154810"}},{"ID":"20240111154810-qwmtxv9","Type":"NodeParagraph","Properties":{"id":"20240111154810-qwmtxv9","updated":"20240111154810"}},{"ID":"20240111154810-sitnx8e","Type":"NodeParagraph","Properties":{"id":"20240111154810-sitnx8e","updated":"20240111154810"}},{"ID":"20240111154810-hiworls","Type":"NodeParagraph","Properties":{"id":"20240111154810-hiworls","updated":"20240111154810"}},{"ID":"20240111154811-fooeuoe","Type":"NodeList","ListData":{},"Properties":{"id":"20240111154811-fooeuoe","updated":"20240111155011"},"Children":[{"ID":"20240111154811-xvlj0xy","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240111154811-xvlj0xy","updated":"20240111154811"},"Children":[{"ID":"20240111154811-5te8ngy","Type":"NodeParagraph","Properties":{"id":"20240111154811-5te8ngy","updated":"20240111154811"},"Children":[{"Type":"NodeText","Data":"CASCADE：在父表上更新或删除记录时，自动更新或删除子表中匹配的记录。"}]}]},{"ID":"20240111154811-hholgkn","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240111154811-hholgkn","updated":"20240111154811"},"Children":[{"ID":"20240111154811-glcelgs","Type":"NodeParagraph","Properties":{"id":"20240111154811-glcelgs","updated":"20240111154811"},"Children":[{"Type":"NodeText","Data":"NO ACTION：如果子表中有匹配的记录，则不允许对父表进行更新或删除操作。"}]}]},{"ID":"20240111154811-tfog6gz","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240111154811-tfog6gz","updated":"20240111155011"},"Children":[{"ID":"20240111154811-3u55zfn","Type":"NodeParagraph","Properties":{"id":"20240111154811-3u55zfn","updated":"20240111154811"},"Children":[{"Type":"NodeText","Data":"RESTRICT：拒绝对父表进行更新或删除操作，如果子表中有匹配的记录，则会报错。"}]},{"ID":"20240111155009-ommwwd0","Type":"NodeParagraph","Properties":{"id":"20240111155009-ommwwd0","updated":"20240111155011"},"Children":[{"Type":"NodeText","Data":"使用RESTRICT选项，则只能先检查子表中是否有匹配的记录，如果没有，则拒绝执行任何操作。这样就可能导致无法完成目标任务。"}]}]},{"ID":"20240111154811-bf03r3s","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240111154811-bf03r3s","updated":"20240111154811"},"Children":[{"ID":"20240111154811-su9z2jw","Type":"NodeParagraph","Properties":{"id":"20240111154811-su9z2jw","updated":"20240111154811"},"Children":[{"Type":"NodeText","Data":"SET NULL：在父表上更新或删除记录时，将子表中匹配的记录的外键列设为NULL。"}]}]}]}]}