{"ID":"20231228175528-dncsrh9","Spec":"1","Type":"NodeDocument","Properties":{"id":"20231228175528-dncsrh9","title":"Abstract Factory Pattern","updated":"20231228221944"},"Children":[{"ID":"20231228175528-67hd6zu","Type":"NodeHeading","HeadingLevel":1,"Properties":{"id":"20231228175528-67hd6zu","updated":"20231228181805"},"Children":[{"Type":"NodeText","Data":"案例：披萨店"}]},{"ID":"20231228181805-lyrifrv","Type":"NodeParagraph","Properties":{"id":"20231228181805-lyrifrv","updated":"20231228181805"},"Children":[{"Type":"NodeText","Data":"现在背景有变，有些加盟店，使用低价原料来增加利润，你必须采取一些手段，以免毁掉你的披萨店品牌。\n你打算建造一家成产原料的工厂，并将原料运送到各家加盟店，那么剩下最后一个问题，不同的区域原料是不一样的，对于两个加盟店给出了两组不同的原料。"}]},{"ID":"20231228213153-4fj3zsf","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20231228213153-4fj3zsf","updated":"20231228213204"},"Children":[{"Type":"NodeText","Data":"优化方案：抽象工厂模式"}]},{"ID":"20231228213205-ie7gq89","Type":"NodeParagraph","Properties":{"id":"20231228213205-ie7gq89","updated":"20231228213205"},"Children":[{"Type":"NodeText","Data":"建造原料工厂\n我们要建造一个工厂来生产原料，这个工厂负责创建原料家族中的每一种原料。"}]},{"ID":"20231228213227-ihr7q2w","Type":"NodeParagraph","Properties":{"id":"20231228213227-ihr7q2w","updated":"20231228213227"}},{"ID":"20231228183113-8455pfo","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20231228183113-8455pfo","updated":"20231228213246"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ=="},{"Type":"NodeCodeBlockCode","Data":"public interface PizzaIngredientFactory {\n    public Dough createDough();\n    public Sauce createSauce();\n    public Cheese createCheese();\n    public Veggies[] createVeggies();\n    public Pepperoni createPepperoni();\n    public Clams createClams();\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20231228213447-v5fkhrq","Type":"NodeParagraph","Properties":{"id":"20231228213447-v5fkhrq","updated":"20231228213458"},"Children":[{"Type":"NodeText","Data":"创建原料工厂子类"}]},{"ID":"20231228213458-p6y1rxo","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20231228213458-p6y1rxo","updated":"20231228213545"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ=="},{"Type":"NodeCodeBlockCode","Data":"class NYPizzaIngredientFactory implements PizzaIngredientFactory{\n    @Override\n    public Dough createDough() {\n        return null;\n    }\n\t...  \n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20231228214012-szlznh9","Type":"NodeParagraph","Properties":{"id":"20231228214012-szlznh9","updated":"20231228214020"},"Children":[{"Type":"NodeText","Data":"重做 Pizza"}]},{"ID":"20231228214021-ot0qq0j","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20231228214021-ot0qq0j","updated":"20231228214103"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ=="},{"Type":"NodeCodeBlockCode","Data":"abstract class Pizza{\n    String name;\n    Dough dough;\n    Sauce sauce;\n    Veggies veggies[];\n    Cheese cheese;\n    Pepperoni pepperoni;\n    Clams clams;\n    abstract void prepare();\n    void cut(){\n        System.out.println(\"Cutting the pizza into diagonal slices\");\n    }\n    void box(){\n        System.out.println(\"Place pizza in official PizzaStore box\");\n    }\n    void setName(String name){\n        this.name=name;\n    }\n    public String getName(){\n        return name;\n    }\n    public void toString2(){\n        //这里打印披萨的代码\n    }\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20231228214135-04gzvng","Type":"NodeParagraph","Properties":{"id":"20231228214135-04gzvng","updated":"20231228214559"},"Children":[{"Type":"NodeText","Data":"重做 Pizza子类"}]},{"ID":"20231228214559-5gu9t1q","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20231228214559-5gu9t1q","updated":"20231228214655"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ=="},{"Type":"NodeCodeBlockCode","Data":"public class CheesePizza extends Pizza {\n    //这里组合了一个PizzaIngredientFactory对象的引用，用于提供不同的原料\n    PizzaIngredientFactory ingredientFactory;\n    /**\n     * 通过传入一个PizzaIngredientFactory原料工厂，我们可以在制作Pizza的时候动态的产生所需要的原料\n     * @param ingredientFactory\n     */\n    public CheesePizza(PizzaIngredientFactory ingredientFactory) {\n        this.ingredientFactory = ingredientFactory;\n    }\n    void prepare() {\n        System.out.println(\"Preparing \" + name);\n        dough = ingredientFactory.createDough();\n        sauce = ingredientFactory.createSauce();\n        cheese = ingredientFactory.createCheese();\n    }\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20231228214657-muu3grg","Type":"NodeParagraph","Properties":{"id":"20231228214657-muu3grg","updated":"20231228221944"},"Children":[{"Type":"NodeText","Data":"回到 Pizza类"}]},{"ID":"20231228221944-ubfw52u","Type":"NodeParagraph","Properties":{"id":"20231228221944-ubfw52u","updated":"20231228221944"}}]}