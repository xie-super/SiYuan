{"ID":"20240201213638-rdkwu8o","Spec":"1","Type":"NodeDocument","Properties":{"id":"20240201213638-rdkwu8o","title":"http\u0026amp;rpc","updated":"20240201213638"},"Children":[{"ID":"20240201213639-lz440av","Type":"NodeThematicBreak","Properties":{"id":"20240201213639-lz440av","updated":"20240201213639"}},{"ID":"20240201213640-8pp5igy","Type":"NodeParagraph","Properties":{"id":"20240201213640-8pp5igy","updated":"20240201213640"},"Children":[{"Type":"NodeText","Data":"title: 有了 HTTP 协议，为什么还要有 RPC ？"},{"Type":"NodeSoftBreak","Data":"\n","Properties":{"id":""}},{"Type":"NodeText","Data":"category: 分布式"},{"Type":"NodeSoftBreak","Data":"\n","Properties":{"id":""}},{"Type":"NodeText","Data":"tag:"}]},{"ID":"20240201213641-rw23ouy","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"MarkerOffset":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213641-rw23ouy","updated":"20240201213641"},"Children":[{"ID":"20240201213642-sqsm53f","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"MarkerOffset":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213642-sqsm53f","updated":"20240201213642"},"Children":[{"ID":"20240201213643-rtpjxvt","Type":"NodeParagraph","Properties":{"id":"20240201213643-rtpjxvt","updated":"20240201213643"},"Children":[{"Type":"NodeText","Data":"rpc"}]}]}]},{"ID":"20240201213644-v3tmmkz","Type":"NodeThematicBreak","Properties":{"id":"20240201213644-v3tmmkz","updated":"20240201213644"}},{"ID":"20240201213645-q3ifg4g","Type":"NodeBlockquote","Properties":{"id":"20240201213645-q3ifg4g","updated":"20240201213645"},"Children":[{"Type":"NodeBlockquoteMarker","Data":"\u003e ","Properties":{"id":""}},{"ID":"20240201213646-a4xwnxo","Type":"NodeParagraph","Properties":{"id":"20240201213646-a4xwnxo","updated":"20240201213646"},"Children":[{"Type":"NodeText","Data":"本文来自"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://juejin.cn/user/4001878057422087","TextMarkTextContent":"小白 debug"},{"Type":"NodeText","Data":"投稿，原文："},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://juejin.cn/post/7121882245605883934","TextMarkTextContent":"https://juejin.cn/post/7121882245605883934"},{"Type":"NodeText","Data":" 。"}]}]},{"ID":"20240201213647-m1rlnou","Type":"NodeParagraph","Properties":{"id":"20240201213647-m1rlnou","updated":"20240201213647"},"Children":[{"Type":"NodeText","Data":"我想起了我刚工作的时候，第一次接触 RPC 协议，当时就很懵，我 HTTP 协议用的好好的，为什么还要用 RPC 协议？"}]},{"ID":"20240201213648-wtgqhm5","Type":"NodeParagraph","Properties":{"id":"20240201213648-wtgqhm5","updated":"20240201213648"},"Children":[{"Type":"NodeText","Data":"于是就到网上去搜。"}]},{"ID":"20240201213649-1az7i6t","Type":"NodeParagraph","Properties":{"id":"20240201213649-1az7i6t","updated":"20240201213649"},"Children":[{"Type":"NodeText","Data":"不少解释显得非常官方，我相信大家在各种平台上也都看到过，解释了又好像没解释，都在"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"用一个我们不认识的概念去解释另外一个我们不认识的概念"},{"Type":"NodeText","Data":"，懂的人不需要看，不懂的人看了还是不懂。"}]},{"ID":"20240201213650-zqsor4m","Type":"NodeParagraph","Properties":{"id":"20240201213650-zqsor4m","updated":"20240201213650"},"Children":[{"Type":"NodeText","Data":"这种看了，又好像没看的感觉，云里雾里的很难受，"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"我懂"},{"Type":"NodeText","Data":"。"}]},{"ID":"20240201213651-poh2wzn","Type":"NodeParagraph","Properties":{"id":"20240201213651-poh2wzn","updated":"20240201213651"},"Children":[{"Type":"NodeText","Data":"为了避免大家有强烈的"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"审丑疲劳"},{"Type":"NodeText","Data":"，今天我们来尝试重新换个方式讲一讲。"}]},{"ID":"20240201213652-b7hk2qf","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240201213652-b7hk2qf","updated":"20240201213652"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"从 TCP 聊起"}]},{"ID":"20240201213653-odx94rq","Type":"NodeParagraph","Properties":{"id":"20240201213653-odx94rq","updated":"20240201213653"},"Children":[{"Type":"NodeText","Data":"作为一个程序员，假设我们需要在 A 电脑的进程发一段数据到 B 电脑的进程，我们一般会在代码里使用 socket 进行编程。"}]},{"ID":"20240201213654-ngdho2k","Type":"NodeParagraph","Properties":{"id":"20240201213654-ngdho2k","updated":"20240201213654"},"Children":[{"Type":"NodeText","Data":"这时候，我们可选项一般也就"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"TCP 和 UDP 二选一。TCP 可靠，UDP 不可靠。"},{"Type":"NodeText","Data":" 除非是马总这种神级程序员（早期 QQ 大量使用 UDP），否则，只要稍微对可靠性有些要求，普通人一般无脑选 TCP 就对了。"}]},{"ID":"20240201213655-t1d1y7m","Type":"NodeParagraph","Properties":{"id":"20240201213655-t1d1y7m","updated":"20240201213655"},"Children":[{"Type":"NodeText","Data":"类似下面这样。"}]},{"ID":"20240201213656-eb9tvil","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"aW5p","CodeBlockCloseFence":"YGBg","Properties":{"id":"20240201213656-eb9tvil","updated":"20240201213656"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"aW5p","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"fd = socket(AF_INET,SOCK_STREAM,0);\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20240201213657-wndx7vt","Type":"NodeParagraph","Properties":{"id":"20240201213657-wndx7vt","updated":"20240201213657"},"Children":[{"Type":"NodeText","Data":"其中"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"SOCK_STREAM"},{"Type":"NodeText","Data":"，是指使用"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"字节流"},{"Type":"NodeText","Data":"传输数据，说白了就是"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"TCP 协议"},{"Type":"NodeText","Data":"。"}]},{"ID":"20240201213658-bdx0r0k","Type":"NodeParagraph","Properties":{"id":"20240201213658-bdx0r0k","updated":"20240201213658"},"Children":[{"Type":"NodeText","Data":"在定义了 socket 之后，我们就可以愉快的对这个 socket 进行操作，比如用"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"bind()"},{"Type":"NodeText","Data":"绑定 IP 端口，用"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"connect()"},{"Type":"NodeText","Data":"发起建连。"}]},{"ID":"20240201213659-dk5dyy0","Type":"NodeParagraph","Properties":{"id":"20240201213659-dk5dyy0","updated":"20240201213659"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"握手建立连接流程","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"https://oss.javaguide.cn/github/javaguide/distributed-system/rpc/f410977cda814d32b0eff3645c385a8a~tplv-k3u1fbpfcp-zoom-in-crop-mark:3024:0:0:0.awebp.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201213660-ldpzg82","Type":"NodeParagraph","Properties":{"id":"20240201213660-ldpzg82","updated":"20240201213660"},"Children":[{"Type":"NodeText","Data":"在连接建立之后，我们就可以使用"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"send()"},{"Type":"NodeText","Data":"发送数据，"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"recv()"},{"Type":"NodeText","Data":"接收数据。"}]},{"ID":"20240201213661-vhh6tma","Type":"NodeParagraph","Properties":{"id":"20240201213661-vhh6tma","updated":"20240201213661"},"Children":[{"Type":"NodeText","Data":"光这样一个纯裸的 TCP 连接，就可以做到收发数据了，那是不是就够了？"}]},{"ID":"20240201213662-cb5qxqc","Type":"NodeParagraph","Properties":{"id":"20240201213662-cb5qxqc","updated":"20240201213662"},"Children":[{"Type":"NodeText","Data":"不行，这么用会有问题。"}]},{"ID":"20240201213663-ekjdq7q","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240201213663-ekjdq7q","updated":"20240201213663"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"使用纯裸 TCP 会有什么问题"}]},{"ID":"20240201213664-mfbjka9","Type":"NodeParagraph","Properties":{"id":"20240201213664-mfbjka9","updated":"20240201213664"},"Children":[{"Type":"NodeText","Data":"八股文常背，TCP 是有三个特点，"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"面向连接"},{"Type":"NodeText","Data":"、"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"可靠"},{"Type":"NodeText","Data":"、基于"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"字节流"},{"Type":"NodeText","Data":"。"}]},{"ID":"20240201213665-333b2ul","Type":"NodeParagraph","Properties":{"id":"20240201213665-333b2ul","updated":"20240201213665"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"TCP是什么","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"https://oss.javaguide.cn/github/javaguide/distributed-system/rpc/acb4508111cb47d8a3df6734d04818bc~tplv-k3u1fbpfcp-zoom-in-crop-mark:3024:0:0:0.awebp.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201213666-x2qoius","Type":"NodeParagraph","Properties":{"id":"20240201213666-x2qoius","updated":"20240201213666"},"Children":[{"Type":"NodeText","Data":"这三个特点真的概括的 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"非常精辟"},{"Type":"NodeText","Data":" ，这个八股文我们没白背。"}]},{"ID":"20240201213667-globylk","Type":"NodeParagraph","Properties":{"id":"20240201213667-globylk","updated":"20240201213667"},"Children":[{"Type":"NodeText","Data":"每个特点展开都能聊一篇文章，而今天我们需要关注的是 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"基于字节流"},{"Type":"NodeText","Data":" 这一点。"}]},{"ID":"20240201213668-na1ztm0","Type":"NodeParagraph","Properties":{"id":"20240201213668-na1ztm0","updated":"20240201213668"},"Children":[{"Type":"NodeText","Data":"字节流可以理解为一个双向的通道里流淌的二进制数据，也就是 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"01 串"},{"Type":"NodeText","Data":" 。纯裸 TCP 收发的这些 01 串之间是 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"没有任何边界"},{"Type":"NodeText","Data":" 的，你根本不知道到哪个地方才算一条完整消息。"}]},{"ID":"20240201213669-5qn9n2e","Type":"NodeParagraph","Properties":{"id":"20240201213669-5qn9n2e","updated":"20240201213669"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"01二进制字节流","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"https://oss.javaguide.cn/github/javaguide/distributed-system/rpc/b82d4fcdd0c4491e979856c93c1750d7~tplv-k3u1fbpfcp-zoom-in-crop-mark:3024:0:0:0.awebp.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201213670-net93hg","Type":"NodeParagraph","Properties":{"id":"20240201213670-net93hg","updated":"20240201213670"},"Children":[{"Type":"NodeText","Data":"正因为这个没有任何边界的特点，所以当我们选择使用 TCP 发送 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"\u0026quot;夏洛\u0026quot;和\u0026quot;特烦恼\u0026quot;"},{"Type":"NodeText","Data":" 的时候，接收端收到的就是 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"\u0026quot;夏洛特烦恼\u0026quot;"},{"Type":"NodeText","Data":" ，这时候接收端没发区分你是想要表达 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"\u0026quot;夏洛\u0026quot;+\u0026quot;特烦恼\u0026quot;"},{"Type":"NodeText","Data":" 还是 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"\u0026quot;夏洛特\u0026quot;+\u0026quot;烦恼\u0026quot;"},{"Type":"NodeText","Data":" 。"}]},{"ID":"20240201213671-hhnvfk7","Type":"NodeParagraph","Properties":{"id":"20240201213671-hhnvfk7","updated":"20240201213671"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"消息对比","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"https://oss.javaguide.cn/github/javaguide/distributed-system/rpc/4e120d0f1152419585565f693e744a3a~tplv-k3u1fbpfcp-zoom-in-crop-mark:3024:0:0:0.awebp.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201213672-6xauncj","Type":"NodeParagraph","Properties":{"id":"20240201213672-6xauncj","updated":"20240201213672"},"Children":[{"Type":"NodeText","Data":"这就是所谓的 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"粘包问题"},{"Type":"NodeText","Data":"，之前也写过一篇专门的"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://mp.weixin.qq.com/s/0-YBxU1cSbDdzcZEZjmQYA","TextMarkTextContent":"文章"},{"Type":"NodeText","Data":"聊过这个问题。"}]},{"ID":"20240201213673-vhsxq47","Type":"NodeParagraph","Properties":{"id":"20240201213673-vhsxq47","updated":"20240201213673"},"Children":[{"Type":"NodeText","Data":"说这个的目的是为了告诉大家，纯裸 TCP 是不能直接拿来用的，你需要在这个基础上加入一些 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"自定义的规则"},{"Type":"NodeText","Data":" ，用于区分 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"消息边界"},{"Type":"NodeText","Data":" 。"}]},{"ID":"20240201213674-grg8fbm","Type":"NodeParagraph","Properties":{"id":"20240201213674-grg8fbm","updated":"20240201213674"},"Children":[{"Type":"NodeText","Data":"于是我们会把每条要发送的数据都包装一下，比如加入 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"消息头"},{"Type":"NodeText","Data":" ，消息头里写清楚一个完整的包长度是多少，根据这个长度可以继续接收数据，截取出来后它们就是我们真正要传输的 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"消息体"},{"Type":"NodeText","Data":" 。"}]},{"ID":"20240201213675-41ah2bd","Type":"NodeParagraph","Properties":{"id":"20240201213675-41ah2bd","updated":"20240201213675"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"消息边界长度标志","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"https://oss.javaguide.cn/github/javaguide/distributed-system/rpc/cb29659d4907446e9f70551c44c6369f~tplv-k3u1fbpfcp-zoom-in-crop-mark:3024:0:0:0.awebp.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201213676-szn69oa","Type":"NodeParagraph","Properties":{"id":"20240201213676-szn69oa","updated":"20240201213676"},"Children":[{"Type":"NodeText","Data":"而这里头提到的 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"消息头"},{"Type":"NodeText","Data":" ，还可以放各种东西，比如消息体是否被压缩过和消息体格式之类的，只要上下游都约定好了，互相都认就可以了，这就是所谓的 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"协议。"}]},{"ID":"20240201213677-kn41oou","Type":"NodeParagraph","Properties":{"id":"20240201213677-kn41oou","updated":"20240201213677"},"Children":[{"Type":"NodeText","Data":"每个使用 TCP 的项目都可能会定义一套类似这样的协议解析标准，他们可能 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"有区别，但原理都类似"},{"Type":"NodeText","Data":"。"}]},{"ID":"20240201213678-970zgvl","Type":"NodeParagraph","Properties":{"id":"20240201213678-970zgvl","updated":"20240201213678"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"于是基于 TCP，就衍生了非常多的协议，比如 HTTP 和 RPC。"}]},{"ID":"20240201213679-k4qx0ru","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240201213679-k4qx0ru","updated":"20240201213679"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"HTTP 和 RPC"}]},{"ID":"20240201213680-zin24uj","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240201213680-zin24uj","updated":"20240201213680"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"RPC 其实是一种调用方式"}]},{"ID":"20240201213681-e2bl7tr","Type":"NodeParagraph","Properties":{"id":"20240201213681-e2bl7tr","updated":"20240201213681"},"Children":[{"Type":"NodeText","Data":"我们回过头来看网络的分层图。"}]},{"ID":"20240201213682-jbo6puv","Type":"NodeParagraph","Properties":{"id":"20240201213682-jbo6puv","updated":"20240201213682"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"四层网络协议","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"https://oss.javaguide.cn/github/javaguide/distributed-system/rpc/04b603b5bd2443209233deea87816161~tplv-k3u1fbpfcp-zoom-in-crop-mark:3024:0:0:0.awebp.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201213683-xhnsd02","Type":"NodeParagraph","Properties":{"id":"20240201213683-xhnsd02","updated":"20240201213683"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"TCP 是传输层的协议"},{"Type":"NodeText","Data":" ，而基于 TCP 造出来的 HTTP 和各类 RPC 协议，它们都只是定义了不同消息格式的 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"应用层协议"},{"Type":"NodeText","Data":" 而已。"}]},{"ID":"20240201213684-afe5baa","Type":"NodeParagraph","Properties":{"id":"20240201213684-afe5baa","updated":"20240201213684"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"HTTP"},{"Type":"NodeText","Data":"（"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"H"},{"Type":"NodeText","Data":"yper "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"T"},{"Type":"NodeText","Data":"ext "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"T"},{"Type":"NodeText","Data":"ransfer "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"P"},{"Type":"NodeText","Data":"rotocol）协议又叫做 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"超文本传输协议"},{"Type":"NodeText","Data":" 。我们用的比较多，平时上网在浏览器上敲个网址就能访问网页，这里用到的就是 HTTP 协议。"}]},{"ID":"20240201213685-iw557ay","Type":"NodeParagraph","Properties":{"id":"20240201213685-iw557ay","updated":"20240201213685"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"HTTP调用","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"https://oss.javaguide.cn/github/javaguide/distributed-system/rpc/8f07a5d1c72a4c4fa811c6c3b5aadd3d~tplv-k3u1fbpfcp-zoom-in-crop-mark:3024:0:0:0.awebp.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201213686-4xjgadx","Type":"NodeParagraph","Properties":{"id":"20240201213686-4xjgadx","updated":"20240201213686"},"Children":[{"Type":"NodeText","Data":"而 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"RPC"},{"Type":"NodeText","Data":"（"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"R"},{"Type":"NodeText","Data":"emote "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"P"},{"Type":"NodeText","Data":"rocedure "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"C"},{"Type":"NodeText","Data":"all）又叫做 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"远程过程调用"},{"Type":"NodeText","Data":"，它本身并不是一个具体的协议，而是一种 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"调用方式"},{"Type":"NodeText","Data":" 。"}]},{"ID":"20240201213687-sye6je5","Type":"NodeParagraph","Properties":{"id":"20240201213687-sye6je5","updated":"20240201213687"},"Children":[{"Type":"NodeText","Data":"举个例子，我们平时调用一个 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"本地方法"},{"Type":"NodeText","Data":" 就像下面这样。"}]},{"ID":"20240201213688-sng2w5m","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"aW5p","CodeBlockCloseFence":"YGBg","Properties":{"id":"20240201213688-sng2w5m","updated":"20240201213688"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"aW5p","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":" res = localFunc(req)\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20240201213689-krkm8bb","Type":"NodeParagraph","Properties":{"id":"20240201213689-krkm8bb","updated":"20240201213689"},"Children":[{"Type":"NodeText","Data":"如果现在这不是个本地方法，而是个"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"远端服务器"},{"Type":"NodeText","Data":"暴露出来的一个方法"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"remoteFunc"},{"Type":"NodeText","Data":"，如果我们还能像调用本地方法那样去调用它，这样就可以"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"屏蔽掉一些网络细节"},{"Type":"NodeText","Data":"，用起来更方便，岂不美哉？"}]},{"ID":"20240201213690-qzyxsdi","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"aW5p","CodeBlockCloseFence":"YGBg","Properties":{"id":"20240201213690-qzyxsdi","updated":"20240201213690"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"aW5p","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"res = remoteFunc(req)\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20240201213691-9swibic","Type":"NodeParagraph","Properties":{"id":"20240201213691-9swibic","updated":"20240201213691"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"RPC可以像调用本地方法那样调用远端方法","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"https://oss.javaguide.cn/github/javaguide/distributed-system/rpc/761da6c30af244e19b1c44075d8b4254~tplv-k3u1fbpfcp-zoom-in-crop-mark:3024:0:0:0.awebp.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201213692-shh5px9","Type":"NodeParagraph","Properties":{"id":"20240201213692-shh5px9","updated":"20240201213692"},"Children":[{"Type":"NodeText","Data":"基于这个思路，大佬们造出了非常多款式的 RPC 协议，比如比较有名的"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"gRPC"},{"Type":"NodeText","Data":"，"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"thrift"},{"Type":"NodeText","Data":"。"}]},{"ID":"20240201213693-s7hy9jm","Type":"NodeParagraph","Properties":{"id":"20240201213693-s7hy9jm","updated":"20240201213693"},"Children":[{"Type":"NodeText","Data":"值得注意的是，虽然大部分 RPC 协议底层使用 TCP，但实际上 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"它们不一定非得使用 TCP，改用 UDP 或者 HTTP，其实也可以做到类似的功能。"}]},{"ID":"20240201213694-ezslmq4","Type":"NodeParagraph","Properties":{"id":"20240201213694-ezslmq4","updated":"20240201213694"},"Children":[{"Type":"NodeText","Data":"到这里，我们回到文章标题的问题。"}]},{"ID":"20240201213695-9uxnv7r","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240201213695-9uxnv7r","updated":"20240201213695"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"那既然有 RPC 了，为什么还要有 HTTP 呢？"}]},{"ID":"20240201213696-z4nw60h","Type":"NodeParagraph","Properties":{"id":"20240201213696-z4nw60h","updated":"20240201213696"},"Children":[{"Type":"NodeText","Data":"其实，TCP 是 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"70 年"},{"Type":"NodeText","Data":" 代出来的协议，而 HTTP 是 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"90 年代"},{"Type":"NodeText","Data":" 才开始流行的。而直接使用裸 TCP 会有问题，可想而知，这中间这么多年有多少自定义的协议，而这里面就有 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"80 年代"},{"Type":"NodeText","Data":" 出来的"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"RPC"},{"Type":"NodeText","Data":"。"}]},{"ID":"20240201213697-pqbmmfz","Type":"NodeParagraph","Properties":{"id":"20240201213697-pqbmmfz","updated":"20240201213697"},"Children":[{"Type":"NodeText","Data":"所以我们该问的不是 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"既然有 HTTP 协议为什么要有 RPC"},{"Type":"NodeText","Data":" ，而是 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"为什么有 RPC 还要有 HTTP 协议?"}]},{"ID":"20240201213698-rabjgfc","Type":"NodeParagraph","Properties":{"id":"20240201213698-rabjgfc","updated":"20240201213698"},"Children":[{"Type":"NodeText","Data":"现在电脑上装的各种联网软件，比如 xx 管家，xx 卫士，它们都作为客户端（Client） 需要跟服务端（Server） 建立连接收发消息，此时都会用到应用层协议，在这种 Client/Server (C/S) 架构下，它们可以使用自家造的 RPC 协议，因为它只管连自己公司的服务器就 ok 了。"}]},{"ID":"20240201213699-u2ips7s","Type":"NodeParagraph","Properties":{"id":"20240201213699-u2ips7s","updated":"20240201213699"},"Children":[{"Type":"NodeText","Data":"但有个软件不同，浏览器（Browser） ，不管是 Chrome 还是 IE，它们不仅要能访问自家公司的"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"服务器（Server）"},{"Type":"NodeText","Data":" ，还需要访问其他公司的网站服务器，因此它们需要有个统一的标准，不然大家没法交流。于是，HTTP 就是那个时代用于统一 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"Browser/Server (B/S)"},{"Type":"NodeText","Data":" 的协议。"}]},{"ID":"20240201213700-6v6fhl7","Type":"NodeParagraph","Properties":{"id":"20240201213700-6v6fhl7","updated":"20240201213700"},"Children":[{"Type":"NodeText","Data":"也就是说在多年以前，"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"HTTP 主要用于 B/S 架构，而 RPC 更多用于 C/S 架构。但现在其实已经没分那么清了，B/S 和 C/S 在慢慢融合。"},{"Type":"NodeText","Data":" 很多软件同时支持多端，比如某度云盘，既要支持"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"网页版"},{"Type":"NodeText","Data":"，还要支持"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"手机端和 PC 端"},{"Type":"NodeText","Data":"，如果通信协议都用 HTTP 的话，那服务器只用同一套就够了。而 RPC 就开始退居幕后，一般用于公司内部集群里，各个微服务之间的通讯。"}]},{"ID":"20240201213701-p6dco7n","Type":"NodeParagraph","Properties":{"id":"20240201213701-p6dco7n","updated":"20240201213701"},"Children":[{"Type":"NodeText","Data":"那这么说的话，"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"都用 HTTP 得了，还用什么 RPC？"}]},{"ID":"20240201213702-m9xby75","Type":"NodeParagraph","Properties":{"id":"20240201213702-m9xby75","updated":"20240201213702"},"Children":[{"Type":"NodeText","Data":"仿佛又回到了文章开头的样子，那这就要从它们之间的区别开始说起。"}]},{"ID":"20240201213703-aghhqpj","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240201213703-aghhqpj","updated":"20240201213703"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"HTTP 和 RPC 有什么区别"}]},{"ID":"20240201213704-g3cqf30","Type":"NodeParagraph","Properties":{"id":"20240201213704-g3cqf30","updated":"20240201213704"},"Children":[{"Type":"NodeText","Data":"我们来看看 RPC 和 HTTP 区别比较明显的几个点。"}]},{"ID":"20240201213705-kh4djae","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20240201213705-kh4djae","updated":"20240201213705"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"服务发现"}]},{"ID":"20240201213706-rqiyhw5","Type":"NodeParagraph","Properties":{"id":"20240201213706-rqiyhw5","updated":"20240201213706"},"Children":[{"Type":"NodeText","Data":"首先要向某个服务器发起请求，你得先建立连接，而建立连接的前提是，你得知道 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"IP 地址和端口"},{"Type":"NodeText","Data":" 。这个找到服务对应的 IP 端口的过程，其实就是 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"服务发现"},{"Type":"NodeText","Data":"。"}]},{"ID":"20240201213707-aie6z81","Type":"NodeParagraph","Properties":{"id":"20240201213707-aie6z81","updated":"20240201213707"},"Children":[{"Type":"NodeText","Data":"在 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"HTTP"},{"Type":"NodeText","Data":" 中，你知道服务的域名，就可以通过 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"DNS 服务"},{"Type":"NodeText","Data":" 去解析得到它背后的 IP 地址，默认 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"80 端口"},{"Type":"NodeText","Data":"。"}]},{"ID":"20240201213708-bi33fbu","Type":"NodeParagraph","Properties":{"id":"20240201213708-bi33fbu","updated":"20240201213708"},"Children":[{"Type":"NodeText","Data":"而 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"RPC"},{"Type":"NodeText","Data":" 的话，就有些区别，一般会有专门的中间服务去保存服务名和 IP 信息，比如 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"Consul、Etcd、Nacos、ZooKeeper，甚至是 Redis"},{"Type":"NodeText","Data":"。想要访问某个服务，就去这些中间服务去获得 IP 和端口信息。由于 DNS 也是服务发现的一种，所以也有基于 DNS 去做服务发现的组件，比如 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"CoreDNS"},{"Type":"NodeText","Data":"。"}]},{"ID":"20240201213709-xwt06r2","Type":"NodeParagraph","Properties":{"id":"20240201213709-xwt06r2","updated":"20240201213709"},"Children":[{"Type":"NodeText","Data":"可以看出服务发现这一块，两者是有些区别，但不太能分高低。"}]},{"ID":"20240201213710-djh46pu","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20240201213710-djh46pu","updated":"20240201213710"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"底层连接形式"}]},{"ID":"20240201213711-gh2rf4e","Type":"NodeParagraph","Properties":{"id":"20240201213711-gh2rf4e","updated":"20240201213711"},"Children":[{"Type":"NodeText","Data":"以主流的 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"HTTP1.1"},{"Type":"NodeText","Data":" 协议为例，其默认在建立底层 TCP 连接之后会一直保持这个连接（"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"keep alive"},{"Type":"NodeText","Data":"），之后的请求和响应都会复用这条连接。"}]},{"ID":"20240201213712-uf5iio0","Type":"NodeParagraph","Properties":{"id":"20240201213712-uf5iio0","updated":"20240201213712"},"Children":[{"Type":"NodeText","Data":"而 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"RPC"},{"Type":"NodeText","Data":" 协议，也跟 HTTP 类似，也是通过建立 TCP 长链接进行数据交互，但不同的地方在于，RPC 协议一般还会再建个 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"连接池"},{"Type":"NodeText","Data":"，在请求量大的时候，建立多条连接放在池内，要发数据的时候就从池里取一条连接出来，用完放回去，下次再复用，可以说非常环保。"}]},{"ID":"20240201213713-f9zjmq2","Type":"NodeParagraph","Properties":{"id":"20240201213713-f9zjmq2","updated":"20240201213713"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"connection_pool","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"https://oss.javaguide.cn/github/javaguide/distributed-system/rpc/72fcad064c9e4103a11f1a2d579f79b2~tplv-k3u1fbpfcp-zoom-in-crop-mark:3024:0:0:0.awebp.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201213714-jw8wuby","Type":"NodeParagraph","Properties":{"id":"20240201213714-jw8wuby","updated":"20240201213714"},"Children":[{"Type":"NodeText","Data":"由于连接池有利于提升网络请求性能，所以不少编程语言的网络库里都会给 HTTP 加个连接池，比如 Go 就是这么干的。"}]},{"ID":"20240201213715-88mrulj","Type":"NodeParagraph","Properties":{"id":"20240201213715-88mrulj","updated":"20240201213715"},"Children":[{"Type":"NodeText","Data":"可以看出这一块两者也没太大区别，所以也不是关键。"}]},{"ID":"20240201213716-sksdyng","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20240201213716-sksdyng","updated":"20240201213716"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"传输的内容"}]},{"ID":"20240201213717-xo8khh0","Type":"NodeParagraph","Properties":{"id":"20240201213717-xo8khh0","updated":"20240201213717"},"Children":[{"Type":"NodeText","Data":"基于 TCP 传输的消息，说到底，无非都是 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"消息头 Header 和消息体 Body。"}]},{"ID":"20240201213718-964z2i1","Type":"NodeParagraph","Properties":{"id":"20240201213718-964z2i1","updated":"20240201213718"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"Header"},{"Type":"NodeText","Data":" 是用于标记一些特殊信息，其中最重要的是 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"消息体长度"},{"Type":"NodeText","Data":"。"}]},{"ID":"20240201213719-mjlclex","Type":"NodeParagraph","Properties":{"id":"20240201213719-mjlclex","updated":"20240201213719"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"Body"},{"Type":"NodeText","Data":" 则是放我们真正需要传输的内容，而这些内容只能是二进制 01 串，毕竟计算机只认识这玩意。所以 TCP 传字符串和数字都问题不大，因为字符串可以转成编码再变成 01 串，而数字本身也能直接转为二进制。但结构体呢，我们得想个办法将它也转为二进制 01 串，这样的方案现在也有很多现成的，比如 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"JSON，Protocol Buffers (Protobuf)"},{"Type":"NodeText","Data":" 。"}]},{"ID":"20240201213720-sb2aj9b","Type":"NodeParagraph","Properties":{"id":"20240201213720-sb2aj9b","updated":"20240201213720"},"Children":[{"Type":"NodeText","Data":"这个将结构体转为二进制数组的过程就叫 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"序列化"},{"Type":"NodeText","Data":" ，反过来将二进制数组复原成结构体的过程叫 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"反序列化"},{"Type":"NodeText","Data":"。"}]},{"ID":"20240201213721-o671mcy","Type":"NodeParagraph","Properties":{"id":"20240201213721-o671mcy","updated":"20240201213721"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"序列化和反序列化","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"https://oss.javaguide.cn/github/javaguide/distributed-system/rpc/d501dfc6f764430188ce61fda0f3e5d9~tplv-k3u1fbpfcp-zoom-in-crop-mark:3024:0:0:0.awebp.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201213722-z23w627","Type":"NodeParagraph","Properties":{"id":"20240201213722-z23w627","updated":"20240201213722"},"Children":[{"Type":"NodeText","Data":"对于主流的 HTTP1.1，虽然它现在叫超文本协议，支持音频视频，但 HTTP 设计 初是用于做网页文本展示的，所以它传的内容以字符串为主。Header 和 Body 都是如此。在 Body 这块，它使用 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"JSON"},{"Type":"NodeText","Data":" 来 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"序列化"},{"Type":"NodeText","Data":" 结构体数据。"}]},{"ID":"20240201213723-rgvnax7","Type":"NodeParagraph","Properties":{"id":"20240201213723-rgvnax7","updated":"20240201213723"},"Children":[{"Type":"NodeText","Data":"我们可以随便截个图直观看下。"}]},{"ID":"20240201213724-2850vri","Type":"NodeParagraph","Properties":{"id":"20240201213724-2850vri","updated":"20240201213724"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"HTTP报文","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"https://oss.javaguide.cn/github/javaguide/distributed-system/rpc/04e8a79ddb7247759df23f1132c01655~tplv-k3u1fbpfcp-zoom-in-crop-mark:3024:0:0:0.awebp.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201213725-fjku4p2","Type":"NodeParagraph","Properties":{"id":"20240201213725-fjku4p2","updated":"20240201213725"},"Children":[{"Type":"NodeText","Data":"可以看到这里面的内容非常多的冗余，显得非常啰嗦。最明显的，像 Header 里的那些信息，其实如果我们约定好头部的第几位是 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"Content-Type"},{"Type":"NodeText","Data":"，就不需要每次都真的把 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"Content-Type"},{"Type":"NodeText","Data":" 这个字段都传过来，类似的情况其实在 Body 的 JSON 结构里也特别明显。"}]},{"ID":"20240201213726-mt4n4ck","Type":"NodeParagraph","Properties":{"id":"20240201213726-mt4n4ck","updated":"20240201213726"},"Children":[{"Type":"NodeText","Data":"而 RPC，因为它定制化程度更高，可以采用体积更小的 Protobuf 或其他序列化协议去保存结构体数据，同时也不需要像 HTTP 那样考虑各种浏览器行为，比如 302 重定向跳转啥的。"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"因此性能也会更好一些，这也是在公司内部微服务中抛弃 HTTP，选择使用 RPC 的最主要原因。"}]},{"ID":"20240201213727-8zppln9","Type":"NodeParagraph","Properties":{"id":"20240201213727-8zppln9","updated":"20240201213727"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"HTTP原理","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"https://oss.javaguide.cn/github/javaguide/distributed-system/rpc/284c26bb7f2848889d1d9b95cf49decb~tplv-k3u1fbpfcp-zoom-in-crop-mark:3024:0:0:0.awebp.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201213728-dkz6d9r","Type":"NodeParagraph","Properties":{"id":"20240201213728-dkz6d9r","updated":"20240201213728"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"RPC原理","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"https://oss.javaguide.cn/github/javaguide/distributed-system/rpc/edb050d383c644e895e505253f1c4d90~tplv-k3u1fbpfcp-zoom-in-crop-mark:3024:0:0:0.awebp.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201213729-8cuqduh","Type":"NodeParagraph","Properties":{"id":"20240201213729-8cuqduh","updated":"20240201213729"},"Children":[{"Type":"NodeText","Data":"当然上面说的 HTTP，其实 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"特指的是现在主流使用的 HTTP1.1"},{"Type":"NodeText","Data":"，"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"HTTP2"},{"Type":"NodeText","Data":"在前者的基础上做了很多改进，所以 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"性能可能比很多 RPC 协议还要好"},{"Type":"NodeText","Data":"，甚至连"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"gRPC"},{"Type":"NodeText","Data":"底层都直接用的"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"HTTP2"},{"Type":"NodeText","Data":"。"}]},{"ID":"20240201213730-51kjv3l","Type":"NodeParagraph","Properties":{"id":"20240201213730-51kjv3l","updated":"20240201213730"},"Children":[{"Type":"NodeText","Data":"那么问题又来了。"}]},{"ID":"20240201213731-r99wft2","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240201213731-r99wft2","updated":"20240201213731"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"为什么既然有了 HTTP2，还要有 RPC 协议？"}]},{"ID":"20240201213732-0d3tw0g","Type":"NodeParagraph","Properties":{"id":"20240201213732-0d3tw0g","updated":"20240201213732"},"Children":[{"Type":"NodeText","Data":"这个是由于 HTTP2 是 2015 年出来的。那时候很多公司内部的 RPC 协议都已经跑了好些年了，基于历史原因，一般也没必要去换了。"}]},{"ID":"20240201213733-hllo1ib","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240201213733-hllo1ib","updated":"20240201213733"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"总结"}]},{"ID":"20240201213734-7mbhg9r","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213734-7mbhg9r","updated":"20240201213734"},"Children":[{"ID":"20240201213735-60u9h7h","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213735-60u9h7h","updated":"20240201213735"},"Children":[{"ID":"20240201213736-enkj54f","Type":"NodeParagraph","Properties":{"id":"20240201213736-enkj54f","updated":"20240201213736"},"Children":[{"Type":"NodeText","Data":"纯裸 TCP 是能收发数据，但它是个无边界的数据流，上层需要定义消息格式用于定义 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"消息边界"},{"Type":"NodeText","Data":" 。于是就有了各种协议，HTTP 和各类 RPC 协议就是在 TCP 之上定义的应用层协议。"}]}]},{"ID":"20240201213737-9o9d9vr","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213737-9o9d9vr","updated":"20240201213737"},"Children":[{"ID":"20240201213738-ia5u586","Type":"NodeParagraph","Properties":{"id":"20240201213738-ia5u586","updated":"20240201213738"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"RPC 本质上不算是协议，而是一种调用方式"},{"Type":"NodeText","Data":"，而像 gRPC 和 Thrift 这样的具体实现，才是协议，它们是实现了 RPC 调用的协议。目的是希望程序员能像调用本地方法那样去调用远端的服务方法。同时 RPC 有很多种实现方式，"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"不一定非得基于 TCP 协议"},{"Type":"NodeText","Data":"。"}]}]},{"ID":"20240201213739-e6yvn0r","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213739-e6yvn0r","updated":"20240201213739"},"Children":[{"ID":"20240201213740-tmntk0u","Type":"NodeParagraph","Properties":{"id":"20240201213740-tmntk0u","updated":"20240201213740"},"Children":[{"Type":"NodeText","Data":"从发展历史来说，"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"HTTP 主要用于 B/S 架构，而 RPC 更多用于 C/S 架构。但现在其实已经没分那么清了，B/S 和 C/S 在慢慢融合。"},{"Type":"NodeText","Data":" 很多软件同时支持多端，所以对外一般用 HTTP 协议，而内部集群的微服务之间则采用 RPC 协议进行通讯。"}]}]},{"ID":"20240201213741-5ws4pqd","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213741-5ws4pqd","updated":"20240201213741"},"Children":[{"ID":"20240201213742-u86fiul","Type":"NodeParagraph","Properties":{"id":"20240201213742-u86fiul","updated":"20240201213742"},"Children":[{"Type":"NodeText","Data":"RPC 其实比 HTTP 出现的要早，且比目前主流的 HTTP1.1 性能要更好，所以大部分公司内部都还在使用 RPC。"}]}]},{"ID":"20240201213743-f3xy76u","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213743-f3xy76u","updated":"20240201213743"},"Children":[{"ID":"20240201213744-okhfirx","Type":"NodeParagraph","Properties":{"id":"20240201213744-okhfirx","updated":"20240201213744"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"HTTP2.0"},{"Type":"NodeText","Data":" 在 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"HTTP1.1"},{"Type":"NodeText","Data":" 的基础上做了优化，性能可能比很多 RPC 协议都要好，但由于是这几年才出来的，所以也不太可能取代掉 RPC。"}]}]}]},{"ID":"20240201213745-vg05szf","Type":"NodeHTMLBlock","Data":"\u003cdiv\u003e\n\u003c!-- @include: @article-footer.snippet.md --\u003e\n\u003c/div\u003e","HtmlBlockType":2,"Properties":{"id":"20240201213745-vg05szf","updated":"20240201213745"}}]}