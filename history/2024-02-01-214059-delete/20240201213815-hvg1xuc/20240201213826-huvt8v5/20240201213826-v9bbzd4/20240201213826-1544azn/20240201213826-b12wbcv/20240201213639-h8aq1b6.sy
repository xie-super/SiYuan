{"ID":"20240201213639-h8aq1b6","Spec":"1","Type":"NodeDocument","Properties":{"id":"20240201213639-h8aq1b6","title":"rpc-intro","updated":"20240201213639"},"Children":[{"ID":"20240201213640-opkyymu","Type":"NodeThematicBreak","Properties":{"id":"20240201213640-opkyymu","updated":"20240201213640"}},{"ID":"20240201213641-kpntppg","Type":"NodeParagraph","Properties":{"id":"20240201213641-kpntppg","updated":"20240201213641"},"Children":[{"Type":"NodeText","Data":"title: RPC基础知识总结"},{"Type":"NodeSoftBreak","Data":"\n","Properties":{"id":""}},{"Type":"NodeText","Data":"category: 分布式"},{"Type":"NodeSoftBreak","Data":"\n","Properties":{"id":""}},{"Type":"NodeText","Data":"tag:"}]},{"ID":"20240201213642-hzkaw7c","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"MarkerOffset":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213642-hzkaw7c","updated":"20240201213642"},"Children":[{"ID":"20240201213643-zc1z715","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"MarkerOffset":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213643-zc1z715","updated":"20240201213643"},"Children":[{"ID":"20240201213644-yldkyh2","Type":"NodeParagraph","Properties":{"id":"20240201213644-yldkyh2","updated":"20240201213644"},"Children":[{"Type":"NodeText","Data":"rpc"}]}]}]},{"ID":"20240201213645-can3huw","Type":"NodeThematicBreak","Properties":{"id":"20240201213645-can3huw","updated":"20240201213645"}},{"ID":"20240201213646-ivva88z","Type":"NodeParagraph","Properties":{"id":"20240201213646-ivva88z","updated":"20240201213646"},"Children":[{"Type":"NodeText","Data":"这篇文章会简单介绍一下 RPC 相关的基础概念。"}]},{"ID":"20240201213647-crlfvyu","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240201213647-crlfvyu","updated":"20240201213647"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"RPC 是什么?"}]},{"ID":"20240201213648-k2t5q6g","Type":"NodeParagraph","Properties":{"id":"20240201213648-k2t5q6g","updated":"20240201213648"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"RPC（Remote Procedure Call）"},{"Type":"NodeText","Data":" 即远程过程调用，通过名字我们就能看出 RPC 关注的是远程调用而非本地调用。"}]},{"ID":"20240201213649-g04femy","Type":"NodeParagraph","Properties":{"id":"20240201213649-g04femy","updated":"20240201213649"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"为什么要 RPC ？"},{"Type":"NodeText","Data":" 因为，两个不同的服务器上的服务提供的方法不在一个内存空间，所以，需要通过网络编程才能传递方法调用所需要的参数。并且，方法调用的结果也需要通过网络编程来接收。但是，如果我们自己手动网络编程来实现这个调用过程的话工作量是非常大的，因为，我们需要考虑底层传输方式（TCP 还是 UDP）、序列化方式等等方面。"}]},{"ID":"20240201213650-jrooek0","Type":"NodeParagraph","Properties":{"id":"20240201213650-jrooek0","updated":"20240201213650"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"RPC 能帮助我们做什么呢？"},{"Type":"NodeText","Data":" 简单来说，通过 RPC 可以帮助我们调用远程计算机上某个服务的方法，这个过程就像调用本地方法一样简单。并且！我们不需要了解底层网络编程的具体细节。"}]},{"ID":"20240201213651-rupzmew","Type":"NodeParagraph","Properties":{"id":"20240201213651-rupzmew","updated":"20240201213651"},"Children":[{"Type":"NodeText","Data":"举个例子：两个不同的服务 A、B 部署在两台不同的机器上，服务 A 如果想要调用服务 B 中的某个方法的话就可以通过 RPC 来做。"}]},{"ID":"20240201213652-up0t01x","Type":"NodeParagraph","Properties":{"id":"20240201213652-up0t01x","updated":"20240201213652"},"Children":[{"Type":"NodeText","Data":"一言蔽之："},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"RPC 的出现就是为了让你调用远程方法像调用本地方法一样简单。"}]},{"ID":"20240201213653-agrek0u","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240201213653-agrek0u","updated":"20240201213653"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"RPC 的原理是什么?"}]},{"ID":"20240201213654-6zieayf","Type":"NodeParagraph","Properties":{"id":"20240201213654-6zieayf","updated":"20240201213654"},"Children":[{"Type":"NodeText","Data":"为了能够帮助小伙伴们理解 RPC 原理，我们可以将整个 RPC 的 核心功能看作是下面 👇 5 个部分实现的："}]},{"ID":"20240201213655-jd6wkaq","Type":"NodeList","ListData":{"Typ":1,"Tight":true,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20240201213655-jd6wkaq","updated":"20240201213655"},"Children":[{"ID":"20240201213656-ybur4nr","Type":"NodeListItem","Data":"1","ListData":{"Typ":1,"Tight":true,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20240201213656-ybur4nr","updated":"20240201213656"},"Children":[{"ID":"20240201213657-1qoxn23","Type":"NodeParagraph","Properties":{"id":"20240201213657-1qoxn23","updated":"20240201213657"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"客户端（服务消费端）"},{"Type":"NodeText","Data":"：调用远程方法的一端。"}]}]},{"ID":"20240201213658-bpcl8jo","Type":"NodeListItem","Data":"1","ListData":{"Typ":1,"Tight":true,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":2},"Properties":{"id":"20240201213658-bpcl8jo","updated":"20240201213658"},"Children":[{"ID":"20240201213659-jpze3fa","Type":"NodeParagraph","Properties":{"id":"20240201213659-jpze3fa","updated":"20240201213659"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"客户端 Stub（桩）"},{"Type":"NodeText","Data":"：这其实就是一代理类。代理类主要做的事情很简单，就是把你调用方法、类、方法参数等信息传递到服务端。"}]}]},{"ID":"20240201213660-fpeia7x","Type":"NodeListItem","Data":"1","ListData":{"Typ":1,"Tight":true,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":3},"Properties":{"id":"20240201213660-fpeia7x","updated":"20240201213660"},"Children":[{"ID":"20240201213661-3pqu3gm","Type":"NodeParagraph","Properties":{"id":"20240201213661-3pqu3gm","updated":"20240201213661"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"网络传输"},{"Type":"NodeText","Data":"：网络传输就是你要把你调用的方法的信息比如说参数啊这些东西传输到服务端，然后服务端执行完之后再把返回结果通过网络传输给你传输回来。网络传输的实现方式有很多种比如最近基本的 Socket 或者性能以及封装更加优秀的 Netty（推荐）。"}]}]},{"ID":"20240201213662-kvgyf62","Type":"NodeListItem","Data":"1","ListData":{"Typ":1,"Tight":true,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":4},"Properties":{"id":"20240201213662-kvgyf62","updated":"20240201213662"},"Children":[{"ID":"20240201213663-j8eoxg9","Type":"NodeParagraph","Properties":{"id":"20240201213663-j8eoxg9","updated":"20240201213663"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"服务端 Stub（桩）"},{"Type":"NodeText","Data":"：这个桩就不是代理类了。我觉得理解为桩实际不太好，大家注意一下就好。这里的服务端 Stub 实际指的就是接收到客户端执行方法的请求后，去执行对应的方法然后返回结果给客户端的类。"}]}]},{"ID":"20240201213664-e4lbzn0","Type":"NodeListItem","Data":"1","ListData":{"Typ":1,"Tight":true,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":5},"Properties":{"id":"20240201213664-e4lbzn0","updated":"20240201213664"},"Children":[{"ID":"20240201213665-9180drg","Type":"NodeParagraph","Properties":{"id":"20240201213665-9180drg","updated":"20240201213665"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"服务端（服务提供端）"},{"Type":"NodeText","Data":"：提供远程方法的一端。"}]}]}]},{"ID":"20240201213666-zn4jaku","Type":"NodeParagraph","Properties":{"id":"20240201213666-zn4jaku","updated":"20240201213666"},"Children":[{"Type":"NodeText","Data":"具体原理图如下，后面我会串起来将整个 RPC 的过程给大家说一下。"}]},{"ID":"20240201213667-ejkxkk6","Type":"NodeParagraph","Properties":{"id":"20240201213667-ejkxkk6","updated":"20240201213667"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"RPC原理图","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"https://oss.javaguide.cn/github/javaguide/distributed-system/rpc/37345851.jpg","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201213668-1dhmrfm","Type":"NodeList","ListData":{"Typ":1,"Tight":true,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20240201213668-1dhmrfm","updated":"20240201213668"},"Children":[{"ID":"20240201213669-kb7bwmm","Type":"NodeListItem","Data":"1","ListData":{"Typ":1,"Tight":true,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20240201213669-kb7bwmm","updated":"20240201213669"},"Children":[{"ID":"20240201213670-pfzjynl","Type":"NodeParagraph","Properties":{"id":"20240201213670-pfzjynl","updated":"20240201213670"},"Children":[{"Type":"NodeText","Data":"服务消费端（client）以本地调用的方式调用远程服务；"}]}]},{"ID":"20240201213671-p1y8gii","Type":"NodeListItem","Data":"1","ListData":{"Typ":1,"Tight":true,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":2},"Properties":{"id":"20240201213671-p1y8gii","updated":"20240201213671"},"Children":[{"ID":"20240201213672-v4v6nq8","Type":"NodeParagraph","Properties":{"id":"20240201213672-v4v6nq8","updated":"20240201213672"},"Children":[{"Type":"NodeText","Data":"客户端 Stub（client stub） 接收到调用后负责将方法、参数等组装成能够进行网络传输的消息体（序列化）："},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"RpcRequest"},{"Type":"NodeText","Data":"；"}]}]},{"ID":"20240201213673-lz85up5","Type":"NodeListItem","Data":"1","ListData":{"Typ":1,"Tight":true,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":3},"Properties":{"id":"20240201213673-lz85up5","updated":"20240201213673"},"Children":[{"ID":"20240201213674-x9xoexf","Type":"NodeParagraph","Properties":{"id":"20240201213674-x9xoexf","updated":"20240201213674"},"Children":[{"Type":"NodeText","Data":"客户端 Stub（client stub） 找到远程服务的地址，并将消息发送到服务提供端；"}]}]},{"ID":"20240201213675-hphitu8","Type":"NodeListItem","Data":"1","ListData":{"Typ":1,"Tight":true,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":4},"Properties":{"id":"20240201213675-hphitu8","updated":"20240201213675"},"Children":[{"ID":"20240201213676-30jakmi","Type":"NodeParagraph","Properties":{"id":"20240201213676-30jakmi","updated":"20240201213676"},"Children":[{"Type":"NodeText","Data":"服务端 Stub（桩）收到消息将消息反序列化为 Java 对象: "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"RpcRequest"},{"Type":"NodeText","Data":"；"}]}]},{"ID":"20240201213677-pspj4k6","Type":"NodeListItem","Data":"1","ListData":{"Typ":1,"Tight":true,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":5},"Properties":{"id":"20240201213677-pspj4k6","updated":"20240201213677"},"Children":[{"ID":"20240201213678-bdu1e1r","Type":"NodeParagraph","Properties":{"id":"20240201213678-bdu1e1r","updated":"20240201213678"},"Children":[{"Type":"NodeText","Data":"服务端 Stub（桩）根据"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"RpcRequest"},{"Type":"NodeText","Data":"中的类、方法、方法参数等信息调用本地的方法；"}]}]},{"ID":"20240201213679-zr005qo","Type":"NodeListItem","Data":"1","ListData":{"Typ":1,"Tight":true,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":6},"Properties":{"id":"20240201213679-zr005qo","updated":"20240201213679"},"Children":[{"ID":"20240201213680-7lphads","Type":"NodeParagraph","Properties":{"id":"20240201213680-7lphads","updated":"20240201213680"},"Children":[{"Type":"NodeText","Data":"服务端 Stub（桩）得到方法执行结果并将组装成能够进行网络传输的消息体："},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"RpcResponse"},{"Type":"NodeText","Data":"（序列化）发送至消费方；"}]}]},{"ID":"20240201213681-fsqxorx","Type":"NodeListItem","Data":"1","ListData":{"Typ":1,"Tight":true,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":7},"Properties":{"id":"20240201213681-fsqxorx","updated":"20240201213681"},"Children":[{"ID":"20240201213682-vd8hsdd","Type":"NodeParagraph","Properties":{"id":"20240201213682-vd8hsdd","updated":"20240201213682"},"Children":[{"Type":"NodeText","Data":"客户端 Stub（client stub）接收到消息并将消息反序列化为 Java 对象:"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"RpcResponse"},{"Type":"NodeText","Data":" ，这样也就得到了最终结果。over!"}]}]}]},{"ID":"20240201213683-a8t8lwf","Type":"NodeParagraph","Properties":{"id":"20240201213683-a8t8lwf","updated":"20240201213683"},"Children":[{"Type":"NodeText","Data":"相信小伙伴们看完上面的讲解之后，已经了解了 RPC 的原理。"}]},{"ID":"20240201213684-n38twqf","Type":"NodeParagraph","Properties":{"id":"20240201213684-n38twqf","updated":"20240201213684"},"Children":[{"Type":"NodeText","Data":"虽然篇幅不多，但是基本把 RPC 框架的核心原理讲清楚了！另外，对于上面的技术细节，我会在后面的章节介绍到。"}]},{"ID":"20240201213685-u1emtig","Type":"NodeParagraph","Properties":{"id":"20240201213685-u1emtig","updated":"20240201213685"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"最后，对于 RPC 的原理，希望小伙伴不单单要理解，还要能够自己画出来并且能够给别人讲出来。因为，在面试中这个问题在面试官问到 RPC 相关内容的时候基本都会碰到。"}]},{"ID":"20240201213686-xzf91kw","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240201213686-xzf91kw","updated":"20240201213686"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"有哪些常见的 RPC 框架？"}]},{"ID":"20240201213687-9gwa3mz","Type":"NodeParagraph","Properties":{"id":"20240201213687-9gwa3mz","updated":"20240201213687"},"Children":[{"Type":"NodeText","Data":"我们这里说的 RPC 框架指的是可以让客户端直接调用服务端方法，就像调用本地方法一样简单的框架，比如我下面介绍的 Dubbo、Motan、gRPC 这些。 如果需要和 HTTP 协议打交道，解析和封装 HTTP 请求和响应。这类框架并不能算是“RPC 框架”，比如 Feign。"}]},{"ID":"20240201213688-el2bk0y","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240201213688-el2bk0y","updated":"20240201213688"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"Dubbo"}]},{"ID":"20240201213689-w0feg1u","Type":"NodeParagraph","Properties":{"id":"20240201213689-w0feg1u","updated":"20240201213689"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"https://oss.javaguide.cn/github/javaguide/distributed-system/rpc/image-20220716111053081.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201213690-fdd2ql6","Type":"NodeParagraph","Properties":{"id":"20240201213690-fdd2ql6","updated":"20240201213690"},"Children":[{"Type":"NodeText","Data":"Apache Dubbo 是一款微服务框架，为大规模微服务实践提供高性能 RPC 通信、流量治理、可观测性等解决方案，"},{"Type":"NodeSoftBreak","Data":"\n","Properties":{"id":""}},{"Type":"NodeText","Data":"涵盖 Java、Golang 等多种语言 SDK 实现。"}]},{"ID":"20240201213691-7vz91u8","Type":"NodeParagraph","Properties":{"id":"20240201213691-7vz91u8","updated":"20240201213691"},"Children":[{"Type":"NodeText","Data":"Dubbo 提供了从服务定义、服务发现、服务通信到流量管控等几乎所有的服务治理能力，支持 Triple 协议（基于 HTTP/2 之上定义的下一代 RPC 通信协议）、应用级服务发现、Dubbo Mesh （Dubbo3 赋予了很多云原生友好的新特性）等特性。"}]},{"ID":"20240201213692-ar625uz","Type":"NodeParagraph","Properties":{"id":"20240201213692-ar625uz","updated":"20240201213692"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"https://oss.javaguide.cn/github/javaguide/distributed-system/rpc/image-20220716111545343.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201213693-np2ryp9","Type":"NodeParagraph","Properties":{"id":"20240201213693-np2ryp9","updated":"20240201213693"},"Children":[{"Type":"NodeText","Data":"Dubbo 是由阿里开源，后来加入了 Apache 。正是由于 Dubbo 的出现，才使得越来越多的公司开始使用以及接受分布式架构。"}]},{"ID":"20240201213694-vvjv6j3","Type":"NodeParagraph","Properties":{"id":"20240201213694-vvjv6j3","updated":"20240201213694"},"Children":[{"Type":"NodeText","Data":"Dubbo 算的是比较优秀的国产开源项目了，它的源码也是非常值得学习和阅读的！"}]},{"ID":"20240201213695-70do20f","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213695-70do20f","updated":"20240201213695"},"Children":[{"ID":"20240201213696-wghj4bp","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213696-wghj4bp","updated":"20240201213696"},"Children":[{"ID":"20240201213697-pd9180i","Type":"NodeParagraph","Properties":{"id":"20240201213697-pd9180i","updated":"20240201213697"},"Children":[{"Type":"NodeText","Data":"GitHub："},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/apache/incubator-dubbo","TextMarkATitle":"https://github.com/apache/incubator-dubbo","TextMarkTextContent":"https://github.com/apache/incubator-dubbo"}]}]},{"ID":"20240201213698-ua8yoqg","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213698-ua8yoqg","updated":"20240201213698"},"Children":[{"ID":"20240201213699-zq2xpjq","Type":"NodeParagraph","Properties":{"id":"20240201213699-zq2xpjq","updated":"20240201213699"},"Children":[{"Type":"NodeText","Data":"官网："},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://dubbo.apache.org/zh/","TextMarkTextContent":"https://dubbo.apache.org/zh/"}]}]}]},{"ID":"20240201213700-jkiifyo","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240201213700-jkiifyo","updated":"20240201213700"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"Motan"}]},{"ID":"20240201213701-9zd6qdq","Type":"NodeParagraph","Properties":{"id":"20240201213701-9zd6qdq","updated":"20240201213701"},"Children":[{"Type":"NodeText","Data":"Motan 是新浪微博开源的一款 RPC 框架，据说在新浪微博正支撑着千亿次调用。不过笔者倒是很少看到有公司使用，而且网上的资料也比较少。"}]},{"ID":"20240201213702-9t34h1b","Type":"NodeParagraph","Properties":{"id":"20240201213702-9t34h1b","updated":"20240201213702"},"Children":[{"Type":"NodeText","Data":"很多人喜欢拿 Motan 和 Dubbo 作比较，毕竟都是国内大公司开源的。笔者在查阅了很多资料，以及简单查看了其源码之后发现："},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"Motan 更像是一个精简版的 Dubbo，可能是借鉴了 Dubbo 的思想，Motan 的设计更加精简，功能更加纯粹。"}]},{"ID":"20240201213703-v51khc6","Type":"NodeParagraph","Properties":{"id":"20240201213703-v51khc6","updated":"20240201213703"},"Children":[{"Type":"NodeText","Data":"不过，我不推荐你在实际项目中使用 Motan。如果你要是公司实际使用的话，还是推荐 Dubbo ，其社区活跃度以及生态都要好很多。"}]},{"ID":"20240201213704-emy6c0w","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213704-emy6c0w","updated":"20240201213704"},"Children":[{"ID":"20240201213705-6ovz163","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213705-6ovz163","updated":"20240201213705"},"Children":[{"ID":"20240201213706-iky1pbg","Type":"NodeParagraph","Properties":{"id":"20240201213706-iky1pbg","updated":"20240201213706"},"Children":[{"Type":"NodeText","Data":"从 Motan 看 RPC 框架设计："},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"http://kriszhang.com/motan-rpc-impl/","TextMarkATitle":"http://kriszhang.com/motan-rpc-impl/","TextMarkTextContent":"http://kriszhang.com/motan-rpc-impl/"}]}]},{"ID":"20240201213707-thyl3u7","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213707-thyl3u7","updated":"20240201213707"},"Children":[{"ID":"20240201213708-e5lqrqy","Type":"NodeParagraph","Properties":{"id":"20240201213708-e5lqrqy","updated":"20240201213708"},"Children":[{"Type":"NodeText","Data":"Motan 中文文档："},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/weibocom/motan/wiki/zh_overview","TextMarkATitle":"https://github.com/weibocom/motan/wiki/zh_overview","TextMarkTextContent":"https://github.com/weibocom/motan/wiki/zh_overview"}]}]}]},{"ID":"20240201213709-dnzm3kz","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240201213709-dnzm3kz","updated":"20240201213709"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"gRPC"}]},{"ID":"20240201213710-y27w5qc","Type":"NodeParagraph","Properties":{"id":"20240201213710-y27w5qc","updated":"20240201213710"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"https://oss.javaguide.cn/github/javaguide/distributed-system/rpc/2843b10d-0c2f-4b7e-9c3e-ea4466792a8b.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201213711-298wp6f","Type":"NodeParagraph","Properties":{"id":"20240201213711-298wp6f","updated":"20240201213711"},"Children":[{"Type":"NodeText","Data":"gRPC 是 Google 开源的一个高性能、通用的开源 RPC 框架。其由主要面向移动应用开发并基于 HTTP/2 协议标准而设计（支持双向流、消息头压缩等功能，更加节省带宽），基于 ProtoBuf 序列化协议开发，并且支持众多开发语言。"}]},{"ID":"20240201213712-1563k99","Type":"NodeParagraph","Properties":{"id":"20240201213712-1563k99","updated":"20240201213712"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"何谓 ProtoBuf？"},{"Type":"NodeText","Data":" "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/protocolbuffers/protobuf","TextMarkTextContent":"ProtoBuf（ Protocol Buffer）"},{"Type":"NodeText","Data":" 是一种更加灵活、高效的数据格式，可用于通讯协议、数据存储等领域，基本支持所有主流编程语言且与平台无关。不过，通过 ProtoBuf 定义接口和数据类型还挺繁琐的，这是一个小问题。"}]},{"ID":"20240201213713-9uk3wcw","Type":"NodeParagraph","Properties":{"id":"20240201213713-9uk3wcw","updated":"20240201213713"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"https://oss.javaguide.cn/github/javaguide/distributed-system/rpc/image-20220716104304033.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201213714-4a2flr6","Type":"NodeParagraph","Properties":{"id":"20240201213714-4a2flr6","updated":"20240201213714"},"Children":[{"Type":"NodeText","Data":"不得不说，gRPC 的通信层的设计还是非常优秀的，"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://dubbogo.github.io/","TextMarkTextContent":"Dubbo-go 3.0"},{"Type":"NodeText","Data":" 的通信层改进主要借鉴了 gRPC。"}]},{"ID":"20240201213715-bi3aeg0","Type":"NodeParagraph","Properties":{"id":"20240201213715-bi3aeg0","updated":"20240201213715"},"Children":[{"Type":"NodeText","Data":"不过，gRPC 的设计导致其几乎没有服务治理能力。如果你想要解决这个问题的话，就需要依赖其他组件比如腾讯的 PolarisMesh（北极星）了。"}]},{"ID":"20240201213716-lwtqedx","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213716-lwtqedx","updated":"20240201213716"},"Children":[{"ID":"20240201213717-0vshl75","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213717-0vshl75","updated":"20240201213717"},"Children":[{"ID":"20240201213718-f9r2yzi","Type":"NodeParagraph","Properties":{"id":"20240201213718-f9r2yzi","updated":"20240201213718"},"Children":[{"Type":"NodeText","Data":"GitHub："},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/grpc/grpc","TextMarkATitle":"https://github.com/grpc/grpc","TextMarkTextContent":"https://github.com/grpc/grpc"}]}]},{"ID":"20240201213719-di1iab6","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213719-di1iab6","updated":"20240201213719"},"Children":[{"ID":"20240201213720-nujcmr1","Type":"NodeParagraph","Properties":{"id":"20240201213720-nujcmr1","updated":"20240201213720"},"Children":[{"Type":"NodeText","Data":"官网："},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://grpc.io/","TextMarkATitle":"https://grpc.io/","TextMarkTextContent":"https://grpc.io/"}]}]}]},{"ID":"20240201213721-wglg7mg","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240201213721-wglg7mg","updated":"20240201213721"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"Thrift"}]},{"ID":"20240201213722-qiwgzny","Type":"NodeParagraph","Properties":{"id":"20240201213722-qiwgzny","updated":"20240201213722"},"Children":[{"Type":"NodeText","Data":"Apache Thrift 是 Facebook 开源的跨语言的 RPC 通信框架，目前已经捐献给 Apache 基金会管理，由于其跨语言特性和出色的性能，在很多互联网公司得到应用，有能力的公司甚至会基于 thrift 研发一套分布式服务框架，增加诸如服务注册、服务发现等功能。"}]},{"ID":"20240201213723-j5fzssd","Type":"NodeParagraph","Properties":{"id":"20240201213723-j5fzssd","updated":"20240201213723"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"Thrift"},{"Type":"NodeText","Data":"支持多种不同的"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"编程语言"},{"Type":"NodeText","Data":"，包括"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"C++"},{"Type":"NodeText","Data":"、"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"Java"},{"Type":"NodeText","Data":"、"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"Python"},{"Type":"NodeText","Data":"、"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"PHP"},{"Type":"NodeText","Data":"、"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"Ruby"},{"Type":"NodeText","Data":"等（相比于 gRPC 支持的语言更多 ）。"}]},{"ID":"20240201213724-2jnh29c","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213724-2jnh29c","updated":"20240201213724"},"Children":[{"ID":"20240201213725-jzbug8a","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213725-jzbug8a","updated":"20240201213725"},"Children":[{"ID":"20240201213726-ac4c00f","Type":"NodeParagraph","Properties":{"id":"20240201213726-ac4c00f","updated":"20240201213726"},"Children":[{"Type":"NodeText","Data":"官网："},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://thrift.apache.org/","TextMarkATitle":"https://thrift.apache.org/","TextMarkTextContent":"https://thrift.apache.org/"}]}]},{"ID":"20240201213727-op63kbe","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213727-op63kbe","updated":"20240201213727"},"Children":[{"ID":"20240201213728-ajvump0","Type":"NodeParagraph","Properties":{"id":"20240201213728-ajvump0","updated":"20240201213728"},"Children":[{"Type":"NodeText","Data":"Thrift 简单介绍："},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://www.jianshu.com/p/8f25d057a5a9","TextMarkATitle":"https://www.jianshu.com/p/8f25d057a5a9","TextMarkTextContent":"https://www.jianshu.com/p/8f25d057a5a9"}]}]}]},{"ID":"20240201213729-5e0ftbo","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240201213729-5e0ftbo","updated":"20240201213729"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"总结"}]},{"ID":"20240201213730-f1xgdjj","Type":"NodeParagraph","Properties":{"id":"20240201213730-f1xgdjj","updated":"20240201213730"},"Children":[{"Type":"NodeText","Data":"gRPC 和 Thrift 虽然支持跨语言的 RPC 调用，但是它们只提供了最基本的 RPC 框架功能，缺乏一系列配套的服务化组件和服务治理功能的支撑。"}]},{"ID":"20240201213731-u1aaxxz","Type":"NodeParagraph","Properties":{"id":"20240201213731-u1aaxxz","updated":"20240201213731"},"Children":[{"Type":"NodeText","Data":"Dubbo 不论是从功能完善程度、生态系统还是社区活跃度来说都是最优秀的。而且，Dubbo 在国内有很多成功的案例比如当当网、滴滴等等，是一款经得起生产考验的成熟稳定的 RPC 框架。最重要的是你还能找到非常多的 Dubbo 参考资料，学习成本相对也较低。"}]},{"ID":"20240201213732-hjabkdv","Type":"NodeParagraph","Properties":{"id":"20240201213732-hjabkdv","updated":"20240201213732"},"Children":[{"Type":"NodeText","Data":"下图展示了 Dubbo 的生态系统。"}]},{"ID":"20240201213733-hcxtvll","Type":"NodeParagraph","Properties":{"id":"20240201213733-hcxtvll","updated":"20240201213733"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"https://oss.javaguide.cn/github/javaguide/distributed-system/rpc/eee98ff2-8e06-4628-a42b-d30ffcd2831e.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201213734-i6yd2bo","Type":"NodeParagraph","Properties":{"id":"20240201213734-i6yd2bo","updated":"20240201213734"},"Children":[{"Type":"NodeText","Data":"Dubbo 也是 Spring Cloud Alibaba 里面的一个组件。"}]},{"ID":"20240201213735-vcxgryw","Type":"NodeParagraph","Properties":{"id":"20240201213735-vcxgryw","updated":"20240201213735"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"https://oss.javaguide.cn/github/javaguide/distributed-system/rpc/0d195dae-72bc-4956-8451-3eaf6dd11cbd.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201213736-kitewp0","Type":"NodeParagraph","Properties":{"id":"20240201213736-kitewp0","updated":"20240201213736"},"Children":[{"Type":"NodeText","Data":"但是，Dubbo 和 Motan 主要是给 Java 语言使用。虽然，Dubbo 和 Motan 目前也能兼容部分语言，但是不太推荐。如果需要跨多种语言调用的话，可以考虑使用 gRPC。"}]},{"ID":"20240201213737-8ocpfo0","Type":"NodeParagraph","Properties":{"id":"20240201213737-8ocpfo0","updated":"20240201213737"},"Children":[{"Type":"NodeText","Data":"综上，如果是 Java 后端技术栈，并且你在纠结选择哪一种 RPC 框架的话，我推荐你考虑一下 Dubbo。"}]},{"ID":"20240201213738-fwe1c35","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240201213738-fwe1c35","updated":"20240201213738"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"如何设计并实现一个 RPC 框架？"}]},{"ID":"20240201213739-q3oq2zb","Type":"NodeParagraph","Properties":{"id":"20240201213739-q3oq2zb","updated":"20240201213739"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"《手写 RPC 框架》"},{"Type":"NodeText","Data":" 是我的"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://javaguide.cn/about-the-author/zhishixingqiu-two-years.html","TextMarkTextContent":"知识星球"},{"Type":"NodeText","Data":"的一个内部小册，我写了 12 篇文章来讲解如何从零开始基于 Netty+Kyro+Zookeeper 实现一个简易的 RPC 框架。"}]},{"ID":"20240201213740-q4nwa9v","Type":"NodeParagraph","Properties":{"id":"20240201213740-q4nwa9v","updated":"20240201213740"},"Children":[{"Type":"NodeText","Data":"麻雀虽小五脏俱全，项目代码注释详细，结构清晰，并且集成了 Check Style 规范代码结构，非常适合阅读和学习。"}]},{"ID":"20240201213741-ix48nre","Type":"NodeParagraph","Properties":{"id":"20240201213741-ix48nre","updated":"20240201213741"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"内容概览"},{"Type":"NodeText","Data":"："}]},{"ID":"20240201213742-s8r1ego","Type":"NodeParagraph","Properties":{"id":"20240201213742-s8r1ego","updated":"20240201213742"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"https://oss.javaguide.cn/github/javaguide/image-20220308100605485.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201213743-ej8ktrd","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240201213743-ej8ktrd","updated":"20240201213743"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"既然有了 HTTP 协议，为什么还要有 RPC ？"}]},{"ID":"20240201213744-1cp8bni","Type":"NodeParagraph","Properties":{"id":"20240201213744-1cp8bni","updated":"20240201213744"},"Children":[{"Type":"NodeText","Data":"关于这个问题的详细答案，请看这篇文章："},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"http\u0026rpc.md","TextMarkTextContent":"有了 HTTP 协议，为什么还要有 RPC ？"},{"Type":"NodeText","Data":" 。"}]},{"ID":"20240201213745-1cwbjkw","Type":"NodeHTMLBlock","Data":"\u003cdiv\u003e\n\u003c!-- @include: @article-footer.snippet.md --\u003e\n\u003c/div\u003e","HtmlBlockType":2,"Properties":{"id":"20240201213745-1cwbjkw","updated":"20240201213745"}}]}