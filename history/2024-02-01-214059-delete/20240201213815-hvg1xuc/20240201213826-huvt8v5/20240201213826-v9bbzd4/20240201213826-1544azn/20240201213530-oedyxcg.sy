{"ID":"20240201213530-oedyxcg","Spec":"1","Type":"NodeDocument","Properties":{"id":"20240201213530-oedyxcg","title":"api-gateway","updated":"20240201213530"},"Children":[{"ID":"20240201213531-b2yzycg","Type":"NodeThematicBreak","Properties":{"id":"20240201213531-b2yzycg","updated":"20240201213531"}},{"ID":"20240201213532-451ywkk","Type":"NodeParagraph","Properties":{"id":"20240201213532-451ywkk","updated":"20240201213532"},"Children":[{"Type":"NodeText","Data":"title: API网关基础知识总结"},{"Type":"NodeSoftBreak","Data":"\n","Properties":{"id":""}},{"Type":"NodeText","Data":"category: 分布式"}]},{"ID":"20240201213533-b5napux","Type":"NodeThematicBreak","Properties":{"id":"20240201213533-b5napux","updated":"20240201213533"}},{"ID":"20240201213534-ami99ie","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240201213534-ami99ie","updated":"20240201213534"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"什么是网关？"}]},{"ID":"20240201213535-wmy2yr0","Type":"NodeParagraph","Properties":{"id":"20240201213535-wmy2yr0","updated":"20240201213535"},"Children":[{"Type":"NodeText","Data":"微服务背景下，一个系统被拆分为多个服务，但是像安全认证，流量控制，日志，监控等功能是每个服务都需要的，没有网关的话，我们就需要在每个服务中单独实现，这使得我们做了很多重复的事情并且没有一个全局的视图来统一管理这些功能。"}]},{"ID":"20240201213536-dmq1dkm","Type":"NodeParagraph","Properties":{"id":"20240201213536-dmq1dkm","updated":"20240201213536"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"网关示意图","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"https://oss.javaguide.cn/github/javaguide/system-design/distributed-system/api-gateway-overview.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201213537-dyg0a9n","Type":"NodeParagraph","Properties":{"id":"20240201213537-dyg0a9n","updated":"20240201213537"},"Children":[{"Type":"NodeText","Data":"一般情况下，网关可以为我们提供请求转发、安全认证（身份/权限认证）、流量控制、负载均衡、降级熔断、日志、监控、参数校验、协议转换等功能。"}]},{"ID":"20240201213538-ua951dk","Type":"NodeParagraph","Properties":{"id":"20240201213538-ua951dk","updated":"20240201213538"},"Children":[{"Type":"NodeText","Data":"上面介绍了这么多功能，实际上，网关主要做了两件事情："},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"请求转发"},{"Type":"NodeText","Data":" + "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"请求过滤"},{"Type":"NodeText","Data":"。"}]},{"ID":"20240201213539-qoa8zc1","Type":"NodeParagraph","Properties":{"id":"20240201213539-qoa8zc1","updated":"20240201213539"},"Children":[{"Type":"NodeText","Data":"由于引入网关之后，会多一步网络转发，因此性能会有一点影响（几乎可以忽略不计，尤其是内网访问的情况下）。 另外，我们需要保障网关服务的高可用，避免单点风险。"}]},{"ID":"20240201213540-tw2ofam","Type":"NodeParagraph","Properties":{"id":"20240201213540-tw2ofam","updated":"20240201213540"},"Children":[{"Type":"NodeText","Data":"如下图所示，网关服务外层通过 Nginx（其他负载均衡设备/软件也行） 进⾏负载转发以达到⾼可⽤。Nginx 在部署的时候，尽量也要考虑高可用，避免单点风险。"}]},{"ID":"20240201213541-ntuup8t","Type":"NodeParagraph","Properties":{"id":"20240201213541-ntuup8t","updated":"20240201213541"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"基于 Nginx 的服务端负载均衡","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"https://oss.javaguide.cn/github/javaguide/high-performance/load-balancing/server-load-balancing.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201213542-tf4ueum","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240201213542-tf4ueum","updated":"20240201213542"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"网关能提供哪些功能？"}]},{"ID":"20240201213543-al1jleg","Type":"NodeParagraph","Properties":{"id":"20240201213543-al1jleg","updated":"20240201213543"},"Children":[{"Type":"NodeText","Data":"绝大部分网关可以提供下面这些功能（有一些功能需要借助其他框架或者中间件）："}]},{"ID":"20240201213544-me7mf7a","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213544-me7mf7a","updated":"20240201213544"},"Children":[{"ID":"20240201213545-raq8wsi","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213545-raq8wsi","updated":"20240201213545"},"Children":[{"ID":"20240201213546-18ojzme","Type":"NodeParagraph","Properties":{"id":"20240201213546-18ojzme","updated":"20240201213546"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"请求转发"},{"Type":"NodeText","Data":"：将请求转发到目标微服务。"}]}]},{"ID":"20240201213547-5o9957m","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213547-5o9957m","updated":"20240201213547"},"Children":[{"ID":"20240201213548-q85b10d","Type":"NodeParagraph","Properties":{"id":"20240201213548-q85b10d","updated":"20240201213548"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"负载均衡"},{"Type":"NodeText","Data":"：根据各个微服务实例的负载情况或者具体的负载均衡策略配置对请求实现动态的负载均衡。"}]}]},{"ID":"20240201213549-yvolei1","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213549-yvolei1","updated":"20240201213549"},"Children":[{"ID":"20240201213550-zq0w047","Type":"NodeParagraph","Properties":{"id":"20240201213550-zq0w047","updated":"20240201213550"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"安全认证"},{"Type":"NodeText","Data":"：对用户请求进行身份验证并仅允许可信客户端访问 API，并且还能够使用类似 RBAC 等方式来授权。"}]}]},{"ID":"20240201213551-fkz3xpf","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213551-fkz3xpf","updated":"20240201213551"},"Children":[{"ID":"20240201213552-o5j8fh1","Type":"NodeParagraph","Properties":{"id":"20240201213552-o5j8fh1","updated":"20240201213552"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"参数校验"},{"Type":"NodeText","Data":"：支持参数映射与校验逻辑。"}]}]},{"ID":"20240201213553-odtajig","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213553-odtajig","updated":"20240201213553"},"Children":[{"ID":"20240201213554-vaiwa0y","Type":"NodeParagraph","Properties":{"id":"20240201213554-vaiwa0y","updated":"20240201213554"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"日志记录"},{"Type":"NodeText","Data":"：记录所有请求的行为日志供后续使用。"}]}]},{"ID":"20240201213555-ynie254","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213555-ynie254","updated":"20240201213555"},"Children":[{"ID":"20240201213556-ld3huzu","Type":"NodeParagraph","Properties":{"id":"20240201213556-ld3huzu","updated":"20240201213556"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"监控告警"},{"Type":"NodeText","Data":"：从业务指标、机器指标、JVM 指标等方面进行监控并提供配套的告警机制。"}]}]},{"ID":"20240201213557-vybcs4z","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213557-vybcs4z","updated":"20240201213557"},"Children":[{"ID":"20240201213558-z7eqtb0","Type":"NodeParagraph","Properties":{"id":"20240201213558-z7eqtb0","updated":"20240201213558"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"流量控制"},{"Type":"NodeText","Data":"：对请求的流量进行控制，也就是限制某一时刻内的请求数。"}]}]},{"ID":"20240201213559-489i3b3","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213559-489i3b3","updated":"20240201213559"},"Children":[{"ID":"20240201213560-3lt1hyj","Type":"NodeParagraph","Properties":{"id":"20240201213560-3lt1hyj","updated":"20240201213560"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"熔断降级"},{"Type":"NodeText","Data":"：实时监控请求的统计信息，达到配置的失败阈值后，自动熔断，返回默认值。"}]}]},{"ID":"20240201213561-6rftnmv","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213561-6rftnmv","updated":"20240201213561"},"Children":[{"ID":"20240201213562-iep7xxt","Type":"NodeParagraph","Properties":{"id":"20240201213562-iep7xxt","updated":"20240201213562"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"响应缓存"},{"Type":"NodeText","Data":"：当用户请求获取的是一些静态的或更新不频繁的数据时，一段时间内多次请求获取到的数据很可能是一样的。对于这种情况可以将响应缓存起来。这样用户请求可以直接在网关层得到响应数据，无需再去访问业务服务，减轻业务服务的负担。"}]}]},{"ID":"20240201213563-j5n3fdp","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213563-j5n3fdp","updated":"20240201213563"},"Children":[{"ID":"20240201213564-lwkwi7s","Type":"NodeParagraph","Properties":{"id":"20240201213564-lwkwi7s","updated":"20240201213564"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"响应聚合"},{"Type":"NodeText","Data":"：某些情况下用户请求要获取的响应内容可能会来自于多个业务服务。网关作为业务服务的调用方，可以把多个服务的响应整合起来，再一并返回给用户。"}]}]},{"ID":"20240201213565-ne3nvue","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213565-ne3nvue","updated":"20240201213565"},"Children":[{"ID":"20240201213566-yso2nls","Type":"NodeParagraph","Properties":{"id":"20240201213566-yso2nls","updated":"20240201213566"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"灰度发布"},{"Type":"NodeText","Data":"：将请求动态分流到不同的服务版本（最基本的一种灰度发布）。"}]}]},{"ID":"20240201213567-sfp3i2p","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213567-sfp3i2p","updated":"20240201213567"},"Children":[{"ID":"20240201213568-4njpbqi","Type":"NodeParagraph","Properties":{"id":"20240201213568-4njpbqi","updated":"20240201213568"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"异常处理"},{"Type":"NodeText","Data":"：对于业务服务返回的异常响应，可以在网关层在返回给用户之前做转换处理。这样可以把一些业务侧返回的异常细节隐藏，转换成用户友好的错误提示返回。"}]}]},{"ID":"20240201213569-c17wyni","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213569-c17wyni","updated":"20240201213569"},"Children":[{"ID":"20240201213570-zarkjjx","Type":"NodeParagraph","Properties":{"id":"20240201213570-zarkjjx","updated":"20240201213570"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"API 文档："},{"Type":"NodeText","Data":" 如果计划将 API 暴露给组织以外的开发人员，那么必须考虑使用 API 文档，例如 Swagger 或 OpenAPI。"}]}]},{"ID":"20240201213571-mn09to5","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213571-mn09to5","updated":"20240201213571"},"Children":[{"ID":"20240201213572-fhpszla","Type":"NodeParagraph","Properties":{"id":"20240201213572-fhpszla","updated":"20240201213572"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"协议转换"},{"Type":"NodeText","Data":"：通过协议转换整合后台基于 REST、AMQP、Dubbo 等不同风格和实现技术的微服务，面向 Web Mobile、开放平台等特定客户端提供统一服务。"}]}]},{"ID":"20240201213573-krdxfuy","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213573-krdxfuy","updated":"20240201213573"},"Children":[{"ID":"20240201213574-nuu79ss","Type":"NodeParagraph","Properties":{"id":"20240201213574-nuu79ss","updated":"20240201213574"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"证书管理"},{"Type":"NodeText","Data":"：将 SSL 证书部署到 API 网关，由一个统一的入口管理接口，降低了证书更换时的复杂度。"}]}]}]},{"ID":"20240201213575-pr5ejyc","Type":"NodeParagraph","Properties":{"id":"20240201213575-pr5ejyc","updated":"20240201213575"},"Children":[{"Type":"NodeText","Data":"下图来源于"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://mp.weixin.qq.com/s/iITqdIiHi3XGKq6u6FRVdg","TextMarkTextContent":"百亿规模 API 网关服务 Shepherd 的设计与实现 - 美团技术团队 - 2021"},{"Type":"NodeText","Data":"这篇文章。"}]},{"ID":"20240201213576-6nvnlr4","Type":"NodeParagraph","Properties":{"id":"20240201213576-6nvnlr4","updated":"20240201213576"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"https://oss.javaguide.cn/github/javaguide/distributed-system/api-gateway/up-35e102c633bbe8e0dea1e075ea3fee5dcfb.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201213577-4j7u8ot","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240201213577-4j7u8ot","updated":"20240201213577"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"有哪些常见的网关系统？"}]},{"ID":"20240201213578-c2489q8","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240201213578-c2489q8","updated":"20240201213578"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"Netflix Zuul"}]},{"ID":"20240201213579-4hpxjgr","Type":"NodeParagraph","Properties":{"id":"20240201213579-4hpxjgr","updated":"20240201213579"},"Children":[{"Type":"NodeText","Data":"Zuul 是 Netflix 开发的一款提供动态路由、监控、弹性、安全的网关服务，基于 Java 技术栈开发，可以和 Eureka、Ribbon、Hystrix 等组件配合使用。"}]},{"ID":"20240201213580-mxn5bno","Type":"NodeParagraph","Properties":{"id":"20240201213580-mxn5bno","updated":"20240201213580"},"Children":[{"Type":"NodeText","Data":"Zuul 核心架构如下："}]},{"ID":"20240201213581-7czd7cr","Type":"NodeParagraph","Properties":{"id":"20240201213581-7czd7cr","updated":"20240201213581"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"Zuul 核心架构","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"https://oss.javaguide.cn/github/javaguide/distributed-system/api-gateway/zuul-core-architecture.webp","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201213582-c8n42ba","Type":"NodeParagraph","Properties":{"id":"20240201213582-c8n42ba","updated":"20240201213582"},"Children":[{"Type":"NodeText","Data":"Zuul 主要通过过滤器（类似于 AOP）来过滤请求，从而实现网关必备的各种功能。"}]},{"ID":"20240201213583-3k9dez3","Type":"NodeParagraph","Properties":{"id":"20240201213583-3k9dez3","updated":"20240201213583"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"Zuul 请求声明周期","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"https://oss.javaguide.cn/github/javaguide/system-design/distributed-system/api-gateway/zuul-request-lifecycle.webp","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201213584-gq1uihd","Type":"NodeParagraph","Properties":{"id":"20240201213584-gq1uihd","updated":"20240201213584"},"Children":[{"Type":"NodeText","Data":"我们可以自定义过滤器来处理请求，并且，Zuul 生态本身就有很多现成的过滤器供我们使用。就比如限流可以直接用国外朋友写的 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/marcosbarbero/spring-cloud-zuul-ratelimit","TextMarkTextContent":"spring-cloud-zuul-ratelimit"},{"Type":"NodeText","Data":" (这里只是举例说明，一般是配合 hystrix 来做限流)："}]},{"ID":"20240201213585-2fxwd18","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"eG1s","CodeBlockCloseFence":"YGBg","Properties":{"id":"20240201213585-2fxwd18","updated":"20240201213585"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"eG1s","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"\u003cdependency\u003e\n  \u003cgroupId\u003eorg.springframework.cloud\u003c/groupId\u003e\n    \u003cartifactId\u003espring-cloud-starter-netflix-zuul\u003c/artifactId\u003e\n\u003c/dependency\u003e\n\u003cdependency\u003e\n    \u003cgroupId\u003ecom.marcosbarbero.cloud\u003c/groupId\u003e\n    \u003cartifactId\u003espring-cloud-zuul-ratelimit\u003c/artifactId\u003e\n    \u003cversion\u003e2.2.0.RELEASE\u003c/version\u003e\n\u003c/dependency\u003e\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20240201213586-el6cxqe","Type":"NodeParagraph","Properties":{"id":"20240201213586-el6cxqe","updated":"20240201213586"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://netflixtechblog.com/announcing-zuul-edge-service-in-the-cloud-ab3af5be08ee","TextMarkTextContent":"Zuul 1.x"},{"Type":"NodeText","Data":" 基于同步 IO，性能较差。"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://netflixtechblog.com/open-sourcing-zuul-2-82ea476cb2b3","TextMarkTextContent":"Zuul 2.x"},{"Type":"NodeText","Data":" 基于 Netty 实现了异步 IO，性能得到了大幅改进。"}]},{"ID":"20240201213587-q0qvqd5","Type":"NodeParagraph","Properties":{"id":"20240201213587-q0qvqd5","updated":"20240201213587"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"Zuul2 架构","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"https://oss.javaguide.cn/github/javaguide/distributed-system/api-gateway/zuul2-core-architecture.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201213588-lktmzfb","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213588-lktmzfb","updated":"20240201213588"},"Children":[{"ID":"20240201213589-3ayuxc3","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213589-3ayuxc3","updated":"20240201213589"},"Children":[{"ID":"20240201213590-no2tkvf","Type":"NodeParagraph","Properties":{"id":"20240201213590-no2tkvf","updated":"20240201213590"},"Children":[{"Type":"NodeText","Data":"GitHub 地址： "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/Netflix/zuul","TextMarkTextContent":"https://github.com/Netflix/zuul"}]}]},{"ID":"20240201213591-jhnht2y","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213591-jhnht2y","updated":"20240201213591"},"Children":[{"ID":"20240201213592-skz5g4c","Type":"NodeParagraph","Properties":{"id":"20240201213592-skz5g4c","updated":"20240201213592"},"Children":[{"Type":"NodeText","Data":"官方 Wiki： "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/Netflix/zuul/wiki","TextMarkTextContent":"https://github.com/Netflix/zuul/wiki"}]}]}]},{"ID":"20240201213593-4b9ca38","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240201213593-4b9ca38","updated":"20240201213593"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"Spring Cloud Gateway"}]},{"ID":"20240201213594-xxoc1t2","Type":"NodeParagraph","Properties":{"id":"20240201213594-xxoc1t2","updated":"20240201213594"},"Children":[{"Type":"NodeText","Data":"SpringCloud Gateway 属于 Spring Cloud 生态系统中的网关，其诞生的目标是为了替代老牌网关 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"Zuul"},{"Type":"NodeText","Data":"。准确点来说，应该是 Zuul 1.x。SpringCloud Gateway 起步要比 Zuul 2.x 更早。"}]},{"ID":"20240201213595-a12p22l","Type":"NodeParagraph","Properties":{"id":"20240201213595-a12p22l","updated":"20240201213595"},"Children":[{"Type":"NodeText","Data":"为了提升网关的性能，SpringCloud Gateway 基于 Spring WebFlux 。Spring WebFlux 使用 Reactor 库来实现响应式编程模型，底层基于 Netty 实现同步非阻塞的 I/O。"}]},{"ID":"20240201213596-fo6zu3e","Type":"NodeParagraph","Properties":{"id":"20240201213596-fo6zu3e","updated":"20240201213596"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"https://oss.javaguide.cn/github/javaguide/system-design/distributed-system/api-gateway/springcloud-gateway- demo.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201213597-wr7nm5l","Type":"NodeParagraph","Properties":{"id":"20240201213597-wr7nm5l","updated":"20240201213597"},"Children":[{"Type":"NodeText","Data":"Spring Cloud Gateway 不仅提供统一的路由方式，并且基于 Filter 链的方式提供了网关基本的功能，例如：安全，监控/指标，限流。"}]},{"ID":"20240201213598-5n8s3fm","Type":"NodeParagraph","Properties":{"id":"20240201213598-5n8s3fm","updated":"20240201213598"},"Children":[{"Type":"NodeText","Data":"Spring Cloud Gateway 和 Zuul 2.x 的差别不大，也是通过过滤器来处理请求。不过，目前更加推荐使用 Spring Cloud Gateway 而非 Zuul，Spring Cloud 生态对其支持更加友好。"}]},{"ID":"20240201213599-7hbdy72","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213599-7hbdy72","updated":"20240201213599"},"Children":[{"ID":"20240201213600-o69gbom","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213600-o69gbom","updated":"20240201213600"},"Children":[{"ID":"20240201213601-6cevzdb","Type":"NodeParagraph","Properties":{"id":"20240201213601-6cevzdb","updated":"20240201213601"},"Children":[{"Type":"NodeText","Data":"Github 地址： "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/spring-cloud/spring-cloud-gateway","TextMarkTextContent":"https://github.com/spring-cloud/spring-cloud-gateway"}]}]},{"ID":"20240201213602-vraevsq","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213602-vraevsq","updated":"20240201213602"},"Children":[{"ID":"20240201213603-2bsf2bq","Type":"NodeParagraph","Properties":{"id":"20240201213603-2bsf2bq","updated":"20240201213603"},"Children":[{"Type":"NodeText","Data":"官网： "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://spring.io/projects/spring-cloud-gateway","TextMarkTextContent":"https://spring.io/projects/spring-cloud-gateway"}]}]}]},{"ID":"20240201213604-yqszt4k","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240201213604-yqszt4k","updated":"20240201213604"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"OpenResty"}]},{"ID":"20240201213605-a1jsj4a","Type":"NodeParagraph","Properties":{"id":"20240201213605-a1jsj4a","updated":"20240201213605"},"Children":[{"Type":"NodeText","Data":"根据官方介绍："}]},{"ID":"20240201213606-0uhtbpd","Type":"NodeBlockquote","Properties":{"id":"20240201213606-0uhtbpd","updated":"20240201213606"},"Children":[{"Type":"NodeBlockquoteMarker","Data":"\u003e ","Properties":{"id":""}},{"ID":"20240201213607-gynmk3p","Type":"NodeParagraph","Properties":{"id":"20240201213607-gynmk3p","updated":"20240201213607"},"Children":[{"Type":"NodeText","Data":"OpenResty 是一个基于 Nginx 与 Lua 的高性能 Web 平台，其内部集成了大量精良的 Lua 库、第三方模块以及大多数的依赖项。用于方便地搭建能够处理超高并发、扩展性极高的动态 Web 应用、Web 服务和动态网关。"}]}]},{"ID":"20240201213608-4af7y89","Type":"NodeParagraph","Properties":{"id":"20240201213608-4af7y89","updated":"20240201213608"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"OpenResty 和 Nginx 以及 Lua 的关系","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"https://oss.javaguide.cn/github/javaguide/system-design/distributed-system/api-gatewaynginx-lua-openresty.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201213609-4om56a6","Type":"NodeParagraph","Properties":{"id":"20240201213609-4om56a6","updated":"20240201213609"},"Children":[{"Type":"NodeText","Data":"OpenResty 基于 Nginx，主要还是看中了其优秀的高并发能力。不过，由于 Nginx 采用 C 语言开发，二次开发门槛较高。如果想在 Nginx 上实现一些自定义的逻辑或功能，就需要编写 C 语言的模块，并重新编译 Nginx。"}]},{"ID":"20240201213610-sdpgab9","Type":"NodeParagraph","Properties":{"id":"20240201213610-sdpgab9","updated":"20240201213610"},"Children":[{"Type":"NodeText","Data":"为了解决这个问题，OpenResty 通过实现 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"ngx_lua"},{"Type":"NodeText","Data":" 和 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"stream_lua"},{"Type":"NodeText","Data":" 等 Nginx 模块，把 Lua/LuaJIT 完美地整合进了 Nginx，从而让我们能够在 Nginx 内部里嵌入 Lua 脚本，使得可以通过简单的 Lua 语言来扩展网关的功能，比如实现自定义的路由规则、过滤器、缓存策略等。"}]},{"ID":"20240201213611-vnkxajw","Type":"NodeBlockquote","Properties":{"id":"20240201213611-vnkxajw","updated":"20240201213611"},"Children":[{"Type":"NodeBlockquoteMarker","Data":"\u003e ","Properties":{"id":""}},{"ID":"20240201213612-am676xk","Type":"NodeParagraph","Properties":{"id":"20240201213612-am676xk","updated":"20240201213612"},"Children":[{"Type":"NodeText","Data":"Lua 是一种非常快速的动态脚本语言，它的运行速度接近于 C 语言。LuaJIT 是 Lua 的一个即时编译器，它可以显著提高 Lua 代码的执行效率。LuaJIT 将一些常用的 Lua 函数和工具库预编译并缓存，这样在下次调用时就可以直接使用缓存的字节码，从而大大加快了执行速度。"}]}]},{"ID":"20240201213613-bwmgy09","Type":"NodeParagraph","Properties":{"id":"20240201213613-bwmgy09","updated":"20240201213613"},"Children":[{"Type":"NodeText","Data":"关于 OpenResty 的入门以及网关安全实战推荐阅读这篇文章："},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://mp.weixin.qq.com/s/3HglZs06W95vF3tSa3KrXw","TextMarkTextContent":"每个后端都应该了解的 OpenResty 入门以及网关安全实战"},{"Type":"NodeText","Data":"。"}]},{"ID":"20240201213614-88zxl3h","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213614-88zxl3h","updated":"20240201213614"},"Children":[{"ID":"20240201213615-yhy0b5c","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213615-yhy0b5c","updated":"20240201213615"},"Children":[{"ID":"20240201213616-19c8q2y","Type":"NodeParagraph","Properties":{"id":"20240201213616-19c8q2y","updated":"20240201213616"},"Children":[{"Type":"NodeText","Data":"Github 地址： "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/openresty/openresty","TextMarkTextContent":"https://github.com/openresty/openresty"}]}]},{"ID":"20240201213617-vrsbfrg","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213617-vrsbfrg","updated":"20240201213617"},"Children":[{"ID":"20240201213618-t6d06qm","Type":"NodeParagraph","Properties":{"id":"20240201213618-t6d06qm","updated":"20240201213618"},"Children":[{"Type":"NodeText","Data":"官网地址： "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://openresty.org/","TextMarkTextContent":"https://openresty.org/"}]}]}]},{"ID":"20240201213619-d2av240","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240201213619-d2av240","updated":"20240201213619"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"Kong"}]},{"ID":"20240201213620-ktuxutj","Type":"NodeParagraph","Properties":{"id":"20240201213620-ktuxutj","updated":"20240201213620"},"Children":[{"Type":"NodeText","Data":"Kong 是一款基于 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/openresty/","TextMarkTextContent":"OpenResty"},{"Type":"NodeText","Data":" （Nginx + Lua）的高性能、云原生、可扩展、生态丰富的网关系统，主要由 3 个组件组成："}]},{"ID":"20240201213621-koms6e2","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213621-koms6e2","updated":"20240201213621"},"Children":[{"ID":"20240201213622-rcda53v","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213622-rcda53v","updated":"20240201213622"},"Children":[{"ID":"20240201213623-wx45ukh","Type":"NodeParagraph","Properties":{"id":"20240201213623-wx45ukh","updated":"20240201213623"},"Children":[{"Type":"NodeText","Data":"Kong Server：基于 Nginx 的服务器，用来接收 API 请求。"}]}]},{"ID":"20240201213624-pmebqm9","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213624-pmebqm9","updated":"20240201213624"},"Children":[{"ID":"20240201213625-egxw8nt","Type":"NodeParagraph","Properties":{"id":"20240201213625-egxw8nt","updated":"20240201213625"},"Children":[{"Type":"NodeText","Data":"Apache Cassandra/PostgreSQL：用来存储操作数据。"}]}]},{"ID":"20240201213626-6fwdyw8","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213626-6fwdyw8","updated":"20240201213626"},"Children":[{"ID":"20240201213627-uyz2b8b","Type":"NodeParagraph","Properties":{"id":"20240201213627-uyz2b8b","updated":"20240201213627"},"Children":[{"Type":"NodeText","Data":"Kong Dashboard：官方推荐 UI 管理工具，当然，也可以使用 RESTful 方式 管理 Admin api。"}]}]}]},{"ID":"20240201213628-nvt9hv9","Type":"NodeParagraph","Properties":{"id":"20240201213628-nvt9hv9","updated":"20240201213628"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"https://oss.javaguide.cn/github/javaguide/system-design/distributed-system/api-gateway/kong-way.webp","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201213629-x9mewvq","Type":"NodeParagraph","Properties":{"id":"20240201213629-x9mewvq","updated":"20240201213629"},"Children":[{"Type":"NodeText","Data":"由于默认使用 Apache Cassandra/PostgreSQL 存储数据，Kong 的整个架构比较臃肿，并且会带来高可用的问题。"}]},{"ID":"20240201213630-q6fm0vi","Type":"NodeParagraph","Properties":{"id":"20240201213630-q6fm0vi","updated":"20240201213630"},"Children":[{"Type":"NodeText","Data":"Kong 提供了插件机制来扩展其功能，插件在 API 请求响应循环的生命周期中被执行。比如在服务上启用 Zipkin 插件："}]},{"ID":"20240201213631-pwk3wlc","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"c2hlbGw=","CodeBlockCloseFence":"YGBg","Properties":{"id":"20240201213631-pwk3wlc","updated":"20240201213631"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"c2hlbGw=","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"$ curl -X POST http://kong:8001/services/{service}/plugins \\\n    --data \"name=zipkin\"  \\\n    --data \"config.http_endpoint=http://your.zipkin.collector:9411/api/v2/spans\" \\\n    --data \"config.sample_ratio=0.001\"\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20240201213632-lpwvjb6","Type":"NodeParagraph","Properties":{"id":"20240201213632-lpwvjb6","updated":"20240201213632"},"Children":[{"Type":"NodeText","Data":"Kong 本身就是一个 Lua 应用程序，并且是在 Openresty 的基础之上做了一层封装的应用。归根结底就是利用 Lua 嵌入 Nginx 的方式，赋予了 Nginx 可编程的能力，这样以插件的形式在 Nginx 这一层能够做到无限想象的事情。例如限流、安全访问策略、路由、负载均衡等等。编写一个 Kong 插件，就是按照 Kong 插件编写规范，写一个自己自定义的 Lua 脚本，然后加载到 Kong 中，最后引用即可。"}]},{"ID":"20240201213633-sne55pw","Type":"NodeParagraph","Properties":{"id":"20240201213633-sne55pw","updated":"20240201213633"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"https://oss.javaguide.cn/github/javaguide/system-design/distributed-system/api-gateway/kong-gateway-overview.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201213634-qge2fij","Type":"NodeParagraph","Properties":{"id":"20240201213634-qge2fij","updated":"20240201213634"},"Children":[{"Type":"NodeText","Data":"除了 Lua，Kong 还可以基于 Go 、JavaScript、Python 等语言开发插件，得益于对应的 PDK（插件开发工具包）。"}]},{"ID":"20240201213635-a5dqx7z","Type":"NodeParagraph","Properties":{"id":"20240201213635-a5dqx7z","updated":"20240201213635"},"Children":[{"Type":"NodeText","Data":"关于 Kong 插件的详细介绍，推荐阅读官方文档："},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://docs.konghq.com/gateway/latest/kong-plugins/","TextMarkTextContent":"https://docs.konghq.com/gateway/latest/kong-plugins/"},{"Type":"NodeText","Data":"，写的比较详细。"}]},{"ID":"20240201213636-ajcvdvi","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213636-ajcvdvi","updated":"20240201213636"},"Children":[{"ID":"20240201213637-b9zmglc","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213637-b9zmglc","updated":"20240201213637"},"Children":[{"ID":"20240201213638-cre9k2y","Type":"NodeParagraph","Properties":{"id":"20240201213638-cre9k2y","updated":"20240201213638"},"Children":[{"Type":"NodeText","Data":"Github 地址： "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/Kong/kong","TextMarkTextContent":"https://github.com/Kong/kong"}]}]},{"ID":"20240201213639-x4unijp","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213639-x4unijp","updated":"20240201213639"},"Children":[{"ID":"20240201213640-5d335zs","Type":"NodeParagraph","Properties":{"id":"20240201213640-5d335zs","updated":"20240201213640"},"Children":[{"Type":"NodeText","Data":"官网地址： "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://konghq.com/kong","TextMarkTextContent":"https://konghq.com/kong"}]}]}]},{"ID":"20240201213641-jtqljh4","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240201213641-jtqljh4","updated":"20240201213641"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"APISIX"}]},{"ID":"20240201213642-qg1qwn9","Type":"NodeParagraph","Properties":{"id":"20240201213642-qg1qwn9","updated":"20240201213642"},"Children":[{"Type":"NodeText","Data":"APISIX 是一款基于 OpenResty 和 etcd 的高性能、云原生、可扩展的网关系统。"}]},{"ID":"20240201213643-retodqp","Type":"NodeBlockquote","Properties":{"id":"20240201213643-retodqp","updated":"20240201213643"},"Children":[{"Type":"NodeBlockquoteMarker","Data":"\u003e ","Properties":{"id":""}},{"ID":"20240201213644-rjh29t7","Type":"NodeParagraph","Properties":{"id":"20240201213644-rjh29t7","updated":"20240201213644"},"Children":[{"Type":"NodeText","Data":"etcd 是使用 Go 语言开发的一个开源的、高可用的分布式 key-value 存储系统，使用 Raft 协议做分布式共识。"}]}]},{"ID":"20240201213645-lq1vh0c","Type":"NodeParagraph","Properties":{"id":"20240201213645-lq1vh0c","updated":"20240201213645"},"Children":[{"Type":"NodeText","Data":"与传统 API 网关相比，APISIX 具有动态路由和插件热加载，特别适合微服务系统下的 API 管理。并且，APISIX 与 SkyWalking（分布式链路追踪系统）、Zipkin（分布式链路追踪系统）、Prometheus（监控系统） 等 DevOps 生态工具对接都十分方便。"}]},{"ID":"20240201213646-v6w4uw1","Type":"NodeParagraph","Properties":{"id":"20240201213646-v6w4uw1","updated":"20240201213646"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"APISIX 架构图","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"https://oss.javaguide.cn/github/javaguide/distributed-system/api-gateway/apisix-architecture.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201213647-o2nc8k7","Type":"NodeParagraph","Properties":{"id":"20240201213647-o2nc8k7","updated":"20240201213647"},"Children":[{"Type":"NodeText","Data":"作为 Nginx 和 Kong 的替代项目，APISIX 目前已经是 Apache 顶级开源项目，并且是最快毕业的国产开源项目。国内目前已经有很多知名企业（比如金山、有赞、爱奇艺、腾讯、贝壳）使用 APISIX 处理核心的业务流量。"}]},{"ID":"20240201213648-9ofy8ia","Type":"NodeParagraph","Properties":{"id":"20240201213648-9ofy8ia","updated":"20240201213648"},"Children":[{"Type":"NodeText","Data":"根据官网介绍：“APISIX 已经生产可用，功能、性能、架构全面优于 Kong”。"}]},{"ID":"20240201213649-obsju1k","Type":"NodeParagraph","Properties":{"id":"20240201213649-obsju1k","updated":"20240201213649"},"Children":[{"Type":"NodeText","Data":"APISIX 同样支持定制化的插件开发。开发者除了能够使用 Lua 语言开发插件，还能通过下面两种方式开发来避开 Lua 语言的学习成本："}]},{"ID":"20240201213650-9wqh5bi","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213650-9wqh5bi","updated":"20240201213650"},"Children":[{"ID":"20240201213651-lofk5ao","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213651-lofk5ao","updated":"20240201213651"},"Children":[{"ID":"20240201213652-49703or","Type":"NodeParagraph","Properties":{"id":"20240201213652-49703or","updated":"20240201213652"},"Children":[{"Type":"NodeText","Data":"通过 Plugin Runner 来支持更多的主流编程语言（比如 Java、Python、Go 等等）。通过这样的方式，可以让后端工程师通过本地 RPC 通信，使用熟悉的编程语言开发 APISIX 的插件。这样做的好处是减少了开发成本，提高了开发效率，但是在性能上会有一些损失。"}]}]},{"ID":"20240201213653-2hc94l3","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213653-2hc94l3","updated":"20240201213653"},"Children":[{"ID":"20240201213654-tbms6zq","Type":"NodeParagraph","Properties":{"id":"20240201213654-tbms6zq","updated":"20240201213654"},"Children":[{"Type":"NodeText","Data":"使用 Wasm（WebAssembly） 开发插件。Wasm 被嵌入到了 APISIX 中，用户可以使用 Wasm 去编译成 Wasm 的字节码在 APISIX 中运行。"}]}]}]},{"ID":"20240201213655-qpuoy4p","Type":"NodeBlockquote","Properties":{"id":"20240201213655-qpuoy4p","updated":"20240201213655"},"Children":[{"Type":"NodeBlockquoteMarker","Data":"\u003e ","Properties":{"id":""}},{"ID":"20240201213656-tuwo4gx","Type":"NodeParagraph","Properties":{"id":"20240201213656-tuwo4gx","updated":"20240201213656"},"Children":[{"Type":"NodeText","Data":"Wasm 是基于堆栈的虚拟机的二进制指令格式，一种低级汇编语言，旨在非常接近已编译的机器代码，并且非常接近本机性能。Wasm 最初是为浏览器构建的，但是随着技术的成熟，在服务器端看到了越来越多的用例。"}]}]},{"ID":"20240201213657-rxmq9if","Type":"NodeParagraph","Properties":{"id":"20240201213657-rxmq9if","updated":"20240201213657"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"https://oss.javaguide.cn/github/javaguide/distributed-system/api-gateway/up-a240d3b113cde647f5850f4c7cc55d4ff5c.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201213658-319axao","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213658-319axao","updated":"20240201213658"},"Children":[{"ID":"20240201213659-grz9vj1","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213659-grz9vj1","updated":"20240201213659"},"Children":[{"ID":"20240201213660-4r7du8n","Type":"NodeParagraph","Properties":{"id":"20240201213660-4r7du8n","updated":"20240201213660"},"Children":[{"Type":"NodeText","Data":"Github 地址："},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/apache/apisix","TextMarkTextContent":"https://github.com/apache/apisix"}]}]},{"ID":"20240201213661-satt3it","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213661-satt3it","updated":"20240201213661"},"Children":[{"ID":"20240201213662-7ieadwv","Type":"NodeParagraph","Properties":{"id":"20240201213662-7ieadwv","updated":"20240201213662"},"Children":[{"Type":"NodeText","Data":"官网地址： "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://apisix.apache.org/zh/","TextMarkTextContent":"https://apisix.apache.org/zh/"}]}]}]},{"ID":"20240201213663-az591wi","Type":"NodeParagraph","Properties":{"id":"20240201213663-az591wi","updated":"20240201213663"},"Children":[{"Type":"NodeText","Data":"相关阅读："}]},{"ID":"20240201213664-bhbq8q2","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213664-bhbq8q2","updated":"20240201213664"},"Children":[{"ID":"20240201213665-1evuw7f","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213665-1evuw7f","updated":"20240201213665"},"Children":[{"ID":"20240201213666-92o8tlf","Type":"NodeParagraph","Properties":{"id":"20240201213666-92o8tlf","updated":"20240201213666"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://mp.weixin.qq.com/s/j8ggPGEHFu3x5ekJZyeZnA","TextMarkTextContent":"为什么说 Apache APISIX 是最好的 API 网关？"}]}]},{"ID":"20240201213667-h6b2b9s","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213667-h6b2b9s","updated":"20240201213667"},"Children":[{"ID":"20240201213668-nsjhud5","Type":"NodeParagraph","Properties":{"id":"20240201213668-nsjhud5","updated":"20240201213668"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://www.apiseven.com/zh/blog/why-we-need-Apache-APISIX","TextMarkTextContent":"有了 NGINX 和 Kong，为什么还需要 Apache APISIX"}]}]},{"ID":"20240201213669-jg7314t","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213669-jg7314t","updated":"20240201213669"},"Children":[{"ID":"20240201213670-4fp95s8","Type":"NodeParagraph","Properties":{"id":"20240201213670-4fp95s8","updated":"20240201213670"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://www.apiseven.com/zh/blog","TextMarkTextContent":"APISIX 技术博客"}]}]},{"ID":"20240201213671-cak2mkr","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213671-cak2mkr","updated":"20240201213671"},"Children":[{"ID":"20240201213672-g9hw4a7","Type":"NodeParagraph","Properties":{"id":"20240201213672-g9hw4a7","updated":"20240201213672"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://www.apiseven.com/zh/usercases","TextMarkTextContent":"APISIX 用户案例"},{"Type":"NodeText","Data":"（推荐）"}]}]}]},{"ID":"20240201213673-mj2j0eq","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240201213673-mj2j0eq","updated":"20240201213673"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"Shenyu"}]},{"ID":"20240201213674-7qa9tzq","Type":"NodeParagraph","Properties":{"id":"20240201213674-7qa9tzq","updated":"20240201213674"},"Children":[{"Type":"NodeText","Data":"Shenyu 是一款基于 WebFlux 的可扩展、高性能、响应式网关，Apache 顶级开源项目。"}]},{"ID":"20240201213675-uvhhuoi","Type":"NodeParagraph","Properties":{"id":"20240201213675-uvhhuoi","updated":"20240201213675"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"Shenyu 架构","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"https://oss.javaguide.cn/github/javaguide/distributed-system/api-gateway/shenyu-architecture.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201213676-za3oaer","Type":"NodeParagraph","Properties":{"id":"20240201213676-za3oaer","updated":"20240201213676"},"Children":[{"Type":"NodeText","Data":"Shenyu 通过插件扩展功能，插件是 ShenYu 的灵魂，并且插件也是可扩展和热插拔的。不同的插件实现不同的功能。Shenyu 自带了诸如限流、熔断、转发、重写、重定向、和路由监控等插件。"}]},{"ID":"20240201213677-kaouprl","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213677-kaouprl","updated":"20240201213677"},"Children":[{"ID":"20240201213678-acewm10","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213678-acewm10","updated":"20240201213678"},"Children":[{"ID":"20240201213679-voqx8ua","Type":"NodeParagraph","Properties":{"id":"20240201213679-voqx8ua","updated":"20240201213679"},"Children":[{"Type":"NodeText","Data":"Github 地址： "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/apache/incubator-shenyu","TextMarkTextContent":"https://github.com/apache/incubator-shenyu"}]}]},{"ID":"20240201213680-jwqvxl8","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213680-jwqvxl8","updated":"20240201213680"},"Children":[{"ID":"20240201213681-4y8a44h","Type":"NodeParagraph","Properties":{"id":"20240201213681-4y8a44h","updated":"20240201213681"},"Children":[{"Type":"NodeText","Data":"官网地址： "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://shenyu.apache.org/","TextMarkTextContent":"https://shenyu.apache.org/"}]}]}]},{"ID":"20240201213682-0u1x5b4","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240201213682-0u1x5b4","updated":"20240201213682"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"如何选择？"}]},{"ID":"20240201213683-o92wtv4","Type":"NodeParagraph","Properties":{"id":"20240201213683-o92wtv4","updated":"20240201213683"},"Children":[{"Type":"NodeText","Data":"上面介绍的几个常见的网关系统，最常用的是 Spring Cloud Gateway、Kong、APISIX 这三个。"}]},{"ID":"20240201213684-i4d7tv5","Type":"NodeParagraph","Properties":{"id":"20240201213684-i4d7tv5","updated":"20240201213684"},"Children":[{"Type":"NodeText","Data":"对于公司业务以 Java 为主要开发语言的情况下，Spring Cloud Gateway 通常是个不错的选择，其优点有：简单易用、成熟稳定、与 Spring Cloud 生态系统兼容、Spring 社区成熟等等。不过，Spring Cloud Gateway 也有一些局限性和不足之处， 一般还需要结合其他网关一起使用比如 OpenResty。并且，其性能相比较于 Kong 和 APISIX，还是差一些。如果对性能要求比较高的话，Spring Cloud Gateway 不是一个好的选择。"}]},{"ID":"20240201213685-u4p969p","Type":"NodeParagraph","Properties":{"id":"20240201213685-u4p969p","updated":"20240201213685"},"Children":[{"Type":"NodeText","Data":"Kong 和 APISIX 功能更丰富，性能更强大，技术架构更贴合云原生。Kong 是开源 API 网关的鼻祖，生态丰富，用户群体庞大。APISIX 属于后来者，更优秀一些，根据 APISIX 官网介绍：“APISIX 已经生产可用，功能、性能、架构全面优于 Kong”。下面简单对比一下二者："}]},{"ID":"20240201213686-5mra1z3","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213686-5mra1z3","updated":"20240201213686"},"Children":[{"ID":"20240201213687-pugd0vt","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213687-pugd0vt","updated":"20240201213687"},"Children":[{"ID":"20240201213688-9chnbnh","Type":"NodeParagraph","Properties":{"id":"20240201213688-9chnbnh","updated":"20240201213688"},"Children":[{"Type":"NodeText","Data":"APISIX 基于 etcd 来做配置中心，不存在单点问题，云原生友好；而 Kong 基于 Apache Cassandra/PostgreSQL ，存在单点风险，需要额外的基础设施保障做高可用。"}]}]},{"ID":"20240201213689-p1rzljk","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213689-p1rzljk","updated":"20240201213689"},"Children":[{"ID":"20240201213690-jt7m1yl","Type":"NodeParagraph","Properties":{"id":"20240201213690-jt7m1yl","updated":"20240201213690"},"Children":[{"Type":"NodeText","Data":"APISIX 支持热更新，并且实现了毫秒级别的热更新响应；而 Kong 不支持热更新。"}]}]},{"ID":"20240201213691-3y6buoy","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213691-3y6buoy","updated":"20240201213691"},"Children":[{"ID":"20240201213692-sfm34sn","Type":"NodeParagraph","Properties":{"id":"20240201213692-sfm34sn","updated":"20240201213692"},"Children":[{"Type":"NodeText","Data":"APISIX 的性能要优于 Kong 。"}]}]},{"ID":"20240201213693-1vooa6u","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213693-1vooa6u","updated":"20240201213693"},"Children":[{"ID":"20240201213694-3i4xef6","Type":"NodeParagraph","Properties":{"id":"20240201213694-3i4xef6","updated":"20240201213694"},"Children":[{"Type":"NodeText","Data":"APISIX 支持的插件更多，功能更丰富。"}]}]}]},{"ID":"20240201213695-fsl3jrs","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240201213695-fsl3jrs","updated":"20240201213695"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"参考"}]},{"ID":"20240201213696-jsy650j","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213696-jsy650j","updated":"20240201213696"},"Children":[{"ID":"20240201213697-ynasdbh","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213697-ynasdbh","updated":"20240201213697"},"Children":[{"ID":"20240201213698-7v0yhjt","Type":"NodeParagraph","Properties":{"id":"20240201213698-7v0yhjt","updated":"20240201213698"},"Children":[{"Type":"NodeText","Data":"Kong 插件开发教程[通俗易懂]："},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://cloud.tencent.com/developer/article/2104299","TextMarkTextContent":"https://cloud.tencent.com/developer/article/2104299"}]}]},{"ID":"20240201213699-h540499","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213699-h540499","updated":"20240201213699"},"Children":[{"ID":"20240201213700-4whj2w8","Type":"NodeParagraph","Properties":{"id":"20240201213700-4whj2w8","updated":"20240201213700"},"Children":[{"Type":"NodeText","Data":"API 网关 Kong 实战："},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://xie.infoq.cn/article/10e4dab2de0bdb6f2c3c93da6","TextMarkTextContent":"https://xie.infoq.cn/article/10e4dab2de0bdb6f2c3c93da6"}]}]},{"ID":"20240201213701-w5q3103","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213701-w5q3103","updated":"20240201213701"},"Children":[{"ID":"20240201213702-ep7444y","Type":"NodeParagraph","Properties":{"id":"20240201213702-ep7444y","updated":"20240201213702"},"Children":[{"Type":"NodeText","Data":"Spring Cloud Gateway 原理介绍和应用："},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://blog.fintopia.tech/60e27b0e2078082a378ec5ed/","TextMarkTextContent":"https://blog.fintopia.tech/60e27b0e2078082a378ec5ed/"}]}]},{"ID":"20240201213703-tvszwck","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213703-tvszwck","updated":"20240201213703"},"Children":[{"ID":"20240201213704-zf1rj6c","Type":"NodeParagraph","Properties":{"id":"20240201213704-zf1rj6c","updated":"20240201213704"},"Children":[{"Type":"NodeText","Data":"微服务为什么要用到 API 网关？："},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://apisix.apache.org/zh/blog/2023/03/08/why-do-microservices-need-an-api-gateway/","TextMarkTextContent":"https://apisix.apache.org/zh/blog/2023/03/08/why-do-microservices-need-an-api-gateway/"}]}]}]},{"ID":"20240201213705-s805l47","Type":"NodeHTMLBlock","Data":"\u003cdiv\u003e\n\u003c!-- @include: @article-footer.snippet.md --\u003e\n\u003c/div\u003e","HtmlBlockType":2,"Properties":{"id":"20240201213705-s805l47","updated":"20240201213705"}}]}