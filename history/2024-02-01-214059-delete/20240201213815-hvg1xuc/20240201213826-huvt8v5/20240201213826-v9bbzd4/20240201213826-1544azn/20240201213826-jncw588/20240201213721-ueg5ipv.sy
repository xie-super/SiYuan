{"ID":"20240201213721-ueg5ipv","Spec":"1","Type":"NodeDocument","Properties":{"id":"20240201213721-ueg5ipv","title":"paxos-algorithm","updated":"20240201213721"},"Children":[{"ID":"20240201213722-khhc45u","Type":"NodeThematicBreak","Properties":{"id":"20240201213722-khhc45u","updated":"20240201213722"}},{"ID":"20240201213723-grflh2x","Type":"NodeParagraph","Properties":{"id":"20240201213723-grflh2x","updated":"20240201213723"},"Children":[{"Type":"NodeText","Data":"title: Paxos 算法详解"},{"Type":"NodeSoftBreak","Data":"\n","Properties":{"id":""}},{"Type":"NodeText","Data":"category: 分布式"},{"Type":"NodeSoftBreak","Data":"\n","Properties":{"id":""}},{"Type":"NodeText","Data":"tag:"}]},{"ID":"20240201213724-rosu1g3","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"MarkerOffset":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213724-rosu1g3","updated":"20240201213724"},"Children":[{"ID":"20240201213725-ziqpjqx","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"MarkerOffset":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213725-ziqpjqx","updated":"20240201213725"},"Children":[{"ID":"20240201213726-ug5g6ry","Type":"NodeParagraph","Properties":{"id":"20240201213726-ug5g6ry","updated":"20240201213726"},"Children":[{"Type":"NodeText","Data":"分布式协议\u0026算法"}]}]},{"ID":"20240201213727-ej5tf66","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"MarkerOffset":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213727-ej5tf66","updated":"20240201213727"},"Children":[{"ID":"20240201213728-oixetxi","Type":"NodeParagraph","Properties":{"id":"20240201213728-oixetxi","updated":"20240201213728"},"Children":[{"Type":"NodeText","Data":"共识算法"}]}]}]},{"ID":"20240201213729-ve4gdte","Type":"NodeThematicBreak","Properties":{"id":"20240201213729-ve4gdte","updated":"20240201213729"}},{"ID":"20240201213730-37vzc4b","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240201213730-37vzc4b","updated":"20240201213730"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"背景"}]},{"ID":"20240201213731-2v5kocg","Type":"NodeParagraph","Properties":{"id":"20240201213731-2v5kocg","updated":"20240201213731"},"Children":[{"Type":"NodeText","Data":"Paxos 算法是 Leslie Lamport（"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://zh.wikipedia.org/wiki/莱斯利·兰伯特","TextMarkTextContent":"莱斯利·兰伯特"},{"Type":"NodeText","Data":"）在 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"1990"},{"Type":"NodeText","Data":" 年提出了一种分布式系统 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"共识"},{"Type":"NodeText","Data":" 算法。这也是第一个被证明完备的共识算法（前提是不存在拜占庭将军问题，也就是没有恶意节点）。"}]},{"ID":"20240201213732-s18nlaw","Type":"NodeParagraph","Properties":{"id":"20240201213732-s18nlaw","updated":"20240201213732"},"Children":[{"Type":"NodeText","Data":"为了介绍 Paxos 算法，兰伯特专门写了一篇幽默风趣的论文。在这篇论文中，他虚拟了一个叫做 Paxos 的希腊城邦来更形象化地介绍 Paxos 算法。"}]},{"ID":"20240201213733-h0j4mhe","Type":"NodeParagraph","Properties":{"id":"20240201213733-h0j4mhe","updated":"20240201213733"},"Children":[{"Type":"NodeText","Data":"不过，审稿人并不认可这篇论文的幽默。于是，他们就给兰伯特说：“如果你想要成功发表这篇论文的话，必须删除所有 Paxos 相关的故事背景”。兰伯特一听就不开心了：“我凭什么修改啊，你们这些审稿人就是缺乏幽默细胞，发不了就不发了呗！”。"}]},{"ID":"20240201213734-j9swjxh","Type":"NodeParagraph","Properties":{"id":"20240201213734-j9swjxh","updated":"20240201213734"},"Children":[{"Type":"NodeText","Data":"于是乎，提出 Paxos 算法的那篇论文在当时并没有被成功发表。"}]},{"ID":"20240201213735-l4gnekc","Type":"NodeParagraph","Properties":{"id":"20240201213735-l4gnekc","updated":"20240201213735"},"Children":[{"Type":"NodeText","Data":"直到 1998 年，系统研究中心 (Systems Research Center，SRC）的两个技术研究员需要找一些合适的分布式算法来服务他们正在构建的分布式系统，Paxos 算法刚好可以解决他们的部分需求。因此，兰伯特就把论文发给了他们。在看了论文之后，这俩大佬觉得论文还是挺不错的。于是，兰伯特在 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"1998"},{"Type":"NodeText","Data":" 年重新发表论文 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"http://lamport.azurewebsites.net/pubs/lamport-paxos.pdf","TextMarkTextContent":"《The Part-Time Parliament》"},{"Type":"NodeText","Data":"。"}]},{"ID":"20240201213736-1u7cy4b","Type":"NodeParagraph","Properties":{"id":"20240201213736-1u7cy4b","updated":"20240201213736"},"Children":[{"Type":"NodeText","Data":"论文发表之后，各路学者直呼看不懂，言语中还略显调侃之意。这谁忍得了，在 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"2001"},{"Type":"NodeText","Data":" 年的时候，兰伯特专门又写了一篇 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"http://lamport.azurewebsites.net/pubs/paxos-simple.pdf","TextMarkTextContent":"《Paxos Made Simple》"},{"Type":"NodeText","Data":" 的论文来简化对 Paxos 的介绍，主要讲述两阶段共识协议部分，顺便还不忘嘲讽一下这群学者。"}]},{"ID":"20240201213737-7kmx3tb","Type":"NodeParagraph","Properties":{"id":"20240201213737-7kmx3tb","updated":"20240201213737"},"Children":[{"Type":"NodeText","Data":"《Paxos Made Simple》这篇论文就 14 页，相比于 《The Part-Time Parliament》的 33 页精简了不少。最关键的是这篇论文的摘要就一句话："}]},{"ID":"20240201213738-vspzdx8","Type":"NodeParagraph","Properties":{"id":"20240201213738-vspzdx8","updated":"20240201213738"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"assets/paxos-made-simple-20240201213826-z245tnl.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201213739-w1nvhxo","Type":"NodeBlockquote","Properties":{"id":"20240201213739-w1nvhxo","updated":"20240201213739"},"Children":[{"Type":"NodeBlockquoteMarker","Data":"\u003e ","Properties":{"id":""}},{"ID":"20240201213740-2yh861r","Type":"NodeParagraph","Properties":{"id":"20240201213740-2yh861r","updated":"20240201213740"},"Children":[{"Type":"NodeText","Data":"The Paxos algorithm, when presented in plain English, is very simple."}]}]},{"ID":"20240201213741-7ty9ay3","Type":"NodeParagraph","Properties":{"id":"20240201213741-7ty9ay3","updated":"20240201213741"},"Children":[{"Type":"NodeText","Data":"翻译过来的意思大概就是：当我用无修饰的英文来描述时，Paxos 算法真心简单！"}]},{"ID":"20240201213742-fum7516","Type":"NodeParagraph","Properties":{"id":"20240201213742-fum7516","updated":"20240201213742"},"Children":[{"Type":"NodeText","Data":"有没有感觉到来自兰伯特大佬满满地嘲讽的味道？"}]},{"ID":"20240201213743-cjcbwm7","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240201213743-cjcbwm7","updated":"20240201213743"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"介绍"}]},{"ID":"20240201213744-17k5qy7","Type":"NodeParagraph","Properties":{"id":"20240201213744-17k5qy7","updated":"20240201213744"},"Children":[{"Type":"NodeText","Data":"Paxos 算法是第一个被证明完备的分布式系统共识算法。共识算法的作用是让分布式系统中的多个节点之间对某个提案（Proposal）达成一致的看法。提案的含义在分布式系统中十分宽泛，像哪一个节点是 Leader 节点、多个事件发生的顺序等等都可以是一个提案。"}]},{"ID":"20240201213745-xdyhgog","Type":"NodeParagraph","Properties":{"id":"20240201213745-xdyhgog","updated":"20240201213745"},"Children":[{"Type":"NodeText","Data":"兰伯特当时提出的 Paxos 算法主要包含 2 个部分:"}]},{"ID":"20240201213746-psw2hdo","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213746-psw2hdo","updated":"20240201213746"},"Children":[{"ID":"20240201213747-sw9jwjj","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213747-sw9jwjj","updated":"20240201213747"},"Children":[{"ID":"20240201213748-nybyfpm","Type":"NodeParagraph","Properties":{"id":"20240201213748-nybyfpm","updated":"20240201213748"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"Basic Paxos 算法"},{"Type":"NodeText","Data":"：描述的是多节点之间如何就某个值(提案 Value)达成共识。"}]}]},{"ID":"20240201213749-dei4pcg","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213749-dei4pcg","updated":"20240201213749"},"Children":[{"ID":"20240201213750-f2tsgl5","Type":"NodeParagraph","Properties":{"id":"20240201213750-f2tsgl5","updated":"20240201213750"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"Multi-Paxos 思想"},{"Type":"NodeText","Data":"：描述的是执行多个 Basic Paxos 实例，就一系列值达成共识。Multi-Paxos 说白了就是执行多次 Basic Paxos ，核心还是 Basic Paxos 。"}]}]}]},{"ID":"20240201213751-ngwopdj","Type":"NodeParagraph","Properties":{"id":"20240201213751-ngwopdj","updated":"20240201213751"},"Children":[{"Type":"NodeText","Data":"由于 Paxos 算法在国际上被公认的非常难以理解和实现，因此不断有人尝试简化这一算法。到了 2013 年才诞生了一个比 Paxos 算法更易理解和实现的共识算法—"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://javaguide.cn/distributed-system/theorem\u0026algorithm\u0026protocol/raft-algorithm.html","TextMarkTextContent":"Raft 算法"},{"Type":"NodeText","Data":" 。更具体点来说，Raft 是 Multi-Paxos 的一个变种，其简化了 Multi-Paxos 的思想，变得更容易被理解以及工程实现。"}]},{"ID":"20240201213752-1iqgp1b","Type":"NodeParagraph","Properties":{"id":"20240201213752-1iqgp1b","updated":"20240201213752"},"Children":[{"Type":"NodeText","Data":"针对没有恶意节点的情况，除了 Raft 算法之外，当前最常用的一些共识算法比如 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"ZAB 协议"},{"Type":"NodeText","Data":"、 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"Fast Paxos"},{"Type":"NodeText","Data":" 算法都是基于 Paxos 算法改进的。"}]},{"ID":"20240201213753-45jzb92","Type":"NodeParagraph","Properties":{"id":"20240201213753-45jzb92","updated":"20240201213753"},"Children":[{"Type":"NodeText","Data":"针对存在恶意节点的情况，一般使用的是 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"工作量证明（POW，Proof-of-Work）"},{"Type":"NodeText","Data":"、 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"权益证明（PoS，Proof-of-Stake ）"},{"Type":"NodeText","Data":" 等共识算法。这类共识算法最典型的应用就是区块链，就比如说前段时间以太坊官方宣布其共识机制正在从工作量证明(PoW)转变为权益证明(PoS)。"}]},{"ID":"20240201213754-bq25fje","Type":"NodeParagraph","Properties":{"id":"20240201213754-bq25fje","updated":"20240201213754"},"Children":[{"Type":"NodeText","Data":"区块链系统使用的共识算法需要解决的核心问题是 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"拜占庭将军问题"},{"Type":"NodeText","Data":" ，这和我们日常接触到的 ZooKeeper、Etcd、Consul 等分布式中间件不太一样。"}]},{"ID":"20240201213755-umzgou4","Type":"NodeParagraph","Properties":{"id":"20240201213755-umzgou4","updated":"20240201213755"},"Children":[{"Type":"NodeText","Data":"下面我们来对 Paxos 算法的定义做一个总结："}]},{"ID":"20240201213756-eoiutls","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213756-eoiutls","updated":"20240201213756"},"Children":[{"ID":"20240201213757-a4zh7cc","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213757-a4zh7cc","updated":"20240201213757"},"Children":[{"ID":"20240201213758-yvpfrk9","Type":"NodeParagraph","Properties":{"id":"20240201213758-yvpfrk9","updated":"20240201213758"},"Children":[{"Type":"NodeText","Data":"Paxos 算法是兰伯特在 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"1990"},{"Type":"NodeText","Data":" 年提出了一种分布式系统共识算法。"}]}]},{"ID":"20240201213759-plyguqg","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213759-plyguqg","updated":"20240201213759"},"Children":[{"ID":"20240201213760-gqlacvj","Type":"NodeParagraph","Properties":{"id":"20240201213760-gqlacvj","updated":"20240201213760"},"Children":[{"Type":"NodeText","Data":"兰伯特当时提出的 Paxos 算法主要包含 2 个部分: Basic Paxos 算法和 Multi-Paxos 思想。"}]}]},{"ID":"20240201213761-cg2cqep","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213761-cg2cqep","updated":"20240201213761"},"Children":[{"ID":"20240201213762-38itta5","Type":"NodeParagraph","Properties":{"id":"20240201213762-38itta5","updated":"20240201213762"},"Children":[{"Type":"NodeText","Data":"Raft 算法、ZAB 协议、 Fast Paxos 算法都是基于 Paxos 算法改进而来。"}]}]}]},{"ID":"20240201213763-kl10jf4","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240201213763-kl10jf4","updated":"20240201213763"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"Basic Paxos 算法"}]},{"ID":"20240201213764-iogqutw","Type":"NodeParagraph","Properties":{"id":"20240201213764-iogqutw","updated":"20240201213764"},"Children":[{"Type":"NodeText","Data":"Basic Paxos 中存在 3 个重要的角色："}]},{"ID":"20240201213765-zldmy54","Type":"NodeList","ListData":{"Typ":1,"Tight":true,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20240201213765-zldmy54","updated":"20240201213765"},"Children":[{"ID":"20240201213766-6drt7nn","Type":"NodeListItem","Data":"1","ListData":{"Typ":1,"Tight":true,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20240201213766-6drt7nn","updated":"20240201213766"},"Children":[{"ID":"20240201213767-qqc8hme","Type":"NodeParagraph","Properties":{"id":"20240201213767-qqc8hme","updated":"20240201213767"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"提议者（Proposer）"},{"Type":"NodeText","Data":"：也可以叫做协调者（coordinator），提议者负责接受客户端的请求并发起提案。提案信息通常包括提案编号 (Proposal ID) 和提议的值 (Value)。"}]}]},{"ID":"20240201213768-lqo7spo","Type":"NodeListItem","Data":"2","ListData":{"Typ":1,"Tight":true,"Start":2,"Delimiter":46,"Padding":3,"Marker":"Mg==","Num":2},"Properties":{"id":"20240201213768-lqo7spo","updated":"20240201213768"},"Children":[{"ID":"20240201213769-qi43baz","Type":"NodeParagraph","Properties":{"id":"20240201213769-qi43baz","updated":"20240201213769"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"接受者（Acceptor）"},{"Type":"NodeText","Data":"：也可以叫做投票员（voter），负责对提议者的提案进行投票，同时需要记住自己的投票历史；"}]}]},{"ID":"20240201213770-ophdcs6","Type":"NodeListItem","Data":"3","ListData":{"Typ":1,"Tight":true,"Start":3,"Delimiter":46,"Padding":3,"Marker":"Mw==","Num":3},"Properties":{"id":"20240201213770-ophdcs6","updated":"20240201213770"},"Children":[{"ID":"20240201213771-h8yzuat","Type":"NodeParagraph","Properties":{"id":"20240201213771-h8yzuat","updated":"20240201213771"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"学习者（Learner）"},{"Type":"NodeText","Data":"：如果有超过半数接受者就某个提议达成了共识，那么学习者就需要接受这个提议，并就该提议作出运算，然后将运算结果返回给客户端。"}]}]}]},{"ID":"20240201213772-192imbv","Type":"NodeParagraph","Properties":{"id":"20240201213772-192imbv","updated":"20240201213772"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"https://oss.javaguide.cn/github/javaguide/distributed-system/protocol/up-890fa3212e8bf72886a595a34654918486c.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201213773-v92dumq","Type":"NodeParagraph","Properties":{"id":"20240201213773-v92dumq","updated":"20240201213773"},"Children":[{"Type":"NodeText","Data":"为了减少实现该算法所需的节点数，一个节点可以身兼多个角色。并且，一个提案被选定需要被半数以上的 Acceptor 接受。这样的话，Basic Paxos 算法还具备容错性，在少于一半的节点出现故障时，集群仍能正常工作。"}]},{"ID":"20240201213774-4m59i7n","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240201213774-4m59i7n","updated":"20240201213774"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"Multi Paxos 思想"}]},{"ID":"20240201213775-m9uksli","Type":"NodeParagraph","Properties":{"id":"20240201213775-m9uksli","updated":"20240201213775"},"Children":[{"Type":"NodeText","Data":"Basic Paxos 算法的仅能就单个值达成共识，为了能够对一系列的值达成共识，我们需要用到 Basic Paxos 思想。"}]},{"ID":"20240201213776-ygocjyv","Type":"NodeParagraph","Properties":{"id":"20240201213776-ygocjyv","updated":"20240201213776"},"Children":[{"Type":"NodeText","Data":"⚠️"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"注意"},{"Type":"NodeText","Data":"：Multi-Paxos 只是一种思想，这种思想的核心就是通过多个 Basic Paxos 实例就一系列值达成共识。也就是说，Basic Paxos 是 Multi-Paxos 思想的核心，Multi-Paxos 就是多执行几次 Basic Paxos。"}]},{"ID":"20240201213777-3qgp2bu","Type":"NodeParagraph","Properties":{"id":"20240201213777-3qgp2bu","updated":"20240201213777"},"Children":[{"Type":"NodeText","Data":"由于兰伯特提到的 Multi-Paxos 思想缺少代码实现的必要细节(比如怎么选举领导者)，所以在理解和实现上比较困难。"}]},{"ID":"20240201213778-f90kf2h","Type":"NodeParagraph","Properties":{"id":"20240201213778-f90kf2h","updated":"20240201213778"},"Children":[{"Type":"NodeText","Data":"不过，也不需要担心，我们并不需要自己实现基于 Multi-Paxos 思想的共识算法，业界已经有了比较出名的实现。像 Raft 算法就是 Multi-Paxos 的一个变种，其简化了 Multi-Paxos 的思想，变得更容易被理解以及工程实现，实际项目中可以优先考虑 Raft 算法。"}]},{"ID":"20240201213779-603773l","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240201213779-603773l","updated":"20240201213779"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"参考"}]},{"ID":"20240201213780-y9jgx19","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213780-y9jgx19","updated":"20240201213780"},"Children":[{"ID":"20240201213781-tdad9im","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213781-tdad9im","updated":"20240201213781"},"Children":[{"ID":"20240201213782-7f5u5a5","Type":"NodeParagraph","Properties":{"id":"20240201213782-7f5u5a5","updated":"20240201213782"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://zh.wikipedia.org/wiki/Paxos","TextMarkTextContent":"https://zh.wikipedia.org/wiki/Paxos"}]}]},{"ID":"20240201213783-opas1wx","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213783-opas1wx","updated":"20240201213783"},"Children":[{"ID":"20240201213784-7upxkri","Type":"NodeParagraph","Properties":{"id":"20240201213784-7upxkri","updated":"20240201213784"},"Children":[{"Type":"NodeText","Data":"分布式系统中的一致性与共识算法："},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"http://www.xuyasong.com/?p=1970","TextMarkTextContent":"http://www.xuyasong.com/?p=1970"}]}]}]},{"ID":"20240201213785-3gmmrab","Type":"NodeHTMLBlock","Data":"\u003cdiv\u003e\n\u003c!-- @include: @article-footer.snippet.md --\u003e\n\u003c/div\u003e","HtmlBlockType":2,"Properties":{"id":"20240201213785-3gmmrab","updated":"20240201213785"}}]}