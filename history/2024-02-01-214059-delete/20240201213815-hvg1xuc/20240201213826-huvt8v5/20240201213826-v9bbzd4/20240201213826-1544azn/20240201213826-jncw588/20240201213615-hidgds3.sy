{"ID":"20240201213615-hidgds3","Spec":"1","Type":"NodeDocument","Properties":{"id":"20240201213615-hidgds3","title":"raft-algorithm","updated":"20240201213615"},"Children":[{"ID":"20240201213616-d5egfsz","Type":"NodeThematicBreak","Properties":{"id":"20240201213616-d5egfsz","updated":"20240201213616"}},{"ID":"20240201213617-vl3vhe1","Type":"NodeParagraph","Properties":{"id":"20240201213617-vl3vhe1","updated":"20240201213617"},"Children":[{"Type":"NodeText","Data":"title: Raft 算法详解"},{"Type":"NodeSoftBreak","Data":"\n","Properties":{"id":""}},{"Type":"NodeText","Data":"category: 分布式"},{"Type":"NodeSoftBreak","Data":"\n","Properties":{"id":""}},{"Type":"NodeText","Data":"tag:"}]},{"ID":"20240201213618-1oqrk87","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"MarkerOffset":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213618-1oqrk87","updated":"20240201213618"},"Children":[{"ID":"20240201213619-ksj6hr1","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"MarkerOffset":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213619-ksj6hr1","updated":"20240201213619"},"Children":[{"ID":"20240201213620-9nk63ai","Type":"NodeParagraph","Properties":{"id":"20240201213620-9nk63ai","updated":"20240201213620"},"Children":[{"Type":"NodeText","Data":"分布式协议\u0026算法"}]}]},{"ID":"20240201213621-gdrlpul","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"MarkerOffset":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213621-gdrlpul","updated":"20240201213621"},"Children":[{"ID":"20240201213622-2uc3nvd","Type":"NodeParagraph","Properties":{"id":"20240201213622-2uc3nvd","updated":"20240201213622"},"Children":[{"Type":"NodeText","Data":"共识算法"}]}]}]},{"ID":"20240201213623-mzd4fs0","Type":"NodeThematicBreak","Properties":{"id":"20240201213623-mzd4fs0","updated":"20240201213623"}},{"ID":"20240201213624-hw689yx","Type":"NodeBlockquote","Properties":{"id":"20240201213624-hw689yx","updated":"20240201213624"},"Children":[{"Type":"NodeBlockquoteMarker","Data":"\u003e ","Properties":{"id":""}},{"ID":"20240201213625-c1sjfvl","Type":"NodeParagraph","Properties":{"id":"20240201213625-c1sjfvl","updated":"20240201213625"},"Children":[{"Type":"NodeText","Data":"本文由 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/Snailclimb","TextMarkTextContent":"SnailClimb"},{"Type":"NodeText","Data":" 和 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/jun0315","TextMarkTextContent":"Xieqijun"},{"Type":"NodeText","Data":" 共同完成。"}]}]},{"ID":"20240201213626-hx4z8m0","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240201213626-hx4z8m0","updated":"20240201213626"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"1 背景"}]},{"ID":"20240201213627-u7ekhk9","Type":"NodeParagraph","Properties":{"id":"20240201213627-u7ekhk9","updated":"20240201213627"},"Children":[{"Type":"NodeText","Data":"当今的数据中心和应用程序在高度动态的环境中运行，为了应对高度动态的环境，它们通过额外的服务器进行横向扩展，并且根据需求进行扩展和收缩。同时，服务器和网络故障也很常见。"}]},{"ID":"20240201213628-t5f5nbz","Type":"NodeParagraph","Properties":{"id":"20240201213628-t5f5nbz","updated":"20240201213628"},"Children":[{"Type":"NodeText","Data":"因此，系统必须在正常操作期间处理服务器的上下线。它们必须对变故做出反应并在几秒钟内自动适应；对客户来说的话，明显的中断通常是不可接受的。"}]},{"ID":"20240201213629-pwa2k16","Type":"NodeParagraph","Properties":{"id":"20240201213629-pwa2k16","updated":"20240201213629"},"Children":[{"Type":"NodeText","Data":"幸运的是，分布式共识可以帮助应对这些挑战。"}]},{"ID":"20240201213630-ncuoh37","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240201213630-ncuoh37","updated":"20240201213630"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"1.1 拜占庭将军"}]},{"ID":"20240201213631-1sonruh","Type":"NodeParagraph","Properties":{"id":"20240201213631-1sonruh","updated":"20240201213631"},"Children":[{"Type":"NodeText","Data":"在介绍共识算法之前，先介绍一个简化版拜占庭将军的例子来帮助理解共识算法。"}]},{"ID":"20240201213632-b71bjkr","Type":"NodeBlockquote","Properties":{"id":"20240201213632-b71bjkr","updated":"20240201213632"},"Children":[{"Type":"NodeBlockquoteMarker","Data":"\u003e ","Properties":{"id":""}},{"ID":"20240201213633-7p1tcjl","Type":"NodeParagraph","Properties":{"id":"20240201213633-7p1tcjl","updated":"20240201213633"},"Children":[{"Type":"NodeText","Data":"假设多位拜占庭将军中没有叛军，信使的信息可靠但有可能被暗杀的情况下，将军们如何达成是否要进攻的一致性决定？"}]}]},{"ID":"20240201213634-poxk1pp","Type":"NodeParagraph","Properties":{"id":"20240201213634-poxk1pp","updated":"20240201213634"},"Children":[{"Type":"NodeText","Data":"解决方案大致可以理解成：先在所有的将军中选出一个大将军，用来做出所有的决定。"}]},{"ID":"20240201213635-mrsndh8","Type":"NodeParagraph","Properties":{"id":"20240201213635-mrsndh8","updated":"20240201213635"},"Children":[{"Type":"NodeText","Data":"举例如下：假如现在一共有 3 个将军 A，B 和 C，每个将军都有一个随机时间的倒计时器，倒计时一结束，这个将军就把自己当成大将军候选人，然后派信使传递选举投票的信息给将军 B 和 C，如果将军 B 和 C 还没有把自己当作候选人（自己的倒计时还没有结束），并且没有把选举票投给其他人，它们就会把票投给将军 A，信使回到将军 A 时，将军 A 知道自己收到了足够的票数，成为大将军。在有了大将军之后，是否需要进攻就由大将军 A 决定，然后再去派信使通知另外两个将军，自己已经成为了大将军。如果一段时间还没收到将军 B 和 C 的回复（信使可能会被暗杀），那就再重派一个信使，直到收到回复。"}]},{"ID":"20240201213636-i7vkaph","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240201213636-i7vkaph","updated":"20240201213636"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"1.2 共识算法"}]},{"ID":"20240201213637-amq8qrg","Type":"NodeParagraph","Properties":{"id":"20240201213637-amq8qrg","updated":"20240201213637"},"Children":[{"Type":"NodeText","Data":"共识是可容错系统中的一个基本问题：即使面对故障，服务器也可以在共享状态上达成一致。"}]},{"ID":"20240201213638-ycvbzfc","Type":"NodeParagraph","Properties":{"id":"20240201213638-ycvbzfc","updated":"20240201213638"},"Children":[{"Type":"NodeText","Data":"共识算法允许一组节点像一个整体一样一起工作，即使其中的一些节点出现故障也能够继续工作下去，其正确性主要是源于复制状态机的性质：一组"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"Server"},{"Type":"NodeText","Data":"的状态机计算相同状态的副本，即使有一部分的"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"Server"},{"Type":"NodeText","Data":"宕机了它们仍然能够继续运行。"}]},{"ID":"20240201213639-qu6vnqv","Type":"NodeParagraph","Properties":{"id":"20240201213639-qu6vnqv","updated":"20240201213639"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"rsm-architecture.png","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"https://oss.javaguide.cn/github/javaguide/paxos-rsm-architecture.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201213640-e3i5o38","Type":"NodeParagraph","Properties":{"id":"20240201213640-e3i5o38","updated":"20240201213640"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"图-1 复制状态机架构"}]},{"ID":"20240201213641-471a9wz","Type":"NodeParagraph","Properties":{"id":"20240201213641-471a9wz","updated":"20240201213641"},"Children":[{"Type":"NodeText","Data":"一般通过使用复制日志来实现复制状态机。每个"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"Server"},{"Type":"NodeText","Data":"存储着一份包括命令序列的日志文件，状态机会按顺序执行这些命令。因为每个日志包含相同的命令，并且顺序也相同，所以每个状态机处理相同的命令序列。由于状态机是确定性的，所以处理相同的状态，得到相同的输出。"}]},{"ID":"20240201213642-aeup7k3","Type":"NodeParagraph","Properties":{"id":"20240201213642-aeup7k3","updated":"20240201213642"},"Children":[{"Type":"NodeText","Data":"因此共识算法的工作就是保持复制日志的一致性。服务器上的共识模块从客户端接收命令并将它们添加到日志中。它与其他服务器上的共识模块通信，以确保即使某些服务器发生故障。每个日志最终包含相同顺序的请求。一旦命令被正确地复制，它们就被称为已提交。每个服务器的状态机按照日志顺序处理已提交的命令，并将输出返回给客户端，因此，这些服务器形成了一个单一的、高度可靠的状态机。"}]},{"ID":"20240201213643-bsxyqfb","Type":"NodeParagraph","Properties":{"id":"20240201213643-bsxyqfb","updated":"20240201213643"},"Children":[{"Type":"NodeText","Data":"适用于实际系统的共识算法通常具有以下特性："}]},{"ID":"20240201213644-erod7ol","Type":"NodeList","ListData":{"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213644-erod7ol","updated":"20240201213644"},"Children":[{"ID":"20240201213645-0a2mtnf","Type":"NodeListItem","Data":"-","ListData":{"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213645-0a2mtnf","updated":"20240201213645"},"Children":[{"ID":"20240201213646-najlqav","Type":"NodeParagraph","Properties":{"id":"20240201213646-najlqav","updated":"20240201213646"},"Children":[{"Type":"NodeText","Data":"安全。确保在非拜占庭条件（也就是上文中提到的简易版拜占庭）下的安全性，包括网络延迟、分区、包丢失、复制和重新排序。"}]}]},{"ID":"20240201213647-1qbj3vf","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213647-1qbj3vf","updated":"20240201213647"},"Children":[{"ID":"20240201213648-lv1yn0c","Type":"NodeParagraph","Properties":{"id":"20240201213648-lv1yn0c","updated":"20240201213648"},"Children":[{"Type":"NodeText","Data":"高可用。只要大多数服务器都是可操作的，并且可以相互通信，也可以与客户端进行通信，那么这些服务器就可以看作完全功能可用的。因此，一个典型的由五台服务器组成的集群可以容忍任何两台服务器端故障。假设服务器因停止而发生故障；它们稍后可能会从稳定存储上的状态中恢复并重新加入集群。"}]}]},{"ID":"20240201213649-p3e8hur","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213649-p3e8hur","updated":"20240201213649"},"Children":[{"ID":"20240201213650-htd0eh9","Type":"NodeParagraph","Properties":{"id":"20240201213650-htd0eh9","updated":"20240201213650"},"Children":[{"Type":"NodeText","Data":"一致性不依赖时序。错误的时钟和极端的消息延迟，在最坏的情况下也只会造成可用性问题，而不会产生一致性问题。"}]}]},{"ID":"20240201213651-yfkjf30","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213651-yfkjf30","updated":"20240201213651"},"Children":[{"ID":"20240201213652-y55wqo8","Type":"NodeParagraph","Properties":{"id":"20240201213652-y55wqo8","updated":"20240201213652"},"Children":[{"Type":"NodeText","Data":"在集群中大多数服务器响应，命令就可以完成，不会被少数运行缓慢的服务器来影响整体系统性能。"}]}]}]},{"ID":"20240201213653-hzcb1dv","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240201213653-hzcb1dv","updated":"20240201213653"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"2 基础"}]},{"ID":"20240201213654-7jtxl69","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240201213654-7jtxl69","updated":"20240201213654"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"2.1 节点类型"}]},{"ID":"20240201213655-lui93xs","Type":"NodeParagraph","Properties":{"id":"20240201213655-lui93xs","updated":"20240201213655"},"Children":[{"Type":"NodeText","Data":"一个 Raft 集群包括若干服务器，以典型的 5 服务器集群举例。在任意的时间，每个服务器一定会处于以下三个状态中的一个："}]},{"ID":"20240201213656-51st17c","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213656-51st17c","updated":"20240201213656"},"Children":[{"ID":"20240201213657-8tqrd08","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213657-8tqrd08","updated":"20240201213657"},"Children":[{"ID":"20240201213658-2cf9xi6","Type":"NodeParagraph","Properties":{"id":"20240201213658-2cf9xi6","updated":"20240201213658"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"Leader"},{"Type":"NodeText","Data":"：负责发起心跳，响应客户端，创建日志，同步日志。"}]}]},{"ID":"20240201213659-aoiiim4","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213659-aoiiim4","updated":"20240201213659"},"Children":[{"ID":"20240201213660-m9h9ofi","Type":"NodeParagraph","Properties":{"id":"20240201213660-m9h9ofi","updated":"20240201213660"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"Candidate"},{"Type":"NodeText","Data":"：Leader 选举过程中的临时角色，由 Follower 转化而来，发起投票参与竞选。"}]}]},{"ID":"20240201213661-m8pu3w3","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213661-m8pu3w3","updated":"20240201213661"},"Children":[{"ID":"20240201213662-awulu5o","Type":"NodeParagraph","Properties":{"id":"20240201213662-awulu5o","updated":"20240201213662"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"Follower"},{"Type":"NodeText","Data":"：接受 Leader 的心跳和日志同步数据，投票给 Candidate。"}]}]}]},{"ID":"20240201213663-1gt9c1n","Type":"NodeParagraph","Properties":{"id":"20240201213663-1gt9c1n","updated":"20240201213663"},"Children":[{"Type":"NodeText","Data":"在正常的情况下，只有一个服务器是 Leader，剩下的服务器是 Follower。Follower 是被动的，它们不会发送任何请求，只是响应来自 Leader 和 Candidate 的请求。"}]},{"ID":"20240201213664-fc99edy","Type":"NodeParagraph","Properties":{"id":"20240201213664-fc99edy","updated":"20240201213664"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"https://oss.javaguide.cn/github/javaguide/paxos-server-state.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201213665-qqu3w7p","Type":"NodeParagraph","Properties":{"id":"20240201213665-qqu3w7p","updated":"20240201213665"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"图-2：服务器的状态"}]},{"ID":"20240201213666-tpv3m8k","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240201213666-tpv3m8k","updated":"20240201213666"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"2.2 任期"}]},{"ID":"20240201213667-fsbowu5","Type":"NodeParagraph","Properties":{"id":"20240201213667-fsbowu5","updated":"20240201213667"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"https://oss.javaguide.cn/github/javaguide/paxos-term.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201213668-sg43std","Type":"NodeParagraph","Properties":{"id":"20240201213668-sg43std","updated":"20240201213668"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"图-3：任期"}]},{"ID":"20240201213669-tkw50ai","Type":"NodeParagraph","Properties":{"id":"20240201213669-tkw50ai","updated":"20240201213669"},"Children":[{"Type":"NodeText","Data":"如图 3 所示，raft 算法将时间划分为任意长度的任期（term），任期用连续的数字表示，看作当前 term 号。每一个任期的开始都是一次选举，在选举开始时，一个或多个 Candidate 会尝试成为 Leader。如果一个 Candidate 赢得了选举，它就会在该任期内担任 Leader。如果没有选出 Leader，将会开启另一个任期，并立刻开始下一次选举。raft 算法保证在给定的一个任期最少要有一个 Leader。"}]},{"ID":"20240201213670-4c8nu80","Type":"NodeParagraph","Properties":{"id":"20240201213670-4c8nu80","updated":"20240201213670"},"Children":[{"Type":"NodeText","Data":"每个节点都会存储当前的 term 号，当服务器之间进行通信时会交换当前的 term 号；如果有服务器发现自己的 term 号比其他人小，那么他会更新到较大的 term 值。如果一个 Candidate 或者 Leader 发现自己的 term 过期了，他会立即退回成 Follower。如果一台服务器收到的请求的 term 号是过期的，那么它会拒绝此次请求。"}]},{"ID":"20240201213671-8lw9dup","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240201213671-8lw9dup","updated":"20240201213671"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"2.3 日志"}]},{"ID":"20240201213672-c9ay729","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213672-c9ay729","updated":"20240201213672"},"Children":[{"ID":"20240201213673-68104y9","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213673-68104y9","updated":"20240201213673"},"Children":[{"ID":"20240201213674-4csxzmk","Type":"NodeParagraph","Properties":{"id":"20240201213674-4csxzmk","updated":"20240201213674"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"entry"},{"Type":"NodeText","Data":"：每一个事件成为 entry，只有 Leader 可以创建 entry。entry 的内容为"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"\u0026lt;term,index,cmd\u0026gt;"},{"Type":"NodeText","Data":"其中 cmd 是可以应用到状态机的操作。"}]}]},{"ID":"20240201213675-v9fmzj4","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213675-v9fmzj4","updated":"20240201213675"},"Children":[{"ID":"20240201213676-t51m39p","Type":"NodeParagraph","Properties":{"id":"20240201213676-t51m39p","updated":"20240201213676"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"log"},{"Type":"NodeText","Data":"：由 entry 构成的数组，每一个 entry 都有一个表明自己在 log 中的 index。只有 Leader 才可以改变其他节点的 log。entry 总是先被 Leader 添加到自己的 log 数组中，然后再发起共识请求，获得同意后才会被 Leader 提交给状态机。Follower 只能从 Leader 获取新日志和当前的 commitIndex，然后把对应的 entry 应用到自己的状态机中。"}]}]}]},{"ID":"20240201213677-gf2azsi","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240201213677-gf2azsi","updated":"20240201213677"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"3 领导人选举"}]},{"ID":"20240201213678-bv6z23n","Type":"NodeParagraph","Properties":{"id":"20240201213678-bv6z23n","updated":"20240201213678"},"Children":[{"Type":"NodeText","Data":"raft 使用心跳机制来触发 Leader 的选举。"}]},{"ID":"20240201213679-xu5fb3b","Type":"NodeParagraph","Properties":{"id":"20240201213679-xu5fb3b","updated":"20240201213679"},"Children":[{"Type":"NodeText","Data":"如果一台服务器能够收到来自 Leader 或者 Candidate 的有效信息，那么它会一直保持为 Follower 状态，并且刷新自己的 electionElapsed，重新计时。"}]},{"ID":"20240201213680-z0r7raf","Type":"NodeParagraph","Properties":{"id":"20240201213680-z0r7raf","updated":"20240201213680"},"Children":[{"Type":"NodeText","Data":"Leader 会向所有的 Follower 周期性发送心跳来保证自己的 Leader 地位。如果一个 Follower 在一个周期内没有收到心跳信息，就叫做选举超时，然后它就会认为此时没有可用的 Leader，并且开始进行一次选举以选出一个新的 Leader。"}]},{"ID":"20240201213681-je5xa4k","Type":"NodeParagraph","Properties":{"id":"20240201213681-je5xa4k","updated":"20240201213681"},"Children":[{"Type":"NodeText","Data":"为了开始新的选举，Follower 会自增自己的 term 号并且转换状态为 Candidate。然后他会向所有节点发起 RequestVoteRPC 请求， Candidate 的状态会持续到以下情况发生："}]},{"ID":"20240201213682-za0cvxs","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213682-za0cvxs","updated":"20240201213682"},"Children":[{"ID":"20240201213683-06jvuue","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213683-06jvuue","updated":"20240201213683"},"Children":[{"ID":"20240201213684-u25bpq0","Type":"NodeParagraph","Properties":{"id":"20240201213684-u25bpq0","updated":"20240201213684"},"Children":[{"Type":"NodeText","Data":"赢得选举"}]}]},{"ID":"20240201213685-vv9xecw","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213685-vv9xecw","updated":"20240201213685"},"Children":[{"ID":"20240201213686-e58u0qh","Type":"NodeParagraph","Properties":{"id":"20240201213686-e58u0qh","updated":"20240201213686"},"Children":[{"Type":"NodeText","Data":"其他节点赢得选举"}]}]},{"ID":"20240201213687-f0sf8wb","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213687-f0sf8wb","updated":"20240201213687"},"Children":[{"ID":"20240201213688-qr6hiyn","Type":"NodeParagraph","Properties":{"id":"20240201213688-qr6hiyn","updated":"20240201213688"},"Children":[{"Type":"NodeText","Data":"一轮选举结束，无人胜出"}]}]}]},{"ID":"20240201213689-vv9727e","Type":"NodeParagraph","Properties":{"id":"20240201213689-vv9727e","updated":"20240201213689"},"Children":[{"Type":"NodeText","Data":"赢得选举的条件是：一个 Candidate 在一个任期内收到了来自集群内的多数选票"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"（N/2+1）"},{"Type":"NodeText","Data":"，就可以成为 Leader。"}]},{"ID":"20240201213690-mv1n73f","Type":"NodeParagraph","Properties":{"id":"20240201213690-mv1n73f","updated":"20240201213690"},"Children":[{"Type":"NodeText","Data":"在 Candidate 等待选票的时候，它可能收到其他节点声明自己是 Leader 的心跳，此时有两种情况："}]},{"ID":"20240201213691-emwz57i","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213691-emwz57i","updated":"20240201213691"},"Children":[{"ID":"20240201213692-riih0iv","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213692-riih0iv","updated":"20240201213692"},"Children":[{"ID":"20240201213693-gtuf3qn","Type":"NodeParagraph","Properties":{"id":"20240201213693-gtuf3qn","updated":"20240201213693"},"Children":[{"Type":"NodeText","Data":"该 Leader 的 term 号大于等于自己的 term 号，说明对方已经成为 Leader，则自己回退为 Follower。"}]}]},{"ID":"20240201213694-mxbuumz","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213694-mxbuumz","updated":"20240201213694"},"Children":[{"ID":"20240201213695-rrhxu6j","Type":"NodeParagraph","Properties":{"id":"20240201213695-rrhxu6j","updated":"20240201213695"},"Children":[{"Type":"NodeText","Data":"该 Leader 的 term 号小于自己的 term 号，那么会拒绝该请求并让该节点更新 term。"}]}]}]},{"ID":"20240201213696-el7bv7o","Type":"NodeParagraph","Properties":{"id":"20240201213696-el7bv7o","updated":"20240201213696"},"Children":[{"Type":"NodeText","Data":"由于可能同一时刻出现多个 Candidate，导致没有 Candidate 获得大多数选票，如果没有其他手段来重新分配选票的话，那么可能会无限重复下去。"}]},{"ID":"20240201213697-d87fzz5","Type":"NodeParagraph","Properties":{"id":"20240201213697-d87fzz5","updated":"20240201213697"},"Children":[{"Type":"NodeText","Data":"raft 使用了随机的选举超时时间来避免上述情况。每一个 Candidate 在发起选举后，都会随机化一个新的选举超时时间，这种机制使得各个服务器能够分散开来，在大多数情况下只有一个服务器会率先超时；它会在其他服务器超时之前赢得选举。"}]},{"ID":"20240201213698-rxfnonl","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240201213698-rxfnonl","updated":"20240201213698"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"4 日志复制"}]},{"ID":"20240201213699-yx537y9","Type":"NodeParagraph","Properties":{"id":"20240201213699-yx537y9","updated":"20240201213699"},"Children":[{"Type":"NodeText","Data":"一旦选出了 Leader，它就开始接受客户端的请求。每一个客户端的请求都包含一条需要被复制状态机（"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"Replicated State Machine"},{"Type":"NodeText","Data":"）执行的命令。"}]},{"ID":"20240201213700-cz4uzs7","Type":"NodeParagraph","Properties":{"id":"20240201213700-cz4uzs7","updated":"20240201213700"},"Children":[{"Type":"NodeText","Data":"Leader 收到客户端请求后，会生成一个 entry，包含"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"\u0026lt;index,term,cmd\u0026gt;"},{"Type":"NodeText","Data":"，再将这个 entry 添加到自己的日志末尾后，向所有的节点广播该 entry，要求其他服务器复制这条 entry。"}]},{"ID":"20240201213701-zmf6kdx","Type":"NodeParagraph","Properties":{"id":"20240201213701-zmf6kdx","updated":"20240201213701"},"Children":[{"Type":"NodeText","Data":"如果 Follower 接受该 entry，则会将 entry 添加到自己的日志后面，同时返回给 Leader 同意。"}]},{"ID":"20240201213702-lnw8mlz","Type":"NodeParagraph","Properties":{"id":"20240201213702-lnw8mlz","updated":"20240201213702"},"Children":[{"Type":"NodeText","Data":"如果 Leader 收到了多数的成功响应，Leader 会将这个 entry 应用到自己的状态机中，之后可以成为这个 entry 是 committed 的，并且向客户端返回执行结果。"}]},{"ID":"20240201213703-jye8kfp","Type":"NodeParagraph","Properties":{"id":"20240201213703-jye8kfp","updated":"20240201213703"},"Children":[{"Type":"NodeText","Data":"raft 保证以下两个性质："}]},{"ID":"20240201213704-jbin3yk","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213704-jbin3yk","updated":"20240201213704"},"Children":[{"ID":"20240201213705-a752kjj","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213705-a752kjj","updated":"20240201213705"},"Children":[{"ID":"20240201213706-ooym3ty","Type":"NodeParagraph","Properties":{"id":"20240201213706-ooym3ty","updated":"20240201213706"},"Children":[{"Type":"NodeText","Data":"在两个日志里，有两个 entry 拥有相同的 index 和 term，那么它们一定有相同的 cmd"}]}]},{"ID":"20240201213707-3se4g0g","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213707-3se4g0g","updated":"20240201213707"},"Children":[{"ID":"20240201213708-rwbqrjj","Type":"NodeParagraph","Properties":{"id":"20240201213708-rwbqrjj","updated":"20240201213708"},"Children":[{"Type":"NodeText","Data":"在两个日志里，有两个 entry 拥有相同的 index 和 term，那么它们前面的 entry 也一定相同"}]}]}]},{"ID":"20240201213709-m5m9dkp","Type":"NodeParagraph","Properties":{"id":"20240201213709-m5m9dkp","updated":"20240201213709"},"Children":[{"Type":"NodeText","Data":"通过“仅有 Leader 可以生成 entry”来保证第一个性质，第二个性质需要一致性检查来进行保证。"}]},{"ID":"20240201213710-cwhsjir","Type":"NodeParagraph","Properties":{"id":"20240201213710-cwhsjir","updated":"20240201213710"},"Children":[{"Type":"NodeText","Data":"一般情况下，Leader 和 Follower 的日志保持一致，然后，Leader 的崩溃会导致日志不一样，这样一致性检查会产生失败。Leader 通过强制 Follower 复制自己的日志来处理日志的不一致。这就意味着，在 Follower 上的冲突日志会被领导者的日志覆盖。"}]},{"ID":"20240201213711-onqmbl0","Type":"NodeParagraph","Properties":{"id":"20240201213711-onqmbl0","updated":"20240201213711"},"Children":[{"Type":"NodeText","Data":"为了使得 Follower 的日志和自己的日志一致，Leader 需要找到 Follower 与它日志一致的地方，然后删除 Follower 在该位置之后的日志，接着把这之后的日志发送给 Follower。"}]},{"ID":"20240201213712-oimlwmd","Type":"NodeParagraph","Properties":{"id":"20240201213712-oimlwmd","updated":"20240201213712"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"Leader"},{"Type":"NodeText","Data":" 给每一个"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"Follower"},{"Type":"NodeText","Data":" 维护了一个 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"nextIndex"},{"Type":"NodeText","Data":"，它表示 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"Leader"},{"Type":"NodeText","Data":" 将要发送给该追随者的下一条日志条目的索引。当一个 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"Leader"},{"Type":"NodeText","Data":" 开始掌权时，它会将 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"nextIndex"},{"Type":"NodeText","Data":" 初始化为它的最新的日志条目索引数+1。如果一个 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"Follower"},{"Type":"NodeText","Data":" 的日志和 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"Leader"},{"Type":"NodeText","Data":" 的不一致，"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"AppendEntries"},{"Type":"NodeText","Data":" 一致性检查会在下一次 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"AppendEntries RPC"},{"Type":"NodeText","Data":" 时返回失败。在失败之后，"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"Leader"},{"Type":"NodeText","Data":" 会将 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"nextIndex"},{"Type":"NodeText","Data":" 递减然后重试 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"AppendEntries RPC"},{"Type":"NodeText","Data":"。最终 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"nextIndex"},{"Type":"NodeText","Data":" 会达到一个 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"Leader"},{"Type":"NodeText","Data":" 和 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"Follower"},{"Type":"NodeText","Data":" 日志一致的地方。这时，"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"AppendEntries"},{"Type":"NodeText","Data":" 会返回成功，"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"Follower"},{"Type":"NodeText","Data":" 中冲突的日志条目都被移除了，并且添加所缺少的上了 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"Leader"},{"Type":"NodeText","Data":" 的日志条目。一旦 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"AppendEntries"},{"Type":"NodeText","Data":" 返回成功，"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"Follower"},{"Type":"NodeText","Data":" 和 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"Leader"},{"Type":"NodeText","Data":" 的日志就一致了，这样的状态会保持到该任期结束。"}]},{"ID":"20240201213713-e16957i","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240201213713-e16957i","updated":"20240201213713"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"5 安全性"}]},{"ID":"20240201213714-fjmczjz","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240201213714-fjmczjz","updated":"20240201213714"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"5.1 选举限制"}]},{"ID":"20240201213715-zgf3s4b","Type":"NodeParagraph","Properties":{"id":"20240201213715-zgf3s4b","updated":"20240201213715"},"Children":[{"Type":"NodeText","Data":"Leader 需要保证自己存储全部已经提交的日志条目。这样才可以使日志条目只有一个流向：从 Leader 流向 Follower，Leader 永远不会覆盖已经存在的日志条目。"}]},{"ID":"20240201213716-h7t1w6l","Type":"NodeParagraph","Properties":{"id":"20240201213716-h7t1w6l","updated":"20240201213716"},"Children":[{"Type":"NodeText","Data":"每个 Candidate 发送 RequestVoteRPC 时，都会带上最后一个 entry 的信息。所有节点收到投票信息时，会对该 entry 进行比较，如果发现自己的更新，则拒绝投票给该 Candidate。"}]},{"ID":"20240201213717-bau9fbl","Type":"NodeParagraph","Properties":{"id":"20240201213717-bau9fbl","updated":"20240201213717"},"Children":[{"Type":"NodeText","Data":"判断日志新旧的方式：如果两个日志的 term 不同，term 大的更新；如果 term 相同，更长的 index 更新。"}]},{"ID":"20240201213718-s7ngy48","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240201213718-s7ngy48","updated":"20240201213718"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"5.2 节点崩溃"}]},{"ID":"20240201213719-6hgh9ob","Type":"NodeParagraph","Properties":{"id":"20240201213719-6hgh9ob","updated":"20240201213719"},"Children":[{"Type":"NodeText","Data":"如果 Leader 崩溃，集群中的节点在 electionTimeout 时间内没有收到 Leader 的心跳信息就会触发新一轮的选主，在选主期间整个集群对外是不可用的。"}]},{"ID":"20240201213720-qen61zf","Type":"NodeParagraph","Properties":{"id":"20240201213720-qen61zf","updated":"20240201213720"},"Children":[{"Type":"NodeText","Data":"如果 Follower 和 Candidate 崩溃，处理方式会简单很多。之后发送给它的 RequestVoteRPC 和 AppendEntriesRPC 会失败。由于 raft 的所有请求都是幂等的，所以失败的话会无限的重试。如果崩溃恢复后，就可以收到新的请求，然后选择追加或者拒绝 entry。"}]},{"ID":"20240201213721-nksrrap","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240201213721-nksrrap","updated":"20240201213721"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"5.3 时间与可用性"}]},{"ID":"20240201213722-i02i8jr","Type":"NodeParagraph","Properties":{"id":"20240201213722-i02i8jr","updated":"20240201213722"},"Children":[{"Type":"NodeText","Data":"raft 的要求之一就是安全性不依赖于时间：系统不能仅仅因为一些事件发生的比预想的快一些或者慢一些就产生错误。为了保证上述要求，最好能满足以下的时间条件："}]},{"ID":"20240201213723-ftl7c7s","Type":"NodeParagraph","Properties":{"id":"20240201213723-ftl7c7s","updated":"20240201213723"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"broadcastTime \u0026lt;\u0026lt; electionTimeout \u0026lt;\u0026lt; MTBF"}]},{"ID":"20240201213724-bupe00y","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213724-bupe00y","updated":"20240201213724"},"Children":[{"ID":"20240201213725-g6ez26i","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213725-g6ez26i","updated":"20240201213725"},"Children":[{"ID":"20240201213726-rmlba14","Type":"NodeParagraph","Properties":{"id":"20240201213726-rmlba14","updated":"20240201213726"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"broadcastTime"},{"Type":"NodeText","Data":"：向其他节点并发发送消息的平均响应时间；"}]}]},{"ID":"20240201213727-zm1rw9l","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213727-zm1rw9l","updated":"20240201213727"},"Children":[{"ID":"20240201213728-3co97nz","Type":"NodeParagraph","Properties":{"id":"20240201213728-3co97nz","updated":"20240201213728"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"electionTimeout"},{"Type":"NodeText","Data":"：选举超时时间；"}]}]},{"ID":"20240201213729-6qey1ke","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213729-6qey1ke","updated":"20240201213729"},"Children":[{"ID":"20240201213730-hrtkmbz","Type":"NodeParagraph","Properties":{"id":"20240201213730-hrtkmbz","updated":"20240201213730"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"MTBF(mean time between failures)"},{"Type":"NodeText","Data":"：单台机器的平均健康时间；"}]}]}]},{"ID":"20240201213731-m1fcrov","Type":"NodeParagraph","Properties":{"id":"20240201213731-m1fcrov","updated":"20240201213731"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"broadcastTime"},{"Type":"NodeText","Data":"应该比"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"electionTimeout"},{"Type":"NodeText","Data":"小一个数量级，为的是使"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"Leader"},{"Type":"NodeText","Data":"能够持续发送心跳信息（heartbeat）来阻止"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"Follower"},{"Type":"NodeText","Data":"开始选举；"}]},{"ID":"20240201213732-85ds834","Type":"NodeParagraph","Properties":{"id":"20240201213732-85ds834","updated":"20240201213732"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"electionTimeout"},{"Type":"NodeText","Data":"也要比"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"MTBF"},{"Type":"NodeText","Data":"小几个数量级，为的是使得系统稳定运行。当"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"Leader"},{"Type":"NodeText","Data":"崩溃时，大约会在整个"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"electionTimeout"},{"Type":"NodeText","Data":"的时间内不可用；我们希望这种情况仅占全部时间的很小一部分。"}]},{"ID":"20240201213733-w98vftf","Type":"NodeParagraph","Properties":{"id":"20240201213733-w98vftf","updated":"20240201213733"},"Children":[{"Type":"NodeText","Data":"由于"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"broadcastTime"},{"Type":"NodeText","Data":"和"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"MTBF"},{"Type":"NodeText","Data":"是由系统决定的属性，因此需要决定"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"electionTimeout"},{"Type":"NodeText","Data":"的时间。"}]},{"ID":"20240201213734-tgbj0hl","Type":"NodeParagraph","Properties":{"id":"20240201213734-tgbj0hl","updated":"20240201213734"},"Children":[{"Type":"NodeText","Data":"一般来说，broadcastTime 一般为 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"0.5～20ms"},{"Type":"NodeText","Data":"，electionTimeout 可以设置为 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"10～500ms"},{"Type":"NodeText","Data":"，MTBF 一般为一两个月。"}]},{"ID":"20240201213735-5pl2dmx","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240201213735-5pl2dmx","updated":"20240201213735"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"6 参考"}]},{"ID":"20240201213736-y7vgwm4","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213736-y7vgwm4","updated":"20240201213736"},"Children":[{"ID":"20240201213737-v4zbnb6","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213737-v4zbnb6","updated":"20240201213737"},"Children":[{"ID":"20240201213738-87bwxnl","Type":"NodeParagraph","Properties":{"id":"20240201213738-87bwxnl","updated":"20240201213738"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://tanxinyu.work/raft/","TextMarkTextContent":"https://tanxinyu.work/raft/"}]}]},{"ID":"20240201213739-om0pyzw","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213739-om0pyzw","updated":"20240201213739"},"Children":[{"ID":"20240201213740-2369mrn","Type":"NodeParagraph","Properties":{"id":"20240201213740-2369mrn","updated":"20240201213740"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/OneSizeFitsQuorum/raft-thesis-zh_cn/blob/master/raft-thesis-zh_cn.md","TextMarkTextContent":"https://github.com/OneSizeFitsQuorum/raft-thesis-zh_cn/blob/master/raft-thesis-zh_cn.md"}]}]},{"ID":"20240201213741-ka841wz","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213741-ka841wz","updated":"20240201213741"},"Children":[{"ID":"20240201213742-8e8w2bw","Type":"NodeParagraph","Properties":{"id":"20240201213742-8e8w2bw","updated":"20240201213742"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/ongardie/dissertation/blob/master/stanford.pdf","TextMarkTextContent":"https://github.com/ongardie/dissertation/blob/master/stanford.pdf"}]}]},{"ID":"20240201213743-ibqkmd4","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213743-ibqkmd4","updated":"20240201213743"},"Children":[{"ID":"20240201213744-7p98irl","Type":"NodeParagraph","Properties":{"id":"20240201213744-7p98irl","updated":"20240201213744"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://knowledge-sharing.gitbooks.io/raft/content/chapter5.html","TextMarkTextContent":"https://knowledge-sharing.gitbooks.io/raft/content/chapter5.html"}]}]}]},{"ID":"20240201213745-94lv09d","Type":"NodeHTMLBlock","Data":"\u003cdiv\u003e\n\u003c!-- @include: @article-footer.snippet.md --\u003e\n\u003c/div\u003e","HtmlBlockType":2,"Properties":{"id":"20240201213745-94lv09d","updated":"20240201213745"}}]}