{"ID":"20240201212956-b2tccb3","Spec":"1","Type":"NodeDocument","Properties":{"id":"20240201212956-b2tccb3","title":"redis-questions-02","updated":"20240201212956"},"Children":[{"ID":"20240201212957-eklfi04","Type":"NodeThematicBreak","Properties":{"id":"20240201212957-eklfi04","updated":"20240201212957"}},{"ID":"20240201212958-c3sly1y","Type":"NodeParagraph","Properties":{"id":"20240201212958-c3sly1y","updated":"20240201212958"},"Children":[{"Type":"NodeText","Data":"title: Redis常见面试题总结(下)"},{"Type":"NodeSoftBreak","Data":"\n","Properties":{"id":""}},{"Type":"NodeText","Data":"category: 数据库"},{"Type":"NodeSoftBreak","Data":"\n","Properties":{"id":""}},{"Type":"NodeText","Data":"tag:"}]},{"ID":"20240201212959-w66iuo6","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"MarkerOffset":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201212959-w66iuo6","updated":"20240201212959"},"Children":[{"ID":"20240201212960-zcwhneq","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"MarkerOffset":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201212960-zcwhneq","updated":"20240201212960"},"Children":[{"ID":"20240201212961-x8slxdi","Type":"NodeParagraph","Properties":{"id":"20240201212961-x8slxdi","updated":"20240201212961"},"Children":[{"Type":"NodeText","Data":"Redis"},{"Type":"NodeSoftBreak","Data":"\n","Properties":{"id":""}},{"Type":"NodeText","Data":"head:"}]}]},{"ID":"20240201212962-74hd6bq","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"MarkerOffset":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201212962-74hd6bq","updated":"20240201212962"},"Children":[{"ID":"20240201212963-f06erzf","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201212963-f06erzf","updated":"20240201212963"},"Children":[{"ID":"20240201212964-pv3d389","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201212964-pv3d389","updated":"20240201212964"},"Children":[{"ID":"20240201212965-z12emg4","Type":"NodeParagraph","Properties":{"id":"20240201212965-z12emg4","updated":"20240201212965"},"Children":[{"Type":"NodeText","Data":"meta"}]}]},{"ID":"20240201212966-1tfl3sp","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201212966-1tfl3sp","updated":"20240201212966"},"Children":[{"ID":"20240201212967-au8l277","Type":"NodeParagraph","Properties":{"id":"20240201212967-au8l277","updated":"20240201212967"},"Children":[{"Type":"NodeText","Data":"name: keywords"},{"Type":"NodeSoftBreak","Data":"\n","Properties":{"id":""}},{"Type":"NodeText","Data":"content: Redis基础,Redis常见数据结构,Redis线程模型,Redis内存管理,Redis事务,Redis性能优化"}]}]}]}]},{"ID":"20240201212968-elmd6ji","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"MarkerOffset":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201212968-elmd6ji","updated":"20240201212968"},"Children":[{"ID":"20240201212969-aqmgne9","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201212969-aqmgne9","updated":"20240201212969"},"Children":[{"ID":"20240201212970-hzo40tk","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201212970-hzo40tk","updated":"20240201212970"},"Children":[{"ID":"20240201212971-d2v8q0s","Type":"NodeParagraph","Properties":{"id":"20240201212971-d2v8q0s","updated":"20240201212971"},"Children":[{"Type":"NodeText","Data":"meta"}]}]},{"ID":"20240201212972-0hel9h7","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201212972-0hel9h7","updated":"20240201212972"},"Children":[{"ID":"20240201212973-70lko3r","Type":"NodeParagraph","Properties":{"id":"20240201212973-70lko3r","updated":"20240201212973"},"Children":[{"Type":"NodeText","Data":"name: description"},{"Type":"NodeSoftBreak","Data":"\n","Properties":{"id":""}},{"Type":"NodeText","Data":"content: 一篇文章总结Redis常见的知识点和面试题，涵盖Redis基础、Redis常见数据结构、Redis线程模型、Redis内存管理、Redis事务、Redis性能优化等内容。"}]}]}]}]}]},{"ID":"20240201212974-913di4r","Type":"NodeThematicBreak","Properties":{"id":"20240201212974-913di4r","updated":"20240201212974"}},{"ID":"20240201212975-zrv1ord","Type":"NodeHTMLBlock","Data":"\u003cdiv\u003e\n\u003c!-- @include: @article-header.snippet.md --\u003e\n\u003c/div\u003e","HtmlBlockType":2,"Properties":{"id":"20240201212975-zrv1ord","updated":"20240201212975"}},{"ID":"20240201212976-d14wytq","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240201212976-d14wytq","updated":"20240201212976"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"Redis 事务"}]},{"ID":"20240201212977-r7be3wt","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240201212977-r7be3wt","updated":"20240201212977"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"什么是 Redis 事务？"}]},{"ID":"20240201212978-8di2rkc","Type":"NodeParagraph","Properties":{"id":"20240201212978-8di2rkc","updated":"20240201212978"},"Children":[{"Type":"NodeText","Data":"你可以将 Redis 中的事务理解为："},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"Redis 事务提供了一种将多个命令请求打包的功能。然后，再按顺序执行打包的所有命令，并且不会被中途打断。"}]},{"ID":"20240201212979-kjomaeo","Type":"NodeParagraph","Properties":{"id":"20240201212979-kjomaeo","updated":"20240201212979"},"Children":[{"Type":"NodeText","Data":"Redis 事务实际开发中使用的非常少，功能比较鸡肋，不要将其和我们平时理解的关系型数据库的事务混淆了。"}]},{"ID":"20240201212980-qftfk8y","Type":"NodeParagraph","Properties":{"id":"20240201212980-qftfk8y","updated":"20240201212980"},"Children":[{"Type":"NodeText","Data":"除了不满足原子性和持久性之外，事务中的每条命令都会与 Redis 服务器进行网络交互，这是比较浪费资源的行为。明明一次批量执行多个命令就可以了，这种操作实在是看不懂。"}]},{"ID":"20240201212981-p0tzbq2","Type":"NodeParagraph","Properties":{"id":"20240201212981-p0tzbq2","updated":"20240201212981"},"Children":[{"Type":"NodeText","Data":"因此，Redis 事务是不建议在日常开发中使用的。"}]},{"ID":"20240201212982-3sbiswe","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240201212982-3sbiswe","updated":"20240201212982"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"如何使用 Redis 事务？"}]},{"ID":"20240201212983-v6r3xom","Type":"NodeParagraph","Properties":{"id":"20240201212983-v6r3xom","updated":"20240201212983"},"Children":[{"Type":"NodeText","Data":"Redis 可以通过 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong code","TextMarkTextContent":"MULTI"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"，"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong code","TextMarkTextContent":"EXEC"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"，"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong code","TextMarkTextContent":"DISCARD"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":" 和 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong code","TextMarkTextContent":"WATCH"},{"Type":"NodeText","Data":" 等命令来实现事务(Transaction)功能。"}]},{"ID":"20240201212984-u2fyjt2","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"YmFzaA==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20240201212984-u2fyjt2","updated":"20240201212984"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"YmFzaA==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"\u003e MULTI\nOK\n\u003e SET PROJECT \"JavaGuide\"\nQUEUED\n\u003e GET PROJECT\nQUEUED\n\u003e EXEC\n1) OK\n2) \"JavaGuide\"\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20240201212985-leu16kr","Type":"NodeParagraph","Properties":{"id":"20240201212985-leu16kr","updated":"20240201212985"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a code","TextMarkAHref":"https://redis.io/commands/multi","TextMarkTextContent":"MULTI"},{"Type":"NodeText","Data":" 命令后可以输入多个命令，Redis 不会立即执行这些命令，而是将它们放到队列，当调用了 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a code","TextMarkAHref":"https://redis.io/commands/exec","TextMarkTextContent":"EXEC"},{"Type":"NodeText","Data":" 命令后，再执行所有的命令。"}]},{"ID":"20240201212986-7fnhs7m","Type":"NodeParagraph","Properties":{"id":"20240201212986-7fnhs7m","updated":"20240201212986"},"Children":[{"Type":"NodeText","Data":"这个过程是这样的："}]},{"ID":"20240201212987-dpockkj","Type":"NodeList","ListData":{"Typ":1,"Tight":true,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20240201212987-dpockkj","updated":"20240201212987"},"Children":[{"ID":"20240201212988-ft2iav6","Type":"NodeListItem","Data":"1","ListData":{"Typ":1,"Tight":true,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20240201212988-ft2iav6","updated":"20240201212988"},"Children":[{"ID":"20240201212989-1vvx5l6","Type":"NodeParagraph","Properties":{"id":"20240201212989-1vvx5l6","updated":"20240201212989"},"Children":[{"Type":"NodeText","Data":"开始事务（"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"MULTI"},{"Type":"NodeText","Data":"）；"}]}]},{"ID":"20240201212990-1sr5sbf","Type":"NodeListItem","Data":"2","ListData":{"Typ":1,"Tight":true,"Start":2,"Delimiter":46,"Padding":3,"Marker":"Mg==","Num":2},"Properties":{"id":"20240201212990-1sr5sbf","updated":"20240201212990"},"Children":[{"ID":"20240201212991-f0wovdr","Type":"NodeParagraph","Properties":{"id":"20240201212991-f0wovdr","updated":"20240201212991"},"Children":[{"Type":"NodeText","Data":"命令入队(批量操作 Redis 的命令，先进先出（FIFO）的顺序执行)；"}]}]},{"ID":"20240201212992-ij4heyp","Type":"NodeListItem","Data":"3","ListData":{"Typ":1,"Tight":true,"Start":3,"Delimiter":46,"Padding":3,"Marker":"Mw==","Num":3},"Properties":{"id":"20240201212992-ij4heyp","updated":"20240201212992"},"Children":[{"ID":"20240201212993-yg9eq6d","Type":"NodeParagraph","Properties":{"id":"20240201212993-yg9eq6d","updated":"20240201212993"},"Children":[{"Type":"NodeText","Data":"执行事务("},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"EXEC"},{"Type":"NodeText","Data":")。"}]}]}]},{"ID":"20240201212994-4d5hwp4","Type":"NodeParagraph","Properties":{"id":"20240201212994-4d5hwp4","updated":"20240201212994"},"Children":[{"Type":"NodeText","Data":"你也可以通过 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a code","TextMarkAHref":"https://redis.io/commands/discard","TextMarkTextContent":"DISCARD"},{"Type":"NodeText","Data":" 命令取消一个事务，它会清空事务队列中保存的所有命令。"}]},{"ID":"20240201212995-z3eep0y","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"YmFzaA==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20240201212995-z3eep0y","updated":"20240201212995"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"YmFzaA==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"\u003e MULTI\nOK\n\u003e SET PROJECT \"JavaGuide\"\nQUEUED\n\u003e GET PROJECT\nQUEUED\n\u003e DISCARD\nOK\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20240201212996-auoiy49","Type":"NodeParagraph","Properties":{"id":"20240201212996-auoiy49","updated":"20240201212996"},"Children":[{"Type":"NodeText","Data":"你可以通过"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a code","TextMarkAHref":"https://redis.io/commands/watch","TextMarkTextContent":"WATCH"},{"Type":"NodeText","Data":" 命令监听指定的 Key，当调用 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"EXEC"},{"Type":"NodeText","Data":" 命令执行事务时，如果一个被 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"WATCH"},{"Type":"NodeText","Data":" 命令监视的 Key 被 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"其他客户端/Session"},{"Type":"NodeText","Data":" 修改的话，整个事务都不会被执行。"}]},{"ID":"20240201212997-uxdz29w","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"YmFzaA==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20240201212997-uxdz29w","updated":"20240201212997"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"YmFzaA==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"# 客户端 1\n\u003e SET PROJECT \"RustGuide\"\nOK\n\u003e WATCH PROJECT\nOK\n\u003e MULTI\nOK\n\u003e SET PROJECT \"JavaGuide\"\nQUEUED\n\n# 客户端 2\n# 在客户端 1 执行 EXEC 命令提交事务之前修改 PROJECT 的值\n\u003e SET PROJECT \"GoGuide\"\n\n# 客户端 1\n# 修改失败，因为 PROJECT 的值被客户端2修改了\n\u003e EXEC\n(nil)\n\u003e GET PROJECT\n\"GoGuide\"\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20240201212998-mqtkjtp","Type":"NodeParagraph","Properties":{"id":"20240201212998-mqtkjtp","updated":"20240201212998"},"Children":[{"Type":"NodeText","Data":"不过，如果 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"WATCH"},{"Type":"NodeText","Data":" 与 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"事务"},{"Type":"NodeText","Data":" 在同一个 Session 里，并且被 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"WATCH"},{"Type":"NodeText","Data":" 监视的 Key 被修改的操作发生在事务内部，这个事务是可以被执行成功的（相关 issue："},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/Snailclimb/JavaGuide/issues/1714","TextMarkTextContent":"WATCH 命令碰到 MULTI 命令时的不同效果"},{"Type":"NodeText","Data":"）。"}]},{"ID":"20240201212999-bxj8o7w","Type":"NodeParagraph","Properties":{"id":"20240201212999-bxj8o7w","updated":"20240201212999"},"Children":[{"Type":"NodeText","Data":"事务内部修改 WATCH 监视的 Key："}]},{"ID":"20240201213000-csbvue4","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"YmFzaA==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20240201213000-csbvue4","updated":"20240201213000"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"YmFzaA==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"\u003e SET PROJECT \"JavaGuide\"\nOK\n\u003e WATCH PROJECT\nOK\n\u003e MULTI\nOK\n\u003e SET PROJECT \"JavaGuide1\"\nQUEUED\n\u003e SET PROJECT \"JavaGuide2\"\nQUEUED\n\u003e SET PROJECT \"JavaGuide3\"\nQUEUED\n\u003e EXEC\n1) OK\n2) OK\n3) OK\n127.0.0.1:6379\u003e GET PROJECT\n\"JavaGuide3\"\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20240201213001-gsv9hyc","Type":"NodeParagraph","Properties":{"id":"20240201213001-gsv9hyc","updated":"20240201213001"},"Children":[{"Type":"NodeText","Data":"事务外部修改 WATCH 监视的 Key："}]},{"ID":"20240201213002-tqk2q10","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"YmFzaA==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20240201213002-tqk2q10","updated":"20240201213002"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"YmFzaA==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"\u003e SET PROJECT \"JavaGuide\"\nOK\n\u003e WATCH PROJECT\nOK\n\u003e SET PROJECT \"JavaGuide2\"\nOK\n\u003e MULTI\nOK\n\u003e GET USER\nQUEUED\n\u003e EXEC\n(nil)\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20240201213003-mwdebxg","Type":"NodeParagraph","Properties":{"id":"20240201213003-mwdebxg","updated":"20240201213003"},"Children":[{"Type":"NodeText","Data":"Redis 官网相关介绍 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://redis.io/topics/transactions","TextMarkTextContent":"https://redis.io/topics/transactions"},{"Type":"NodeText","Data":" 如下："}]},{"ID":"20240201213004-3zjyoq9","Type":"NodeParagraph","Properties":{"id":"20240201213004-3zjyoq9","updated":"20240201213004"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"Redis 事务","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"https://oss.javaguide.cn/github/javaguide/database/redis/redis-transactions.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201213005-isnl7zr","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240201213005-isnl7zr","updated":"20240201213005"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"Redis 事务支持原子性吗？"}]},{"ID":"20240201213006-ai39c0q","Type":"NodeParagraph","Properties":{"id":"20240201213006-ai39c0q","updated":"20240201213006"},"Children":[{"Type":"NodeText","Data":"Redis 的事务和我们平时理解的关系型数据库的事务不同。我们知道事务具有四大特性："},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"1. 原子性"},{"Type":"NodeText","Data":"，"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"2. 隔离性"},{"Type":"NodeText","Data":"，"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"3. 持久性"},{"Type":"NodeText","Data":"，"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"4. 一致性"},{"Type":"NodeText","Data":"。"}]},{"ID":"20240201213007-in994fv","Type":"NodeList","ListData":{"Typ":1,"Tight":true,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20240201213007-in994fv","updated":"20240201213007"},"Children":[{"ID":"20240201213008-jlagkpp","Type":"NodeListItem","Data":"1","ListData":{"Typ":1,"Tight":true,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20240201213008-jlagkpp","updated":"20240201213008"},"Children":[{"ID":"20240201213009-xticndc","Type":"NodeParagraph","Properties":{"id":"20240201213009-xticndc","updated":"20240201213009"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"原子性（Atomicity）："},{"Type":"NodeText","Data":" 事务是最小的执行单位，不允许分割。事务的原子性确保动作要么全部完成，要么完全不起作用；"}]}]},{"ID":"20240201213010-23nif3l","Type":"NodeListItem","Data":"2","ListData":{"Typ":1,"Tight":true,"Start":2,"Delimiter":46,"Padding":3,"Marker":"Mg==","Num":2},"Properties":{"id":"20240201213010-23nif3l","updated":"20240201213010"},"Children":[{"ID":"20240201213011-18shc5n","Type":"NodeParagraph","Properties":{"id":"20240201213011-18shc5n","updated":"20240201213011"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"隔离性（Isolation）："},{"Type":"NodeText","Data":" 并发访问数据库时，一个用户的事务不被其他事务所干扰，各并发事务之间数据库是独立的；"}]}]},{"ID":"20240201213012-ajdjlqd","Type":"NodeListItem","Data":"3","ListData":{"Typ":1,"Tight":true,"Start":3,"Delimiter":46,"Padding":3,"Marker":"Mw==","Num":3},"Properties":{"id":"20240201213012-ajdjlqd","updated":"20240201213012"},"Children":[{"ID":"20240201213013-mm84ebk","Type":"NodeParagraph","Properties":{"id":"20240201213013-mm84ebk","updated":"20240201213013"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"持久性（Durability）："},{"Type":"NodeText","Data":" 一个事务被提交之后。它对数据库中数据的改变是持久的，即使数据库发生故障也不应该对其有任何影响。"}]}]},{"ID":"20240201213014-f72fbj2","Type":"NodeListItem","Data":"4","ListData":{"Typ":1,"Tight":true,"Start":4,"Delimiter":46,"Padding":3,"Marker":"NA==","Num":4},"Properties":{"id":"20240201213014-f72fbj2","updated":"20240201213014"},"Children":[{"ID":"20240201213015-rdm9kmd","Type":"NodeParagraph","Properties":{"id":"20240201213015-rdm9kmd","updated":"20240201213015"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"一致性（Consistency）："},{"Type":"NodeText","Data":" 执行事务前后，数据保持一致，多个事务对同一个数据读取的结果是相同的；"}]}]}]},{"ID":"20240201213016-hu1pshm","Type":"NodeParagraph","Properties":{"id":"20240201213016-hu1pshm","updated":"20240201213016"},"Children":[{"Type":"NodeText","Data":"Redis 事务在运行错误的情况下，除了执行过程中出现错误的命令外，其他命令都能正常执行。并且，Redis 事务是不支持回滚（roll back）操作的。因此，Redis 事务其实是不满足原子性的。"}]},{"ID":"20240201213017-k2jvagg","Type":"NodeParagraph","Properties":{"id":"20240201213017-k2jvagg","updated":"20240201213017"},"Children":[{"Type":"NodeText","Data":"Redis 官网也解释了自己为啥不支持回滚。简单来说就是 Redis 开发者们觉得没必要支持回滚，这样更简单便捷并且性能更好。Redis 开发者觉得即使命令执行错误也应该在开发过程中就被发现而不是生产过程中。"}]},{"ID":"20240201213018-h88udig","Type":"NodeParagraph","Properties":{"id":"20240201213018-h88udig","updated":"20240201213018"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"Redis 为什么不支持回滚","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"https://oss.javaguide.cn/github/javaguide/database/redis/redis-rollback.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201213019-62yg92v","Type":"NodeParagraph","Properties":{"id":"20240201213019-62yg92v","updated":"20240201213019"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"相关 issue"},{"Type":"NodeText","Data":" :"}]},{"ID":"20240201213020-ptym9un","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213020-ptym9un","updated":"20240201213020"},"Children":[{"ID":"20240201213021-3j8ktt0","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213021-3j8ktt0","updated":"20240201213021"},"Children":[{"ID":"20240201213022-fs7fyeg","Type":"NodeParagraph","Properties":{"id":"20240201213022-fs7fyeg","updated":"20240201213022"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/Snailclimb/JavaGuide/issues/452","TextMarkTextContent":"issue#452: 关于 Redis 事务不满足原子性的问题"},{"Type":"NodeText","Data":" 。"}]}]},{"ID":"20240201213023-hdo3axc","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213023-hdo3axc","updated":"20240201213023"},"Children":[{"ID":"20240201213024-72xz7kq","Type":"NodeParagraph","Properties":{"id":"20240201213024-72xz7kq","updated":"20240201213024"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/Snailclimb/JavaGuide/issues/491","TextMarkTextContent":"Issue#491:关于 Redis 没有事务回滚？"}]}]}]},{"ID":"20240201213025-bsu46o5","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240201213025-bsu46o5","updated":"20240201213025"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"Redis 事务支持持久性吗？"}]},{"ID":"20240201213026-pg28x8i","Type":"NodeParagraph","Properties":{"id":"20240201213026-pg28x8i","updated":"20240201213026"},"Children":[{"Type":"NodeText","Data":"Redis 不同于 Memcached 的很重要一点就是，Redis 支持持久化，而且支持 3 种持久化方式:"}]},{"ID":"20240201213027-1e0vlzn","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213027-1e0vlzn","updated":"20240201213027"},"Children":[{"ID":"20240201213028-kz6elt1","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213028-kz6elt1","updated":"20240201213028"},"Children":[{"ID":"20240201213029-plfyzvt","Type":"NodeParagraph","Properties":{"id":"20240201213029-plfyzvt","updated":"20240201213029"},"Children":[{"Type":"NodeText","Data":"快照（snapshotting，RDB）"}]}]},{"ID":"20240201213030-pjdo4vg","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213030-pjdo4vg","updated":"20240201213030"},"Children":[{"ID":"20240201213031-5eyzjna","Type":"NodeParagraph","Properties":{"id":"20240201213031-5eyzjna","updated":"20240201213031"},"Children":[{"Type":"NodeText","Data":"只追加文件（append-only file, AOF）"}]}]},{"ID":"20240201213032-6zygtjh","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213032-6zygtjh","updated":"20240201213032"},"Children":[{"ID":"20240201213033-h6txtgp","Type":"NodeParagraph","Properties":{"id":"20240201213033-h6txtgp","updated":"20240201213033"},"Children":[{"Type":"NodeText","Data":"RDB 和 AOF 的混合持久化(Redis 4.0 新增)"}]}]}]},{"ID":"20240201213034-9rxt65a","Type":"NodeParagraph","Properties":{"id":"20240201213034-9rxt65a","updated":"20240201213034"},"Children":[{"Type":"NodeText","Data":"与 RDB 持久化相比，AOF 持久化的实时性更好。在 Redis 的配置文件中存在三种不同的 AOF 持久化方式（ "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"fsync"},{"Type":"NodeText","Data":"策略），它们分别是："}]},{"ID":"20240201213035-68i4iw3","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"YmFzaA==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20240201213035-68i4iw3","updated":"20240201213035"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"YmFzaA==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"appendfsync always    #每次有数据修改发生时都会调用fsync函数同步AOF文件,fsync完成后线程返回,这样会严重降低Redis的速度\nappendfsync everysec  #每秒钟调用fsync函数同步一次AOF文件\nappendfsync no        #让操作系统决定何时进行同步，一般为30秒一次\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20240201213036-88xye8r","Type":"NodeParagraph","Properties":{"id":"20240201213036-88xye8r","updated":"20240201213036"},"Children":[{"Type":"NodeText","Data":"AOF 持久化的"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"fsync"},{"Type":"NodeText","Data":"策略为 no、everysec 时都会存在数据丢失的情况 。always 下可以基本是可以满足持久性要求的，但性能太差，实际开发过程中不会使用。"}]},{"ID":"20240201213037-hyvnubo","Type":"NodeParagraph","Properties":{"id":"20240201213037-hyvnubo","updated":"20240201213037"},"Children":[{"Type":"NodeText","Data":"因此，Redis 事务的持久性也是没办法保证的。"}]},{"ID":"20240201213038-eot5m1z","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240201213038-eot5m1z","updated":"20240201213038"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"如何解决 Redis 事务的缺陷？"}]},{"ID":"20240201213039-1bzc4fn","Type":"NodeParagraph","Properties":{"id":"20240201213039-1bzc4fn","updated":"20240201213039"},"Children":[{"Type":"NodeText","Data":"Redis 从 2.6 版本开始支持执行 Lua 脚本，它的功能和事务非常类似。我们可以利用 Lua 脚本来批量执行多条 Redis 命令，这些 Redis 命令会被提交到 Redis 服务器一次性执行完成，大幅减小了网络开销。"}]},{"ID":"20240201213040-3nww6n9","Type":"NodeParagraph","Properties":{"id":"20240201213040-3nww6n9","updated":"20240201213040"},"Children":[{"Type":"NodeText","Data":"一段 Lua 脚本可以视作一条命令执行，一段 Lua 脚本执行过程中不会有其他脚本或 Redis 命令同时执行，保证了操作不会被其他指令插入或打扰。"}]},{"ID":"20240201213041-epkdkbj","Type":"NodeParagraph","Properties":{"id":"20240201213041-epkdkbj","updated":"20240201213041"},"Children":[{"Type":"NodeText","Data":"不过，如果 Lua 脚本运行时出错并中途结束，出错之后的命令是不会被执行的。并且，出错之前执行的命令是无法被撤销的，无法实现类似关系型数据库执行失败可以回滚的那种原子性效果。因此， "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"严格来说的话，通过 Lua 脚本来批量执行 Redis 命令实际也是不完全满足原子性的。"}]},{"ID":"20240201213042-gd5zsyp","Type":"NodeParagraph","Properties":{"id":"20240201213042-gd5zsyp","updated":"20240201213042"},"Children":[{"Type":"NodeText","Data":"如果想要让 Lua 脚本中的命令全部执行，必须保证语句语法和命令都是对的。"}]},{"ID":"20240201213043-322fxaj","Type":"NodeParagraph","Properties":{"id":"20240201213043-322fxaj","updated":"20240201213043"},"Children":[{"Type":"NodeText","Data":"另外，Redis 7.0 新增了 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://redis.io/docs/manual/programmability/functions-intro/","TextMarkTextContent":"Redis functions"},{"Type":"NodeText","Data":" 特性，你可以将 Redis functions 看作是比 Lua 更强大的脚本。"}]},{"ID":"20240201213044-axwc2h1","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240201213044-axwc2h1","updated":"20240201213044"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"Redis 性能优化（重要）"}]},{"ID":"20240201213045-surghmn","Type":"NodeParagraph","Properties":{"id":"20240201213045-surghmn","updated":"20240201213045"},"Children":[{"Type":"NodeText","Data":"除了下面介绍的内容之外，再推荐两篇不错的文章："}]},{"ID":"20240201213046-ub9nhly","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213046-ub9nhly","updated":"20240201213046"},"Children":[{"ID":"20240201213047-ls31hd4","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213047-ls31hd4","updated":"20240201213047"},"Children":[{"ID":"20240201213048-gllwwam","Type":"NodeParagraph","Properties":{"id":"20240201213048-gllwwam","updated":"20240201213048"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://mp.weixin.qq.com/s/nNEuYw0NlYGhuKKKKoWfcQ","TextMarkTextContent":"你的 Redis 真的变慢了吗？性能优化如何做 - 阿里开发者"}]}]},{"ID":"20240201213049-qn0kb8s","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213049-qn0kb8s","updated":"20240201213049"},"Children":[{"ID":"20240201213050-ys9nylo","Type":"NodeParagraph","Properties":{"id":"20240201213050-ys9nylo","updated":"20240201213050"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://javaguide.cn/database/redis/redis-common-blocking-problems-summary.html","TextMarkTextContent":"Redis 常见阻塞原因总结 - JavaGuide"}]}]}]},{"ID":"20240201213051-3m7x0v5","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240201213051-3m7x0v5","updated":"20240201213051"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"使用批量操作减少网络传输"}]},{"ID":"20240201213052-f7lq8jk","Type":"NodeParagraph","Properties":{"id":"20240201213052-f7lq8jk","updated":"20240201213052"},"Children":[{"Type":"NodeText","Data":"一个 Redis 命令的执行可以简化为以下 4 步："}]},{"ID":"20240201213053-1ybd60m","Type":"NodeList","ListData":{"Typ":1,"Tight":true,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20240201213053-1ybd60m","updated":"20240201213053"},"Children":[{"ID":"20240201213054-qpumy74","Type":"NodeListItem","Data":"1","ListData":{"Typ":1,"Tight":true,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20240201213054-qpumy74","updated":"20240201213054"},"Children":[{"ID":"20240201213055-adyygx2","Type":"NodeParagraph","Properties":{"id":"20240201213055-adyygx2","updated":"20240201213055"},"Children":[{"Type":"NodeText","Data":"发送命令"}]}]},{"ID":"20240201213056-cocf935","Type":"NodeListItem","Data":"2","ListData":{"Typ":1,"Tight":true,"Start":2,"Delimiter":46,"Padding":3,"Marker":"Mg==","Num":2},"Properties":{"id":"20240201213056-cocf935","updated":"20240201213056"},"Children":[{"ID":"20240201213057-biee4l8","Type":"NodeParagraph","Properties":{"id":"20240201213057-biee4l8","updated":"20240201213057"},"Children":[{"Type":"NodeText","Data":"命令排队"}]}]},{"ID":"20240201213058-sgv6783","Type":"NodeListItem","Data":"3","ListData":{"Typ":1,"Tight":true,"Start":3,"Delimiter":46,"Padding":3,"Marker":"Mw==","Num":3},"Properties":{"id":"20240201213058-sgv6783","updated":"20240201213058"},"Children":[{"ID":"20240201213059-akd9nrt","Type":"NodeParagraph","Properties":{"id":"20240201213059-akd9nrt","updated":"20240201213059"},"Children":[{"Type":"NodeText","Data":"命令执行"}]}]},{"ID":"20240201213060-vumtr97","Type":"NodeListItem","Data":"4","ListData":{"Typ":1,"Tight":true,"Start":4,"Delimiter":46,"Padding":3,"Marker":"NA==","Num":4},"Properties":{"id":"20240201213060-vumtr97","updated":"20240201213060"},"Children":[{"ID":"20240201213061-9bvpf4y","Type":"NodeParagraph","Properties":{"id":"20240201213061-9bvpf4y","updated":"20240201213061"},"Children":[{"Type":"NodeText","Data":"返回结果"}]}]}]},{"ID":"20240201213062-3430ehj","Type":"NodeParagraph","Properties":{"id":"20240201213062-3430ehj","updated":"20240201213062"},"Children":[{"Type":"NodeText","Data":"其中，第 1 步和第 4 步耗费时间之和称为 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"Round Trip Time (RTT,往返时间)"},{"Type":"NodeText","Data":" ，也就是数据在网络上传输的时间。"}]},{"ID":"20240201213063-ho2j3ho","Type":"NodeParagraph","Properties":{"id":"20240201213063-ho2j3ho","updated":"20240201213063"},"Children":[{"Type":"NodeText","Data":"使用批量操作可以减少网络传输次数，进而有效减小网络开销，大幅减少 RTT。"}]},{"ID":"20240201213064-sc466no","Type":"NodeParagraph","Properties":{"id":"20240201213064-sc466no","updated":"20240201213064"},"Children":[{"Type":"NodeText","Data":"另外，除了能减少 RTT 之外，发送一次命令的 socket I/O 成本也比较高（涉及上下文切换，存在"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"read()"},{"Type":"NodeText","Data":"和"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"write()"},{"Type":"NodeText","Data":"系统调用），批量操作还可以减少 socket I/O 成本。这个在官方对 pipeline 的介绍中有提到："},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://redis.io/docs/manual/pipelining/","TextMarkTextContent":"https://redis.io/docs/manual/pipelining/"},{"Type":"NodeText","Data":" 。"}]},{"ID":"20240201213065-xpzifys","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20240201213065-xpzifys","updated":"20240201213065"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"原生批量操作命令"}]},{"ID":"20240201213066-wr00fvt","Type":"NodeParagraph","Properties":{"id":"20240201213066-wr00fvt","updated":"20240201213066"},"Children":[{"Type":"NodeText","Data":"Redis 中有一些原生支持批量操作的命令，比如："}]},{"ID":"20240201213067-jkhda8s","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213067-jkhda8s","updated":"20240201213067"},"Children":[{"ID":"20240201213068-orwv7ps","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213068-orwv7ps","updated":"20240201213068"},"Children":[{"ID":"20240201213069-7rbqoht","Type":"NodeParagraph","Properties":{"id":"20240201213069-7rbqoht","updated":"20240201213069"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"MGET"},{"Type":"NodeText","Data":"(获取一个或多个指定 key 的值)、"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"MSET"},{"Type":"NodeText","Data":"(设置一个或多个指定 key 的值)、"}]}]},{"ID":"20240201213070-mnldv72","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213070-mnldv72","updated":"20240201213070"},"Children":[{"ID":"20240201213071-c3ozlvl","Type":"NodeParagraph","Properties":{"id":"20240201213071-c3ozlvl","updated":"20240201213071"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"HMGET"},{"Type":"NodeText","Data":"(获取指定哈希表中一个或者多个指定字段的值)、"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"HMSET"},{"Type":"NodeText","Data":"(同时将一个或多个 field-value 对设置到指定哈希表中)、"}]}]},{"ID":"20240201213072-ieqoqta","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213072-ieqoqta","updated":"20240201213072"},"Children":[{"ID":"20240201213073-2fw6jpq","Type":"NodeParagraph","Properties":{"id":"20240201213073-2fw6jpq","updated":"20240201213073"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"SADD"},{"Type":"NodeText","Data":"（向指定集合添加一个或多个元素）"}]}]},{"ID":"20240201213074-1b8e712","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213074-1b8e712","updated":"20240201213074"},"Children":[{"ID":"20240201213075-gxejbgd","Type":"NodeParagraph","Properties":{"id":"20240201213075-gxejbgd","updated":"20240201213075"},"Children":[{"Type":"NodeText","Data":"……"}]}]}]},{"ID":"20240201213076-3mqf63n","Type":"NodeParagraph","Properties":{"id":"20240201213076-3mqf63n","updated":"20240201213076"},"Children":[{"Type":"NodeText","Data":"不过，在 Redis 官方提供的分片集群解决方案 Redis Cluster 下，使用这些原生批量操作命令可能会存在一些小问题需要解决。就比如说 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"MGET"},{"Type":"NodeText","Data":" 无法保证所有的 key 都在同一个 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"hash slot"},{"Type":"NodeText","Data":"（哈希槽）上，"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"MGET"},{"Type":"NodeText","Data":"可能还是需要多次网络传输，原子操作也无法保证了。不过，相较于非批量操作，还是可以节省不少网络传输次数。"}]},{"ID":"20240201213077-vjc6rnq","Type":"NodeParagraph","Properties":{"id":"20240201213077-vjc6rnq","updated":"20240201213077"},"Children":[{"Type":"NodeText","Data":"整个步骤的简化版如下（通常由 Redis 客户端实现，无需我们自己再手动实现）："}]},{"ID":"20240201213078-nqlgm4c","Type":"NodeList","ListData":{"Typ":1,"Tight":true,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20240201213078-nqlgm4c","updated":"20240201213078"},"Children":[{"ID":"20240201213079-xbhklbv","Type":"NodeListItem","Data":"1","ListData":{"Typ":1,"Tight":true,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20240201213079-xbhklbv","updated":"20240201213079"},"Children":[{"ID":"20240201213080-dtha46n","Type":"NodeParagraph","Properties":{"id":"20240201213080-dtha46n","updated":"20240201213080"},"Children":[{"Type":"NodeText","Data":"找到 key 对应的所有 hash slot；"}]}]},{"ID":"20240201213081-b0re24i","Type":"NodeListItem","Data":"2","ListData":{"Typ":1,"Tight":true,"Start":2,"Delimiter":46,"Padding":3,"Marker":"Mg==","Num":2},"Properties":{"id":"20240201213081-b0re24i","updated":"20240201213081"},"Children":[{"ID":"20240201213082-7mh6mqj","Type":"NodeParagraph","Properties":{"id":"20240201213082-7mh6mqj","updated":"20240201213082"},"Children":[{"Type":"NodeText","Data":"分别向对应的 Redis 节点发起 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"MGET"},{"Type":"NodeText","Data":" 请求获取数据；"}]}]},{"ID":"20240201213083-461mh1o","Type":"NodeListItem","Data":"3","ListData":{"Typ":1,"Tight":true,"Start":3,"Delimiter":46,"Padding":3,"Marker":"Mw==","Num":3},"Properties":{"id":"20240201213083-461mh1o","updated":"20240201213083"},"Children":[{"ID":"20240201213084-vjkf3zk","Type":"NodeParagraph","Properties":{"id":"20240201213084-vjkf3zk","updated":"20240201213084"},"Children":[{"Type":"NodeText","Data":"等待所有请求执行结束，重新组装结果数据，保持跟入参 key 的顺序一致，然后返回结果。"}]}]}]},{"ID":"20240201213085-tmynwm1","Type":"NodeParagraph","Properties":{"id":"20240201213085-tmynwm1","updated":"20240201213085"},"Children":[{"Type":"NodeText","Data":"如果想要解决这个多次网络传输的问题，比较常用的办法是自己维护 key 与 slot 的关系。不过这样不太灵活，虽然带来了性能提升，但同样让系统复杂性提升。"}]},{"ID":"20240201213086-v7hzjwn","Type":"NodeBlockquote","Properties":{"id":"20240201213086-v7hzjwn","updated":"20240201213086"},"Children":[{"Type":"NodeBlockquoteMarker","Data":"\u003e ","Properties":{"id":""}},{"ID":"20240201213087-h6506w5","Type":"NodeParagraph","Properties":{"id":"20240201213087-h6506w5","updated":"20240201213087"},"Children":[{"Type":"NodeText","Data":"Redis Cluster 并没有使用一致性哈希，采用的是 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"哈希槽分区"},{"Type":"NodeText","Data":" ，每一个键值对都属于一个 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"hash slot"},{"Type":"NodeText","Data":"（哈希槽） 。当客户端发送命令请求的时候，需要先根据 key 通过上面的计算公示找到的对应的哈希槽，然后再查询哈希槽和节点的映射关系，即可找到目标 Redis 节点。"}]},{"ID":"20240201213088-b2npes8","Type":"NodeParagraph","Properties":{"id":"20240201213088-b2npes8","updated":"20240201213088"},"Children":[{"Type":"NodeText","Data":"我在 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://javaguide.cn/database/redis/redis-cluster.html","TextMarkTextContent":"Redis 集群详解（付费）"},{"Type":"NodeText","Data":" 这篇文章中详细介绍了 Redis Cluster 这部分的内容，感兴趣地可以看看。"}]}]},{"ID":"20240201213089-pl6epdb","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20240201213089-pl6epdb","updated":"20240201213089"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"pipeline"}]},{"ID":"20240201213090-7r9175b","Type":"NodeParagraph","Properties":{"id":"20240201213090-7r9175b","updated":"20240201213090"},"Children":[{"Type":"NodeText","Data":"对于不支持批量操作的命令，我们可以利用 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"pipeline（流水线)"},{"Type":"NodeText","Data":" 将一批 Redis 命令封装成一组，这些 Redis 命令会被一次性提交到 Redis 服务器，只需要一次网络传输。不过，需要注意控制一次批量操作的 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"元素个数"},{"Type":"NodeText","Data":"(例如 500 以内，实际也和元素字节数有关)，避免网络传输的数据量过大。"}]},{"ID":"20240201213091-pcfnn8i","Type":"NodeParagraph","Properties":{"id":"20240201213091-pcfnn8i","updated":"20240201213091"},"Children":[{"Type":"NodeText","Data":"与"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"MGET"},{"Type":"NodeText","Data":"、"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"MSET"},{"Type":"NodeText","Data":"等原生批量操作命令一样，pipeline 同样在 Redis Cluster 上使用会存在一些小问题。原因类似，无法保证所有的 key 都在同一个 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"hash slot"},{"Type":"NodeText","Data":"（哈希槽）上。如果想要使用的话，客户端需要自己维护 key 与 slot 的关系。"}]},{"ID":"20240201213092-fqp341v","Type":"NodeParagraph","Properties":{"id":"20240201213092-fqp341v","updated":"20240201213092"},"Children":[{"Type":"NodeText","Data":"原生批量操作命令和 pipeline 的是有区别的，使用的时候需要注意："}]},{"ID":"20240201213093-z4xcevh","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213093-z4xcevh","updated":"20240201213093"},"Children":[{"ID":"20240201213094-pc9k26u","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213094-pc9k26u","updated":"20240201213094"},"Children":[{"ID":"20240201213095-tv3v5rp","Type":"NodeParagraph","Properties":{"id":"20240201213095-tv3v5rp","updated":"20240201213095"},"Children":[{"Type":"NodeText","Data":"原生批量操作命令是原子操作，pipeline 是非原子操作。"}]}]},{"ID":"20240201213096-0lrh6e1","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213096-0lrh6e1","updated":"20240201213096"},"Children":[{"ID":"20240201213097-l500z0h","Type":"NodeParagraph","Properties":{"id":"20240201213097-l500z0h","updated":"20240201213097"},"Children":[{"Type":"NodeText","Data":"pipeline 可以打包不同的命令，原生批量操作命令不可以。"}]}]},{"ID":"20240201213098-s7gl1s2","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213098-s7gl1s2","updated":"20240201213098"},"Children":[{"ID":"20240201213099-zkdavmk","Type":"NodeParagraph","Properties":{"id":"20240201213099-zkdavmk","updated":"20240201213099"},"Children":[{"Type":"NodeText","Data":"原生批量操作命令是 Redis 服务端支持实现的，而 pipeline 需要服务端和客户端的共同实现。"}]}]}]},{"ID":"20240201213100-8m076ab","Type":"NodeParagraph","Properties":{"id":"20240201213100-8m076ab","updated":"20240201213100"},"Children":[{"Type":"NodeText","Data":"顺带补充一下 pipeline 和 Redis 事务的对比："}]},{"ID":"20240201213101-bqka7yn","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213101-bqka7yn","updated":"20240201213101"},"Children":[{"ID":"20240201213102-u3sb6po","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213102-u3sb6po","updated":"20240201213102"},"Children":[{"ID":"20240201213103-ks2didx","Type":"NodeParagraph","Properties":{"id":"20240201213103-ks2didx","updated":"20240201213103"},"Children":[{"Type":"NodeText","Data":"事务是原子操作，pipeline 是非原子操作。两个不同的事务不会同时运行，而 pipeline 可以同时以交错方式执行。"}]}]},{"ID":"20240201213104-mrz52m6","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213104-mrz52m6","updated":"20240201213104"},"Children":[{"ID":"20240201213105-ack8lr1","Type":"NodeParagraph","Properties":{"id":"20240201213105-ack8lr1","updated":"20240201213105"},"Children":[{"Type":"NodeText","Data":"Redis 事务中每个命令都需要发送到服务端，而 Pipeline 只需要发送一次，请求次数更少。"}]}]}]},{"ID":"20240201213106-nrwlw3r","Type":"NodeBlockquote","Properties":{"id":"20240201213106-nrwlw3r","updated":"20240201213106"},"Children":[{"Type":"NodeBlockquoteMarker","Data":"\u003e ","Properties":{"id":""}},{"ID":"20240201213107-cjwfly1","Type":"NodeParagraph","Properties":{"id":"20240201213107-cjwfly1","updated":"20240201213107"},"Children":[{"Type":"NodeText","Data":"事务可以看作是一个原子操作，但其实并不满足原子性。当我们提到 Redis 中的原子操作时，主要指的是这个操作（比如事务、Lua 脚本）不会被其他操作（比如其他事务、Lua 脚本）打扰，并不能完全保证这个操作中的所有写命令要么都执行要么都不执行。这主要也是因为 Redis 是不支持回滚操作。"}]}]},{"ID":"20240201213108-52vaf3r","Type":"NodeParagraph","Properties":{"id":"20240201213108-52vaf3r","updated":"20240201213108"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"https://oss.javaguide.cn/github/javaguide/database/redis/redis-pipeline-vs-transaction.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201213109-z9qy2vl","Type":"NodeParagraph","Properties":{"id":"20240201213109-z9qy2vl","updated":"20240201213109"},"Children":[{"Type":"NodeText","Data":"另外，pipeline 不适用于执行顺序有依赖关系的一批命令。就比如说，你需要将前一个命令的结果给后续的命令使用，pipeline 就没办法满足你的需求了。对于这种需求，我们可以使用 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"Lua 脚本"},{"Type":"NodeText","Data":" 。"}]},{"ID":"20240201213110-7w423te","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20240201213110-7w423te","updated":"20240201213110"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"Lua 脚本"}]},{"ID":"20240201213111-m3ne6a9","Type":"NodeParagraph","Properties":{"id":"20240201213111-m3ne6a9","updated":"20240201213111"},"Children":[{"Type":"NodeText","Data":"Lua 脚本同样支持批量操作多条命令。一段 Lua 脚本可以视作一条命令执行，可以看作是 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"原子操作"},{"Type":"NodeText","Data":" 。也就是说，一段 Lua 脚本执行过程中不会有其他脚本或 Redis 命令同时执行，保证了操作不会被其他指令插入或打扰，这是 pipeline 所不具备的。"}]},{"ID":"20240201213112-2pt1v4c","Type":"NodeParagraph","Properties":{"id":"20240201213112-2pt1v4c","updated":"20240201213112"},"Children":[{"Type":"NodeText","Data":"并且，Lua 脚本中支持一些简单的逻辑处理比如使用命令读取值并在 Lua 脚本中进行处理，这同样是 pipeline 所不具备的。"}]},{"ID":"20240201213113-99ccg87","Type":"NodeParagraph","Properties":{"id":"20240201213113-99ccg87","updated":"20240201213113"},"Children":[{"Type":"NodeText","Data":"不过， Lua 脚本依然存在下面这些缺陷："}]},{"ID":"20240201213114-7j5p56i","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213114-7j5p56i","updated":"20240201213114"},"Children":[{"ID":"20240201213115-fq2eeyz","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213115-fq2eeyz","updated":"20240201213115"},"Children":[{"ID":"20240201213116-1oh8q2f","Type":"NodeParagraph","Properties":{"id":"20240201213116-1oh8q2f","updated":"20240201213116"},"Children":[{"Type":"NodeText","Data":"如果 Lua 脚本运行时出错并中途结束，之后的操作不会进行，但是之前已经发生的写操作不会撤销，所以即使使用了 Lua 脚本，也不能实现类似数据库回滚的原子性。"}]}]},{"ID":"20240201213117-6kw190w","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213117-6kw190w","updated":"20240201213117"},"Children":[{"ID":"20240201213118-21qxmol","Type":"NodeParagraph","Properties":{"id":"20240201213118-21qxmol","updated":"20240201213118"},"Children":[{"Type":"NodeText","Data":"Redis Cluster 下 Lua 脚本的原子操作也无法保证了，原因同样是无法保证所有的 key 都在同一个 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"hash slot"},{"Type":"NodeText","Data":"（哈希槽）上。"}]}]}]},{"ID":"20240201213119-iz0kcd0","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240201213119-iz0kcd0","updated":"20240201213119"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"大量 key 集中过期问题"}]},{"ID":"20240201213120-v3qkijg","Type":"NodeParagraph","Properties":{"id":"20240201213120-v3qkijg","updated":"20240201213120"},"Children":[{"Type":"NodeText","Data":"我在前面提到过：对于过期 key，Redis 采用的是 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"定期删除+惰性/懒汉式删除"},{"Type":"NodeText","Data":" 策略。"}]},{"ID":"20240201213121-b6einnh","Type":"NodeParagraph","Properties":{"id":"20240201213121-b6einnh","updated":"20240201213121"},"Children":[{"Type":"NodeText","Data":"定期删除执行过程中，如果突然遇到大量过期 key 的话，客户端请求必须等待定期清理过期 key 任务线程执行完成，因为这个这个定期任务线程是在 Redis 主线程中执行的。这就导致客户端请求没办法被及时处理，响应速度会比较慢。"}]},{"ID":"20240201213122-c0p8r0n","Type":"NodeParagraph","Properties":{"id":"20240201213122-c0p8r0n","updated":"20240201213122"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"如何解决呢？"},{"Type":"NodeText","Data":" 下面是两种常见的方法："}]},{"ID":"20240201213123-z8pukm8","Type":"NodeList","ListData":{"Typ":1,"Tight":true,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20240201213123-z8pukm8","updated":"20240201213123"},"Children":[{"ID":"20240201213124-fgjobqg","Type":"NodeListItem","Data":"1","ListData":{"Typ":1,"Tight":true,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20240201213124-fgjobqg","updated":"20240201213124"},"Children":[{"ID":"20240201213125-e2a7834","Type":"NodeParagraph","Properties":{"id":"20240201213125-e2a7834","updated":"20240201213125"},"Children":[{"Type":"NodeText","Data":"给 key 设置随机过期时间。"}]}]},{"ID":"20240201213126-7pg6k5z","Type":"NodeListItem","Data":"2","ListData":{"Typ":1,"Tight":true,"Start":2,"Delimiter":46,"Padding":3,"Marker":"Mg==","Num":2},"Properties":{"id":"20240201213126-7pg6k5z","updated":"20240201213126"},"Children":[{"ID":"20240201213127-epk2ex3","Type":"NodeParagraph","Properties":{"id":"20240201213127-epk2ex3","updated":"20240201213127"},"Children":[{"Type":"NodeText","Data":"开启 lazy-free（惰性删除/延迟释放） 。lazy-free 特性是 Redis 4.0 开始引入的，指的是让 Redis 采用异步方式延迟释放 key 使用的内存，将该操作交给单独的子线程处理，避免阻塞主线程。"}]}]}]},{"ID":"20240201213128-gpggeku","Type":"NodeParagraph","Properties":{"id":"20240201213128-gpggeku","updated":"20240201213128"},"Children":[{"Type":"NodeText","Data":"个人建议不管是否开启 lazy-free，我们都尽量给 key 设置随机过期时间。"}]},{"ID":"20240201213129-igrqmyj","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240201213129-igrqmyj","updated":"20240201213129"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"Redis bigkey（大 Key）"}]},{"ID":"20240201213130-ih3nw85","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20240201213130-ih3nw85","updated":"20240201213130"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"什么是 bigkey？"}]},{"ID":"20240201213131-18iawzg","Type":"NodeParagraph","Properties":{"id":"20240201213131-18iawzg","updated":"20240201213131"},"Children":[{"Type":"NodeText","Data":"简单来说，如果一个 key 对应的 value 所占用的内存比较大，那这个 key 就可以看作是 bigkey。具体多大才算大呢？有一个不是特别精确的参考标准："}]},{"ID":"20240201213132-ha458wz","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213132-ha458wz","updated":"20240201213132"},"Children":[{"ID":"20240201213133-opgv6yd","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213133-opgv6yd","updated":"20240201213133"},"Children":[{"ID":"20240201213134-m2aezx0","Type":"NodeParagraph","Properties":{"id":"20240201213134-m2aezx0","updated":"20240201213134"},"Children":[{"Type":"NodeText","Data":"String 类型的 value 超过 1MB"}]}]},{"ID":"20240201213135-bnuyyaf","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213135-bnuyyaf","updated":"20240201213135"},"Children":[{"ID":"20240201213136-sgifh5g","Type":"NodeParagraph","Properties":{"id":"20240201213136-sgifh5g","updated":"20240201213136"},"Children":[{"Type":"NodeText","Data":"复合类型（List、Hash、Set、Sorted Set 等）的 value 包含的元素超过 5000 个（不过，对于复合类型的 value 来说，不一定包含的元素越多，占用的内存就越多）。"}]}]}]},{"ID":"20240201213137-8k4cg2u","Type":"NodeParagraph","Properties":{"id":"20240201213137-8k4cg2u","updated":"20240201213137"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"bigkey 判定标准","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"https://oss.javaguide.cn/github/javaguide/database/redis/bigkey-criterion.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201213138-co4w6ry","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20240201213138-co4w6ry","updated":"20240201213138"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"bigkey 是怎么产生的？有什么危害？"}]},{"ID":"20240201213139-zjfwwig","Type":"NodeParagraph","Properties":{"id":"20240201213139-zjfwwig","updated":"20240201213139"},"Children":[{"Type":"NodeText","Data":"bigkey 通常是由于下面这些原因产生的："}]},{"ID":"20240201213140-dtxg0ui","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213140-dtxg0ui","updated":"20240201213140"},"Children":[{"ID":"20240201213141-vggo158","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213141-vggo158","updated":"20240201213141"},"Children":[{"ID":"20240201213142-ox91rwb","Type":"NodeParagraph","Properties":{"id":"20240201213142-ox91rwb","updated":"20240201213142"},"Children":[{"Type":"NodeText","Data":"程序设计不当，比如直接使用 String 类型存储较大的文件对应的二进制数据。"}]}]},{"ID":"20240201213143-pwfzyof","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213143-pwfzyof","updated":"20240201213143"},"Children":[{"ID":"20240201213144-uwe0kqo","Type":"NodeParagraph","Properties":{"id":"20240201213144-uwe0kqo","updated":"20240201213144"},"Children":[{"Type":"NodeText","Data":"对于业务的数据规模考虑不周到，比如使用集合类型的时候没有考虑到数据量的快速增长。"}]}]},{"ID":"20240201213145-84tk542","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213145-84tk542","updated":"20240201213145"},"Children":[{"ID":"20240201213146-wyaxk02","Type":"NodeParagraph","Properties":{"id":"20240201213146-wyaxk02","updated":"20240201213146"},"Children":[{"Type":"NodeText","Data":"未及时清理垃圾数据，比如哈希中冗余了大量的无用键值对。"}]}]}]},{"ID":"20240201213147-xmd9dis","Type":"NodeParagraph","Properties":{"id":"20240201213147-xmd9dis","updated":"20240201213147"},"Children":[{"Type":"NodeText","Data":"bigkey 除了会消耗更多的内存空间和带宽，还会对性能造成比较大的影响。"}]},{"ID":"20240201213148-lpbt6ow","Type":"NodeParagraph","Properties":{"id":"20240201213148-lpbt6ow","updated":"20240201213148"},"Children":[{"Type":"NodeText","Data":"在 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"./redis-common-blocking-problems-summary.md","TextMarkTextContent":"Redis 常见阻塞原因总结"},{"Type":"NodeText","Data":"这篇文章中我们提到：大 key 还会造成阻塞问题。具体来说，主要体现在下面三个方面："}]},{"ID":"20240201213149-gn9ad08","Type":"NodeList","ListData":{"Typ":1,"Tight":true,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20240201213149-gn9ad08","updated":"20240201213149"},"Children":[{"ID":"20240201213150-ecwm1sb","Type":"NodeListItem","Data":"1","ListData":{"Typ":1,"Tight":true,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20240201213150-ecwm1sb","updated":"20240201213150"},"Children":[{"ID":"20240201213151-wlpvq8s","Type":"NodeParagraph","Properties":{"id":"20240201213151-wlpvq8s","updated":"20240201213151"},"Children":[{"Type":"NodeText","Data":"客户端超时阻塞：由于 Redis 执行命令是单线程处理，然后在操作大 key 时会比较耗时，那么就会阻塞 Redis，从客户端这一视角看，就是很久很久都没有响应。"}]}]},{"ID":"20240201213152-zyi1eu4","Type":"NodeListItem","Data":"2","ListData":{"Typ":1,"Tight":true,"Start":2,"Delimiter":46,"Padding":3,"Marker":"Mg==","Num":2},"Properties":{"id":"20240201213152-zyi1eu4","updated":"20240201213152"},"Children":[{"ID":"20240201213153-epbaoft","Type":"NodeParagraph","Properties":{"id":"20240201213153-epbaoft","updated":"20240201213153"},"Children":[{"Type":"NodeText","Data":"网络阻塞：每次获取大 key 产生的网络流量较大，如果一个 key 的大小是 1 MB，每秒访问量为 1000，那么每秒会产生 1000MB 的流量，这对于普通千兆网卡的服务器来说是灾难性的。"}]}]},{"ID":"20240201213154-2a2sxdw","Type":"NodeListItem","Data":"3","ListData":{"Typ":1,"Tight":true,"Start":3,"Delimiter":46,"Padding":3,"Marker":"Mw==","Num":3},"Properties":{"id":"20240201213154-2a2sxdw","updated":"20240201213154"},"Children":[{"ID":"20240201213155-4pf3ogx","Type":"NodeParagraph","Properties":{"id":"20240201213155-4pf3ogx","updated":"20240201213155"},"Children":[{"Type":"NodeText","Data":"工作线程阻塞：如果使用 del 删除大 key 时，会阻塞工作线程，这样就没办法处理后续的命令。"}]}]}]},{"ID":"20240201213156-81ap8da","Type":"NodeParagraph","Properties":{"id":"20240201213156-81ap8da","updated":"20240201213156"},"Children":[{"Type":"NodeText","Data":"大 key 造成的阻塞问题还会进一步影响到主从同步和集群扩容。"}]},{"ID":"20240201213157-eksbu6f","Type":"NodeParagraph","Properties":{"id":"20240201213157-eksbu6f","updated":"20240201213157"},"Children":[{"Type":"NodeText","Data":"综上，大 key 带来的潜在问题是非常多的，我们应该尽量避免 Redis 中存在 bigkey。"}]},{"ID":"20240201213158-w5sln24","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20240201213158-w5sln24","updated":"20240201213158"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"如何发现 bigkey？"}]},{"ID":"20240201213159-bh74jcm","Type":"NodeParagraph","Properties":{"id":"20240201213159-bh74jcm","updated":"20240201213159"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"1、使用 Redis 自带的 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong code","TextMarkTextContent":"--bigkeys"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":" 参数来查找。"}]},{"ID":"20240201213160-yj3xjui","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"YmFzaA==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20240201213160-yj3xjui","updated":"20240201213160"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"YmFzaA==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"# redis-cli -p 6379 --bigkeys\n\n# Scanning the entire keyspace to find biggest keys as well as\n# average sizes per key type.  You can use -i 0.1 to sleep 0.1 sec\n# per 100 SCAN commands (not usually needed).\n\n[00.00%] Biggest string found so far '\"ballcat:oauth:refresh_auth:f6cdb384-9a9d-4f2f-af01-dc3f28057c20\"' with 4437 bytes\n[00.00%] Biggest list   found so far '\"my-list\"' with 17 items\n\n-------- summary -------\n\nSampled 5 keys in the keyspace!\nTotal key length in bytes is 264 (avg len 52.80)\n\nBiggest   list found '\"my-list\"' has 17 items\nBiggest string found '\"ballcat:oauth:refresh_auth:f6cdb384-9a9d-4f2f-af01-dc3f28057c20\"' has 4437 bytes\n\n1 lists with 17 items (20.00% of keys, avg size 17.00)\n0 hashs with 0 fields (00.00% of keys, avg size 0.00)\n4 strings with 4831 bytes (80.00% of keys, avg size 1207.75)\n0 streams with 0 entries (00.00% of keys, avg size 0.00)\n0 sets with 0 members (00.00% of keys, avg size 0.00)\n0 zsets with 0 members (00.00% of keys, avg size 0.00\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20240201213161-rlmgj7b","Type":"NodeParagraph","Properties":{"id":"20240201213161-rlmgj7b","updated":"20240201213161"},"Children":[{"Type":"NodeText","Data":"从这个命令的运行结果，我们可以看出：这个命令会扫描(Scan) Redis 中的所有 key ，会对 Redis 的性能有一点影响。并且，这种方式只能找出每种数据结构 top 1 bigkey（占用内存最大的 String 数据类型，包含元素最多的复合数据类型）。然而，一个 key 的元素多并不代表占用内存也多，需要我们根据具体的业务情况来进一步判断。"}]},{"ID":"20240201213162-kx61nvk","Type":"NodeParagraph","Properties":{"id":"20240201213162-kx61nvk","updated":"20240201213162"},"Children":[{"Type":"NodeText","Data":"在线上执行该命令时，为了降低对 Redis 的影响，需要指定 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"-i"},{"Type":"NodeText","Data":" 参数控制扫描的频率。"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"redis-cli -p 6379 --bigkeys -i 3"},{"Type":"NodeText","Data":" 表示扫描过程中每次扫描后休息的时间间隔为 3 秒。"}]},{"ID":"20240201213163-c1wypc5","Type":"NodeParagraph","Properties":{"id":"20240201213163-c1wypc5","updated":"20240201213163"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"2、使用 Redis 自带的 SCAN 命令"}]},{"ID":"20240201213164-wf705x1","Type":"NodeParagraph","Properties":{"id":"20240201213164-wf705x1","updated":"20240201213164"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"SCAN"},{"Type":"NodeText","Data":" 命令可以按照一定的模式和数量返回匹配的 key。获取了 key 之后，可以利用 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"STRLEN"},{"Type":"NodeText","Data":"、"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"HLEN"},{"Type":"NodeText","Data":"、"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"LLEN"},{"Type":"NodeText","Data":"等命令返回其长度或成员数量。"}]},{"ID":"20240201213165-zv9h291","Type":"NodeTable","Data":"| 数据结构   | 命令   | 复杂度 | 结果（对应 key）   |\n| ---------- | ------ | ------ | ------------------ |\n| String     | STRLEN | O(1)   | 字符串值的长度     |\n| Hash       | HLEN   | O(1)   | 哈希表中字段的数量 |\n| List       | LLEN   | O(1)   | 列表元素数量       |\n| Set        | SCARD  | O(1)   | 集合元素数量       |\n| Sorted Set | ZCARD  | O(1)   | 有序集合的元素数量 |","TableAligns":[0,0,0,0],"Properties":{"id":"20240201213165-zv9h291","updated":"20240201213165"},"Children":[{"Type":"NodeTableHead","Properties":{"id":""},"Children":[{"Type":"NodeTableRow","Properties":{"id":""},"Children":[{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"数据结构"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"命令"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"复杂度"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"结果（对应 key）"}]}]}]},{"Type":"NodeTableRow","TableAligns":[0,0,0,0],"Properties":{"id":""},"Children":[{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"String"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"STRLEN"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"O(1)"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"字符串值的长度"}]}]},{"Type":"NodeTableRow","TableAligns":[0,0,0,0],"Properties":{"id":""},"Children":[{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"Hash"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"HLEN"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"O(1)"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"哈希表中字段的数量"}]}]},{"Type":"NodeTableRow","TableAligns":[0,0,0,0],"Properties":{"id":""},"Children":[{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"List"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"LLEN"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"O(1)"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"列表元素数量"}]}]},{"Type":"NodeTableRow","TableAligns":[0,0,0,0],"Properties":{"id":""},"Children":[{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"Set"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"SCARD"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"O(1)"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"集合元素数量"}]}]},{"Type":"NodeTableRow","TableAligns":[0,0,0,0],"Properties":{"id":""},"Children":[{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"Sorted Set"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"ZCARD"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"O(1)"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"有序集合的元素数量"}]}]}]},{"ID":"20240201213166-l0ck0gn","Type":"NodeParagraph","Properties":{"id":"20240201213166-l0ck0gn","updated":"20240201213166"},"Children":[{"Type":"NodeText","Data":"对于集合类型还可以使用 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"MEMORY USAGE"},{"Type":"NodeText","Data":" 命令（Redis 4.0+），这个命令会返回键值对占用的内存空间。"}]},{"ID":"20240201213167-36bsrl0","Type":"NodeParagraph","Properties":{"id":"20240201213167-36bsrl0","updated":"20240201213167"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"3、借助开源工具分析 RDB 文件。"}]},{"ID":"20240201213168-zl00vcv","Type":"NodeParagraph","Properties":{"id":"20240201213168-zl00vcv","updated":"20240201213168"},"Children":[{"Type":"NodeText","Data":"通过分析 RDB 文件来找出 big key。这种方案的前提是你的 Redis 采用的是 RDB 持久化。"}]},{"ID":"20240201213169-pug4m2h","Type":"NodeParagraph","Properties":{"id":"20240201213169-pug4m2h","updated":"20240201213169"},"Children":[{"Type":"NodeText","Data":"网上有现成的代码/工具可以直接拿来使用："}]},{"ID":"20240201213170-9l5iql5","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213170-9l5iql5","updated":"20240201213170"},"Children":[{"ID":"20240201213171-8wxaiwr","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213171-8wxaiwr","updated":"20240201213171"},"Children":[{"ID":"20240201213172-d338yjr","Type":"NodeParagraph","Properties":{"id":"20240201213172-d338yjr","updated":"20240201213172"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/sripathikrishnan/redis-rdb-tools","TextMarkTextContent":"redis-rdb-tools"},{"Type":"NodeText","Data":"：Python 语言写的用来分析 Redis 的 RDB 快照文件用的工具"}]}]},{"ID":"20240201213173-uszgslc","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213173-uszgslc","updated":"20240201213173"},"Children":[{"ID":"20240201213174-ner0ucn","Type":"NodeParagraph","Properties":{"id":"20240201213174-ner0ucn","updated":"20240201213174"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/weiyanwei412/rdb_bigkeys","TextMarkTextContent":"rdb_bigkeys"},{"Type":"NodeText","Data":" : Go 语言写的用来分析 Redis 的 RDB 快照文件用的工具，性能更好。"}]}]}]},{"ID":"20240201213175-6wndvkr","Type":"NodeParagraph","Properties":{"id":"20240201213175-6wndvkr","updated":"20240201213175"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"4、借助公有云的 Redis 分析服务。"}]},{"ID":"20240201213176-k5zgxfs","Type":"NodeParagraph","Properties":{"id":"20240201213176-k5zgxfs","updated":"20240201213176"},"Children":[{"Type":"NodeText","Data":"如果你用的是公有云的 Redis 服务的话，可以看看其是否提供了 key 分析功能（一般都提供了）。"}]},{"ID":"20240201213177-bfhrn70","Type":"NodeParagraph","Properties":{"id":"20240201213177-bfhrn70","updated":"20240201213177"},"Children":[{"Type":"NodeText","Data":"这里以阿里云 Redis 为例说明，它支持 bigkey 实时分析、发现，文档地址："},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://www.alibabacloud.com/help/zh/apsaradb-for-redis/latest/use-the-real-time-key-statistics-feature","TextMarkTextContent":"https://www.alibabacloud.com/help/zh/apsaradb-for-redis/latest/use-the-real-time-key-statistics-feature"},{"Type":"NodeText","Data":" 。"}]},{"ID":"20240201213178-lwsv4nw","Type":"NodeParagraph","Properties":{"id":"20240201213178-lwsv4nw","updated":"20240201213178"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"阿里云Key分析","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"https://oss.javaguide.cn/github/javaguide/database/redis/aliyun-key-analysis.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201213179-9ms71ks","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20240201213179-9ms71ks","updated":"20240201213179"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"如何处理 bigkey？"}]},{"ID":"20240201213180-iz1aola","Type":"NodeParagraph","Properties":{"id":"20240201213180-iz1aola","updated":"20240201213180"},"Children":[{"Type":"NodeText","Data":"bigkey 的常见处理以及优化办法如下（这些方法可以配合起来使用）："}]},{"ID":"20240201213181-n71ecfw","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213181-n71ecfw","updated":"20240201213181"},"Children":[{"ID":"20240201213182-iyagte6","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213182-iyagte6","updated":"20240201213182"},"Children":[{"ID":"20240201213183-s4rks2k","Type":"NodeParagraph","Properties":{"id":"20240201213183-s4rks2k","updated":"20240201213183"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"分割 bigkey"},{"Type":"NodeText","Data":"：将一个 bigkey 分割为多个小 key。例如，将一个含有上万字段数量的 Hash 按照一定策略（比如二次哈希）拆分为多个 Hash。"}]}]},{"ID":"20240201213184-eujrs3g","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213184-eujrs3g","updated":"20240201213184"},"Children":[{"ID":"20240201213185-2ahvs5c","Type":"NodeParagraph","Properties":{"id":"20240201213185-2ahvs5c","updated":"20240201213185"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"手动清理"},{"Type":"NodeText","Data":"：Redis 4.0+ 可以使用 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"UNLINK"},{"Type":"NodeText","Data":" 命令来异步删除一个或多个指定的 key。Redis 4.0 以下可以考虑使用 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"SCAN"},{"Type":"NodeText","Data":" 命令结合 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"DEL"},{"Type":"NodeText","Data":" 命令来分批次删除。"}]}]},{"ID":"20240201213186-h2e14w4","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213186-h2e14w4","updated":"20240201213186"},"Children":[{"ID":"20240201213187-b27976c","Type":"NodeParagraph","Properties":{"id":"20240201213187-b27976c","updated":"20240201213187"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"采用合适的数据结构"},{"Type":"NodeText","Data":"：例如，文件二进制数据不使用 String 保存、使用 HyperLogLog 统计页面 UV、Bitmap 保存状态信息（0/1）。"}]}]},{"ID":"20240201213188-73meq12","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213188-73meq12","updated":"20240201213188"},"Children":[{"ID":"20240201213189-dtthvjt","Type":"NodeParagraph","Properties":{"id":"20240201213189-dtthvjt","updated":"20240201213189"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"开启 lazy-free（惰性删除/延迟释放）"},{"Type":"NodeText","Data":" ：lazy-free 特性是 Redis 4.0 开始引入的，指的是让 Redis 采用异步方式延迟释放 key 使用的内存，将该操作交给单独的子线程处理，避免阻塞主线程。"}]}]}]},{"ID":"20240201213190-ppezdl9","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240201213190-ppezdl9","updated":"20240201213190"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"Redis hotkey（热 Key）"}]},{"ID":"20240201213191-5tbuabn","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20240201213191-5tbuabn","updated":"20240201213191"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"什么是 hotkey？"}]},{"ID":"20240201213192-4nn8wta","Type":"NodeParagraph","Properties":{"id":"20240201213192-4nn8wta","updated":"20240201213192"},"Children":[{"Type":"NodeText","Data":"如果一个 key 的访问次数比较多且明显多于其他 key 的话，那这个 key 就可以看作是 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"hotkey（热 Key）"},{"Type":"NodeText","Data":"。例如在 Redis 实例的每秒处理请求达到 5000 次，而其中某个 key 的每秒访问量就高达 2000 次，那这个 key 就可以看作是 hotkey。"}]},{"ID":"20240201213193-pm4mvw6","Type":"NodeParagraph","Properties":{"id":"20240201213193-pm4mvw6","updated":"20240201213193"},"Children":[{"Type":"NodeText","Data":"hotkey 出现的原因主要是某个热点数据访问量暴增，如重大的热搜事件、参与秒杀的商品。"}]},{"ID":"20240201213194-7b6sgr6","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20240201213194-7b6sgr6","updated":"20240201213194"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"hotkey 有什么危害？"}]},{"ID":"20240201213195-uivyp2a","Type":"NodeParagraph","Properties":{"id":"20240201213195-uivyp2a","updated":"20240201213195"},"Children":[{"Type":"NodeText","Data":"处理 hotkey 会占用大量的 CPU 和带宽，可能会影响 Redis 实例对其他请求的正常处理。此外，如果突然访问 hotkey 的请求超出了 Redis 的处理能力，Redis 就会直接宕机。这种情况下，大量请求将落到后面的数据库上，可能会导致数据库崩溃。"}]},{"ID":"20240201213196-u90x642","Type":"NodeParagraph","Properties":{"id":"20240201213196-u90x642","updated":"20240201213196"},"Children":[{"Type":"NodeText","Data":"因此，hotkey 很可能成为系统性能的瓶颈点，需要单独对其进行优化，以确保系统的高可用性和稳定性。"}]},{"ID":"20240201213197-rdl48fe","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20240201213197-rdl48fe","updated":"20240201213197"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"如何发现 hotkey？"}]},{"ID":"20240201213198-52kkik1","Type":"NodeParagraph","Properties":{"id":"20240201213198-52kkik1","updated":"20240201213198"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"1、使用 Redis 自带的 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong code","TextMarkTextContent":"--hotkeys"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":" 参数来查找。"}]},{"ID":"20240201213199-xb4rmuy","Type":"NodeParagraph","Properties":{"id":"20240201213199-xb4rmuy","updated":"20240201213199"},"Children":[{"Type":"NodeText","Data":"Redis 4.0.3 版本中新增了 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"hotkeys"},{"Type":"NodeText","Data":" 参数，该参数能够返回所有 key 的被访问次数。"}]},{"ID":"20240201213200-u48fxk0","Type":"NodeParagraph","Properties":{"id":"20240201213200-u48fxk0","updated":"20240201213200"},"Children":[{"Type":"NodeText","Data":"使用该方案的前提条件是 Redis Server 的 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"maxmemory-policy"},{"Type":"NodeText","Data":" 参数设置为 LFU 算法，不然就会出现如下所示的错误。"}]},{"ID":"20240201213201-gc1ywh1","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"YmFzaA==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20240201213201-gc1ywh1","updated":"20240201213201"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"YmFzaA==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"# redis-cli -p 6379 --hotkeys\n\n# Scanning the entire keyspace to find hot keys as well as\n# average sizes per key type.  You can use -i 0.1 to sleep 0.1 sec\n# per 100 SCAN commands (not usually needed).\n\nError: ERR An LFU maxmemory policy is not selected, access frequency not tracked. Please note that when switching between policies at runtime LRU and LFU data will take some time to adjust.\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20240201213202-4612ukz","Type":"NodeParagraph","Properties":{"id":"20240201213202-4612ukz","updated":"20240201213202"},"Children":[{"Type":"NodeText","Data":"Redis 中有两种 LFU 算法："}]},{"ID":"20240201213203-3to9quc","Type":"NodeList","ListData":{"Typ":1,"Tight":true,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20240201213203-3to9quc","updated":"20240201213203"},"Children":[{"ID":"20240201213204-1287o18","Type":"NodeListItem","Data":"1","ListData":{"Typ":1,"Tight":true,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20240201213204-1287o18","updated":"20240201213204"},"Children":[{"ID":"20240201213205-iooyrps","Type":"NodeParagraph","Properties":{"id":"20240201213205-iooyrps","updated":"20240201213205"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"volatile-lfu（least frequently used）"},{"Type":"NodeText","Data":"：从已设置过期时间的数据集（"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"server.db[i].expires"},{"Type":"NodeText","Data":"）中挑选最不经常使用的数据淘汰。"}]}]},{"ID":"20240201213206-ugtcxnu","Type":"NodeListItem","Data":"2","ListData":{"Typ":1,"Tight":true,"Start":2,"Delimiter":46,"Padding":3,"Marker":"Mg==","Num":2},"Properties":{"id":"20240201213206-ugtcxnu","updated":"20240201213206"},"Children":[{"ID":"20240201213207-gc9aie8","Type":"NodeParagraph","Properties":{"id":"20240201213207-gc9aie8","updated":"20240201213207"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"allkeys-lfu（least frequently used）"},{"Type":"NodeText","Data":"：当内存不足以容纳新写入数据时，在键空间中，移除最不经常使用的 key。"}]}]}]},{"ID":"20240201213208-a29xtlo","Type":"NodeParagraph","Properties":{"id":"20240201213208-a29xtlo","updated":"20240201213208"},"Children":[{"Type":"NodeText","Data":"以下是配置文件 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"redis.conf"},{"Type":"NodeText","Data":" 中的示例："}]},{"ID":"20240201213209-ojmokr3","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"cHJvcGVydGllcw==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20240201213209-ojmokr3","updated":"20240201213209"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"cHJvcGVydGllcw==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"# 使用 volatile-lfu 策略\nmaxmemory-policy volatile-lfu\n\n# 或者使用 allkeys-lfu 策略\nmaxmemory-policy allkeys-lfu\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20240201213210-3ho2ghx","Type":"NodeParagraph","Properties":{"id":"20240201213210-3ho2ghx","updated":"20240201213210"},"Children":[{"Type":"NodeText","Data":"需要注意的是，"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"hotkeys"},{"Type":"NodeText","Data":" 参数命令也会增加 Redis 实例的 CPU 和内存消耗（全局扫描），因此需要谨慎使用。"}]},{"ID":"20240201213211-3xk544z","Type":"NodeParagraph","Properties":{"id":"20240201213211-3xk544z","updated":"20240201213211"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"2、使用"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong code","TextMarkTextContent":"MONITOR"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":" 命令。"}]},{"ID":"20240201213212-v5eanjr","Type":"NodeParagraph","Properties":{"id":"20240201213212-v5eanjr","updated":"20240201213212"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"MONITOR"},{"Type":"NodeText","Data":" 命令是 Redis 提供的一种实时查看 Redis 的所有操作的方式，可以用于临时监控 Redis 实例的操作情况，包括读写、删除等操作。"}]},{"ID":"20240201213213-abhczg3","Type":"NodeParagraph","Properties":{"id":"20240201213213-abhczg3","updated":"20240201213213"},"Children":[{"Type":"NodeText","Data":"由于该命令对 Redis 性能的影响比较大，因此禁止长时间开启 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"MONITOR"},{"Type":"NodeText","Data":"（生产环境中建议谨慎使用该命令）。"}]},{"ID":"20240201213214-x48hpqn","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20240201213214-x48hpqn","updated":"20240201213214"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"# redis-cli\n127.0.0.1:6379\u003e MONITOR\nOK\n1683638260.637378 [0 172.17.0.1:61516] \"ping\"\n1683638267.144236 [0 172.17.0.1:61518] \"smembers\" \"mySet\"\n1683638268.941863 [0 172.17.0.1:61518] \"smembers\" \"mySet\"\n1683638269.551671 [0 172.17.0.1:61518] \"smembers\" \"mySet\"\n1683638270.646256 [0 172.17.0.1:61516] \"ping\"\n1683638270.849551 [0 172.17.0.1:61518] \"smembers\" \"mySet\"\n1683638271.926945 [0 172.17.0.1:61518] \"smembers\" \"mySet\"\n1683638274.276599 [0 172.17.0.1:61518] \"smembers\" \"mySet2\"\n1683638276.327234 [0 172.17.0.1:61518] \"smembers\" \"mySet\"\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20240201213215-7r46iny","Type":"NodeParagraph","Properties":{"id":"20240201213215-7r46iny","updated":"20240201213215"},"Children":[{"Type":"NodeText","Data":"在发生紧急情况时，我们可以选择在合适的时机短暂执行 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"MONITOR"},{"Type":"NodeText","Data":" 命令并将输出重定向至文件，在关闭 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"MONITOR"},{"Type":"NodeText","Data":" 命令后通过对文件中请求进行归类分析即可找出这段时间中的 hotkey。"}]},{"ID":"20240201213216-9cuwwv8","Type":"NodeParagraph","Properties":{"id":"20240201213216-9cuwwv8","updated":"20240201213216"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"3、借助开源项目。"}]},{"ID":"20240201213217-fpv9gvu","Type":"NodeParagraph","Properties":{"id":"20240201213217-fpv9gvu","updated":"20240201213217"},"Children":[{"Type":"NodeText","Data":"京东零售的 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://gitee.com/jd-platform-opensource/hotkey","TextMarkTextContent":"hotkey"},{"Type":"NodeText","Data":" 这个项目不光支持 hotkey 的发现，还支持 hotkey 的处理。"}]},{"ID":"20240201213218-h3uxn89","Type":"NodeParagraph","Properties":{"id":"20240201213218-h3uxn89","updated":"20240201213218"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"京东零售开源的 hotkey","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"https://oss.javaguide.cn/github/javaguide/database/redis/jd-hotkey.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201213219-safcdg6","Type":"NodeParagraph","Properties":{"id":"20240201213219-safcdg6","updated":"20240201213219"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"4、根据业务情况提前预估。"}]},{"ID":"20240201213220-uty2vsp","Type":"NodeParagraph","Properties":{"id":"20240201213220-uty2vsp","updated":"20240201213220"},"Children":[{"Type":"NodeText","Data":"可以根据业务情况来预估一些 hotkey，比如参与秒杀活动的商品数据等。不过，我们无法预估所有 hotkey 的出现，比如突发的热点新闻事件等。"}]},{"ID":"20240201213221-yjgk0wk","Type":"NodeParagraph","Properties":{"id":"20240201213221-yjgk0wk","updated":"20240201213221"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"5、业务代码中记录分析。"}]},{"ID":"20240201213222-c8gldk7","Type":"NodeParagraph","Properties":{"id":"20240201213222-c8gldk7","updated":"20240201213222"},"Children":[{"Type":"NodeText","Data":"在业务代码中添加相应的逻辑对 key 的访问情况进行记录分析。不过，这种方式会让业务代码的复杂性增加，一般也不会采用。"}]},{"ID":"20240201213223-ngqmyhq","Type":"NodeParagraph","Properties":{"id":"20240201213223-ngqmyhq","updated":"20240201213223"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"6、借助公有云的 Redis 分析服务。"}]},{"ID":"20240201213224-ds3nd7r","Type":"NodeParagraph","Properties":{"id":"20240201213224-ds3nd7r","updated":"20240201213224"},"Children":[{"Type":"NodeText","Data":"如果你用的是公有云的 Redis 服务的话，可以看看其是否提供了 key 分析功能（一般都提供了）。"}]},{"ID":"20240201213225-r4qj8me","Type":"NodeParagraph","Properties":{"id":"20240201213225-r4qj8me","updated":"20240201213225"},"Children":[{"Type":"NodeText","Data":"这里以阿里云 Redis 为例说明，它支持 hotkey 实时分析、发现，文档地址："},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://www.alibabacloud.com/help/zh/apsaradb-for-redis/latest/use-the-real-time-key-statistics-feature","TextMarkTextContent":"https://www.alibabacloud.com/help/zh/apsaradb-for-redis/latest/use-the-real-time-key-statistics-feature"},{"Type":"NodeText","Data":" 。"}]},{"ID":"20240201213226-wpuitqw","Type":"NodeParagraph","Properties":{"id":"20240201213226-wpuitqw","updated":"20240201213226"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"阿里云Key分析","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"https://oss.javaguide.cn/github/javaguide/database/redis/aliyun-key-analysis.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201213227-u9szemp","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20240201213227-u9szemp","updated":"20240201213227"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"如何解决 hotkey？"}]},{"ID":"20240201213228-080dtyg","Type":"NodeParagraph","Properties":{"id":"20240201213228-080dtyg","updated":"20240201213228"},"Children":[{"Type":"NodeText","Data":"hotkey 的常见处理以及优化办法如下（这些方法可以配合起来使用）："}]},{"ID":"20240201213229-4hcme0c","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213229-4hcme0c","updated":"20240201213229"},"Children":[{"ID":"20240201213230-qyg8fv9","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213230-qyg8fv9","updated":"20240201213230"},"Children":[{"ID":"20240201213231-ptyor75","Type":"NodeParagraph","Properties":{"id":"20240201213231-ptyor75","updated":"20240201213231"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"读写分离"},{"Type":"NodeText","Data":"：主节点处理写请求，从节点处理读请求。"}]}]},{"ID":"20240201213232-pcgx3yv","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213232-pcgx3yv","updated":"20240201213232"},"Children":[{"ID":"20240201213233-nygy8fy","Type":"NodeParagraph","Properties":{"id":"20240201213233-nygy8fy","updated":"20240201213233"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"使用 Redis Cluster"},{"Type":"NodeText","Data":"：将热点数据分散存储在多个 Redis 节点上。"}]}]},{"ID":"20240201213234-dxf78u5","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213234-dxf78u5","updated":"20240201213234"},"Children":[{"ID":"20240201213235-w8xrsaf","Type":"NodeParagraph","Properties":{"id":"20240201213235-w8xrsaf","updated":"20240201213235"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"二级缓存"},{"Type":"NodeText","Data":"：hotkey 采用二级缓存的方式进行处理，将 hotkey 存放一份到 JVM 本地内存中（可以用 Caffeine）。"}]}]}]},{"ID":"20240201213236-6e5b7zw","Type":"NodeParagraph","Properties":{"id":"20240201213236-6e5b7zw","updated":"20240201213236"},"Children":[{"Type":"NodeText","Data":"除了这些方法之外，如果你使用的公有云的 Redis 服务话，还可以留意其提供的开箱即用的解决方案。"}]},{"ID":"20240201213237-rer3jnt","Type":"NodeParagraph","Properties":{"id":"20240201213237-rer3jnt","updated":"20240201213237"},"Children":[{"Type":"NodeText","Data":"这里以阿里云 Redis 为例说明，它支持通过代理查询缓存功能（Proxy Query Cache）优化热点 Key 问题。"}]},{"ID":"20240201213238-td05kz2","Type":"NodeParagraph","Properties":{"id":"20240201213238-td05kz2","updated":"20240201213238"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"通过阿里云的Proxy Query Cache优化热点Key问题","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"https://oss.javaguide.cn/github/javaguide/database/redis/aliyun-hotkey-proxy-query-cache.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201213239-jwdgs4f","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240201213239-jwdgs4f","updated":"20240201213239"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"慢查询命令"}]},{"ID":"20240201213240-htw3fa1","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20240201213240-htw3fa1","updated":"20240201213240"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"为什么会有慢查询命令？"}]},{"ID":"20240201213241-dp4lxuf","Type":"NodeParagraph","Properties":{"id":"20240201213241-dp4lxuf","updated":"20240201213241"},"Children":[{"Type":"NodeText","Data":"我们知道一个 Redis 命令的执行可以简化为以下 4 步："}]},{"ID":"20240201213242-pn3fesk","Type":"NodeList","ListData":{"Typ":1,"Tight":true,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20240201213242-pn3fesk","updated":"20240201213242"},"Children":[{"ID":"20240201213243-iymqp5j","Type":"NodeListItem","Data":"1","ListData":{"Typ":1,"Tight":true,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20240201213243-iymqp5j","updated":"20240201213243"},"Children":[{"ID":"20240201213244-g5ovxr3","Type":"NodeParagraph","Properties":{"id":"20240201213244-g5ovxr3","updated":"20240201213244"},"Children":[{"Type":"NodeText","Data":"发送命令"}]}]},{"ID":"20240201213245-ss7585h","Type":"NodeListItem","Data":"2","ListData":{"Typ":1,"Tight":true,"Start":2,"Delimiter":46,"Padding":3,"Marker":"Mg==","Num":2},"Properties":{"id":"20240201213245-ss7585h","updated":"20240201213245"},"Children":[{"ID":"20240201213246-emysuih","Type":"NodeParagraph","Properties":{"id":"20240201213246-emysuih","updated":"20240201213246"},"Children":[{"Type":"NodeText","Data":"命令排队"}]}]},{"ID":"20240201213247-j5iii3z","Type":"NodeListItem","Data":"3","ListData":{"Typ":1,"Tight":true,"Start":3,"Delimiter":46,"Padding":3,"Marker":"Mw==","Num":3},"Properties":{"id":"20240201213247-j5iii3z","updated":"20240201213247"},"Children":[{"ID":"20240201213248-h6c1l17","Type":"NodeParagraph","Properties":{"id":"20240201213248-h6c1l17","updated":"20240201213248"},"Children":[{"Type":"NodeText","Data":"命令执行"}]}]},{"ID":"20240201213249-f82o7k5","Type":"NodeListItem","Data":"4","ListData":{"Typ":1,"Tight":true,"Start":4,"Delimiter":46,"Padding":3,"Marker":"NA==","Num":4},"Properties":{"id":"20240201213249-f82o7k5","updated":"20240201213249"},"Children":[{"ID":"20240201213250-q1gng6l","Type":"NodeParagraph","Properties":{"id":"20240201213250-q1gng6l","updated":"20240201213250"},"Children":[{"Type":"NodeText","Data":"返回结果"}]}]}]},{"ID":"20240201213251-tw9xvps","Type":"NodeParagraph","Properties":{"id":"20240201213251-tw9xvps","updated":"20240201213251"},"Children":[{"Type":"NodeText","Data":"Redis 慢查询统计的是命令执行这一步骤的耗时，慢查询命令也就是那些命令执行时间较长的命令。"}]},{"ID":"20240201213252-aipcq7u","Type":"NodeParagraph","Properties":{"id":"20240201213252-aipcq7u","updated":"20240201213252"},"Children":[{"Type":"NodeText","Data":"Redis 为什么会有慢查询命令呢？"}]},{"ID":"20240201213253-zfeo2kj","Type":"NodeParagraph","Properties":{"id":"20240201213253-zfeo2kj","updated":"20240201213253"},"Children":[{"Type":"NodeText","Data":"Redis 中的大部分命令都是 O(1)时间复杂度，但也有少部分 O(n) 时间复杂度的命令，例如："}]},{"ID":"20240201213254-oa2i8tp","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213254-oa2i8tp","updated":"20240201213254"},"Children":[{"ID":"20240201213255-03wyyrt","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213255-03wyyrt","updated":"20240201213255"},"Children":[{"ID":"20240201213256-1j714vl","Type":"NodeParagraph","Properties":{"id":"20240201213256-1j714vl","updated":"20240201213256"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"KEYS *"},{"Type":"NodeText","Data":"：会返回所有符合规则的 key。"}]}]},{"ID":"20240201213257-tcaoj6w","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213257-tcaoj6w","updated":"20240201213257"},"Children":[{"ID":"20240201213258-wa4yvkf","Type":"NodeParagraph","Properties":{"id":"20240201213258-wa4yvkf","updated":"20240201213258"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"HGETALL"},{"Type":"NodeText","Data":"：会返回一个 Hash 中所有的键值对。"}]}]},{"ID":"20240201213259-38msstn","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213259-38msstn","updated":"20240201213259"},"Children":[{"ID":"20240201213260-oqzwjqp","Type":"NodeParagraph","Properties":{"id":"20240201213260-oqzwjqp","updated":"20240201213260"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"LRANGE"},{"Type":"NodeText","Data":"：会返回 List 中指定范围内的元素。"}]}]},{"ID":"20240201213261-9fgnrx9","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213261-9fgnrx9","updated":"20240201213261"},"Children":[{"ID":"20240201213262-0kcwws2","Type":"NodeParagraph","Properties":{"id":"20240201213262-0kcwws2","updated":"20240201213262"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"SMEMBERS"},{"Type":"NodeText","Data":"：返回 Set 中的所有元素。"}]}]},{"ID":"20240201213263-3yr9vpc","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213263-3yr9vpc","updated":"20240201213263"},"Children":[{"ID":"20240201213264-z23wfyg","Type":"NodeParagraph","Properties":{"id":"20240201213264-z23wfyg","updated":"20240201213264"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"SINTER"},{"Type":"NodeText","Data":"/"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"SUNION"},{"Type":"NodeText","Data":"/"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"SDIFF"},{"Type":"NodeText","Data":"：计算多个 Set 的交集/并集/差集。"}]}]},{"ID":"20240201213265-vq5bgpp","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213265-vq5bgpp","updated":"20240201213265"},"Children":[{"ID":"20240201213266-snk9xae","Type":"NodeParagraph","Properties":{"id":"20240201213266-snk9xae","updated":"20240201213266"},"Children":[{"Type":"NodeText","Data":"……"}]}]}]},{"ID":"20240201213267-rovoaru","Type":"NodeParagraph","Properties":{"id":"20240201213267-rovoaru","updated":"20240201213267"},"Children":[{"Type":"NodeText","Data":"由于这些命令时间复杂度是 O(n)，有时候也会全表扫描，随着 n 的增大，执行耗时也会越长。不过， 这些命令并不是一定不能使用，但是需要明确 N 的值。另外，有遍历的需求可以使用 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"HSCAN"},{"Type":"NodeText","Data":"、"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"SSCAN"},{"Type":"NodeText","Data":"、"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"ZSCAN"},{"Type":"NodeText","Data":" 代替。"}]},{"ID":"20240201213268-wle8hp0","Type":"NodeParagraph","Properties":{"id":"20240201213268-wle8hp0","updated":"20240201213268"},"Children":[{"Type":"NodeText","Data":"除了这些 O(n)时间复杂度的命令可能会导致慢查询之外， 还有一些时间复杂度可能在 O(N) 以上的命令，例如："}]},{"ID":"20240201213269-ql0scdk","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213269-ql0scdk","updated":"20240201213269"},"Children":[{"ID":"20240201213270-74gx2c6","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213270-74gx2c6","updated":"20240201213270"},"Children":[{"ID":"20240201213271-yaeq9rv","Type":"NodeParagraph","Properties":{"id":"20240201213271-yaeq9rv","updated":"20240201213271"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"ZRANGE"},{"Type":"NodeText","Data":"/"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"ZREVRANGE"},{"Type":"NodeText","Data":"：返回指定 Sorted Set 中指定排名范围内的所有元素。时间复杂度为 O(log(n)+m)，n 为所有元素的数量， m 为返回的元素数量，当 m 和 n 相当大时，O(n) 的时间复杂度更小。"}]}]},{"ID":"20240201213272-v0yur2q","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213272-v0yur2q","updated":"20240201213272"},"Children":[{"ID":"20240201213273-xpptjcx","Type":"NodeParagraph","Properties":{"id":"20240201213273-xpptjcx","updated":"20240201213273"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"ZREMRANGEBYRANK"},{"Type":"NodeText","Data":"/"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"ZREMRANGEBYSCORE"},{"Type":"NodeText","Data":"：移除 Sorted Set 中指定排名范围/指定 score 范围内的所有元素。时间复杂度为 O(log(n)+m)，n 为所有元素的数量， m 被删除元素的数量，当 m 和 n 相当大时，O(n) 的时间复杂度更小。"}]}]},{"ID":"20240201213274-aoaov8o","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213274-aoaov8o","updated":"20240201213274"},"Children":[{"ID":"20240201213275-zi2if2g","Type":"NodeParagraph","Properties":{"id":"20240201213275-zi2if2g","updated":"20240201213275"},"Children":[{"Type":"NodeText","Data":"……"}]}]}]},{"ID":"20240201213276-qldcji8","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20240201213276-qldcji8","updated":"20240201213276"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"如何找到慢查询命令？"}]},{"ID":"20240201213277-x2kgja2","Type":"NodeParagraph","Properties":{"id":"20240201213277-x2kgja2","updated":"20240201213277"},"Children":[{"Type":"NodeText","Data":"在 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"redis.conf"},{"Type":"NodeText","Data":" 文件中，我们可以使用 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"slowlog-log-slower-than"},{"Type":"NodeText","Data":" 参数设置耗时命令的阈值，并使用 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"slowlog-max-len"},{"Type":"NodeText","Data":" 参数设置耗时命令的最大记录条数。"}]},{"ID":"20240201213278-kwuhlz9","Type":"NodeParagraph","Properties":{"id":"20240201213278-kwuhlz9","updated":"20240201213278"},"Children":[{"Type":"NodeText","Data":"当 Redis 服务器检测到执行时间超过 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"slowlog-log-slower-than"},{"Type":"NodeText","Data":"阈值的命令时，就会将该命令记录在慢查询日志(slow log) 中，这点和 MySQL 记录慢查询语句类似。当慢查询日志超过设定的最大记录条数之后，Redis 会把最早的执行命令依次舍弃。"}]},{"ID":"20240201213279-vsz2wpt","Type":"NodeParagraph","Properties":{"id":"20240201213279-vsz2wpt","updated":"20240201213279"},"Children":[{"Type":"NodeText","Data":"⚠️注意：由于慢查询日志会占用一定内存空间，如果设置最大记录条数过大，可能会导致内存占用过高的问题。"}]},{"ID":"20240201213280-nhpntsh","Type":"NodeParagraph","Properties":{"id":"20240201213280-nhpntsh","updated":"20240201213280"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"slowlog-log-slower-than"},{"Type":"NodeText","Data":"和"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"slowlog-max-len"},{"Type":"NodeText","Data":"的默认配置如下(可以自行修改)："}]},{"ID":"20240201213281-1lqwqss","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"bmdpbng=","CodeBlockCloseFence":"YGBg","Properties":{"id":"20240201213281-1lqwqss","updated":"20240201213281"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"bmdpbng=","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"# The following time is expressed in microseconds, so 1000000 is equivalent\n# to one second. Note that a negative number disables the slow log, while\n# a value of zero forces the logging of every command.\nslowlog-log-slower-than 10000\n\n# There is no limit to this length. Just be aware that it will consume memory.\n# You can reclaim memory used by the slow log with SLOWLOG RESET.\nslowlog-max-len 128\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20240201213282-4m2z56y","Type":"NodeParagraph","Properties":{"id":"20240201213282-4m2z56y","updated":"20240201213282"},"Children":[{"Type":"NodeText","Data":"除了修改配置文件之外，你也可以直接通过 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"CONFIG"},{"Type":"NodeText","Data":" 命令直接设置："}]},{"ID":"20240201213283-7sl5p87","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"YmFzaA==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20240201213283-7sl5p87","updated":"20240201213283"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"YmFzaA==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"# 命令执行耗时超过 10000 微妙（即10毫秒）就会被记录\nCONFIG SET slowlog-log-slower-than 10000\n# 只保留最近 128 条耗时命令\nCONFIG SET slowlog-max-len 128\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20240201213284-k3lac09","Type":"NodeParagraph","Properties":{"id":"20240201213284-k3lac09","updated":"20240201213284"},"Children":[{"Type":"NodeText","Data":"获取慢查询日志的内容很简单，直接使用"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"SLOWLOG GET"},{"Type":"NodeText","Data":" 命令即可。"}]},{"ID":"20240201213285-4w7325z","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20240201213285-4w7325z","updated":"20240201213285"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"127.0.0.1:6379\u003e SLOWLOG GET #慢日志查询\n 1) 1) (integer) 5\n   2) (integer) 1684326682\n   3) (integer) 12000\n   4) 1) \"KEYS\"\n      2) \"*\"\n   5) \"172.17.0.1:61152\"\n   6) \"\"\n  // ...\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20240201213286-unuim3t","Type":"NodeParagraph","Properties":{"id":"20240201213286-unuim3t","updated":"20240201213286"},"Children":[{"Type":"NodeText","Data":"慢查询日志中的每个条目都由以下六个值组成："}]},{"ID":"20240201213287-gbzcrna","Type":"NodeList","ListData":{"Typ":1,"Tight":true,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20240201213287-gbzcrna","updated":"20240201213287"},"Children":[{"ID":"20240201213288-nw4wyeh","Type":"NodeListItem","Data":"1","ListData":{"Typ":1,"Tight":true,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20240201213288-nw4wyeh","updated":"20240201213288"},"Children":[{"ID":"20240201213289-xahdm04","Type":"NodeParagraph","Properties":{"id":"20240201213289-xahdm04","updated":"20240201213289"},"Children":[{"Type":"NodeText","Data":"唯一渐进的日志标识符。"}]}]},{"ID":"20240201213290-nvqhxh1","Type":"NodeListItem","Data":"2","ListData":{"Typ":1,"Tight":true,"Start":2,"Delimiter":46,"Padding":3,"Marker":"Mg==","Num":2},"Properties":{"id":"20240201213290-nvqhxh1","updated":"20240201213290"},"Children":[{"ID":"20240201213291-ov435wo","Type":"NodeParagraph","Properties":{"id":"20240201213291-ov435wo","updated":"20240201213291"},"Children":[{"Type":"NodeText","Data":"处理记录命令的 Unix 时间戳。"}]}]},{"ID":"20240201213292-ejwj1kp","Type":"NodeListItem","Data":"3","ListData":{"Typ":1,"Tight":true,"Start":3,"Delimiter":46,"Padding":3,"Marker":"Mw==","Num":3},"Properties":{"id":"20240201213292-ejwj1kp","updated":"20240201213292"},"Children":[{"ID":"20240201213293-8c6c807","Type":"NodeParagraph","Properties":{"id":"20240201213293-8c6c807","updated":"20240201213293"},"Children":[{"Type":"NodeText","Data":"执行所需的时间量，以微秒为单位。"}]}]},{"ID":"20240201213294-f35jw71","Type":"NodeListItem","Data":"4","ListData":{"Typ":1,"Tight":true,"Start":4,"Delimiter":46,"Padding":3,"Marker":"NA==","Num":4},"Properties":{"id":"20240201213294-f35jw71","updated":"20240201213294"},"Children":[{"ID":"20240201213295-0n7tiqb","Type":"NodeParagraph","Properties":{"id":"20240201213295-0n7tiqb","updated":"20240201213295"},"Children":[{"Type":"NodeText","Data":"组成命令参数的数组。"}]}]},{"ID":"20240201213296-mqkmdfj","Type":"NodeListItem","Data":"5","ListData":{"Typ":1,"Tight":true,"Start":5,"Delimiter":46,"Padding":3,"Marker":"NQ==","Num":5},"Properties":{"id":"20240201213296-mqkmdfj","updated":"20240201213296"},"Children":[{"ID":"20240201213297-b3q6ytj","Type":"NodeParagraph","Properties":{"id":"20240201213297-b3q6ytj","updated":"20240201213297"},"Children":[{"Type":"NodeText","Data":"客户端 IP 地址和端口。"}]}]},{"ID":"20240201213298-d3xmiuj","Type":"NodeListItem","Data":"6","ListData":{"Typ":1,"Tight":true,"Start":6,"Delimiter":46,"Padding":3,"Marker":"Ng==","Num":6},"Properties":{"id":"20240201213298-d3xmiuj","updated":"20240201213298"},"Children":[{"ID":"20240201213299-s6tmgr6","Type":"NodeParagraph","Properties":{"id":"20240201213299-s6tmgr6","updated":"20240201213299"},"Children":[{"Type":"NodeText","Data":"客户端名称。"}]}]}]},{"ID":"20240201213300-wi69kk4","Type":"NodeParagraph","Properties":{"id":"20240201213300-wi69kk4","updated":"20240201213300"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"SLOWLOG GET"},{"Type":"NodeText","Data":" 命令默认返回最近 10 条的的慢查询命令，你也自己可以指定返回的慢查询命令的数量 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"SLOWLOG GET N"},{"Type":"NodeText","Data":"。"}]},{"ID":"20240201213301-e78t9pk","Type":"NodeParagraph","Properties":{"id":"20240201213301-e78t9pk","updated":"20240201213301"},"Children":[{"Type":"NodeText","Data":"下面是其他比较常用的慢查询相关的命令："}]},{"ID":"20240201213302-dbzn0pf","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"YmFzaA==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20240201213302-dbzn0pf","updated":"20240201213302"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"YmFzaA==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"# 返回慢查询命令的数量\n127.0.0.1:6379\u003e SLOWLOG LEN\n(integer) 128\n# 清空慢查询命令\n127.0.0.1:6379\u003e SLOWLOG RESET\nOK\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20240201213303-kp6xejv","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240201213303-kp6xejv","updated":"20240201213303"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"Redis 内存碎片"}]},{"ID":"20240201213304-hqbxgdz","Type":"NodeParagraph","Properties":{"id":"20240201213304-hqbxgdz","updated":"20240201213304"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"相关问题"},{"Type":"NodeText","Data":"："}]},{"ID":"20240201213305-cqy7c9f","Type":"NodeList","ListData":{"Typ":1,"Tight":true,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20240201213305-cqy7c9f","updated":"20240201213305"},"Children":[{"ID":"20240201213306-dqya6se","Type":"NodeListItem","Data":"1","ListData":{"Typ":1,"Tight":true,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20240201213306-dqya6se","updated":"20240201213306"},"Children":[{"ID":"20240201213307-1efrddq","Type":"NodeParagraph","Properties":{"id":"20240201213307-1efrddq","updated":"20240201213307"},"Children":[{"Type":"NodeText","Data":"什么是内存碎片?为什么会有 Redis 内存碎片?"}]}]},{"ID":"20240201213308-cv6v3wz","Type":"NodeListItem","Data":"2","ListData":{"Typ":1,"Tight":true,"Start":2,"Delimiter":46,"Padding":3,"Marker":"Mg==","Num":2},"Properties":{"id":"20240201213308-cv6v3wz","updated":"20240201213308"},"Children":[{"ID":"20240201213309-tvjnfps","Type":"NodeParagraph","Properties":{"id":"20240201213309-tvjnfps","updated":"20240201213309"},"Children":[{"Type":"NodeText","Data":"如何清理 Redis 内存碎片？"}]}]}]},{"ID":"20240201213310-vmjy6at","Type":"NodeParagraph","Properties":{"id":"20240201213310-vmjy6at","updated":"20240201213310"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"参考答案"},{"Type":"NodeText","Data":"："},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://javaguide.cn/database/redis/redis-memory-fragmentation.html","TextMarkTextContent":"Redis 内存碎片详解"},{"Type":"NodeText","Data":"。"}]},{"ID":"20240201213311-pui8okl","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240201213311-pui8okl","updated":"20240201213311"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"Redis 生产问题（重要）"}]},{"ID":"20240201213312-ueom3zd","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240201213312-ueom3zd","updated":"20240201213312"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"缓存穿透"}]},{"ID":"20240201213313-acu5yso","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20240201213313-acu5yso","updated":"20240201213313"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"什么是缓存穿透？"}]},{"ID":"20240201213314-hn6bvte","Type":"NodeParagraph","Properties":{"id":"20240201213314-hn6bvte","updated":"20240201213314"},"Children":[{"Type":"NodeText","Data":"缓存穿透说简单点就是大量请求的 key 是不合理的，"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"根本不存在于缓存中，也不存在于数据库中"},{"Type":"NodeText","Data":" 。这就导致这些请求直接到了数据库上，根本没有经过缓存这一层，对数据库造成了巨大的压力，可能直接就被这么多请求弄宕机了。"}]},{"ID":"20240201213315-x4dg6df","Type":"NodeParagraph","Properties":{"id":"20240201213315-x4dg6df","updated":"20240201213315"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"缓存穿透","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"https://oss.javaguide.cn/github/javaguide/database/redis/redis-cache-penetration.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201213316-zu4n2qq","Type":"NodeParagraph","Properties":{"id":"20240201213316-zu4n2qq","updated":"20240201213316"},"Children":[{"Type":"NodeText","Data":"举个例子：某个黑客故意制造一些非法的 key 发起大量请求，导致大量请求落到数据库，结果数据库上也没有查到对应的数据。也就是说这些请求最终都落到了数据库上，对数据库造成了巨大的压力。"}]},{"ID":"20240201213317-6uzilut","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20240201213317-6uzilut","updated":"20240201213317"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"有哪些解决办法？"}]},{"ID":"20240201213318-0ng075c","Type":"NodeParagraph","Properties":{"id":"20240201213318-0ng075c","updated":"20240201213318"},"Children":[{"Type":"NodeText","Data":"最基本的就是首先做好参数校验，一些不合法的参数请求直接抛出异常信息返回给客户端。比如查询的数据库 id 不能小于 0、传入的邮箱格式不对的时候直接返回错误消息给客户端等等。"}]},{"ID":"20240201213319-95jcelm","Type":"NodeParagraph","Properties":{"id":"20240201213319-95jcelm","updated":"20240201213319"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"1）缓存无效 key"}]},{"ID":"20240201213320-7apiecw","Type":"NodeParagraph","Properties":{"id":"20240201213320-7apiecw","updated":"20240201213320"},"Children":[{"Type":"NodeText","Data":"如果缓存和数据库都查不到某个 key 的数据就写一个到 Redis 中去并设置过期时间，具体命令如下："},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"SET key value EX 10086"},{"Type":"NodeText","Data":" 。这种方式可以解决请求的 key 变化不频繁的情况，如果黑客恶意攻击，每次构建不同的请求 key，会导致 Redis 中缓存大量无效的 key 。很明显，这种方案并不能从根本上解决此问题。如果非要用这种方式来解决穿透问题的话，尽量将无效的 key 的过期时间设置短一点比如 1 分钟。"}]},{"ID":"20240201213321-pzhk08w","Type":"NodeParagraph","Properties":{"id":"20240201213321-pzhk08w","updated":"20240201213321"},"Children":[{"Type":"NodeText","Data":"另外，这里多说一嘴，一般情况下我们是这样设计 key 的："},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"表名:列名:主键名:主键值"},{"Type":"NodeText","Data":" 。"}]},{"ID":"20240201213322-bak6a5b","Type":"NodeParagraph","Properties":{"id":"20240201213322-bak6a5b","updated":"20240201213322"},"Children":[{"Type":"NodeText","Data":"如果用 Java 代码展示的话，差不多是下面这样的："}]},{"ID":"20240201213323-flyzzyt","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20240201213323-flyzzyt","updated":"20240201213323"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"public Object getObjectInclNullById(Integer id) {\n    // 从缓存中获取数据\n    Object cacheValue = cache.get(id);\n    // 缓存为空\n    if (cacheValue == null) {\n        // 从数据库中获取\n        Object storageValue = storage.get(key);\n        // 缓存空对象\n        cache.set(key, storageValue);\n        // 如果存储数据为空，需要设置一个过期时间(300秒)\n        if (storageValue == null) {\n            // 必须设置过期时间，否则有被攻击的风险\n            cache.expire(key, 60 * 5);\n        }\n        return storageValue;\n    }\n    return cacheValue;\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20240201213324-m6xgl52","Type":"NodeParagraph","Properties":{"id":"20240201213324-m6xgl52","updated":"20240201213324"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"2）布隆过滤器"}]},{"ID":"20240201213325-lz48fcv","Type":"NodeParagraph","Properties":{"id":"20240201213325-lz48fcv","updated":"20240201213325"},"Children":[{"Type":"NodeText","Data":"布隆过滤器是一个非常神奇的数据结构，通过它我们可以非常方便地判断一个给定数据是否存在于海量数据中。我们可以把它看作由二进制向量（或者说位数组）和一系列随机映射函数（哈希函数）两部分组成的数据结构。相比于我们平时常用的 List、Map、Set 等数据结构，它占用空间更少并且效率更高，但是缺点是其返回的结果是概率性的，而不是非常准确的。理论情况下添加到集合中的元素越多，误报的可能性就越大。并且，存放在布隆过滤器的数据不容易删除。"}]},{"ID":"20240201213326-0yymwva","Type":"NodeParagraph","Properties":{"id":"20240201213326-0yymwva","updated":"20240201213326"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"Bloom Filter 的简单原理示意图","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"https://oss.javaguide.cn/github/javaguide/cs-basics/algorithms/bloom-filter-simple-schematic-diagram.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201213327-q69c5xc","Type":"NodeParagraph","Properties":{"id":"20240201213327-q69c5xc","updated":"20240201213327"},"Children":[{"Type":"NodeText","Data":"Bloom Filter 会使用一个较大的 bit 数组来保存所有的数据，数组中的每个元素都只占用 1 bit ，并且每个元素只能是 0 或者 1（代表 false 或者 true），这也是 Bloom Filter 节省内存的核心所在。这样来算的话，申请一个 100w 个元素的位数组只占用 1000000Bit / 8 = 125000 Byte = 125000/1024 KB ≈ 122KB 的空间。"}]},{"ID":"20240201213328-rl4y7vh","Type":"NodeParagraph","Properties":{"id":"20240201213328-rl4y7vh","updated":"20240201213328"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"位数组","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"https://oss.javaguide.cn/github/javaguide/cs-basics/algorithms/bloom-filter-bit-table.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201213329-x1agn5p","Type":"NodeParagraph","Properties":{"id":"20240201213329-x1agn5p","updated":"20240201213329"},"Children":[{"Type":"NodeText","Data":"具体是这样做的：把所有可能存在的请求的值都存放在布隆过滤器中，当用户请求过来，先判断用户发来的请求的值是否存在于布隆过滤器中。不存在的话，直接返回请求参数错误信息给客户端，存在的话才会走下面的流程。"}]},{"ID":"20240201213330-1czfe3k","Type":"NodeParagraph","Properties":{"id":"20240201213330-1czfe3k","updated":"20240201213330"},"Children":[{"Type":"NodeText","Data":"加入布隆过滤器之后的缓存处理流程图如下。"}]},{"ID":"20240201213331-tkj1vio","Type":"NodeParagraph","Properties":{"id":"20240201213331-tkj1vio","updated":"20240201213331"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"加入布隆过滤器之后的缓存处理流程图","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"https://oss.javaguide.cn/github/javaguide/database/redis/redis-cache-penetration-bloom-filter.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201213332-mn57wkk","Type":"NodeParagraph","Properties":{"id":"20240201213332-mn57wkk","updated":"20240201213332"},"Children":[{"Type":"NodeText","Data":"更多关于布隆过滤器的详细介绍可以看看我的这篇原创："},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://javaguide.cn/cs-basics/data-structure/bloom-filter/","TextMarkTextContent":"不了解布隆过滤器？一文给你整的明明白白！"},{"Type":"NodeText","Data":" ，强烈推荐。"}]},{"ID":"20240201213333-426rkhx","Type":"NodeParagraph","Properties":{"id":"20240201213333-426rkhx","updated":"20240201213333"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"3）接口限流"}]},{"ID":"20240201213334-9wf2od8","Type":"NodeParagraph","Properties":{"id":"20240201213334-9wf2od8","updated":"20240201213334"},"Children":[{"Type":"NodeText","Data":"根据用户或者 IP 对接口进行限流，对于异常频繁的访问行为，还可以采取黑名单机制，例如将异常 IP 列入黑名单。"}]},{"ID":"20240201213335-oibtali","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240201213335-oibtali","updated":"20240201213335"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"缓存击穿"}]},{"ID":"20240201213336-jyow9pb","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20240201213336-jyow9pb","updated":"20240201213336"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"什么是缓存击穿？"}]},{"ID":"20240201213337-0wjjtd6","Type":"NodeParagraph","Properties":{"id":"20240201213337-0wjjtd6","updated":"20240201213337"},"Children":[{"Type":"NodeText","Data":"缓存击穿中，请求的 key 对应的是 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"热点数据"},{"Type":"NodeText","Data":" ，该数据 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"存在于数据库中，但不存在于缓存中（通常是因为缓存中的那份数据已经过期）"},{"Type":"NodeText","Data":" 。这就可能会导致瞬时大量的请求直接打到了数据库上，对数据库造成了巨大的压力，可能直接就被这么多请求弄宕机了。"}]},{"ID":"20240201213338-8ae1z7v","Type":"NodeParagraph","Properties":{"id":"20240201213338-8ae1z7v","updated":"20240201213338"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"缓存击穿","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"https://oss.javaguide.cn/github/javaguide/database/redis/redis-cache-breakdown.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201213339-c037kqp","Type":"NodeParagraph","Properties":{"id":"20240201213339-c037kqp","updated":"20240201213339"},"Children":[{"Type":"NodeText","Data":"举个例子：秒杀进行过程中，缓存中的某个秒杀商品的数据突然过期，这就导致瞬时大量对该商品的请求直接落到数据库上，对数据库造成了巨大的压力。"}]},{"ID":"20240201213340-jl0jj40","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20240201213340-jl0jj40","updated":"20240201213340"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"有哪些解决办法？"}]},{"ID":"20240201213341-mjenvv8","Type":"NodeList","ListData":{"Typ":1,"Tight":true,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20240201213341-mjenvv8","updated":"20240201213341"},"Children":[{"ID":"20240201213342-6uuedbl","Type":"NodeListItem","Data":"1","ListData":{"Typ":1,"Tight":true,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20240201213342-6uuedbl","updated":"20240201213342"},"Children":[{"ID":"20240201213343-vymyswh","Type":"NodeParagraph","Properties":{"id":"20240201213343-vymyswh","updated":"20240201213343"},"Children":[{"Type":"NodeText","Data":"设置热点数据永不过期或者过期时间比较长。"}]}]},{"ID":"20240201213344-tl7jywv","Type":"NodeListItem","Data":"2","ListData":{"Typ":1,"Tight":true,"Start":2,"Delimiter":46,"Padding":3,"Marker":"Mg==","Num":2},"Properties":{"id":"20240201213344-tl7jywv","updated":"20240201213344"},"Children":[{"ID":"20240201213345-8vzlclc","Type":"NodeParagraph","Properties":{"id":"20240201213345-8vzlclc","updated":"20240201213345"},"Children":[{"Type":"NodeText","Data":"针对热点数据提前预热，将其存入缓存中并设置合理的过期时间比如秒杀场景下的数据在秒杀结束之前不过期。"}]}]},{"ID":"20240201213346-tdya68m","Type":"NodeListItem","Data":"3","ListData":{"Typ":1,"Tight":true,"Start":3,"Delimiter":46,"Padding":3,"Marker":"Mw==","Num":3},"Properties":{"id":"20240201213346-tdya68m","updated":"20240201213346"},"Children":[{"ID":"20240201213347-2ifbiwk","Type":"NodeParagraph","Properties":{"id":"20240201213347-2ifbiwk","updated":"20240201213347"},"Children":[{"Type":"NodeText","Data":"请求数据库写数据到缓存之前，先获取互斥锁，保证只有一个请求会落到数据库上，减少数据库的压力。"}]}]}]},{"ID":"20240201213348-gp0bewi","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20240201213348-gp0bewi","updated":"20240201213348"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"缓存穿透和缓存击穿有什么区别？"}]},{"ID":"20240201213349-ep6gzjy","Type":"NodeParagraph","Properties":{"id":"20240201213349-ep6gzjy","updated":"20240201213349"},"Children":[{"Type":"NodeText","Data":"缓存穿透中，请求的 key 既不存在于缓存中，也不存在于数据库中。"}]},{"ID":"20240201213350-mu3nrau","Type":"NodeParagraph","Properties":{"id":"20240201213350-mu3nrau","updated":"20240201213350"},"Children":[{"Type":"NodeText","Data":"缓存击穿中，请求的 key 对应的是 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"热点数据"},{"Type":"NodeText","Data":" ，该数据 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"存在于数据库中，但不存在于缓存中（通常是因为缓存中的那份数据已经过期）"},{"Type":"NodeText","Data":" 。"}]},{"ID":"20240201213351-4htq9l9","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240201213351-4htq9l9","updated":"20240201213351"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"缓存雪崩"}]},{"ID":"20240201213352-legktrh","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20240201213352-legktrh","updated":"20240201213352"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"什么是缓存雪崩？"}]},{"ID":"20240201213353-7nasfr9","Type":"NodeParagraph","Properties":{"id":"20240201213353-7nasfr9","updated":"20240201213353"},"Children":[{"Type":"NodeText","Data":"我发现缓存雪崩这名字起的有点意思，哈哈。"}]},{"ID":"20240201213354-izdyr07","Type":"NodeParagraph","Properties":{"id":"20240201213354-izdyr07","updated":"20240201213354"},"Children":[{"Type":"NodeText","Data":"实际上，缓存雪崩描述的就是这样一个简单的场景："},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"缓存在同一时间大面积的失效，导致大量的请求都直接落到了数据库上，对数据库造成了巨大的压力。"},{"Type":"NodeText","Data":" 这就好比雪崩一样，摧枯拉朽之势，数据库的压力可想而知，可能直接就被这么多请求弄宕机了。"}]},{"ID":"20240201213355-jtci9nh","Type":"NodeParagraph","Properties":{"id":"20240201213355-jtci9nh","updated":"20240201213355"},"Children":[{"Type":"NodeText","Data":"另外，缓存服务宕机也会导致缓存雪崩现象，导致所有的请求都落到了数据库上。"}]},{"ID":"20240201213356-cti2br3","Type":"NodeParagraph","Properties":{"id":"20240201213356-cti2br3","updated":"20240201213356"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"缓存雪崩","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"https://oss.javaguide.cn/github/javaguide/database/redis/redis-cache-avalanche.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201213357-6aoik9c","Type":"NodeParagraph","Properties":{"id":"20240201213357-6aoik9c","updated":"20240201213357"},"Children":[{"Type":"NodeText","Data":"举个例子：数据库中的大量数据在同一时间过期，这个时候突然有大量的请求需要访问这些过期的数据。这就导致大量的请求直接落到数据库上，对数据库造成了巨大的压力。"}]},{"ID":"20240201213358-elz9f6s","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20240201213358-elz9f6s","updated":"20240201213358"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"有哪些解决办法？"}]},{"ID":"20240201213359-ca6abfr","Type":"NodeParagraph","Properties":{"id":"20240201213359-ca6abfr","updated":"20240201213359"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"针对 Redis 服务不可用的情况："}]},{"ID":"20240201213360-5jqmopr","Type":"NodeList","ListData":{"Typ":1,"Tight":true,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20240201213360-5jqmopr","updated":"20240201213360"},"Children":[{"ID":"20240201213361-bplkpu0","Type":"NodeListItem","Data":"1","ListData":{"Typ":1,"Tight":true,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20240201213361-bplkpu0","updated":"20240201213361"},"Children":[{"ID":"20240201213362-89486f5","Type":"NodeParagraph","Properties":{"id":"20240201213362-89486f5","updated":"20240201213362"},"Children":[{"Type":"NodeText","Data":"采用 Redis 集群，避免单机出现问题整个缓存服务都没办法使用。"}]}]},{"ID":"20240201213363-5ompz9b","Type":"NodeListItem","Data":"2","ListData":{"Typ":1,"Tight":true,"Start":2,"Delimiter":46,"Padding":3,"Marker":"Mg==","Num":2},"Properties":{"id":"20240201213363-5ompz9b","updated":"20240201213363"},"Children":[{"ID":"20240201213364-v6uo73x","Type":"NodeParagraph","Properties":{"id":"20240201213364-v6uo73x","updated":"20240201213364"},"Children":[{"Type":"NodeText","Data":"限流，避免同时处理大量的请求。"}]}]},{"ID":"20240201213365-k59rcxs","Type":"NodeListItem","Data":"3","ListData":{"Typ":1,"Tight":true,"Start":3,"Delimiter":46,"Padding":3,"Marker":"Mw==","Num":3},"Properties":{"id":"20240201213365-k59rcxs","updated":"20240201213365"},"Children":[{"ID":"20240201213366-ffcs5bk","Type":"NodeParagraph","Properties":{"id":"20240201213366-ffcs5bk","updated":"20240201213366"},"Children":[{"Type":"NodeText","Data":"多级缓存，例如本地缓存+Redis 缓存的组合，当 Redis 缓存出现问题时，还可以从本地缓存中获取到部分数据。"}]}]}]},{"ID":"20240201213367-nzoxfnt","Type":"NodeParagraph","Properties":{"id":"20240201213367-nzoxfnt","updated":"20240201213367"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"针对热点缓存失效的情况："}]},{"ID":"20240201213368-e4rfm0i","Type":"NodeList","ListData":{"Typ":1,"Tight":true,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20240201213368-e4rfm0i","updated":"20240201213368"},"Children":[{"ID":"20240201213369-a1vs213","Type":"NodeListItem","Data":"1","ListData":{"Typ":1,"Tight":true,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20240201213369-a1vs213","updated":"20240201213369"},"Children":[{"ID":"20240201213370-kgegstx","Type":"NodeParagraph","Properties":{"id":"20240201213370-kgegstx","updated":"20240201213370"},"Children":[{"Type":"NodeText","Data":"设置不同的失效时间比如随机设置缓存的失效时间。"}]}]},{"ID":"20240201213371-xn7ybvn","Type":"NodeListItem","Data":"2","ListData":{"Typ":1,"Tight":true,"Start":2,"Delimiter":46,"Padding":3,"Marker":"Mg==","Num":2},"Properties":{"id":"20240201213371-xn7ybvn","updated":"20240201213371"},"Children":[{"ID":"20240201213372-hvy3p1r","Type":"NodeParagraph","Properties":{"id":"20240201213372-hvy3p1r","updated":"20240201213372"},"Children":[{"Type":"NodeText","Data":"缓存永不失效（不太推荐，实用性太差）。"}]}]},{"ID":"20240201213373-9kswn0a","Type":"NodeListItem","Data":"3","ListData":{"Typ":1,"Tight":true,"Start":3,"Delimiter":46,"Padding":3,"Marker":"Mw==","Num":3},"Properties":{"id":"20240201213373-9kswn0a","updated":"20240201213373"},"Children":[{"ID":"20240201213374-e086rzl","Type":"NodeParagraph","Properties":{"id":"20240201213374-e086rzl","updated":"20240201213374"},"Children":[{"Type":"NodeText","Data":"缓存预热，也就是在程序启动后或运行过程中，主动将热点数据加载到缓存中。"}]}]}]},{"ID":"20240201213375-d0s0hdb","Type":"NodeParagraph","Properties":{"id":"20240201213375-d0s0hdb","updated":"20240201213375"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"缓存预热如何实现？"}]},{"ID":"20240201213376-70vqo77","Type":"NodeParagraph","Properties":{"id":"20240201213376-70vqo77","updated":"20240201213376"},"Children":[{"Type":"NodeText","Data":"常见的缓存预热方式有两种："}]},{"ID":"20240201213377-4yhormh","Type":"NodeList","ListData":{"Typ":1,"Tight":true,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20240201213377-4yhormh","updated":"20240201213377"},"Children":[{"ID":"20240201213378-7uy9zue","Type":"NodeListItem","Data":"1","ListData":{"Typ":1,"Tight":true,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20240201213378-7uy9zue","updated":"20240201213378"},"Children":[{"ID":"20240201213379-5arae33","Type":"NodeParagraph","Properties":{"id":"20240201213379-5arae33","updated":"20240201213379"},"Children":[{"Type":"NodeText","Data":"使用定时任务，比如 xxl-job，来定时触发缓存预热的逻辑，将数据库中的热点数据查询出来并存入缓存中。"}]}]},{"ID":"20240201213380-z1sdt1i","Type":"NodeListItem","Data":"2","ListData":{"Typ":1,"Tight":true,"Start":2,"Delimiter":46,"Padding":3,"Marker":"Mg==","Num":2},"Properties":{"id":"20240201213380-z1sdt1i","updated":"20240201213380"},"Children":[{"ID":"20240201213381-i3xs52y","Type":"NodeParagraph","Properties":{"id":"20240201213381-i3xs52y","updated":"20240201213381"},"Children":[{"Type":"NodeText","Data":"使用消息队列，比如 Kafka，来异步地进行缓存预热，将数据库中的热点数据的主键或者 ID 发送到消息队列中，然后由缓存服务消费消息队列中的数据，根据主键或者 ID 查询数据库并更新缓存。"}]}]}]},{"ID":"20240201213382-8huuu8e","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20240201213382-8huuu8e","updated":"20240201213382"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"缓存雪崩和缓存击穿有什么区别？"}]},{"ID":"20240201213383-kxrp8d5","Type":"NodeParagraph","Properties":{"id":"20240201213383-kxrp8d5","updated":"20240201213383"},"Children":[{"Type":"NodeText","Data":"缓存雪崩和缓存击穿比较像，但缓存雪崩导致的原因是缓存中的大量或者所有数据失效，缓存击穿导致的原因主要是某个热点数据不存在与缓存中（通常是因为缓存中的那份数据已经过期）。"}]},{"ID":"20240201213384-574km5l","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240201213384-574km5l","updated":"20240201213384"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"如何保证缓存和数据库数据的一致性？"}]},{"ID":"20240201213385-h6nbgrj","Type":"NodeParagraph","Properties":{"id":"20240201213385-h6nbgrj","updated":"20240201213385"},"Children":[{"Type":"NodeText","Data":"细说的话可以扯很多，但是我觉得其实没太大必要（小声 BB：很多解决方案我也没太弄明白）。我个人觉得引入缓存之后，如果为了短时间的不一致性问题，选择让系统设计变得更加复杂的话，完全没必要。"}]},{"ID":"20240201213386-lum9fzs","Type":"NodeParagraph","Properties":{"id":"20240201213386-lum9fzs","updated":"20240201213386"},"Children":[{"Type":"NodeText","Data":"下面单独对 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"Cache Aside Pattern（旁路缓存模式）"},{"Type":"NodeText","Data":" 来聊聊。"}]},{"ID":"20240201213387-cor2o0f","Type":"NodeParagraph","Properties":{"id":"20240201213387-cor2o0f","updated":"20240201213387"},"Children":[{"Type":"NodeText","Data":"Cache Aside Pattern 中遇到写请求是这样的：更新 DB，然后直接删除 cache 。"}]},{"ID":"20240201213388-cp6vp3z","Type":"NodeParagraph","Properties":{"id":"20240201213388-cp6vp3z","updated":"20240201213388"},"Children":[{"Type":"NodeText","Data":"如果更新数据库成功，而删除缓存这一步失败的情况的话，简单说两个解决方案："}]},{"ID":"20240201213389-cn9iw09","Type":"NodeList","ListData":{"Typ":1,"Tight":true,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20240201213389-cn9iw09","updated":"20240201213389"},"Children":[{"ID":"20240201213390-g4e0b8q","Type":"NodeListItem","Data":"1","ListData":{"Typ":1,"Tight":true,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20240201213390-g4e0b8q","updated":"20240201213390"},"Children":[{"ID":"20240201213391-3hnniuy","Type":"NodeParagraph","Properties":{"id":"20240201213391-3hnniuy","updated":"20240201213391"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"缓存失效时间变短（不推荐，治标不治本）"},{"Type":"NodeText","Data":"：我们让缓存数据的过期时间变短，这样的话缓存就会从数据库中加载数据。另外，这种解决办法对于先操作缓存后操作数据库的场景不适用。"}]}]},{"ID":"20240201213392-c0crka6","Type":"NodeListItem","Data":"2","ListData":{"Typ":1,"Tight":true,"Start":2,"Delimiter":46,"Padding":3,"Marker":"Mg==","Num":2},"Properties":{"id":"20240201213392-c0crka6","updated":"20240201213392"},"Children":[{"ID":"20240201213393-nzqgv7s","Type":"NodeParagraph","Properties":{"id":"20240201213393-nzqgv7s","updated":"20240201213393"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"增加 cache 更新重试机制（常用）"},{"Type":"NodeText","Data":"：如果 cache 服务当前不可用导致缓存删除失败的话，我们就隔一段时间进行重试，重试次数可以自己定。如果多次重试还是失败的话，我们可以把当前更新失败的 key 存入队列中，等缓存服务可用之后，再将缓存中对应的 key 删除即可。"}]}]}]},{"ID":"20240201213394-5qv2pq3","Type":"NodeParagraph","Properties":{"id":"20240201213394-5qv2pq3","updated":"20240201213394"},"Children":[{"Type":"NodeText","Data":"相关文章推荐："},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://mp.weixin.qq.com/s?__biz=MzIyOTYxNDI5OA==\u0026mid=2247487312\u0026idx=1\u0026sn=fa19566f5729d6598155b5c676eee62d\u0026chksm=e8beb8e5dfc931f3e35655da9da0b61c79f2843101c130cf38996446975014f958a6481aacf1\u0026scene=178\u0026cur_album_id=1699766580538032128#rd","TextMarkTextContent":"缓存和数据库一致性问题，看这篇就够了 - 水滴与银弹"},{"Type":"NodeText","Data":"。"}]},{"ID":"20240201213395-9ebp0rp","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240201213395-9ebp0rp","updated":"20240201213395"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"哪些情况可能会导致 Redis 阻塞？"}]},{"ID":"20240201213396-woux2v5","Type":"NodeParagraph","Properties":{"id":"20240201213396-woux2v5","updated":"20240201213396"},"Children":[{"Type":"NodeText","Data":"单独抽了一篇文章来总结可能会导致 Redis 阻塞的情况："},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://javaguide.cn/database/redis/redis-common-blocking-problems-summary.html","TextMarkTextContent":"Redis 常见阻塞原因总结"},{"Type":"NodeText","Data":"。"}]},{"ID":"20240201213397-opwaz1d","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240201213397-opwaz1d","updated":"20240201213397"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"Redis 集群"}]},{"ID":"20240201213398-l8113zw","Type":"NodeParagraph","Properties":{"id":"20240201213398-l8113zw","updated":"20240201213398"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"Redis Sentinel"},{"Type":"NodeText","Data":"："}]},{"ID":"20240201213399-zbkc7pt","Type":"NodeList","ListData":{"Typ":1,"Tight":true,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20240201213399-zbkc7pt","updated":"20240201213399"},"Children":[{"ID":"20240201213400-ckpjjie","Type":"NodeListItem","Data":"1","ListData":{"Typ":1,"Tight":true,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20240201213400-ckpjjie","updated":"20240201213400"},"Children":[{"ID":"20240201213401-kb5rr20","Type":"NodeParagraph","Properties":{"id":"20240201213401-kb5rr20","updated":"20240201213401"},"Children":[{"Type":"NodeText","Data":"什么是 Sentinel？ 有什么用？"}]}]},{"ID":"20240201213402-ovj9lyc","Type":"NodeListItem","Data":"2","ListData":{"Typ":1,"Tight":true,"Start":2,"Delimiter":46,"Padding":3,"Marker":"Mg==","Num":2},"Properties":{"id":"20240201213402-ovj9lyc","updated":"20240201213402"},"Children":[{"ID":"20240201213403-qzn540y","Type":"NodeParagraph","Properties":{"id":"20240201213403-qzn540y","updated":"20240201213403"},"Children":[{"Type":"NodeText","Data":"Sentinel 如何检测节点是否下线？主观下线与客观下线的区别?"}]}]},{"ID":"20240201213404-qu0cv3m","Type":"NodeListItem","Data":"3","ListData":{"Typ":1,"Tight":true,"Start":3,"Delimiter":46,"Padding":3,"Marker":"Mw==","Num":3},"Properties":{"id":"20240201213404-qu0cv3m","updated":"20240201213404"},"Children":[{"ID":"20240201213405-2m937bv","Type":"NodeParagraph","Properties":{"id":"20240201213405-2m937bv","updated":"20240201213405"},"Children":[{"Type":"NodeText","Data":"Sentinel 是如何实现故障转移的？"}]}]},{"ID":"20240201213406-di8871u","Type":"NodeListItem","Data":"4","ListData":{"Typ":1,"Tight":true,"Start":4,"Delimiter":46,"Padding":3,"Marker":"NA==","Num":4},"Properties":{"id":"20240201213406-di8871u","updated":"20240201213406"},"Children":[{"ID":"20240201213407-9cbx8g7","Type":"NodeParagraph","Properties":{"id":"20240201213407-9cbx8g7","updated":"20240201213407"},"Children":[{"Type":"NodeText","Data":"为什么建议部署多个 sentinel 节点（哨兵集群）？"}]}]},{"ID":"20240201213408-hcmq52j","Type":"NodeListItem","Data":"5","ListData":{"Typ":1,"Tight":true,"Start":5,"Delimiter":46,"Padding":3,"Marker":"NQ==","Num":5},"Properties":{"id":"20240201213408-hcmq52j","updated":"20240201213408"},"Children":[{"ID":"20240201213409-usvruz8","Type":"NodeParagraph","Properties":{"id":"20240201213409-usvruz8","updated":"20240201213409"},"Children":[{"Type":"NodeText","Data":"Sentinel 如何选择出新的 master（选举机制）?"}]}]},{"ID":"20240201213410-2td3v8j","Type":"NodeListItem","Data":"6","ListData":{"Typ":1,"Tight":true,"Start":6,"Delimiter":46,"Padding":3,"Marker":"Ng==","Num":6},"Properties":{"id":"20240201213410-2td3v8j","updated":"20240201213410"},"Children":[{"ID":"20240201213411-4ipyisg","Type":"NodeParagraph","Properties":{"id":"20240201213411-4ipyisg","updated":"20240201213411"},"Children":[{"Type":"NodeText","Data":"如何从 Sentinel 集群中选择出 Leader ？"}]}]},{"ID":"20240201213412-3yezpry","Type":"NodeListItem","Data":"7","ListData":{"Typ":1,"Tight":true,"Start":7,"Delimiter":46,"Padding":3,"Marker":"Nw==","Num":7},"Properties":{"id":"20240201213412-3yezpry","updated":"20240201213412"},"Children":[{"ID":"20240201213413-jdv8rfi","Type":"NodeParagraph","Properties":{"id":"20240201213413-jdv8rfi","updated":"20240201213413"},"Children":[{"Type":"NodeText","Data":"Sentinel 可以防止脑裂吗？"}]}]}]},{"ID":"20240201213414-tjn4jb3","Type":"NodeParagraph","Properties":{"id":"20240201213414-tjn4jb3","updated":"20240201213414"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"Redis Cluster"},{"Type":"NodeText","Data":"："}]},{"ID":"20240201213415-25tscbz","Type":"NodeList","ListData":{"Typ":1,"Tight":true,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20240201213415-25tscbz","updated":"20240201213415"},"Children":[{"ID":"20240201213416-l4vkntz","Type":"NodeListItem","Data":"1","ListData":{"Typ":1,"Tight":true,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20240201213416-l4vkntz","updated":"20240201213416"},"Children":[{"ID":"20240201213417-xgi2ptp","Type":"NodeParagraph","Properties":{"id":"20240201213417-xgi2ptp","updated":"20240201213417"},"Children":[{"Type":"NodeText","Data":"为什么需要 Redis Cluster？解决了什么问题？有什么优势？"}]}]},{"ID":"20240201213418-uicjtfg","Type":"NodeListItem","Data":"2","ListData":{"Typ":1,"Tight":true,"Start":2,"Delimiter":46,"Padding":3,"Marker":"Mg==","Num":2},"Properties":{"id":"20240201213418-uicjtfg","updated":"20240201213418"},"Children":[{"ID":"20240201213419-uze4kba","Type":"NodeParagraph","Properties":{"id":"20240201213419-uze4kba","updated":"20240201213419"},"Children":[{"Type":"NodeText","Data":"Redis Cluster 是如何分片的？"}]}]},{"ID":"20240201213420-e08zth1","Type":"NodeListItem","Data":"3","ListData":{"Typ":1,"Tight":true,"Start":3,"Delimiter":46,"Padding":3,"Marker":"Mw==","Num":3},"Properties":{"id":"20240201213420-e08zth1","updated":"20240201213420"},"Children":[{"ID":"20240201213421-eqoe8n2","Type":"NodeParagraph","Properties":{"id":"20240201213421-eqoe8n2","updated":"20240201213421"},"Children":[{"Type":"NodeText","Data":"为什么 Redis Cluster 的哈希槽是 16384 个?"}]}]},{"ID":"20240201213422-1w70xma","Type":"NodeListItem","Data":"4","ListData":{"Typ":1,"Tight":true,"Start":4,"Delimiter":46,"Padding":3,"Marker":"NA==","Num":4},"Properties":{"id":"20240201213422-1w70xma","updated":"20240201213422"},"Children":[{"ID":"20240201213423-jt403vo","Type":"NodeParagraph","Properties":{"id":"20240201213423-jt403vo","updated":"20240201213423"},"Children":[{"Type":"NodeText","Data":"如何确定给定 key 的应该分布到哪个哈希槽中？"}]}]},{"ID":"20240201213424-6gnvs5j","Type":"NodeListItem","Data":"5","ListData":{"Typ":1,"Tight":true,"Start":5,"Delimiter":46,"Padding":3,"Marker":"NQ==","Num":5},"Properties":{"id":"20240201213424-6gnvs5j","updated":"20240201213424"},"Children":[{"ID":"20240201213425-51c6g1z","Type":"NodeParagraph","Properties":{"id":"20240201213425-51c6g1z","updated":"20240201213425"},"Children":[{"Type":"NodeText","Data":"Redis Cluster 支持重新分配哈希槽吗？"}]}]},{"ID":"20240201213426-m22ikp7","Type":"NodeListItem","Data":"6","ListData":{"Typ":1,"Tight":true,"Start":6,"Delimiter":46,"Padding":3,"Marker":"Ng==","Num":6},"Properties":{"id":"20240201213426-m22ikp7","updated":"20240201213426"},"Children":[{"ID":"20240201213427-izvqggo","Type":"NodeParagraph","Properties":{"id":"20240201213427-izvqggo","updated":"20240201213427"},"Children":[{"Type":"NodeText","Data":"Redis Cluster 扩容缩容期间可以提供服务吗？"}]}]},{"ID":"20240201213428-w0v4bda","Type":"NodeListItem","Data":"7","ListData":{"Typ":1,"Tight":true,"Start":7,"Delimiter":46,"Padding":3,"Marker":"Nw==","Num":7},"Properties":{"id":"20240201213428-w0v4bda","updated":"20240201213428"},"Children":[{"ID":"20240201213429-1pyhm9e","Type":"NodeParagraph","Properties":{"id":"20240201213429-1pyhm9e","updated":"20240201213429"},"Children":[{"Type":"NodeText","Data":"Redis Cluster 中的节点是怎么进行通信的？"}]}]}]},{"ID":"20240201213430-fmlq6tq","Type":"NodeParagraph","Properties":{"id":"20240201213430-fmlq6tq","updated":"20240201213430"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"参考答案"},{"Type":"NodeText","Data":"："},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://javaguide.cn/database/redis/redis-cluster.html","TextMarkTextContent":"Redis 集群详解（付费）"},{"Type":"NodeText","Data":"。"}]},{"ID":"20240201213431-pahumpr","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240201213431-pahumpr","updated":"20240201213431"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"Redis 使用规范"}]},{"ID":"20240201213432-db88drw","Type":"NodeParagraph","Properties":{"id":"20240201213432-db88drw","updated":"20240201213432"},"Children":[{"Type":"NodeText","Data":"实际使用 Redis 的过程中，我们尽量要准守一些常见的规范，比如："}]},{"ID":"20240201213433-97s02ir","Type":"NodeList","ListData":{"Typ":1,"Tight":true,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20240201213433-97s02ir","updated":"20240201213433"},"Children":[{"ID":"20240201213434-ewzrbxk","Type":"NodeListItem","Data":"1","ListData":{"Typ":1,"Tight":true,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20240201213434-ewzrbxk","updated":"20240201213434"},"Children":[{"ID":"20240201213435-25y0af1","Type":"NodeParagraph","Properties":{"id":"20240201213435-25y0af1","updated":"20240201213435"},"Children":[{"Type":"NodeText","Data":"使用连接池：避免频繁创建关闭客户端连接。"}]}]},{"ID":"20240201213436-0c1k3ed","Type":"NodeListItem","Data":"2","ListData":{"Typ":1,"Tight":true,"Start":2,"Delimiter":46,"Padding":3,"Marker":"Mg==","Num":2},"Properties":{"id":"20240201213436-0c1k3ed","updated":"20240201213436"},"Children":[{"ID":"20240201213437-u2j1o9j","Type":"NodeParagraph","Properties":{"id":"20240201213437-u2j1o9j","updated":"20240201213437"},"Children":[{"Type":"NodeText","Data":"尽量不使用 O(n)指令，使用 O(n) 命令时要关注 n 的数量：像 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"KEYS *"},{"Type":"NodeText","Data":"、"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"HGETALL"},{"Type":"NodeText","Data":"、"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"LRANGE"},{"Type":"NodeText","Data":"、"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"SMEMBERS"},{"Type":"NodeText","Data":"、"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"SINTER"},{"Type":"NodeText","Data":"/"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"SUNION"},{"Type":"NodeText","Data":"/"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"SDIFF"},{"Type":"NodeText","Data":"等 O(n) 命令并非不能使用，但是需要明确 n 的值。另外，有遍历的需求可以使用 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"HSCAN"},{"Type":"NodeText","Data":"、"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"SSCAN"},{"Type":"NodeText","Data":"、"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"ZSCAN"},{"Type":"NodeText","Data":" 代替。"}]}]},{"ID":"20240201213438-yr037hd","Type":"NodeListItem","Data":"3","ListData":{"Typ":1,"Tight":true,"Start":3,"Delimiter":46,"Padding":3,"Marker":"Mw==","Num":3},"Properties":{"id":"20240201213438-yr037hd","updated":"20240201213438"},"Children":[{"ID":"20240201213439-yb917w7","Type":"NodeParagraph","Properties":{"id":"20240201213439-yb917w7","updated":"20240201213439"},"Children":[{"Type":"NodeText","Data":"使用批量操作减少网络传输：原生批量操作命令（比如 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"MGET"},{"Type":"NodeText","Data":"、"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"MSET"},{"Type":"NodeText","Data":"等等）、pipeline、Lua 脚本。"}]}]},{"ID":"20240201213440-ltboqrp","Type":"NodeListItem","Data":"4","ListData":{"Typ":1,"Tight":true,"Start":4,"Delimiter":46,"Padding":3,"Marker":"NA==","Num":4},"Properties":{"id":"20240201213440-ltboqrp","updated":"20240201213440"},"Children":[{"ID":"20240201213441-800zjov","Type":"NodeParagraph","Properties":{"id":"20240201213441-800zjov","updated":"20240201213441"},"Children":[{"Type":"NodeText","Data":"尽量不适用 Redis 事务：Redis 事务实现的功能比较鸡肋，可以使用 Lua 脚本代替。"}]}]},{"ID":"20240201213442-872jc3h","Type":"NodeListItem","Data":"5","ListData":{"Typ":1,"Tight":true,"Start":5,"Delimiter":46,"Padding":3,"Marker":"NQ==","Num":5},"Properties":{"id":"20240201213442-872jc3h","updated":"20240201213442"},"Children":[{"ID":"20240201213443-en2u5zm","Type":"NodeParagraph","Properties":{"id":"20240201213443-en2u5zm","updated":"20240201213443"},"Children":[{"Type":"NodeText","Data":"禁止长时间开启 monitor：对性能影响比较大。"}]}]},{"ID":"20240201213444-hujjqwn","Type":"NodeListItem","Data":"6","ListData":{"Typ":1,"Tight":true,"Start":6,"Delimiter":46,"Padding":3,"Marker":"Ng==","Num":6},"Properties":{"id":"20240201213444-hujjqwn","updated":"20240201213444"},"Children":[{"ID":"20240201213445-2iul6ja","Type":"NodeParagraph","Properties":{"id":"20240201213445-2iul6ja","updated":"20240201213445"},"Children":[{"Type":"NodeText","Data":"控制 key 的生命周期：避免 Redis 中存放了太多不经常被访问的数据。"}]}]},{"ID":"20240201213446-msd2qrx","Type":"NodeListItem","Data":"7","ListData":{"Typ":1,"Tight":true,"Start":7,"Delimiter":46,"Padding":3,"Marker":"Nw==","Num":7},"Properties":{"id":"20240201213446-msd2qrx","updated":"20240201213446"},"Children":[{"ID":"20240201213447-y4glmjz","Type":"NodeParagraph","Properties":{"id":"20240201213447-y4glmjz","updated":"20240201213447"},"Children":[{"Type":"NodeText","Data":"……"}]}]}]},{"ID":"20240201213448-m3qs1d8","Type":"NodeParagraph","Properties":{"id":"20240201213448-m3qs1d8","updated":"20240201213448"},"Children":[{"Type":"NodeText","Data":"相关文章推荐："},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://developer.aliyun.com/article/531067","TextMarkTextContent":"阿里云 Redis 开发规范"},{"Type":"NodeText","Data":" 。"}]},{"ID":"20240201213449-ws98r4y","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240201213449-ws98r4y","updated":"20240201213449"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"参考"}]},{"ID":"20240201213450-hefxzes","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213450-hefxzes","updated":"20240201213450"},"Children":[{"ID":"20240201213451-4drsdh9","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213451-4drsdh9","updated":"20240201213451"},"Children":[{"ID":"20240201213452-iaxbq13","Type":"NodeParagraph","Properties":{"id":"20240201213452-iaxbq13","updated":"20240201213452"},"Children":[{"Type":"NodeText","Data":"《Redis 开发与运维》"}]}]},{"ID":"20240201213453-w1i6ao9","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213453-w1i6ao9","updated":"20240201213453"},"Children":[{"ID":"20240201213454-wse5wft","Type":"NodeParagraph","Properties":{"id":"20240201213454-wse5wft","updated":"20240201213454"},"Children":[{"Type":"NodeText","Data":"《Redis 设计与实现》"}]}]},{"ID":"20240201213455-2p7rvur","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213455-2p7rvur","updated":"20240201213455"},"Children":[{"ID":"20240201213456-yyr9yjb","Type":"NodeParagraph","Properties":{"id":"20240201213456-yyr9yjb","updated":"20240201213456"},"Children":[{"Type":"NodeText","Data":"Redis Transactions : "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://redis.io/docs/manual/transactions/","TextMarkTextContent":"https://redis.io/docs/manual/transactions/"}]}]},{"ID":"20240201213457-f4b2gja","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213457-f4b2gja","updated":"20240201213457"},"Children":[{"ID":"20240201213458-83gpxjc","Type":"NodeParagraph","Properties":{"id":"20240201213458-83gpxjc","updated":"20240201213458"},"Children":[{"Type":"NodeText","Data":"What is Redis Pipeline："},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://buildatscale.tech/what-is-redis-pipeline/","TextMarkTextContent":"https://buildatscale.tech/what-is-redis-pipeline/"}]}]},{"ID":"20240201213459-3ao6agb","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213459-3ao6agb","updated":"20240201213459"},"Children":[{"ID":"20240201213460-dci588t","Type":"NodeParagraph","Properties":{"id":"20240201213460-dci588t","updated":"20240201213460"},"Children":[{"Type":"NodeText","Data":"一文详解 Redis 中 BigKey、HotKey 的发现与处理："},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://mp.weixin.qq.com/s/FPYE1B839_8Yk1-YSiW-1Q","TextMarkTextContent":"https://mp.weixin.qq.com/s/FPYE1B839_8Yk1-YSiW-1Q"}]}]},{"ID":"20240201213461-0t558q1","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213461-0t558q1","updated":"20240201213461"},"Children":[{"ID":"20240201213462-h0b3kte","Type":"NodeParagraph","Properties":{"id":"20240201213462-h0b3kte","updated":"20240201213462"},"Children":[{"Type":"NodeText","Data":"Bigkey 问题的解决思路与方式探索:"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://mp.weixin.qq.com/s/Sej7D9TpdAobcCmdYdMIyA","TextMarkTextContent":"https://mp.weixin.qq.com/s/Sej7D9TpdAobcCmdYdMIyA"}]}]},{"ID":"20240201213463-sc1s608","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213463-sc1s608","updated":"20240201213463"},"Children":[{"ID":"20240201213464-dw9inej","Type":"NodeParagraph","Properties":{"id":"20240201213464-dw9inej","updated":"20240201213464"},"Children":[{"Type":"NodeText","Data":"Redis 延迟问题全面排障指南："},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://mp.weixin.qq.com/s/mIc6a9mfEGdaNDD3MmfFsg","TextMarkTextContent":"https://mp.weixin.qq.com/s/mIc6a9mfEGdaNDD3MmfFsg"}]}]}]},{"ID":"20240201213465-a27jo1o","Type":"NodeHTMLBlock","Data":"\u003cdiv\u003e\n\u003c!-- @include: @article-footer.snippet.md --\u003e\n\u003c/div\u003e","HtmlBlockType":2,"Properties":{"id":"20240201213465-a27jo1o","updated":"20240201213465"}}]}