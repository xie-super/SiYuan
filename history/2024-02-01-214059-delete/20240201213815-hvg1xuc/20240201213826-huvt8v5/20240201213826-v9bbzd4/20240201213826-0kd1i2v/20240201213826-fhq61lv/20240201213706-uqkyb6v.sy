{"ID":"20240201213706-uqkyb6v","Spec":"1","Type":"NodeDocument","Properties":{"id":"20240201213706-uqkyb6v","title":"index-invalidation-caused-by-implicit-conversion","updated":"20240201213706"},"Children":[{"ID":"20240201213707-9th0vid","Type":"NodeThematicBreak","Properties":{"id":"20240201213707-9th0vid","updated":"20240201213707"}},{"ID":"20240201213708-676ouux","Type":"NodeParagraph","Properties":{"id":"20240201213708-676ouux","updated":"20240201213708"},"Children":[{"Type":"NodeText","Data":"title: MySQL隐式转换造成索引失效"},{"Type":"NodeSoftBreak","Data":"\n","Properties":{"id":""}},{"Type":"NodeText","Data":"category: 数据库"},{"Type":"NodeSoftBreak","Data":"\n","Properties":{"id":""}},{"Type":"NodeText","Data":"tag:"}]},{"ID":"20240201213709-frl4422","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"MarkerOffset":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213709-frl4422","updated":"20240201213709"},"Children":[{"ID":"20240201213710-xi0jd1c","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"MarkerOffset":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213710-xi0jd1c","updated":"20240201213710"},"Children":[{"ID":"20240201213711-455zlva","Type":"NodeParagraph","Properties":{"id":"20240201213711-455zlva","updated":"20240201213711"},"Children":[{"Type":"NodeText","Data":"MySQL"}]}]},{"ID":"20240201213712-mhs5gha","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"MarkerOffset":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213712-mhs5gha","updated":"20240201213712"},"Children":[{"ID":"20240201213713-fszjj5x","Type":"NodeParagraph","Properties":{"id":"20240201213713-fszjj5x","updated":"20240201213713"},"Children":[{"Type":"NodeText","Data":"性能优化"}]}]}]},{"ID":"20240201213714-6tyxmbm","Type":"NodeThematicBreak","Properties":{"id":"20240201213714-6tyxmbm","updated":"20240201213714"}},{"ID":"20240201213715-v1eldfg","Type":"NodeBlockquote","Properties":{"id":"20240201213715-v1eldfg","updated":"20240201213715"},"Children":[{"Type":"NodeBlockquoteMarker","Data":"\u003e ","Properties":{"id":""}},{"ID":"20240201213716-cwy3n9x","Type":"NodeParagraph","Properties":{"id":"20240201213716-cwy3n9x","updated":"20240201213716"},"Children":[{"Type":"NodeText","Data":"本次测试使用的 MySQL 版本是 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"5.7.26"},{"Type":"NodeText","Data":"，随着 MySQL 版本的更新某些特性可能会发生改变，本文不代表所述观点和结论于 MySQL 所有版本均准确无误，版本差异请自行甄别。"}]},{"ID":"20240201213717-2nwio1z","Type":"NodeParagraph","Properties":{"id":"20240201213717-2nwio1z","updated":"20240201213717"},"Children":[{"Type":"NodeText","Data":"原文："},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://www.guitu18.com/post/2019/11/24/61.html","TextMarkTextContent":"https://www.guitu18.com/post/2019/11/24/61.html"}]}]},{"ID":"20240201213718-xxnv3gw","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240201213718-xxnv3gw","updated":"20240201213718"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"前言"}]},{"ID":"20240201213719-7evgpbl","Type":"NodeParagraph","Properties":{"id":"20240201213719-7evgpbl","updated":"20240201213719"},"Children":[{"Type":"NodeText","Data":"数据库优化是一个任重而道远的任务，想要做优化必须深入理解数据库的各种特性。在开发过程中我们经常会遇到一些原因很简单但造成的后果却很严重的疑难杂症，这类问题往往还不容易定位，排查费时费力最后发现是一个很小的疏忽造成的，又或者是因为不了解某个技术特性产生的。"}]},{"ID":"20240201213720-hi03blg","Type":"NodeParagraph","Properties":{"id":"20240201213720-hi03blg","updated":"20240201213720"},"Children":[{"Type":"NodeText","Data":"于数据库层面，最常见的恐怕就是索引失效了，且一开始因为数据量小还不易被发现。但随着业务的拓展数据量的提升，性能问题慢慢的就体现出来了，处理不及时还很容易造成雪球效应，最终导致数据库卡死甚至瘫痪。造成索引失效的原因可能有很多种，相关技术博客已经有太多了，今天我要记录的是"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"隐式转换造成的索引失效"},{"Type":"NodeText","Data":"。"}]},{"ID":"20240201213721-g3n9zn8","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240201213721-g3n9zn8","updated":"20240201213721"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"数据准备"}]},{"ID":"20240201213722-2z38h9v","Type":"NodeParagraph","Properties":{"id":"20240201213722-2z38h9v","updated":"20240201213722"},"Children":[{"Type":"NodeText","Data":"首先使用存储过程生成 1000 万条测试数据，"},{"Type":"NodeSoftBreak","Data":"\n","Properties":{"id":""}},{"Type":"NodeText","Data":"测试表一共建立了 7 个字段（包括主键），"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"num1"},{"Type":"NodeText","Data":"和"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"num2"},{"Type":"NodeText","Data":"保存的是和"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"ID"},{"Type":"NodeText","Data":"一样的顺序数字，其中"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"num2"},{"Type":"NodeText","Data":"是字符串类型。"},{"Type":"NodeSoftBreak","Data":"\n","Properties":{"id":""}},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"type1"},{"Type":"NodeText","Data":"和"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"type2"},{"Type":"NodeText","Data":"保存的都是主键对 5 的取模，目的是模拟实际应用中常用类似 type 类型的数据，但是"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"type2"},{"Type":"NodeText","Data":"是没有建立索引的。"},{"Type":"NodeSoftBreak","Data":"\n","Properties":{"id":""}},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"str1"},{"Type":"NodeText","Data":"和"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"str2"},{"Type":"NodeText","Data":"都是保存了一个 20 位长度的随机字符串，"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"str1"},{"Type":"NodeText","Data":"不能为"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"NULL"},{"Type":"NodeText","Data":"，"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"str2"},{"Type":"NodeText","Data":"允许为"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"NULL"},{"Type":"NodeText","Data":"，相应的生成测试数据的时候我也会在"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"str2"},{"Type":"NodeText","Data":"字段生产少量"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"NULL"},{"Type":"NodeText","Data":"值（每 100 条数据产生一个"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"NULL"},{"Type":"NodeText","Data":"值）。"}]},{"ID":"20240201213723-q27q2aq","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"c3Fs","CodeBlockCloseFence":"YGBg","Properties":{"id":"20240201213723-q27q2aq","updated":"20240201213723"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"c3Fs","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"-- 创建测试数据表\nDROP TABLE IF EXISTS test1;\nCREATE TABLE `test1` (\n    `id` int(11) NOT NULL,\n    `num1` int(11) NOT NULL DEFAULT '0',\n    `num2` varchar(11) NOT NULL DEFAULT '',\n    `type1` int(4) NOT NULL DEFAULT '0',\n    `type2` int(4) NOT NULL DEFAULT '0',\n    `str1` varchar(100) NOT NULL DEFAULT '',\n    `str2` varchar(100) DEFAULT NULL,\n    PRIMARY KEY (`id`),\n    KEY `num1` (`num1`),\n    KEY `num2` (`num2`),\n    KEY `type1` (`type1`),\n    KEY `str1` (`str1`),\n    KEY `str2` (`str2`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;\n-- 创建存储过程\nDROP PROCEDURE IF EXISTS pre_test1;\nDELIMITER //\nCREATE PROCEDURE `pre_test1`()\nBEGIN\n    DECLARE i INT DEFAULT 0;\n    SET autocommit = 0;\n    WHILE i \u003c 10000000 DO\n        SET i = i + 1;\n        SET @str1 = SUBSTRING(MD5(RAND()),1,20);\n        -- 每100条数据str2产生一个null值\n        IF i % 100 = 0 THEN\n            SET @str2 = NULL;\n        ELSE\n            SET @str2 = @str1;\n        END IF;\n        INSERT INTO test1 (`id`, `num1`, `num2`,\n        `type1`, `type2`, `str1`, `str2`)\n        VALUES (CONCAT('', i), CONCAT('', i),\n        CONCAT('', i), i%5, i%5, @str1, @str2);\n        -- 事务优化，每一万条数据提交一次事务\n        IF i % 10000 = 0 THEN\n            COMMIT;\n        END IF;\n    END WHILE;\nEND;\n// DELIMITER ;\n-- 执行存储过程\nCALL pre_test1();\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20240201213724-9xcsccg","Type":"NodeParagraph","Properties":{"id":"20240201213724-9xcsccg","updated":"20240201213724"},"Children":[{"Type":"NodeText","Data":"数据量比较大，还涉及使用"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"MD5"},{"Type":"NodeText","Data":"生成随机字符串，所以速度有点慢，稍安勿躁，耐心等待即可。"}]},{"ID":"20240201213725-k92bazm","Type":"NodeParagraph","Properties":{"id":"20240201213725-k92bazm","updated":"20240201213725"},"Children":[{"Type":"NodeText","Data":"1000 万条数据，我用了 33 分钟才跑完（实际时间跟你电脑硬件配置有关）。这里贴几条生成的数据，大致长这样。"}]},{"ID":"20240201213726-cuzscun","Type":"NodeParagraph","Properties":{"id":"20240201213726-cuzscun","updated":"20240201213726"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"https://oss.javaguide.cn/github/javaguide/mysqlindex-invalidation-caused-by-implicit-conversion-01.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201213727-10s4wro","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240201213727-10s4wro","updated":"20240201213727"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"SQL 测试"}]},{"ID":"20240201213728-62wur9q","Type":"NodeParagraph","Properties":{"id":"20240201213728-62wur9q","updated":"20240201213728"},"Children":[{"Type":"NodeText","Data":"先来看这组 SQL，一共四条，我们的测试数据表"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"num1"},{"Type":"NodeText","Data":"是"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"int"},{"Type":"NodeText","Data":"类型，"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"num2"},{"Type":"NodeText","Data":"是"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"varchar"},{"Type":"NodeText","Data":"类型，但是存储的数据都是跟主键"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"id"},{"Type":"NodeText","Data":"一样的顺序数字，两个字段都建立有索引。"}]},{"ID":"20240201213729-9tvvbrd","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"c3Fs","CodeBlockCloseFence":"YGBg","Properties":{"id":"20240201213729-9tvvbrd","updated":"20240201213729"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"c3Fs","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"1: SELECT * FROM `test1` WHERE num1 = 10000;\n2: SELECT * FROM `test1` WHERE num1 = '10000';\n3: SELECT * FROM `test1` WHERE num2 = 10000;\n4: SELECT * FROM `test1` WHERE num2 = '10000';\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20240201213730-wi7doai","Type":"NodeParagraph","Properties":{"id":"20240201213730-wi7doai","updated":"20240201213730"},"Children":[{"Type":"NodeText","Data":"这四条 SQL 都是有针对性写的，12 查询的字段是 int 类型，34 查询的字段是"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"varchar"},{"Type":"NodeText","Data":"类型。12 或 34 查询的字段虽然都相同，但是一个条件是数字，一个条件是用引号引起来的字符串。这样做有什么区别呢？先不看下边的测试结果你能猜出这四条 SQL 的效率顺序吗？"}]},{"ID":"20240201213731-ao7h2pt","Type":"NodeParagraph","Properties":{"id":"20240201213731-ao7h2pt","updated":"20240201213731"},"Children":[{"Type":"NodeText","Data":"经测试这四条 SQL 最后的执行结果却相差很大，其中 124 三条 SQL 基本都是瞬间出结果，大概在 0.001"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"s","TextMarkTextContent":"0.005 秒，在千万级的数据量下这样的结果可以判定这三条 SQL 性能基本没差别了。但是第三条 SQL，多次测试耗时基本在 4.5"},{"Type":"NodeText","Data":"4.8 秒之间。"}]},{"ID":"20240201213732-eycb29q","Type":"NodeParagraph","Properties":{"id":"20240201213732-eycb29q","updated":"20240201213732"},"Children":[{"Type":"NodeText","Data":"为什么 34 两条 SQL 效率相差那么大，但是同样做对比的 12 两条 SQL 却没什么差别呢？查看一下执行计划，下边分别 1234 条 SQL 的执行计划数据："}]},{"ID":"20240201213733-v9ji0r7","Type":"NodeParagraph","Properties":{"id":"20240201213733-v9ji0r7","updated":"20240201213733"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"https://oss.javaguide.cn/github/javaguide/mysqlindex-invalidation-caused-by-implicit-conversion-02.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201213734-e0heyvg","Type":"NodeParagraph","Properties":{"id":"20240201213734-e0heyvg","updated":"20240201213734"},"Children":[{"Type":"NodeText","Data":"可以看到，124 三条 SQL 都能使用到索引，连接类型都为"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"ref"},{"Type":"NodeText","Data":"，扫描行数都为 1，所以效率非常高。再看看第三条 SQL，没有用上索引，所以为全表扫描，"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"rows"},{"Type":"NodeText","Data":"直接到达 1000 万了，所以性能差别才那么大。"}]},{"ID":"20240201213735-dlvhuvp","Type":"NodeParagraph","Properties":{"id":"20240201213735-dlvhuvp","updated":"20240201213735"},"Children":[{"Type":"NodeText","Data":"仔细观察你会发现，34 两条 SQL 查询的字段"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"num2"},{"Type":"NodeText","Data":"是"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"varchar"},{"Type":"NodeText","Data":"类型的，查询条件等号右边加引号的第 4 条 SQL 是用到索引的，那么是查询的数据类型和字段数据类型不一致造成的吗？如果是这样那 12 两条 SQL 查询的字段"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"num1"},{"Type":"NodeText","Data":"是"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"int"},{"Type":"NodeText","Data":"类型，但是第 2 条 SQL 查询条件右边加了引号为什么还能用上索引呢。"}]},{"ID":"20240201213736-v2aysrc","Type":"NodeParagraph","Properties":{"id":"20240201213736-v2aysrc","updated":"20240201213736"},"Children":[{"Type":"NodeText","Data":"查阅 MySQL 相关文档发现是隐式转换造成的，看一下官方的描述："}]},{"ID":"20240201213737-nmtjdkg","Type":"NodeBlockquote","Properties":{"id":"20240201213737-nmtjdkg","updated":"20240201213737"},"Children":[{"Type":"NodeBlockquoteMarker","Data":"\u003e ","Properties":{"id":""}},{"ID":"20240201213738-l52bbzx","Type":"NodeParagraph","Properties":{"id":"20240201213738-l52bbzx","updated":"20240201213738"},"Children":[{"Type":"NodeText","Data":"官方文档："},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://dev.mysql.com/doc/refman/5.7/en/type-conversion.html?spm=5176.100239.blogcont47339.5.1FTben","TextMarkTextContent":"12.2 Type Conversion in Expression Evaluation"}]},{"ID":"20240201213739-11h6ae2","Type":"NodeParagraph","Properties":{"id":"20240201213739-11h6ae2","updated":"20240201213739"},"Children":[{"Type":"NodeText","Data":"当操作符与不同类型的操作数一起使用时，会发生类型转换以使操作数兼容。某些转换是隐式发生的。例如，MySQL 会根据需要自动将字符串转换为数字，反之亦然。以下规则描述了比较操作的转换方式："}]},{"ID":"20240201213740-r0u3vk6","Type":"NodeList","ListData":{"Typ":1,"Tight":true,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20240201213740-r0u3vk6","updated":"20240201213740"},"Children":[{"ID":"20240201213741-rj9etnh","Type":"NodeListItem","Data":"1","ListData":{"Typ":1,"Tight":true,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20240201213741-rj9etnh","updated":"20240201213741"},"Children":[{"ID":"20240201213742-mompgaz","Type":"NodeParagraph","Properties":{"id":"20240201213742-mompgaz","updated":"20240201213742"},"Children":[{"Type":"NodeText","Data":"两个参数至少有一个是"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"NULL"},{"Type":"NodeText","Data":"时，比较的结果也是"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"NULL"},{"Type":"NodeText","Data":"，特殊的情况是使用"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"\u0026lt;=\u0026gt;"},{"Type":"NodeText","Data":"对两个"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"NULL"},{"Type":"NodeText","Data":"做比较时会返回"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"1"},{"Type":"NodeText","Data":"，这两种情况都不需要做类型转换"}]}]},{"ID":"20240201213743-86xv5g3","Type":"NodeListItem","Data":"2","ListData":{"Typ":1,"Tight":true,"Start":2,"Delimiter":46,"Padding":3,"Marker":"Mg==","Num":2},"Properties":{"id":"20240201213743-86xv5g3","updated":"20240201213743"},"Children":[{"ID":"20240201213744-e52kgdx","Type":"NodeParagraph","Properties":{"id":"20240201213744-e52kgdx","updated":"20240201213744"},"Children":[{"Type":"NodeText","Data":"两个参数都是字符串，会按照字符串来比较，不做类型转换"}]}]},{"ID":"20240201213745-wb0tukz","Type":"NodeListItem","Data":"3","ListData":{"Typ":1,"Tight":true,"Start":3,"Delimiter":46,"Padding":3,"Marker":"Mw==","Num":3},"Properties":{"id":"20240201213745-wb0tukz","updated":"20240201213745"},"Children":[{"ID":"20240201213746-5nnxsh5","Type":"NodeParagraph","Properties":{"id":"20240201213746-5nnxsh5","updated":"20240201213746"},"Children":[{"Type":"NodeText","Data":"两个参数都是整数，按照整数来比较，不做类型转换"}]}]},{"ID":"20240201213747-8ztx7ib","Type":"NodeListItem","Data":"4","ListData":{"Typ":1,"Tight":true,"Start":4,"Delimiter":46,"Padding":3,"Marker":"NA==","Num":4},"Properties":{"id":"20240201213747-8ztx7ib","updated":"20240201213747"},"Children":[{"ID":"20240201213748-6mjpg0e","Type":"NodeParagraph","Properties":{"id":"20240201213748-6mjpg0e","updated":"20240201213748"},"Children":[{"Type":"NodeText","Data":"十六进制的值和非数字做比较时，会被当做二进制串"}]}]},{"ID":"20240201213749-nsf1jem","Type":"NodeListItem","Data":"5","ListData":{"Typ":1,"Tight":true,"Start":5,"Delimiter":46,"Padding":3,"Marker":"NQ==","Num":5},"Properties":{"id":"20240201213749-nsf1jem","updated":"20240201213749"},"Children":[{"ID":"20240201213750-xk0511z","Type":"NodeParagraph","Properties":{"id":"20240201213750-xk0511z","updated":"20240201213750"},"Children":[{"Type":"NodeText","Data":"有一个参数是"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"TIMESTAMP"},{"Type":"NodeText","Data":"或"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"DATETIME"},{"Type":"NodeText","Data":"，并且另外一个参数是常量，常量会被转换为"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"timestamp"}]}]},{"ID":"20240201213751-nboidqh","Type":"NodeListItem","Data":"6","ListData":{"Typ":1,"Tight":true,"Start":6,"Delimiter":46,"Padding":3,"Marker":"Ng==","Num":6},"Properties":{"id":"20240201213751-nboidqh","updated":"20240201213751"},"Children":[{"ID":"20240201213752-o787080","Type":"NodeParagraph","Properties":{"id":"20240201213752-o787080","updated":"20240201213752"},"Children":[{"Type":"NodeText","Data":"有一个参数是"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"decimal"},{"Type":"NodeText","Data":"类型，如果另外一个参数是"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"decimal"},{"Type":"NodeText","Data":"或者整数，会将整数转换为"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"decimal"},{"Type":"NodeText","Data":"后进行比较，如果另外一个参数是浮点数，则会把"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"decimal"},{"Type":"NodeText","Data":"转换为浮点数进行比较"}]}]},{"ID":"20240201213753-ho7utuj","Type":"NodeListItem","Data":"7","ListData":{"Typ":1,"Tight":true,"Start":7,"Delimiter":46,"Padding":3,"Marker":"Nw==","Num":7},"Properties":{"id":"20240201213753-ho7utuj","updated":"20240201213753"},"Children":[{"ID":"20240201213754-jktgt7w","Type":"NodeParagraph","Properties":{"id":"20240201213754-jktgt7w","updated":"20240201213754"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"所有其他情况下，两个参数都会被转换为浮点数再进行比较"}]}]}]}]},{"ID":"20240201213755-5h49st7","Type":"NodeParagraph","Properties":{"id":"20240201213755-5h49st7","updated":"20240201213755"},"Children":[{"Type":"NodeText","Data":"根据官方文档的描述，我们的第 23 两条 SQL 都发生了隐式转换，第 2 条 SQL 的查询条件"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"num1 = '10000'"},{"Type":"NodeText","Data":"，左边是"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"int"},{"Type":"NodeText","Data":"类型右边是字符串，第 3 条 SQL 相反，那么根据官方转换规则第 7 条，左右两边都会转换为浮点数再进行比较。"}]},{"ID":"20240201213756-0aufxua","Type":"NodeParagraph","Properties":{"id":"20240201213756-0aufxua","updated":"20240201213756"},"Children":[{"Type":"NodeText","Data":"先看第 2 条 SQL："},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"SELECT * FROM `test1` WHERE num1 = '10000';"},{"Type":"NodeText","Data":" "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"左边为 int 类型"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"10000"},{"Type":"NodeText","Data":"，转换为浮点数还是"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"10000"},{"Type":"NodeText","Data":"，右边字符串类型"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"'10000'"},{"Type":"NodeText","Data":"，转换为浮点数也是"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"10000"},{"Type":"NodeText","Data":"。两边的转换结果都是唯一确定的，所以不影响使用索引。"}]},{"ID":"20240201213757-h9y0p3w","Type":"NodeParagraph","Properties":{"id":"20240201213757-h9y0p3w","updated":"20240201213757"},"Children":[{"Type":"NodeText","Data":"第 3 条 SQL："},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"SELECT * FROM `test1` WHERE num2 = 10000;"},{"Type":"NodeText","Data":" "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"左边是字符串类型"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"'10000'"},{"Type":"NodeText","Data":"，转浮点数为 10000 是唯一的，右边"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"int"},{"Type":"NodeText","Data":"类型"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"10000"},{"Type":"NodeText","Data":"转换结果也是唯一的。但是，因为左边是检索条件，"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"'10000'"},{"Type":"NodeText","Data":"转到"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"10000"},{"Type":"NodeText","Data":"虽然是唯一，但是其他字符串也可以转换为"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"10000"},{"Type":"NodeText","Data":"，比如"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"'10000a'"},{"Type":"NodeText","Data":"，"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"'010000'"},{"Type":"NodeText","Data":"，"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"'10000'"},{"Type":"NodeText","Data":"等等都能转为浮点数"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"10000"},{"Type":"NodeText","Data":"，这样的情况下，是不能用到索引的。"}]},{"ID":"20240201213758-fithgor","Type":"NodeParagraph","Properties":{"id":"20240201213758-fithgor","updated":"20240201213758"},"Children":[{"Type":"NodeText","Data":"关于这个"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"隐式转换"},{"Type":"NodeText","Data":"我们可以通过查询测试验证一下，先插入几条数据，其中"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"num2='10000a'"},{"Type":"NodeText","Data":"、"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"'010000'"},{"Type":"NodeText","Data":"和"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"'10000'"},{"Type":"NodeText","Data":"："}]},{"ID":"20240201213759-lqnbszd","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"c3Fs","CodeBlockCloseFence":"YGBg","Properties":{"id":"20240201213759-lqnbszd","updated":"20240201213759"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"c3Fs","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"INSERT INTO `test1` (`id`, `num1`, `num2`, `type1`, `type2`, `str1`, `str2`) VALUES ('10000001', '10000', '10000a', '0', '0', '2df3d9465ty2e4hd523', '2df3d9465ty2e4hd523');\nINSERT INTO `test1` (`id`, `num1`, `num2`, `type1`, `type2`, `str1`, `str2`) VALUES ('10000002', '10000', '010000', '0', '0', '2df3d9465ty2e4hd523', '2df3d9465ty2e4hd523');\nINSERT INTO `test1` (`id`, `num1`, `num2`, `type1`, `type2`, `str1`, `str2`) VALUES ('10000003', '10000', ' 10000', '0', '0', '2df3d9465ty2e4hd523', '2df3d9465ty2e4hd523');\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20240201213760-7su5wke","Type":"NodeParagraph","Properties":{"id":"20240201213760-7su5wke","updated":"20240201213760"},"Children":[{"Type":"NodeText","Data":"然后使用第三条 SQL 语句"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"SELECT * FROM `test1` WHERE num2 = 10000;"},{"Type":"NodeText","Data":"进行查询："}]},{"ID":"20240201213761-lhkq14i","Type":"NodeParagraph","Properties":{"id":"20240201213761-lhkq14i","updated":"20240201213761"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"https://oss.javaguide.cn/github/javaguide/mysqlindex-invalidation-caused-by-implicit-conversion-03.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201213762-xg16oui","Type":"NodeParagraph","Properties":{"id":"20240201213762-xg16oui","updated":"20240201213762"},"Children":[{"Type":"NodeText","Data":"从结果可以看到，后面插入的三条数据也都匹配上了。那么这个字符串隐式转换的规则是什么呢？为什么"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"num2='10000a'"},{"Type":"NodeText","Data":"、"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"'010000'"},{"Type":"NodeText","Data":"和"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"'10000'"},{"Type":"NodeText","Data":"这三种情形都能匹配上呢？查阅相关资料发现规则如下："}]},{"ID":"20240201213763-nxxyxwg","Type":"NodeList","ListData":{"Typ":1,"Tight":true,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20240201213763-nxxyxwg","updated":"20240201213763"},"Children":[{"ID":"20240201213764-3949rs2","Type":"NodeListItem","Data":"1","ListData":{"Typ":1,"Tight":true,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20240201213764-3949rs2","updated":"20240201213764"},"Children":[{"ID":"20240201213765-5mwdu0r","Type":"NodeParagraph","Properties":{"id":"20240201213765-5mwdu0r","updated":"20240201213765"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"不以数字开头"},{"Type":"NodeText","Data":"的字符串都将转换为"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"0"},{"Type":"NodeText","Data":"。如"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"'abc'"},{"Type":"NodeText","Data":"、"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"'a123bc'"},{"Type":"NodeText","Data":"、"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"'abc123'"},{"Type":"NodeText","Data":"都会转化为"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"0"},{"Type":"NodeText","Data":"；"}]}]},{"ID":"20240201213766-sw06jr4","Type":"NodeListItem","Data":"2","ListData":{"Typ":1,"Tight":true,"Start":2,"Delimiter":46,"Padding":3,"Marker":"Mg==","Num":2},"Properties":{"id":"20240201213766-sw06jr4","updated":"20240201213766"},"Children":[{"ID":"20240201213767-6xjcvmb","Type":"NodeParagraph","Properties":{"id":"20240201213767-6xjcvmb","updated":"20240201213767"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"以数字开头的"},{"Type":"NodeText","Data":"字符串转换时会进行截取，从第一个字符截取到第一个非数字内容为止。比如"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"'123abc'"},{"Type":"NodeText","Data":"会转换为"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"123"},{"Type":"NodeText","Data":"，"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"'012abc'"},{"Type":"NodeText","Data":"会转换为"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"012"},{"Type":"NodeText","Data":"也就是"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"12"},{"Type":"NodeText","Data":"，"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"'5.3a66b78c'"},{"Type":"NodeText","Data":"会转换为"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"5.3"},{"Type":"NodeText","Data":"，其他同理。"}]}]}]},{"ID":"20240201213768-tbbom6y","Type":"NodeParagraph","Properties":{"id":"20240201213768-tbbom6y","updated":"20240201213768"},"Children":[{"Type":"NodeText","Data":"现对以上规则做如下测试验证："}]},{"ID":"20240201213769-fh7h2uk","Type":"NodeParagraph","Properties":{"id":"20240201213769-fh7h2uk","updated":"20240201213769"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"https://oss.javaguide.cn/github/javaguide/mysqlindex-invalidation-caused-by-implicit-conversion-04.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201213770-nvpegjj","Type":"NodeParagraph","Properties":{"id":"20240201213770-nvpegjj","updated":"20240201213770"},"Children":[{"Type":"NodeText","Data":"如此也就印证了之前的查询结果了。"}]},{"ID":"20240201213771-9ftyjte","Type":"NodeParagraph","Properties":{"id":"20240201213771-9ftyjte","updated":"20240201213771"},"Children":[{"Type":"NodeText","Data":"再次写一条 SQL 查询 str1 字段："},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"SELECT * FROM `test1` WHERE str1 = 1234;"}]},{"ID":"20240201213772-6y5ktgp","Type":"NodeParagraph","Properties":{"id":"20240201213772-6y5ktgp","updated":"20240201213772"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"https://oss.javaguide.cn/github/javaguide/mysqlindex-invalidation-caused-by-implicit-conversion-05.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201213773-834tkde","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240201213773-834tkde","updated":"20240201213773"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"分析和总结"}]},{"ID":"20240201213774-h2l3b1v","Type":"NodeParagraph","Properties":{"id":"20240201213774-h2l3b1v","updated":"20240201213774"},"Children":[{"Type":"NodeText","Data":"通过上面的测试我们发现 MySQL 使用操作符的一些特性："}]},{"ID":"20240201213775-vy3qtz5","Type":"NodeList","ListData":{"Typ":1,"Tight":true,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20240201213775-vy3qtz5","updated":"20240201213775"},"Children":[{"ID":"20240201213776-tjk7x4w","Type":"NodeListItem","Data":"1","ListData":{"Typ":1,"Tight":true,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20240201213776-tjk7x4w","updated":"20240201213776"},"Children":[{"ID":"20240201213777-m1w7dl2","Type":"NodeParagraph","Properties":{"id":"20240201213777-m1w7dl2","updated":"20240201213777"},"Children":[{"Type":"NodeText","Data":"当操作符"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"左右两边的数据类型不一致"},{"Type":"NodeText","Data":"时，会发生"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"隐式转换"},{"Type":"NodeText","Data":"。"}]}]},{"ID":"20240201213778-axcaj5z","Type":"NodeListItem","Data":"2","ListData":{"Typ":1,"Tight":true,"Start":2,"Delimiter":46,"Padding":3,"Marker":"Mg==","Num":2},"Properties":{"id":"20240201213778-axcaj5z","updated":"20240201213778"},"Children":[{"ID":"20240201213779-iy2b7q8","Type":"NodeParagraph","Properties":{"id":"20240201213779-iy2b7q8","updated":"20240201213779"},"Children":[{"Type":"NodeText","Data":"当 where 查询操作符"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"左边为数值类型"},{"Type":"NodeText","Data":"时发生了隐式转换，那么对效率影响不大，但还是不推荐这么做。"}]}]},{"ID":"20240201213780-jo6ewwr","Type":"NodeListItem","Data":"3","ListData":{"Typ":1,"Tight":true,"Start":3,"Delimiter":46,"Padding":3,"Marker":"Mw==","Num":3},"Properties":{"id":"20240201213780-jo6ewwr","updated":"20240201213780"},"Children":[{"ID":"20240201213781-fykfthy","Type":"NodeParagraph","Properties":{"id":"20240201213781-fykfthy","updated":"20240201213781"},"Children":[{"Type":"NodeText","Data":"当 where 查询操作符"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"左边为字符类型"},{"Type":"NodeText","Data":"时发生了隐式转换，那么会导致索引失效，造成全表扫描效率极低。"}]}]},{"ID":"20240201213782-srazx5f","Type":"NodeListItem","Data":"4","ListData":{"Typ":1,"Tight":true,"Start":4,"Delimiter":46,"Padding":3,"Marker":"NA==","Num":4},"Properties":{"id":"20240201213782-srazx5f","updated":"20240201213782"},"Children":[{"ID":"20240201213783-jfx0xjc","Type":"NodeParagraph","Properties":{"id":"20240201213783-jfx0xjc","updated":"20240201213783"},"Children":[{"Type":"NodeText","Data":"字符串转换为数值类型时，非数字开头的字符串会转化为"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"0"},{"Type":"NodeText","Data":"，以数字开头的字符串会截取从第一个字符到第一个非数字内容为止的值为转化结果。"}]}]}]},{"ID":"20240201213784-6mgq3lu","Type":"NodeParagraph","Properties":{"id":"20240201213784-6mgq3lu","updated":"20240201213784"},"Children":[{"Type":"NodeText","Data":"所以，我们在写 SQL 时一定要养成良好的习惯，查询的字段是什么类型，等号右边的条件就写成对应的类型。特别当查询的字段是字符串时，等号右边的条件一定要用引号引起来标明这是一个字符串，否则会造成索引失效触发全表扫描。"}]},{"ID":"20240201213785-qxt0g7q","Type":"NodeHTMLBlock","Data":"\u003cdiv\u003e\n\u003c!-- @include: @article-footer.snippet.md --\u003e\n\u003c/div\u003e","HtmlBlockType":2,"Properties":{"id":"20240201213785-qxt0g7q","updated":"20240201213785"}}]}