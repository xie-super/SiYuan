{"ID":"20240201212853-4hdwb8z","Spec":"1","Type":"NodeDocument","Properties":{"id":"20240201212853-4hdwb8z","title":"mysql-questions-01","updated":"20240201212853"},"Children":[{"ID":"20240201212854-bbr2woh","Type":"NodeThematicBreak","Properties":{"id":"20240201212854-bbr2woh","updated":"20240201212854"}},{"ID":"20240201212855-ljmjyap","Type":"NodeParagraph","Properties":{"id":"20240201212855-ljmjyap","updated":"20240201212855"},"Children":[{"Type":"NodeText","Data":"title: MySQL常见面试题总结"},{"Type":"NodeSoftBreak","Data":"\n","Properties":{"id":""}},{"Type":"NodeText","Data":"category: 数据库"},{"Type":"NodeSoftBreak","Data":"\n","Properties":{"id":""}},{"Type":"NodeText","Data":"tag:"}]},{"ID":"20240201212856-3800kn9","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"MarkerOffset":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201212856-3800kn9","updated":"20240201212856"},"Children":[{"ID":"20240201212857-pk57mhp","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"MarkerOffset":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201212857-pk57mhp","updated":"20240201212857"},"Children":[{"ID":"20240201212858-fs9tlev","Type":"NodeParagraph","Properties":{"id":"20240201212858-fs9tlev","updated":"20240201212858"},"Children":[{"Type":"NodeText","Data":"MySQL"}]}]},{"ID":"20240201212859-evobkbp","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"MarkerOffset":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201212859-evobkbp","updated":"20240201212859"},"Children":[{"ID":"20240201212860-obawel3","Type":"NodeParagraph","Properties":{"id":"20240201212860-obawel3","updated":"20240201212860"},"Children":[{"Type":"NodeText","Data":"大厂面试"},{"Type":"NodeSoftBreak","Data":"\n","Properties":{"id":""}},{"Type":"NodeText","Data":"head:"}]}]},{"ID":"20240201212861-ukgbhe4","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"MarkerOffset":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201212861-ukgbhe4","updated":"20240201212861"},"Children":[{"ID":"20240201212862-ktu2g9w","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201212862-ktu2g9w","updated":"20240201212862"},"Children":[{"ID":"20240201212863-148dvhm","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201212863-148dvhm","updated":"20240201212863"},"Children":[{"ID":"20240201212864-6hk6nz2","Type":"NodeParagraph","Properties":{"id":"20240201212864-6hk6nz2","updated":"20240201212864"},"Children":[{"Type":"NodeText","Data":"meta"}]}]},{"ID":"20240201212865-uigdvfx","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201212865-uigdvfx","updated":"20240201212865"},"Children":[{"ID":"20240201212866-2a9mqzd","Type":"NodeParagraph","Properties":{"id":"20240201212866-2a9mqzd","updated":"20240201212866"},"Children":[{"Type":"NodeText","Data":"name: keywords"},{"Type":"NodeSoftBreak","Data":"\n","Properties":{"id":""}},{"Type":"NodeText","Data":"content: MySQL基础,MySQL基础架构,MySQL存储引擎,MySQL查询缓存,MySQL事务,MySQL锁等内容。"}]}]}]}]},{"ID":"20240201212867-mdgw72p","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"MarkerOffset":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201212867-mdgw72p","updated":"20240201212867"},"Children":[{"ID":"20240201212868-ebci9b6","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201212868-ebci9b6","updated":"20240201212868"},"Children":[{"ID":"20240201212869-3szprtl","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201212869-3szprtl","updated":"20240201212869"},"Children":[{"ID":"20240201212870-u98sesm","Type":"NodeParagraph","Properties":{"id":"20240201212870-u98sesm","updated":"20240201212870"},"Children":[{"Type":"NodeText","Data":"meta"}]}]},{"ID":"20240201212871-823xo6n","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201212871-823xo6n","updated":"20240201212871"},"Children":[{"ID":"20240201212872-z7od22m","Type":"NodeParagraph","Properties":{"id":"20240201212872-z7od22m","updated":"20240201212872"},"Children":[{"Type":"NodeText","Data":"name: description"},{"Type":"NodeSoftBreak","Data":"\n","Properties":{"id":""}},{"Type":"NodeText","Data":"content: 一篇文章总结MySQL常见的知识点和面试题，涵盖MySQL基础、MySQL基础架构、MySQL存储引擎、MySQL查询缓存、MySQL事务、MySQL锁等内容。"}]}]}]}]}]},{"ID":"20240201212873-5glypyn","Type":"NodeThematicBreak","Properties":{"id":"20240201212873-5glypyn","updated":"20240201212873"}},{"ID":"20240201212874-qk49wwo","Type":"NodeHTMLBlock","Data":"\u003cdiv\u003e\n\u003c!-- @include: @small-advertisement.snippet.md --\u003e\n\u003c/div\u003e","HtmlBlockType":2,"Properties":{"id":"20240201212874-qk49wwo","updated":"20240201212874"}},{"ID":"20240201212875-yq8aapi","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240201212875-yq8aapi","updated":"20240201212875"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"MySQL 基础"}]},{"ID":"20240201212876-9foppx3","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240201212876-9foppx3","updated":"20240201212876"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"什么是关系型数据库？"}]},{"ID":"20240201212877-g4edqh5","Type":"NodeParagraph","Properties":{"id":"20240201212877-g4edqh5","updated":"20240201212877"},"Children":[{"Type":"NodeText","Data":"顾名思义，关系型数据库（RDB，Relational Database）就是一种建立在关系模型的基础上的数据库。关系模型表明了数据库中所存储的数据之间的联系（一对一、一对多、多对多）。"}]},{"ID":"20240201212878-ikz53ew","Type":"NodeParagraph","Properties":{"id":"20240201212878-ikz53ew","updated":"20240201212878"},"Children":[{"Type":"NodeText","Data":"关系型数据库中，我们的数据都被存放在了各种表中（比如用户表），表中的每一行就存放着一条数据（比如一个用户的信息）。"}]},{"ID":"20240201212879-cy5mbgs","Type":"NodeParagraph","Properties":{"id":"20240201212879-cy5mbgs","updated":"20240201212879"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"关系型数据库表关系","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"https://oss.javaguide.cn/java-guide-blog/5e3c1a71724a38245aa43b02_99bf70d46cc247be878de9d3a88f0c44.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201212880-z2e965q","Type":"NodeParagraph","Properties":{"id":"20240201212880-z2e965q","updated":"20240201212880"},"Children":[{"Type":"NodeText","Data":"大部分关系型数据库都使用 SQL 来操作数据库中的数据。并且，大部分关系型数据库都支持事务的四大特性(ACID)。"}]},{"ID":"20240201212881-juckg7z","Type":"NodeParagraph","Properties":{"id":"20240201212881-juckg7z","updated":"20240201212881"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"有哪些常见的关系型数据库呢？"}]},{"ID":"20240201212882-lq0sfwd","Type":"NodeParagraph","Properties":{"id":"20240201212882-lq0sfwd","updated":"20240201212882"},"Children":[{"Type":"NodeText","Data":"MySQL、PostgreSQL、Oracle、SQL Server、SQLite（微信本地的聊天记录的存储就是用的 SQLite） ……。"}]},{"ID":"20240201212883-4ajp3tv","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240201212883-4ajp3tv","updated":"20240201212883"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"什么是 SQL？"}]},{"ID":"20240201212884-ocosm6g","Type":"NodeParagraph","Properties":{"id":"20240201212884-ocosm6g","updated":"20240201212884"},"Children":[{"Type":"NodeText","Data":"SQL 是一种结构化查询语言(Structured Query Language)，专门用来与数据库打交道，目的是提供一种从数据库中读写数据的简单有效的方法。"}]},{"ID":"20240201212885-bpnxv9j","Type":"NodeParagraph","Properties":{"id":"20240201212885-bpnxv9j","updated":"20240201212885"},"Children":[{"Type":"NodeText","Data":"几乎所有的主流关系数据库都支持 SQL ，适用性非常强。并且，一些非关系型数据库也兼容 SQL 或者使用的是类似于 SQL 的查询语言。"}]},{"ID":"20240201212886-a2bcun1","Type":"NodeParagraph","Properties":{"id":"20240201212886-a2bcun1","updated":"20240201212886"},"Children":[{"Type":"NodeText","Data":"SQL 可以帮助我们："}]},{"ID":"20240201212887-7xvv8c0","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201212887-7xvv8c0","updated":"20240201212887"},"Children":[{"ID":"20240201212888-06xrgyw","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201212888-06xrgyw","updated":"20240201212888"},"Children":[{"ID":"20240201212889-wbchz5b","Type":"NodeParagraph","Properties":{"id":"20240201212889-wbchz5b","updated":"20240201212889"},"Children":[{"Type":"NodeText","Data":"新建数据库、数据表、字段；"}]}]},{"ID":"20240201212890-frrb3au","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201212890-frrb3au","updated":"20240201212890"},"Children":[{"ID":"20240201212891-gq32uos","Type":"NodeParagraph","Properties":{"id":"20240201212891-gq32uos","updated":"20240201212891"},"Children":[{"Type":"NodeText","Data":"在数据库中增加，删除，修改，查询数据；"}]}]},{"ID":"20240201212892-f41ldbz","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201212892-f41ldbz","updated":"20240201212892"},"Children":[{"ID":"20240201212893-1uspi8h","Type":"NodeParagraph","Properties":{"id":"20240201212893-1uspi8h","updated":"20240201212893"},"Children":[{"Type":"NodeText","Data":"新建视图、函数、存储过程；"}]}]},{"ID":"20240201212894-8otxj66","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201212894-8otxj66","updated":"20240201212894"},"Children":[{"ID":"20240201212895-inkgfpz","Type":"NodeParagraph","Properties":{"id":"20240201212895-inkgfpz","updated":"20240201212895"},"Children":[{"Type":"NodeText","Data":"对数据库中的数据进行简单的数据分析；"}]}]},{"ID":"20240201212896-gmhc1le","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201212896-gmhc1le","updated":"20240201212896"},"Children":[{"ID":"20240201212897-f2wrz7o","Type":"NodeParagraph","Properties":{"id":"20240201212897-f2wrz7o","updated":"20240201212897"},"Children":[{"Type":"NodeText","Data":"搭配 Hive，Spark SQL 做大数据；"}]}]},{"ID":"20240201212898-3tg64zm","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201212898-3tg64zm","updated":"20240201212898"},"Children":[{"ID":"20240201212899-ihnvso6","Type":"NodeParagraph","Properties":{"id":"20240201212899-ihnvso6","updated":"20240201212899"},"Children":[{"Type":"NodeText","Data":"搭配 SQLFlow 做机器学习；"}]}]},{"ID":"20240201212900-j9j7dqi","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201212900-j9j7dqi","updated":"20240201212900"},"Children":[{"ID":"20240201212901-kry3a4x","Type":"NodeParagraph","Properties":{"id":"20240201212901-kry3a4x","updated":"20240201212901"},"Children":[{"Type":"NodeText","Data":"……"}]}]}]},{"ID":"20240201212902-7zjm1xh","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240201212902-7zjm1xh","updated":"20240201212902"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"什么是 MySQL？"}]},{"ID":"20240201212903-dwiu3su","Type":"NodeParagraph","Properties":{"id":"20240201212903-dwiu3su","updated":"20240201212903"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"https://oss.javaguide.cn/github/javaguide/csdn/20210327143351823.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201212904-8qi7cap","Type":"NodeParagraph","Properties":{"id":"20240201212904-8qi7cap","updated":"20240201212904"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"MySQL 是一种关系型数据库，主要用于持久化存储我们的系统中的一些数据比如用户信息。"}]},{"ID":"20240201212905-2500vfp","Type":"NodeParagraph","Properties":{"id":"20240201212905-2500vfp","updated":"20240201212905"},"Children":[{"Type":"NodeText","Data":"由于 MySQL 是开源免费并且比较成熟的数据库，因此，MySQL 被大量使用在各种系统中。任何人都可以在 GPL(General Public License) 的许可下下载并根据个性化的需要对其进行修改。MySQL 的默认端口号是"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"3306"},{"Type":"NodeText","Data":"。"}]},{"ID":"20240201212906-q3lf32y","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240201212906-q3lf32y","updated":"20240201212906"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"MySQL 有什么优点？"}]},{"ID":"20240201212907-f7yyo2i","Type":"NodeParagraph","Properties":{"id":"20240201212907-f7yyo2i","updated":"20240201212907"},"Children":[{"Type":"NodeText","Data":"这个问题本质上是在问 MySQL 如此流行的原因。"}]},{"ID":"20240201212908-mdf2f3c","Type":"NodeParagraph","Properties":{"id":"20240201212908-mdf2f3c","updated":"20240201212908"},"Children":[{"Type":"NodeText","Data":"MySQL 主要具有下面这些优点："}]},{"ID":"20240201212909-2giqc89","Type":"NodeList","ListData":{"Typ":1,"Tight":true,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20240201212909-2giqc89","updated":"20240201212909"},"Children":[{"ID":"20240201212910-k1auv7i","Type":"NodeListItem","Data":"1","ListData":{"Typ":1,"Tight":true,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20240201212910-k1auv7i","updated":"20240201212910"},"Children":[{"ID":"20240201212911-lkj9ol7","Type":"NodeParagraph","Properties":{"id":"20240201212911-lkj9ol7","updated":"20240201212911"},"Children":[{"Type":"NodeText","Data":"成熟稳定，功能完善。"}]}]},{"ID":"20240201212912-yuxaqeg","Type":"NodeListItem","Data":"2","ListData":{"Typ":1,"Tight":true,"Start":2,"Delimiter":46,"Padding":3,"Marker":"Mg==","Num":2},"Properties":{"id":"20240201212912-yuxaqeg","updated":"20240201212912"},"Children":[{"ID":"20240201212913-1u5r40t","Type":"NodeParagraph","Properties":{"id":"20240201212913-1u5r40t","updated":"20240201212913"},"Children":[{"Type":"NodeText","Data":"开源免费。"}]}]},{"ID":"20240201212914-cpqc2ng","Type":"NodeListItem","Data":"3","ListData":{"Typ":1,"Tight":true,"Start":3,"Delimiter":46,"Padding":3,"Marker":"Mw==","Num":3},"Properties":{"id":"20240201212914-cpqc2ng","updated":"20240201212914"},"Children":[{"ID":"20240201212915-h0hwwmt","Type":"NodeParagraph","Properties":{"id":"20240201212915-h0hwwmt","updated":"20240201212915"},"Children":[{"Type":"NodeText","Data":"文档丰富，既有详细的官方文档，又有非常多优质文章可供参考学习。"}]}]},{"ID":"20240201212916-nbwxnxz","Type":"NodeListItem","Data":"4","ListData":{"Typ":1,"Tight":true,"Start":4,"Delimiter":46,"Padding":3,"Marker":"NA==","Num":4},"Properties":{"id":"20240201212916-nbwxnxz","updated":"20240201212916"},"Children":[{"ID":"20240201212917-0m0mijp","Type":"NodeParagraph","Properties":{"id":"20240201212917-0m0mijp","updated":"20240201212917"},"Children":[{"Type":"NodeText","Data":"开箱即用，操作简单，维护成本低。"}]}]},{"ID":"20240201212918-h1qop8m","Type":"NodeListItem","Data":"5","ListData":{"Typ":1,"Tight":true,"Start":5,"Delimiter":46,"Padding":3,"Marker":"NQ==","Num":5},"Properties":{"id":"20240201212918-h1qop8m","updated":"20240201212918"},"Children":[{"ID":"20240201212919-cnvmmc2","Type":"NodeParagraph","Properties":{"id":"20240201212919-cnvmmc2","updated":"20240201212919"},"Children":[{"Type":"NodeText","Data":"兼容性好，支持常见的操作系统，支持多种开发语言。"}]}]},{"ID":"20240201212920-b5gvxb6","Type":"NodeListItem","Data":"6","ListData":{"Typ":1,"Tight":true,"Start":6,"Delimiter":46,"Padding":3,"Marker":"Ng==","Num":6},"Properties":{"id":"20240201212920-b5gvxb6","updated":"20240201212920"},"Children":[{"ID":"20240201212921-9fc8bc2","Type":"NodeParagraph","Properties":{"id":"20240201212921-9fc8bc2","updated":"20240201212921"},"Children":[{"Type":"NodeText","Data":"社区活跃，生态完善。"}]}]},{"ID":"20240201212922-niztisx","Type":"NodeListItem","Data":"7","ListData":{"Typ":1,"Tight":true,"Start":7,"Delimiter":46,"Padding":3,"Marker":"Nw==","Num":7},"Properties":{"id":"20240201212922-niztisx","updated":"20240201212922"},"Children":[{"ID":"20240201212923-l90fw2z","Type":"NodeParagraph","Properties":{"id":"20240201212923-l90fw2z","updated":"20240201212923"},"Children":[{"Type":"NodeText","Data":"事务支持优秀， InnoDB 存储引擎默认使用 REPEATABLE-READ 并不会有任何性能损失，并且，InnoDB 实现的 REPEATABLE-READ 隔离级别其实是可以解决幻读问题发生的。"}]}]},{"ID":"20240201212924-zdj8xe6","Type":"NodeListItem","Data":"8","ListData":{"Typ":1,"Tight":true,"Start":8,"Delimiter":46,"Padding":3,"Marker":"OA==","Num":8},"Properties":{"id":"20240201212924-zdj8xe6","updated":"20240201212924"},"Children":[{"ID":"20240201212925-g67xnkk","Type":"NodeParagraph","Properties":{"id":"20240201212925-g67xnkk","updated":"20240201212925"},"Children":[{"Type":"NodeText","Data":"支持分库分表、读写分离、高可用。"}]}]}]},{"ID":"20240201212926-2rhfztd","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240201212926-2rhfztd","updated":"20240201212926"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"MySQL 字段类型"}]},{"ID":"20240201212927-y4ydfxy","Type":"NodeParagraph","Properties":{"id":"20240201212927-y4ydfxy","updated":"20240201212927"},"Children":[{"Type":"NodeText","Data":"MySQL 字段类型可以简单分为三大类："}]},{"ID":"20240201212928-98mypxf","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201212928-98mypxf","updated":"20240201212928"},"Children":[{"ID":"20240201212929-rsd0h9e","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201212929-rsd0h9e","updated":"20240201212929"},"Children":[{"ID":"20240201212930-14hsdbg","Type":"NodeParagraph","Properties":{"id":"20240201212930-14hsdbg","updated":"20240201212930"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"数值类型"},{"Type":"NodeText","Data":"：整型（TINYINT、SMALLINT、MEDIUMINT、INT 和 BIGINT）、浮点型（FLOAT 和 DOUBLE）、定点型（DECIMAL）"}]}]},{"ID":"20240201212931-x1bu45f","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201212931-x1bu45f","updated":"20240201212931"},"Children":[{"ID":"20240201212932-6occ5i8","Type":"NodeParagraph","Properties":{"id":"20240201212932-6occ5i8","updated":"20240201212932"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"字符串类型"},{"Type":"NodeText","Data":"：CHAR、VARCHAR、TINYTEXT、TEXT、MEDIUMTEXT、LONGTEXT、TINYBLOB、BLOB、MEDIUMBLOB 和 LONGBLOB 等，最常用的是 CHAR 和 VARCHAR。"}]}]},{"ID":"20240201212933-tjznvc1","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201212933-tjznvc1","updated":"20240201212933"},"Children":[{"ID":"20240201212934-gqhuvhf","Type":"NodeParagraph","Properties":{"id":"20240201212934-gqhuvhf","updated":"20240201212934"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"日期时间类型"},{"Type":"NodeText","Data":"：YEAR、TIME、DATE、DATETIME 和 TIMESTAMP 等。"}]}]}]},{"ID":"20240201212935-hqfwveg","Type":"NodeParagraph","Properties":{"id":"20240201212935-hqfwveg","updated":"20240201212935"},"Children":[{"Type":"NodeText","Data":"下面这张图不是我画的，忘记是从哪里保存下来的了，总结的还蛮不错的。"}]},{"ID":"20240201212936-cx8ttrw","Type":"NodeParagraph","Properties":{"id":"20240201212936-cx8ttrw","updated":"20240201212936"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"MySQL 常见字段类型总结","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"https://oss.javaguide.cn/github/javaguide/mysql/summary-of-mysql-field-types.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201212937-44jamvl","Type":"NodeParagraph","Properties":{"id":"20240201212937-44jamvl","updated":"20240201212937"},"Children":[{"Type":"NodeText","Data":"MySQL 字段类型比较多，我这里会挑选一些日常开发使用很频繁且面试常问的字段类型，以面试问题的形式来详细介绍。如无特殊说明，针对的都是 InnoDB 存储引擎。"}]},{"ID":"20240201212938-imj5dyf","Type":"NodeParagraph","Properties":{"id":"20240201212938-imj5dyf","updated":"20240201212938"},"Children":[{"Type":"NodeText","Data":"另外，推荐阅读一下《高性能 MySQL(第三版)》的第四章，有详细介绍 MySQL 字段类型优化。"}]},{"ID":"20240201212939-inwcb1q","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240201212939-inwcb1q","updated":"20240201212939"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"整数类型的 UNSIGNED 属性有什么用？"}]},{"ID":"20240201212940-3ez2gmy","Type":"NodeParagraph","Properties":{"id":"20240201212940-3ez2gmy","updated":"20240201212940"},"Children":[{"Type":"NodeText","Data":"MySQL 中的整数类型可以使用可选的 UNSIGNED 属性来表示不允许负值的无符号整数。使用 UNSIGNED 属性可以将正整数的上限提高一倍，因为它不需要存储负数值。"}]},{"ID":"20240201212941-5rlhppr","Type":"NodeParagraph","Properties":{"id":"20240201212941-5rlhppr","updated":"20240201212941"},"Children":[{"Type":"NodeText","Data":"例如， TINYINT UNSIGNED 类型的取值范围是 0 ~ 255，而普通的 TINYINT 类型的值范围是 -128 ~ 127。INT UNSIGNED 类型的取值范围是 0 ~ 4,294,967,295，而普通的 INT 类型的值范围是 -2,147,483,648 ~ 2,147,483,647。"}]},{"ID":"20240201212942-qlnvyms","Type":"NodeParagraph","Properties":{"id":"20240201212942-qlnvyms","updated":"20240201212942"},"Children":[{"Type":"NodeText","Data":"对于从 0 开始递增的 ID 列，使用 UNSIGNED 属性可以非常适合，因为不允许负值并且可以拥有更大的上限范围，提供了更多的 ID 值可用。"}]},{"ID":"20240201212943-ex9ls50","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240201212943-ex9ls50","updated":"20240201212943"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"CHAR 和 VARCHAR 的区别是什么？"}]},{"ID":"20240201212944-y3tnr17","Type":"NodeParagraph","Properties":{"id":"20240201212944-y3tnr17","updated":"20240201212944"},"Children":[{"Type":"NodeText","Data":"CHAR 和 VARCHAR 是最常用到的字符串类型，两者的主要区别在于："},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"CHAR 是定长字符串，VARCHAR 是变长字符串。"}]},{"ID":"20240201212945-5mcjo70","Type":"NodeParagraph","Properties":{"id":"20240201212945-5mcjo70","updated":"20240201212945"},"Children":[{"Type":"NodeText","Data":"CHAR 在存储时会在右边填充空格以达到指定的长度，检索时会去掉空格；VARCHAR 在存储时需要使用 1 或 2 个额外字节记录字符串的长度，检索时不需要处理。"}]},{"ID":"20240201212946-9op04gz","Type":"NodeParagraph","Properties":{"id":"20240201212946-9op04gz","updated":"20240201212946"},"Children":[{"Type":"NodeText","Data":"CHAR 更适合存储长度较短或者长度都差不多的字符串，例如 Bcrypt 算法、MD5 算法加密后的密码、身份证号码。VARCHAR 类型适合存储长度不确定或者差异较大的字符串，例如用户昵称、文章标题等。"}]},{"ID":"20240201212947-n0zu833","Type":"NodeParagraph","Properties":{"id":"20240201212947-n0zu833","updated":"20240201212947"},"Children":[{"Type":"NodeText","Data":"CHAR(M) 和 VARCHAR(M) 的 M 都代表能够保存的字符数的最大值，无论是字母、数字还是中文，每个都只占用一个字符。"}]},{"ID":"20240201212948-9iqv6y9","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240201212948-9iqv6y9","updated":"20240201212948"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"VARCHAR(100)和 VARCHAR(10)的区别是什么？"}]},{"ID":"20240201212949-luwuhft","Type":"NodeParagraph","Properties":{"id":"20240201212949-luwuhft","updated":"20240201212949"},"Children":[{"Type":"NodeText","Data":"VARCHAR(100)和 VARCHAR(10)都是变长类型，表示能存储最多 100 个字符和 10 个字符。因此，VARCHAR (100) 可以满足更大范围的字符存储需求，有更好的业务拓展性。而 VARCHAR(10)存储超过 10 个字符时，就需要修改表结构才可以。"}]},{"ID":"20240201212950-kolggxf","Type":"NodeParagraph","Properties":{"id":"20240201212950-kolggxf","updated":"20240201212950"},"Children":[{"Type":"NodeText","Data":"虽说 VARCHAR(100)和 VARCHAR(10)能存储的字符范围不同，但二者存储相同的字符串，所占用磁盘的存储空间其实是一样的，这也是很多人容易误解的一点。"}]},{"ID":"20240201212951-9qrzjzp","Type":"NodeParagraph","Properties":{"id":"20240201212951-9qrzjzp","updated":"20240201212951"},"Children":[{"Type":"NodeText","Data":"不过，VARCHAR(100) 会消耗更多的内存。这是因为 VARCHAR 类型在内存中操作时，通常会分配固定大小的内存块来保存值，即使用字符类型中定义的长度。例如在进行排序的时候，VARCHAR(100)是按照 100 这个长度来进行的，也就会消耗更多内存。"}]},{"ID":"20240201212952-8dqdstu","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240201212952-8dqdstu","updated":"20240201212952"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"DECIMAL 和 FLOAT/DOUBLE 的区别是什么？"}]},{"ID":"20240201212953-shm150z","Type":"NodeParagraph","Properties":{"id":"20240201212953-shm150z","updated":"20240201212953"},"Children":[{"Type":"NodeText","Data":"DECIMAL 和 FLOAT 的区别是："},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"DECIMAL 是定点数，FLOAT/DOUBLE 是浮点数。DECIMAL 可以存储精确的小数值，FLOAT/DOUBLE 只能存储近似的小数值。"}]},{"ID":"20240201212954-43u5sra","Type":"NodeParagraph","Properties":{"id":"20240201212954-43u5sra","updated":"20240201212954"},"Children":[{"Type":"NodeText","Data":"DECIMAL 用于存储具有精度要求的小数，例如与货币相关的数据，可以避免浮点数带来的精度损失。"}]},{"ID":"20240201212955-qjcfkqx","Type":"NodeParagraph","Properties":{"id":"20240201212955-qjcfkqx","updated":"20240201212955"},"Children":[{"Type":"NodeText","Data":"在 Java 中，MySQL 的 DECIMAL 类型对应的是 Java 类 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"java.math.BigDecimal"},{"Type":"NodeText","Data":"。"}]},{"ID":"20240201212956-qih593p","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240201212956-qih593p","updated":"20240201212956"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"为什么不推荐使用 TEXT 和 BLOB？"}]},{"ID":"20240201212957-wju7hne","Type":"NodeParagraph","Properties":{"id":"20240201212957-wju7hne","updated":"20240201212957"},"Children":[{"Type":"NodeText","Data":"TEXT 类型类似于 CHAR（0-255 字节）和 VARCHAR（0-65,535 字节），但可以存储更长的字符串，即长文本数据，例如博客内容。"}]},{"ID":"20240201212958-mrpi020","Type":"NodeTable","Data":"| 类型       | 可存储大小           | 用途           |\n| ---------- | -------------------- | -------------- |\n| TINYTEXT   | 0-255 字节           | 一般文本字符串 |\n| TEXT       | 0-65,535 字节        | 长文本字符串   |\n| MEDIUMTEXT | 0-16,772,150 字节    | 较大文本数据   |\n| LONGTEXT   | 0-4,294,967,295 字节 | 极大文本数据   |","TableAligns":[0,0,0],"Properties":{"id":"20240201212958-mrpi020","updated":"20240201212958"},"Children":[{"Type":"NodeTableHead","Properties":{"id":""},"Children":[{"Type":"NodeTableRow","Properties":{"id":""},"Children":[{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"类型"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"可存储大小"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"用途"}]}]}]},{"Type":"NodeTableRow","TableAligns":[0,0,0],"Properties":{"id":""},"Children":[{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"TINYTEXT"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"0-255 字节"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"一般文本字符串"}]}]},{"Type":"NodeTableRow","TableAligns":[0,0,0],"Properties":{"id":""},"Children":[{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"TEXT"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"0-65,535 字节"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"长文本字符串"}]}]},{"Type":"NodeTableRow","TableAligns":[0,0,0],"Properties":{"id":""},"Children":[{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"MEDIUMTEXT"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"0-16,772,150 字节"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"较大文本数据"}]}]},{"Type":"NodeTableRow","TableAligns":[0,0,0],"Properties":{"id":""},"Children":[{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"LONGTEXT"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"0-4,294,967,295 字节"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"极大文本数据"}]}]}]},{"ID":"20240201212959-q89oand","Type":"NodeParagraph","Properties":{"id":"20240201212959-q89oand","updated":"20240201212959"},"Children":[{"Type":"NodeText","Data":"BLOB 类型主要用于存储二进制大对象，例如图片、音视频等文件。"}]},{"ID":"20240201212960-0k7w59t","Type":"NodeTable","Data":"| 类型       | 可存储大小 | 用途                     |\n| ---------- | ---------- | ------------------------ |\n| TINYBLOB   | 0-255 字节 | 短文本二进制字符串       |\n| BLOB       | 0-65KB     | 二进制字符串             |\n| MEDIUMBLOB | 0-16MB     | 二进制形式的长文本数据   |\n| LONGBLOB   | 0-4GB      | 二进制形式的极大文本数据 |","TableAligns":[0,0,0],"Properties":{"id":"20240201212960-0k7w59t","updated":"20240201212960"},"Children":[{"Type":"NodeTableHead","Properties":{"id":""},"Children":[{"Type":"NodeTableRow","Properties":{"id":""},"Children":[{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"类型"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"可存储大小"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"用途"}]}]}]},{"Type":"NodeTableRow","TableAligns":[0,0,0],"Properties":{"id":""},"Children":[{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"TINYBLOB"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"0-255 字节"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"短文本二进制字符串"}]}]},{"Type":"NodeTableRow","TableAligns":[0,0,0],"Properties":{"id":""},"Children":[{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"BLOB"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"0-65KB"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"二进制字符串"}]}]},{"Type":"NodeTableRow","TableAligns":[0,0,0],"Properties":{"id":""},"Children":[{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"MEDIUMBLOB"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"0-16MB"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"二进制形式的长文本数据"}]}]},{"Type":"NodeTableRow","TableAligns":[0,0,0],"Properties":{"id":""},"Children":[{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"LONGBLOB"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"0-4GB"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"二进制形式的极大文本数据"}]}]}]},{"ID":"20240201212961-yh1wwhu","Type":"NodeParagraph","Properties":{"id":"20240201212961-yh1wwhu","updated":"20240201212961"},"Children":[{"Type":"NodeText","Data":"在日常开发中，很少使用 TEXT 类型，但偶尔会用到，而 BLOB 类型则基本不常用。如果预期长度范围可以通过 VARCHAR 来满足，建议避免使用 TEXT。"}]},{"ID":"20240201212962-kphvkik","Type":"NodeParagraph","Properties":{"id":"20240201212962-kphvkik","updated":"20240201212962"},"Children":[{"Type":"NodeText","Data":"数据库规范通常不推荐使用 BLOB 和 TEXT 类型，这两种类型具有一些缺点和限制，例如："}]},{"ID":"20240201212963-u9eb6k1","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201212963-u9eb6k1","updated":"20240201212963"},"Children":[{"ID":"20240201212964-0anlytb","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201212964-0anlytb","updated":"20240201212964"},"Children":[{"ID":"20240201212965-s2qj2vi","Type":"NodeParagraph","Properties":{"id":"20240201212965-s2qj2vi","updated":"20240201212965"},"Children":[{"Type":"NodeText","Data":"不能有默认值。"}]}]},{"ID":"20240201212966-agzky36","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201212966-agzky36","updated":"20240201212966"},"Children":[{"ID":"20240201212967-toyu5nz","Type":"NodeParagraph","Properties":{"id":"20240201212967-toyu5nz","updated":"20240201212967"},"Children":[{"Type":"NodeText","Data":"在使用临时表时无法使用内存临时表，只能在磁盘上创建临时表（《高性能 MySQL》书中有提到）。"}]}]},{"ID":"20240201212968-a3jd61a","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201212968-a3jd61a","updated":"20240201212968"},"Children":[{"ID":"20240201212969-r3mvwmx","Type":"NodeParagraph","Properties":{"id":"20240201212969-r3mvwmx","updated":"20240201212969"},"Children":[{"Type":"NodeText","Data":"检索效率较低。"}]}]},{"ID":"20240201212970-7x5uqzy","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201212970-7x5uqzy","updated":"20240201212970"},"Children":[{"ID":"20240201212971-17pps04","Type":"NodeParagraph","Properties":{"id":"20240201212971-17pps04","updated":"20240201212971"},"Children":[{"Type":"NodeText","Data":"不能直接创建索引，需要指定前缀长度。"}]}]},{"ID":"20240201212972-7nk2kt9","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201212972-7nk2kt9","updated":"20240201212972"},"Children":[{"ID":"20240201212973-y81n2f3","Type":"NodeParagraph","Properties":{"id":"20240201212973-y81n2f3","updated":"20240201212973"},"Children":[{"Type":"NodeText","Data":"可能会消耗大量的网络和 IO 带宽。"}]}]},{"ID":"20240201212974-icefmls","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201212974-icefmls","updated":"20240201212974"},"Children":[{"ID":"20240201212975-gffhwde","Type":"NodeParagraph","Properties":{"id":"20240201212975-gffhwde","updated":"20240201212975"},"Children":[{"Type":"NodeText","Data":"可能导致表上的 DML 操作变慢。"}]}]},{"ID":"20240201212976-nr863gi","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201212976-nr863gi","updated":"20240201212976"},"Children":[{"ID":"20240201212977-0od6ykc","Type":"NodeParagraph","Properties":{"id":"20240201212977-0od6ykc","updated":"20240201212977"},"Children":[{"Type":"NodeText","Data":"……"}]}]}]},{"ID":"20240201212978-sfhqu6k","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240201212978-sfhqu6k","updated":"20240201212978"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"DATETIME 和 TIMESTAMP 的区别是什么？"}]},{"ID":"20240201212979-uq3j6dj","Type":"NodeParagraph","Properties":{"id":"20240201212979-uq3j6dj","updated":"20240201212979"},"Children":[{"Type":"NodeText","Data":"DATETIME 类型没有时区信息，TIMESTAMP 和时区有关。"}]},{"ID":"20240201212980-nnafx4l","Type":"NodeParagraph","Properties":{"id":"20240201212980-nnafx4l","updated":"20240201212980"},"Children":[{"Type":"NodeText","Data":"TIMESTAMP 只需要使用 4 个字节的存储空间，但是 DATETIME 需要耗费 8 个字节的存储空间。但是，这样同样造成了一个问题，Timestamp 表示的时间范围更小。"}]},{"ID":"20240201212981-99w7bam","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201212981-99w7bam","updated":"20240201212981"},"Children":[{"ID":"20240201212982-o3eghbd","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201212982-o3eghbd","updated":"20240201212982"},"Children":[{"ID":"20240201212983-650fv6f","Type":"NodeParagraph","Properties":{"id":"20240201212983-650fv6f","updated":"20240201212983"},"Children":[{"Type":"NodeText","Data":"DATETIME：1000-01-01 00:00:00 ~ 9999-12-31 23:59:59"}]}]},{"ID":"20240201212984-s4hwjgj","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201212984-s4hwjgj","updated":"20240201212984"},"Children":[{"ID":"20240201212985-vkz6g46","Type":"NodeParagraph","Properties":{"id":"20240201212985-vkz6g46","updated":"20240201212985"},"Children":[{"Type":"NodeText","Data":"Timestamp：1970-01-01 00:00:01 ~ 2037-12-31 23:59:59"}]}]}]},{"ID":"20240201212986-11ipkti","Type":"NodeParagraph","Properties":{"id":"20240201212986-11ipkti","updated":"20240201212986"},"Children":[{"Type":"NodeText","Data":"关于两者的详细对比，请参考我写的"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"./some-thoughts-on-database-storage-time.md","TextMarkTextContent":"MySQL 时间类型数据存储建议"},{"Type":"NodeText","Data":"。"}]},{"ID":"20240201212987-yw9ceoq","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240201212987-yw9ceoq","updated":"20240201212987"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"NULL 和 '' 的区别是什么？"}]},{"ID":"20240201212988-9od55ci","Type":"NodeParagraph","Properties":{"id":"20240201212988-9od55ci","updated":"20240201212988"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"NULL"},{"Type":"NodeText","Data":" 跟 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"''"},{"Type":"NodeText","Data":"(空字符串)是两个完全不一样的值，区别如下："}]},{"ID":"20240201212989-ahc4o1h","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201212989-ahc4o1h","updated":"20240201212989"},"Children":[{"ID":"20240201212990-xr0h3x5","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201212990-xr0h3x5","updated":"20240201212990"},"Children":[{"ID":"20240201212991-xb9d8mp","Type":"NodeParagraph","Properties":{"id":"20240201212991-xb9d8mp","updated":"20240201212991"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"NULL"},{"Type":"NodeText","Data":" 代表一个不确定的值,就算是两个 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"NULL"},{"Type":"NodeText","Data":",它俩也不一定相等。例如，"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"SELECT NULL=NULL"},{"Type":"NodeText","Data":"的结果为 false，但是在我们使用"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"DISTINCT"},{"Type":"NodeText","Data":","},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"GROUP BY"},{"Type":"NodeText","Data":","},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"ORDER BY"},{"Type":"NodeText","Data":"时,"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"NULL"},{"Type":"NodeText","Data":"又被认为是相等的。"}]}]},{"ID":"20240201212992-jn87lwt","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201212992-jn87lwt","updated":"20240201212992"},"Children":[{"ID":"20240201212993-vonxwco","Type":"NodeParagraph","Properties":{"id":"20240201212993-vonxwco","updated":"20240201212993"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"''"},{"Type":"NodeText","Data":"的长度是 0，是不占用空间的，而"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"NULL"},{"Type":"NodeText","Data":" 是需要占用空间的。"}]}]},{"ID":"20240201212994-vor7931","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201212994-vor7931","updated":"20240201212994"},"Children":[{"ID":"20240201212995-bbmfcvv","Type":"NodeParagraph","Properties":{"id":"20240201212995-bbmfcvv","updated":"20240201212995"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"NULL"},{"Type":"NodeText","Data":" 会影响聚合函数的结果。例如，"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"SUM"},{"Type":"NodeText","Data":"、"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"AVG"},{"Type":"NodeText","Data":"、"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"MIN"},{"Type":"NodeText","Data":"、"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"MAX"},{"Type":"NodeText","Data":" 等聚合函数会忽略 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"NULL"},{"Type":"NodeText","Data":" 值。 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"COUNT"},{"Type":"NodeText","Data":" 的处理方式取决于参数的类型。如果参数是 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"*"},{"Type":"NodeText","Data":"("},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"COUNT(*)"},{"Type":"NodeText","Data":")，则会统计所有的记录数，包括 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"NULL"},{"Type":"NodeText","Data":" 值；如果参数是某个字段名("},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"COUNT(列名)"},{"Type":"NodeText","Data":")，则会忽略 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"NULL"},{"Type":"NodeText","Data":" 值，只统计非空值的个数。"}]}]},{"ID":"20240201212996-40x5hx6","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201212996-40x5hx6","updated":"20240201212996"},"Children":[{"ID":"20240201212997-2sbwour","Type":"NodeParagraph","Properties":{"id":"20240201212997-2sbwour","updated":"20240201212997"},"Children":[{"Type":"NodeText","Data":"查询 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"NULL"},{"Type":"NodeText","Data":" 值时，必须使用 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"IS NULL"},{"Type":"NodeText","Data":" 或 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"IS NOT NULLl"},{"Type":"NodeText","Data":" 来判断，而不能使用 =、!=、 \u003c、\u003e 之类的比较运算符。而"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"''"},{"Type":"NodeText","Data":"是可以使用这些比较运算符的。"}]}]}]},{"ID":"20240201212998-gn3fnrd","Type":"NodeParagraph","Properties":{"id":"20240201212998-gn3fnrd","updated":"20240201212998"},"Children":[{"Type":"NodeText","Data":"看了上面的介绍之后，相信你对另外一个高频面试题：“为什么 MySQL 不建议使用 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"NULL"},{"Type":"NodeText","Data":" 作为列默认值？”也有了答案。"}]},{"ID":"20240201212999-nknhb1d","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240201212999-nknhb1d","updated":"20240201212999"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"Boolean 类型如何表示？"}]},{"ID":"20240201213000-9fwmwjp","Type":"NodeParagraph","Properties":{"id":"20240201213000-9fwmwjp","updated":"20240201213000"},"Children":[{"Type":"NodeText","Data":"MySQL 中没有专门的布尔类型，而是用 TINYINT(1) 类型来表示布尔值。TINYINT(1) 类型可以存储 0 或 1，分别对应 false 或 true。"}]},{"ID":"20240201213001-hs9o75r","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240201213001-hs9o75r","updated":"20240201213001"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"MySQL 基础架构"}]},{"ID":"20240201213002-1vhoqyi","Type":"NodeBlockquote","Properties":{"id":"20240201213002-1vhoqyi","updated":"20240201213002"},"Children":[{"Type":"NodeBlockquoteMarker","Data":"\u003e ","Properties":{"id":""}},{"ID":"20240201213003-3eh84z4","Type":"NodeParagraph","Properties":{"id":"20240201213003-3eh84z4","updated":"20240201213003"},"Children":[{"Type":"NodeText","Data":"建议配合 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"./how-sql-executed-in-mysql.md","TextMarkTextContent":"SQL 语句在 MySQL 中的执行过程"},{"Type":"NodeText","Data":" 这篇文章来理解 MySQL 基础架构。另外，“一个 SQL 语句在 MySQL 中的执行流程”也是面试中比较常问的一个问题。"}]}]},{"ID":"20240201213004-ifzshj9","Type":"NodeParagraph","Properties":{"id":"20240201213004-ifzshj9","updated":"20240201213004"},"Children":[{"Type":"NodeText","Data":"下图是 MySQL 的一个简要架构图，从下图你可以很清晰的看到客户端的一条 SQL 语句在 MySQL 内部是如何执行的。"}]},{"ID":"20240201213005-qvuzqlj","Type":"NodeParagraph","Properties":{"id":"20240201213005-qvuzqlj","updated":"20240201213005"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"https://oss.javaguide.cn/javaguide/13526879-3037b144ed09eb88.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201213006-u0bcepu","Type":"NodeParagraph","Properties":{"id":"20240201213006-u0bcepu","updated":"20240201213006"},"Children":[{"Type":"NodeText","Data":"从上图可以看出， MySQL 主要由下面几部分构成："}]},{"ID":"20240201213007-xo6u3gg","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213007-xo6u3gg","updated":"20240201213007"},"Children":[{"ID":"20240201213008-u14e5g5","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213008-u14e5g5","updated":"20240201213008"},"Children":[{"ID":"20240201213009-cwucebx","Type":"NodeParagraph","Properties":{"id":"20240201213009-cwucebx","updated":"20240201213009"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"连接器："},{"Type":"NodeText","Data":" 身份认证和权限相关(登录 MySQL 的时候)。"}]}]},{"ID":"20240201213010-rtrixpn","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213010-rtrixpn","updated":"20240201213010"},"Children":[{"ID":"20240201213011-w1o6gz6","Type":"NodeParagraph","Properties":{"id":"20240201213011-w1o6gz6","updated":"20240201213011"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"查询缓存："},{"Type":"NodeText","Data":" 执行查询语句的时候，会先查询缓存（MySQL 8.0 版本后移除，因为这个功能不太实用）。"}]}]},{"ID":"20240201213012-vcvyc71","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213012-vcvyc71","updated":"20240201213012"},"Children":[{"ID":"20240201213013-qhky59n","Type":"NodeParagraph","Properties":{"id":"20240201213013-qhky59n","updated":"20240201213013"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"分析器："},{"Type":"NodeText","Data":" 没有命中缓存的话，SQL 语句就会经过分析器，分析器说白了就是要先看你的 SQL 语句要干嘛，再检查你的 SQL 语句语法是否正确。"}]}]},{"ID":"20240201213014-5jll0td","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213014-5jll0td","updated":"20240201213014"},"Children":[{"ID":"20240201213015-ffn98e1","Type":"NodeParagraph","Properties":{"id":"20240201213015-ffn98e1","updated":"20240201213015"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"优化器："},{"Type":"NodeText","Data":" 按照 MySQL 认为最优的方案去执行。"}]}]},{"ID":"20240201213016-juklib7","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213016-juklib7","updated":"20240201213016"},"Children":[{"ID":"20240201213017-ze07has","Type":"NodeParagraph","Properties":{"id":"20240201213017-ze07has","updated":"20240201213017"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"执行器："},{"Type":"NodeText","Data":" 执行语句，然后从存储引擎返回数据。 执行语句之前会先判断是否有权限，如果没有权限的话，就会报错。"}]}]},{"ID":"20240201213018-wryvrqe","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213018-wryvrqe","updated":"20240201213018"},"Children":[{"ID":"20240201213019-qp64cnb","Type":"NodeParagraph","Properties":{"id":"20240201213019-qp64cnb","updated":"20240201213019"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"插件式存储引擎"},{"Type":"NodeText","Data":"：主要负责数据的存储和读取，采用的是插件式架构，支持 InnoDB、MyISAM、Memory 等多种存储引擎。"}]}]}]},{"ID":"20240201213020-ymxa3hi","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240201213020-ymxa3hi","updated":"20240201213020"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"MySQL 存储引擎"}]},{"ID":"20240201213021-bozo3z9","Type":"NodeParagraph","Properties":{"id":"20240201213021-bozo3z9","updated":"20240201213021"},"Children":[{"Type":"NodeText","Data":"MySQL 核心在于存储引擎，想要深入学习 MySQL，必定要深入研究 MySQL 存储引擎。"}]},{"ID":"20240201213022-c8mj283","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240201213022-c8mj283","updated":"20240201213022"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"MySQL 支持哪些存储引擎？默认使用哪个？"}]},{"ID":"20240201213023-7nhe5rt","Type":"NodeParagraph","Properties":{"id":"20240201213023-7nhe5rt","updated":"20240201213023"},"Children":[{"Type":"NodeText","Data":"MySQL 支持多种存储引擎，你可以通过 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"SHOW ENGINES"},{"Type":"NodeText","Data":" 命令来查看 MySQL 支持的所有存储引擎。"}]},{"ID":"20240201213024-51b77cj","Type":"NodeParagraph","Properties":{"id":"20240201213024-51b77cj","updated":"20240201213024"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"查看 MySQL 提供的所有存储引擎","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"https://oss.javaguide.cn/github/javaguide/mysql/image-20220510105408703.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201213025-axlt6hv","Type":"NodeParagraph","Properties":{"id":"20240201213025-axlt6hv","updated":"20240201213025"},"Children":[{"Type":"NodeText","Data":"从上图我们可以查看出， MySQL 当前默认的存储引擎是 InnoDB。并且，所有的存储引擎中只有 InnoDB 是事务性存储引擎，也就是说只有 InnoDB 支持事务。"}]},{"ID":"20240201213026-lebjaiv","Type":"NodeParagraph","Properties":{"id":"20240201213026-lebjaiv","updated":"20240201213026"},"Children":[{"Type":"NodeText","Data":"我这里使用的 MySQL 版本是 8.x，不同的 MySQL 版本之间可能会有差别。"}]},{"ID":"20240201213027-zwjh98g","Type":"NodeParagraph","Properties":{"id":"20240201213027-zwjh98g","updated":"20240201213027"},"Children":[{"Type":"NodeText","Data":"MySQL 5.5.5 之前，MyISAM 是 MySQL 的默认存储引擎。5.5.5 版本之后，InnoDB 是 MySQL 的默认存储引擎。"}]},{"ID":"20240201213028-2o8zlxt","Type":"NodeParagraph","Properties":{"id":"20240201213028-2o8zlxt","updated":"20240201213028"},"Children":[{"Type":"NodeText","Data":"你可以通过 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"SELECT VERSION()"},{"Type":"NodeText","Data":" 命令查看你的 MySQL 版本。"}]},{"ID":"20240201213029-aspa229","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"YmFzaA==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20240201213029-aspa229","updated":"20240201213029"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"YmFzaA==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"mysql\u003e SELECT VERSION();\n+-----------+\n| VERSION() |\n+-----------+\n| 8.0.27    |\n+-----------+\n1 row in set (0.00 sec)\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20240201213030-w2rpebz","Type":"NodeParagraph","Properties":{"id":"20240201213030-w2rpebz","updated":"20240201213030"},"Children":[{"Type":"NodeText","Data":"你也可以通过 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"SHOW VARIABLES LIKE '%storage_engine%'"},{"Type":"NodeText","Data":" 命令直接查看 MySQL 当前默认的存储引擎。"}]},{"ID":"20240201213031-i1pyy8m","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"YmFzaA==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20240201213031-i1pyy8m","updated":"20240201213031"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"YmFzaA==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"mysql\u003e SHOW VARIABLES  LIKE '%storage_engine%';\n+---------------------------------+-----------+\n| Variable_name                   | Value     |\n+---------------------------------+-----------+\n| default_storage_engine          | InnoDB    |\n| default_tmp_storage_engine      | InnoDB    |\n| disabled_storage_engines        |           |\n| internal_tmp_mem_storage_engine | TempTable |\n+---------------------------------+-----------+\n4 rows in set (0.00 sec)\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20240201213032-yxib3s2","Type":"NodeParagraph","Properties":{"id":"20240201213032-yxib3s2","updated":"20240201213032"},"Children":[{"Type":"NodeText","Data":"如果你想要深入了解每个存储引擎以及它们之间的区别，推荐你去阅读以下 MySQL 官方文档对应的介绍(面试不会问这么细，了解即可)："}]},{"ID":"20240201213033-aultyw8","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213033-aultyw8","updated":"20240201213033"},"Children":[{"ID":"20240201213034-1c19lak","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213034-1c19lak","updated":"20240201213034"},"Children":[{"ID":"20240201213035-0ma9wo6","Type":"NodeParagraph","Properties":{"id":"20240201213035-0ma9wo6","updated":"20240201213035"},"Children":[{"Type":"NodeText","Data":"InnoDB 存储引擎详细介绍："},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://dev.mysql.com/doc/refman/8.0/en/innodb-storage-engine.html","TextMarkTextContent":"https://dev.mysql.com/doc/refman/8.0/en/innodb-storage-engine.html"},{"Type":"NodeText","Data":" 。"}]}]},{"ID":"20240201213036-psz17k5","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213036-psz17k5","updated":"20240201213036"},"Children":[{"ID":"20240201213037-rua39ru","Type":"NodeParagraph","Properties":{"id":"20240201213037-rua39ru","updated":"20240201213037"},"Children":[{"Type":"NodeText","Data":"其他存储引擎详细介绍："},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://dev.mysql.com/doc/refman/8.0/en/storage-engines.html","TextMarkTextContent":"https://dev.mysql.com/doc/refman/8.0/en/storage-engines.html"},{"Type":"NodeText","Data":" 。"}]}]}]},{"ID":"20240201213038-kpx76gx","Type":"NodeParagraph","Properties":{"id":"20240201213038-kpx76gx","updated":"20240201213038"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"https://oss.javaguide.cn/github/javaguide/mysql/image-20220510155143458.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201213039-qiu6wiw","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240201213039-qiu6wiw","updated":"20240201213039"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"MySQL 存储引擎架构了解吗？"}]},{"ID":"20240201213040-uj4vdzk","Type":"NodeParagraph","Properties":{"id":"20240201213040-uj4vdzk","updated":"20240201213040"},"Children":[{"Type":"NodeText","Data":"MySQL 存储引擎采用的是 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"插件式架构"},{"Type":"NodeText","Data":" ，支持多种存储引擎，我们甚至可以为不同的数据库表设置不同的存储引擎以适应不同场景的需要。"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"存储引擎是基于表的，而不是数据库。"}]},{"ID":"20240201213041-17z5qur","Type":"NodeParagraph","Properties":{"id":"20240201213041-17z5qur","updated":"20240201213041"},"Children":[{"Type":"NodeText","Data":"并且，你还可以根据 MySQL 定义的存储引擎实现标准接口来编写一个属于自己的存储引擎。这些非官方提供的存储引擎可以称为第三方存储引擎，区别于官方存储引擎。像目前最常用的 InnoDB 其实刚开始就是一个第三方存储引擎，后面由于过于优秀，其被 Oracle 直接收购了。"}]},{"ID":"20240201213042-50r5svd","Type":"NodeParagraph","Properties":{"id":"20240201213042-50r5svd","updated":"20240201213042"},"Children":[{"Type":"NodeText","Data":"MySQL 官方文档也有介绍到如何编写一个自定义存储引擎，地址："},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://dev.mysql.com/doc/internals/en/custom-engine.html","TextMarkTextContent":"https://dev.mysql.com/doc/internals/en/custom-engine.html"},{"Type":"NodeText","Data":" 。"}]},{"ID":"20240201213043-prf1x5z","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240201213043-prf1x5z","updated":"20240201213043"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"MyISAM 和 InnoDB 有什么区别？"}]},{"ID":"20240201213044-b82sveh","Type":"NodeParagraph","Properties":{"id":"20240201213044-b82sveh","updated":"20240201213044"},"Children":[{"Type":"NodeText","Data":"MySQL 5.5 之前，MyISAM 引擎是 MySQL 的默认存储引擎，可谓是风光一时。"}]},{"ID":"20240201213045-aph45l9","Type":"NodeParagraph","Properties":{"id":"20240201213045-aph45l9","updated":"20240201213045"},"Children":[{"Type":"NodeText","Data":"虽然，MyISAM 的性能还行，各种特性也还不错（比如全文索引、压缩、空间函数等）。但是，MyISAM 不支持事务和行级锁，而且最大的缺陷就是崩溃后无法安全恢复。"}]},{"ID":"20240201213046-winn676","Type":"NodeParagraph","Properties":{"id":"20240201213046-winn676","updated":"20240201213046"},"Children":[{"Type":"NodeText","Data":"MySQL 5.5 版本之后，InnoDB 是 MySQL 的默认存储引擎。"}]},{"ID":"20240201213047-r4fuokd","Type":"NodeParagraph","Properties":{"id":"20240201213047-r4fuokd","updated":"20240201213047"},"Children":[{"Type":"NodeText","Data":"言归正传！咱们下面还是来简单对比一下两者："}]},{"ID":"20240201213048-kiwje1t","Type":"NodeParagraph","Properties":{"id":"20240201213048-kiwje1t","updated":"20240201213048"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"1.是否支持行级锁"}]},{"ID":"20240201213049-eu1689m","Type":"NodeParagraph","Properties":{"id":"20240201213049-eu1689m","updated":"20240201213049"},"Children":[{"Type":"NodeText","Data":"MyISAM 只有表级锁(table-level locking)，而 InnoDB 支持行级锁(row-level locking)和表级锁,默认为行级锁。"}]},{"ID":"20240201213050-13lg8pn","Type":"NodeParagraph","Properties":{"id":"20240201213050-13lg8pn","updated":"20240201213050"},"Children":[{"Type":"NodeText","Data":"也就说，MyISAM 一锁就是锁住了整张表，这在并发写的情况下是多么滴憨憨啊！这也是为什么 InnoDB 在并发写的时候，性能更牛皮了！"}]},{"ID":"20240201213051-onkxu6a","Type":"NodeParagraph","Properties":{"id":"20240201213051-onkxu6a","updated":"20240201213051"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"2.是否支持事务"}]},{"ID":"20240201213052-m7ckdpa","Type":"NodeParagraph","Properties":{"id":"20240201213052-m7ckdpa","updated":"20240201213052"},"Children":[{"Type":"NodeText","Data":"MyISAM 不提供事务支持。"}]},{"ID":"20240201213053-u9puxc7","Type":"NodeParagraph","Properties":{"id":"20240201213053-u9puxc7","updated":"20240201213053"},"Children":[{"Type":"NodeText","Data":"InnoDB 提供事务支持，实现了 SQL 标准定义了四个隔离级别，具有提交(commit)和回滚(rollback)事务的能力。并且，InnoDB 默认使用的 REPEATABLE-READ（可重读）隔离级别是可以解决幻读问题发生的（基于 MVCC 和 Next-Key Lock）。"}]},{"ID":"20240201213054-jgzneeu","Type":"NodeParagraph","Properties":{"id":"20240201213054-jgzneeu","updated":"20240201213054"},"Children":[{"Type":"NodeText","Data":"关于 MySQL 事务的详细介绍，可以看看我写的这篇文章："},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"./transaction-isolation-level.md","TextMarkTextContent":"MySQL 事务隔离级别详解"},{"Type":"NodeText","Data":"。"}]},{"ID":"20240201213055-sxhsj90","Type":"NodeParagraph","Properties":{"id":"20240201213055-sxhsj90","updated":"20240201213055"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"3.是否支持外键"}]},{"ID":"20240201213056-sfn04nv","Type":"NodeParagraph","Properties":{"id":"20240201213056-sfn04nv","updated":"20240201213056"},"Children":[{"Type":"NodeText","Data":"MyISAM 不支持，而 InnoDB 支持。"}]},{"ID":"20240201213057-8bukfhr","Type":"NodeParagraph","Properties":{"id":"20240201213057-8bukfhr","updated":"20240201213057"},"Children":[{"Type":"NodeText","Data":"外键对于维护数据一致性非常有帮助，但是对性能有一定的损耗。因此，通常情况下，我们是不建议在实际生产项目中使用外键的，在业务代码中进行约束即可！"}]},{"ID":"20240201213058-5l4um1p","Type":"NodeParagraph","Properties":{"id":"20240201213058-5l4um1p","updated":"20240201213058"},"Children":[{"Type":"NodeText","Data":"阿里的《Java 开发手册》也是明确规定禁止使用外键的。"}]},{"ID":"20240201213059-pv793lh","Type":"NodeParagraph","Properties":{"id":"20240201213059-pv793lh","updated":"20240201213059"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"https://oss.javaguide.cn/github/javaguide/mysql/image-20220510090309427.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201213060-jistx8r","Type":"NodeParagraph","Properties":{"id":"20240201213060-jistx8r","updated":"20240201213060"},"Children":[{"Type":"NodeText","Data":"不过，在代码中进行约束的话，对程序员的能力要求更高，具体是否要采用外键还是要根据你的项目实际情况而定。"}]},{"ID":"20240201213061-geyv0f8","Type":"NodeParagraph","Properties":{"id":"20240201213061-geyv0f8","updated":"20240201213061"},"Children":[{"Type":"NodeText","Data":"总结：一般我们也是不建议在数据库层面使用外键的，应用层面可以解决。不过，这样会对数据的一致性造成威胁。具体要不要使用外键还是要根据你的项目来决定。"}]},{"ID":"20240201213062-tb4ypkr","Type":"NodeParagraph","Properties":{"id":"20240201213062-tb4ypkr","updated":"20240201213062"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"4.是否支持数据库异常崩溃后的安全恢复"}]},{"ID":"20240201213063-4dldgjd","Type":"NodeParagraph","Properties":{"id":"20240201213063-4dldgjd","updated":"20240201213063"},"Children":[{"Type":"NodeText","Data":"MyISAM 不支持，而 InnoDB 支持。"}]},{"ID":"20240201213064-u9p39z0","Type":"NodeParagraph","Properties":{"id":"20240201213064-u9p39z0","updated":"20240201213064"},"Children":[{"Type":"NodeText","Data":"使用 InnoDB 的数据库在异常崩溃后，数据库重新启动的时候会保证数据库恢复到崩溃前的状态。这个恢复的过程依赖于 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"redo log"},{"Type":"NodeText","Data":" 。"}]},{"ID":"20240201213065-9abg1js","Type":"NodeParagraph","Properties":{"id":"20240201213065-9abg1js","updated":"20240201213065"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"5.是否支持 MVCC"}]},{"ID":"20240201213066-96w0z19","Type":"NodeParagraph","Properties":{"id":"20240201213066-96w0z19","updated":"20240201213066"},"Children":[{"Type":"NodeText","Data":"MyISAM 不支持，而 InnoDB 支持。"}]},{"ID":"20240201213067-3abtxwt","Type":"NodeParagraph","Properties":{"id":"20240201213067-3abtxwt","updated":"20240201213067"},"Children":[{"Type":"NodeText","Data":"讲真，这个对比有点废话，毕竟 MyISAM 连行级锁都不支持。MVCC 可以看作是行级锁的一个升级，可以有效减少加锁操作，提高性能。"}]},{"ID":"20240201213068-cq6buw2","Type":"NodeParagraph","Properties":{"id":"20240201213068-cq6buw2","updated":"20240201213068"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"6.索引实现不一样。"}]},{"ID":"20240201213069-19f7h7b","Type":"NodeParagraph","Properties":{"id":"20240201213069-19f7h7b","updated":"20240201213069"},"Children":[{"Type":"NodeText","Data":"虽然 MyISAM 引擎和 InnoDB 引擎都是使用 B+Tree 作为索引结构，但是两者的实现方式不太一样。"}]},{"ID":"20240201213070-97ru4rg","Type":"NodeParagraph","Properties":{"id":"20240201213070-97ru4rg","updated":"20240201213070"},"Children":[{"Type":"NodeText","Data":"InnoDB 引擎中，其数据文件本身就是索引文件。相比 MyISAM，索引文件和数据文件是分离的，其表数据文件本身就是按 B+Tree 组织的一个索引结构，树的叶节点 data 域保存了完整的数据记录。"}]},{"ID":"20240201213071-50rxsed","Type":"NodeParagraph","Properties":{"id":"20240201213071-50rxsed","updated":"20240201213071"},"Children":[{"Type":"NodeText","Data":"详细区别，推荐你看看我写的这篇文章："},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"./mysql-index.md","TextMarkTextContent":"MySQL 索引详解"},{"Type":"NodeText","Data":"。"}]},{"ID":"20240201213072-zq7ob30","Type":"NodeParagraph","Properties":{"id":"20240201213072-zq7ob30","updated":"20240201213072"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"7.性能有差别。"}]},{"ID":"20240201213073-prb8uzm","Type":"NodeParagraph","Properties":{"id":"20240201213073-prb8uzm","updated":"20240201213073"},"Children":[{"Type":"NodeText","Data":"InnoDB 的性能比 MyISAM 更强大，不管是在读写混合模式下还是只读模式下，随着 CPU 核数的增加，InnoDB 的读写能力呈线性增长。MyISAM 因为读写不能并发，它的处理能力跟核数没关系。"}]},{"ID":"20240201213074-04vodo1","Type":"NodeParagraph","Properties":{"id":"20240201213074-04vodo1","updated":"20240201213074"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"InnoDB 和 MyISAM 性能对比","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"https://oss.javaguide.cn/github/javaguide/mysql/innodb-myisam-performance-comparison.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201213075-s3ukw1s","Type":"NodeParagraph","Properties":{"id":"20240201213075-s3ukw1s","updated":"20240201213075"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"总结"},{"Type":"NodeText","Data":"："}]},{"ID":"20240201213076-a45agus","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213076-a45agus","updated":"20240201213076"},"Children":[{"ID":"20240201213077-bx7ui3f","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213077-bx7ui3f","updated":"20240201213077"},"Children":[{"ID":"20240201213078-519ysrq","Type":"NodeParagraph","Properties":{"id":"20240201213078-519ysrq","updated":"20240201213078"},"Children":[{"Type":"NodeText","Data":"InnoDB 支持行级别的锁粒度，MyISAM 不支持，只支持表级别的锁粒度。"}]}]},{"ID":"20240201213079-8wviwlz","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213079-8wviwlz","updated":"20240201213079"},"Children":[{"ID":"20240201213080-fvmnkg5","Type":"NodeParagraph","Properties":{"id":"20240201213080-fvmnkg5","updated":"20240201213080"},"Children":[{"Type":"NodeText","Data":"MyISAM 不提供事务支持。InnoDB 提供事务支持，实现了 SQL 标准定义了四个隔离级别。"}]}]},{"ID":"20240201213081-ndqezdu","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213081-ndqezdu","updated":"20240201213081"},"Children":[{"ID":"20240201213082-iwxnzfp","Type":"NodeParagraph","Properties":{"id":"20240201213082-iwxnzfp","updated":"20240201213082"},"Children":[{"Type":"NodeText","Data":"MyISAM 不支持外键，而 InnoDB 支持。"}]}]},{"ID":"20240201213083-fjpv76f","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213083-fjpv76f","updated":"20240201213083"},"Children":[{"ID":"20240201213084-bbc4mrn","Type":"NodeParagraph","Properties":{"id":"20240201213084-bbc4mrn","updated":"20240201213084"},"Children":[{"Type":"NodeText","Data":"MyISAM 不支持 MVCC，而 InnoDB 支持。"}]}]},{"ID":"20240201213085-qo05a1g","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213085-qo05a1g","updated":"20240201213085"},"Children":[{"ID":"20240201213086-lcxl8jj","Type":"NodeParagraph","Properties":{"id":"20240201213086-lcxl8jj","updated":"20240201213086"},"Children":[{"Type":"NodeText","Data":"虽然 MyISAM 引擎和 InnoDB 引擎都是使用 B+Tree 作为索引结构，但是两者的实现方式不太一样。"}]}]},{"ID":"20240201213087-mvj9u9b","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213087-mvj9u9b","updated":"20240201213087"},"Children":[{"ID":"20240201213088-e9e1qgo","Type":"NodeParagraph","Properties":{"id":"20240201213088-e9e1qgo","updated":"20240201213088"},"Children":[{"Type":"NodeText","Data":"MyISAM 不支持数据库异常崩溃后的安全恢复，而 InnoDB 支持。"}]}]},{"ID":"20240201213089-8hhkgzs","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213089-8hhkgzs","updated":"20240201213089"},"Children":[{"ID":"20240201213090-v2e3pev","Type":"NodeParagraph","Properties":{"id":"20240201213090-v2e3pev","updated":"20240201213090"},"Children":[{"Type":"NodeText","Data":"InnoDB 的性能比 MyISAM 更强大。"}]}]}]},{"ID":"20240201213091-s6ktt6b","Type":"NodeParagraph","Properties":{"id":"20240201213091-s6ktt6b","updated":"20240201213091"},"Children":[{"Type":"NodeText","Data":"最后，再分享一张图片给你，这张图片详细对比了常见的几种 MySQL 存储引擎。"}]},{"ID":"20240201213092-vf566xx","Type":"NodeParagraph","Properties":{"id":"20240201213092-vf566xx","updated":"20240201213092"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"常见的几种 MySQL 存储引擎对比","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"https://oss.javaguide.cn/github/javaguide/mysql/comparison-of-common-mysql-storage-engines.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201213093-0j3izhp","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240201213093-0j3izhp","updated":"20240201213093"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"MyISAM 和 InnoDB 如何选择？"}]},{"ID":"20240201213094-pyrz5t8","Type":"NodeParagraph","Properties":{"id":"20240201213094-pyrz5t8","updated":"20240201213094"},"Children":[{"Type":"NodeText","Data":"大多数时候我们使用的都是 InnoDB 存储引擎，在某些读密集的情况下，使用 MyISAM 也是合适的。不过，前提是你的项目不介意 MyISAM 不支持事务、崩溃恢复等缺点（可是~我们一般都会介意啊！）。"}]},{"ID":"20240201213095-2ki60qi","Type":"NodeParagraph","Properties":{"id":"20240201213095-2ki60qi","updated":"20240201213095"},"Children":[{"Type":"NodeText","Data":"《MySQL 高性能》上面有一句话这样写到:"}]},{"ID":"20240201213096-8ef2jfb","Type":"NodeBlockquote","Properties":{"id":"20240201213096-8ef2jfb","updated":"20240201213096"},"Children":[{"Type":"NodeBlockquoteMarker","Data":"\u003e ","Properties":{"id":""}},{"ID":"20240201213097-mts9zox","Type":"NodeParagraph","Properties":{"id":"20240201213097-mts9zox","updated":"20240201213097"},"Children":[{"Type":"NodeText","Data":"不要轻易相信“MyISAM 比 InnoDB 快”之类的经验之谈，这个结论往往不是绝对的。在很多我们已知场景中，InnoDB 的速度都可以让 MyISAM 望尘莫及，尤其是用到了聚簇索引，或者需要访问的数据都可以放入内存的应用。"}]}]},{"ID":"20240201213098-4sez06z","Type":"NodeParagraph","Properties":{"id":"20240201213098-4sez06z","updated":"20240201213098"},"Children":[{"Type":"NodeText","Data":"一般情况下我们选择 InnoDB 都是没有问题的，但是某些情况下你并不在乎可扩展能力和并发能力，也不需要事务支持，也不在乎崩溃后的安全恢复问题的话，选择 MyISAM 也是一个不错的选择。但是一般情况下，我们都是需要考虑到这些问题的。"}]},{"ID":"20240201213099-4ma74oe","Type":"NodeParagraph","Properties":{"id":"20240201213099-4ma74oe","updated":"20240201213099"},"Children":[{"Type":"NodeText","Data":"因此，对于咱们日常开发的业务系统来说，你几乎找不到什么理由再使用 MyISAM 作为自己的 MySQL 数据库的存储引擎。"}]},{"ID":"20240201213100-62uauqx","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240201213100-62uauqx","updated":"20240201213100"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"MySQL 索引"}]},{"ID":"20240201213101-k2uh9pd","Type":"NodeParagraph","Properties":{"id":"20240201213101-k2uh9pd","updated":"20240201213101"},"Children":[{"Type":"NodeText","Data":"MySQL 索引相关的问题比较多，对于面试和工作都比较重要，于是，我单独抽了一篇文章专门来总结 MySQL 索引相关的知识点和问题："},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"./mysql-index.md","TextMarkTextContent":"MySQL 索引详解"},{"Type":"NodeText","Data":" 。"}]},{"ID":"20240201213102-xcjiosd","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240201213102-xcjiosd","updated":"20240201213102"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"MySQL 查询缓存"}]},{"ID":"20240201213103-k1ylmpk","Type":"NodeParagraph","Properties":{"id":"20240201213103-k1ylmpk","updated":"20240201213103"},"Children":[{"Type":"NodeText","Data":"执行查询语句的时候，会先查询缓存。不过，MySQL 8.0 版本后移除，因为这个功能不太实用"}]},{"ID":"20240201213104-08igjlp","Type":"NodeParagraph","Properties":{"id":"20240201213104-08igjlp","updated":"20240201213104"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"my.cnf"},{"Type":"NodeText","Data":" 加入以下配置，重启 MySQL 开启查询缓存"}]},{"ID":"20240201213105-d7tg3x4","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"cHJvcGVydGllcw==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20240201213105-d7tg3x4","updated":"20240201213105"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"cHJvcGVydGllcw==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"query_cache_type=1\nquery_cache_size=600000\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20240201213106-f4dny1l","Type":"NodeParagraph","Properties":{"id":"20240201213106-f4dny1l","updated":"20240201213106"},"Children":[{"Type":"NodeText","Data":"MySQL 执行以下命令也可以开启查询缓存"}]},{"ID":"20240201213107-06zy3yx","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"cHJvcGVydGllcw==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20240201213107-06zy3yx","updated":"20240201213107"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"cHJvcGVydGllcw==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"set global  query_cache_type=1;\nset global  query_cache_size=600000;\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20240201213108-rn9wxp9","Type":"NodeParagraph","Properties":{"id":"20240201213108-rn9wxp9","updated":"20240201213108"},"Children":[{"Type":"NodeText","Data":"如上，"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"开启查询缓存后在同样的查询条件以及数据情况下，会直接在缓存中返回结果"},{"Type":"NodeText","Data":"。这里的查询条件包括查询本身、当前要查询的数据库、客户端协议版本号等一些可能影响结果的信息。"}]},{"ID":"20240201213109-lxz9x5a","Type":"NodeParagraph","Properties":{"id":"20240201213109-lxz9x5a","updated":"20240201213109"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"查询缓存不命中的情况："}]},{"ID":"20240201213110-dl3uc94","Type":"NodeList","ListData":{"Typ":1,"Tight":true,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20240201213110-dl3uc94","updated":"20240201213110"},"Children":[{"ID":"20240201213111-hn5r0k3","Type":"NodeListItem","Data":"1","ListData":{"Typ":1,"Tight":true,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20240201213111-hn5r0k3","updated":"20240201213111"},"Children":[{"ID":"20240201213112-0b8ffar","Type":"NodeParagraph","Properties":{"id":"20240201213112-0b8ffar","updated":"20240201213112"},"Children":[{"Type":"NodeText","Data":"任何两个查询在任何字符上的不同都会导致缓存不命中。"}]}]},{"ID":"20240201213113-hewxet3","Type":"NodeListItem","Data":"2","ListData":{"Typ":1,"Tight":true,"Start":2,"Delimiter":46,"Padding":3,"Marker":"Mg==","Num":2},"Properties":{"id":"20240201213113-hewxet3","updated":"20240201213113"},"Children":[{"ID":"20240201213114-iqayitn","Type":"NodeParagraph","Properties":{"id":"20240201213114-iqayitn","updated":"20240201213114"},"Children":[{"Type":"NodeText","Data":"如果查询中包含任何用户自定义函数、存储函数、用户变量、临时表、MySQL 库中的系统表，其查询结果也不会被缓存。"}]}]},{"ID":"20240201213115-8uhy0bq","Type":"NodeListItem","Data":"3","ListData":{"Typ":1,"Tight":true,"Start":3,"Delimiter":46,"Padding":3,"Marker":"Mw==","Num":3},"Properties":{"id":"20240201213115-8uhy0bq","updated":"20240201213115"},"Children":[{"ID":"20240201213116-6xf2hq7","Type":"NodeParagraph","Properties":{"id":"20240201213116-6xf2hq7","updated":"20240201213116"},"Children":[{"Type":"NodeText","Data":"缓存建立之后，MySQL 的查询缓存系统会跟踪查询中涉及的每张表，如果这些表（数据或结构）发生变化，那么和这张表相关的所有缓存数据都将失效。"}]}]}]},{"ID":"20240201213117-nhefify","Type":"NodeParagraph","Properties":{"id":"20240201213117-nhefify","updated":"20240201213117"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"缓存虽然能够提升数据库的查询性能，但是缓存同时也带来了额外的开销，每次查询后都要做一次缓存操作，失效后还要销毁。"},{"Type":"NodeText","Data":" 因此，开启查询缓存要谨慎，尤其对于写密集的应用来说更是如此。如果开启，要注意合理控制缓存空间大小，一般来说其大小设置为几十 MB 比较合适。此外，"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"还可以通过 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong code","TextMarkTextContent":"sql_cache"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":" 和 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong code","TextMarkTextContent":"sql_no_cache"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":" 来控制某个查询语句是否需要缓存："}]},{"ID":"20240201213118-n1kg9p2","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"c3Fs","CodeBlockCloseFence":"YGBg","Properties":{"id":"20240201213118-n1kg9p2","updated":"20240201213118"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"c3Fs","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"SELECT sql_no_cache COUNT(*) FROM usr;\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20240201213119-4cf5dg5","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240201213119-4cf5dg5","updated":"20240201213119"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"MySQL 日志"}]},{"ID":"20240201213120-exv1e4w","Type":"NodeParagraph","Properties":{"id":"20240201213120-exv1e4w","updated":"20240201213120"},"Children":[{"Type":"NodeText","Data":"MySQL 日志常见的面试题有："}]},{"ID":"20240201213121-pb9n96h","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213121-pb9n96h","updated":"20240201213121"},"Children":[{"ID":"20240201213122-fjcak1e","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213122-fjcak1e","updated":"20240201213122"},"Children":[{"ID":"20240201213123-hi9fy9n","Type":"NodeParagraph","Properties":{"id":"20240201213123-hi9fy9n","updated":"20240201213123"},"Children":[{"Type":"NodeText","Data":"MySQL 中常见的日志有哪些？"}]}]},{"ID":"20240201213124-7yz2bcv","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213124-7yz2bcv","updated":"20240201213124"},"Children":[{"ID":"20240201213125-89tswf7","Type":"NodeParagraph","Properties":{"id":"20240201213125-89tswf7","updated":"20240201213125"},"Children":[{"Type":"NodeText","Data":"慢查询日志有什么用？"}]}]},{"ID":"20240201213126-775iw91","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213126-775iw91","updated":"20240201213126"},"Children":[{"ID":"20240201213127-ovi7h8m","Type":"NodeParagraph","Properties":{"id":"20240201213127-ovi7h8m","updated":"20240201213127"},"Children":[{"Type":"NodeText","Data":"binlog 主要记录了什么？"}]}]},{"ID":"20240201213128-dsd5dvi","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213128-dsd5dvi","updated":"20240201213128"},"Children":[{"ID":"20240201213129-dxcp8ad","Type":"NodeParagraph","Properties":{"id":"20240201213129-dxcp8ad","updated":"20240201213129"},"Children":[{"Type":"NodeText","Data":"redo log 如何保证事务的持久性？"}]}]},{"ID":"20240201213130-xyn4ina","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213130-xyn4ina","updated":"20240201213130"},"Children":[{"ID":"20240201213131-4x6auyc","Type":"NodeParagraph","Properties":{"id":"20240201213131-4x6auyc","updated":"20240201213131"},"Children":[{"Type":"NodeText","Data":"页修改之后为什么不直接刷盘呢？"}]}]},{"ID":"20240201213132-8ueue4y","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213132-8ueue4y","updated":"20240201213132"},"Children":[{"ID":"20240201213133-icod1rj","Type":"NodeParagraph","Properties":{"id":"20240201213133-icod1rj","updated":"20240201213133"},"Children":[{"Type":"NodeText","Data":"binlog 和 redolog 有什么区别？"}]}]},{"ID":"20240201213134-85xgkgr","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213134-85xgkgr","updated":"20240201213134"},"Children":[{"ID":"20240201213135-v4j93kw","Type":"NodeParagraph","Properties":{"id":"20240201213135-v4j93kw","updated":"20240201213135"},"Children":[{"Type":"NodeText","Data":"undo log 如何保证事务的原子性？"}]}]},{"ID":"20240201213136-u5rpsvq","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213136-u5rpsvq","updated":"20240201213136"},"Children":[{"ID":"20240201213137-vfsudlt","Type":"NodeParagraph","Properties":{"id":"20240201213137-vfsudlt","updated":"20240201213137"},"Children":[{"Type":"NodeText","Data":"……"}]}]}]},{"ID":"20240201213138-uav3khc","Type":"NodeParagraph","Properties":{"id":"20240201213138-uav3khc","updated":"20240201213138"},"Children":[{"Type":"NodeText","Data":"上诉问题的答案可以在"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"../../zhuanlan/java-mian-shi-zhi-bei.md","TextMarkTextContent":"《Java 面试指北》(付费)"},{"Type":"NodeText","Data":" 的 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"「技术面试题篇」"},{"Type":"NodeText","Data":" 中找到。"}]},{"ID":"20240201213139-9sepuad","Type":"NodeParagraph","Properties":{"id":"20240201213139-9sepuad","updated":"20240201213139"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"《Java 面试指北》技术面试题篇","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"https://oss.javaguide.cn/javamianshizhibei/technical-interview-questions.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201213140-znhk6zz","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240201213140-znhk6zz","updated":"20240201213140"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"MySQL 事务"}]},{"ID":"20240201213141-26o38b1","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240201213141-26o38b1","updated":"20240201213141"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"何谓事务？"}]},{"ID":"20240201213142-sj7lt7q","Type":"NodeParagraph","Properties":{"id":"20240201213142-sj7lt7q","updated":"20240201213142"},"Children":[{"Type":"NodeText","Data":"我们设想一个场景，这个场景中我们需要插入多条相关联的数据到数据库，不幸的是，这个过程可能会遇到下面这些问题："}]},{"ID":"20240201213143-tedu5kq","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213143-tedu5kq","updated":"20240201213143"},"Children":[{"ID":"20240201213144-yhy40tg","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213144-yhy40tg","updated":"20240201213144"},"Children":[{"ID":"20240201213145-ao5fuhn","Type":"NodeParagraph","Properties":{"id":"20240201213145-ao5fuhn","updated":"20240201213145"},"Children":[{"Type":"NodeText","Data":"数据库中途突然因为某些原因挂掉了。"}]}]},{"ID":"20240201213146-y6taq75","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213146-y6taq75","updated":"20240201213146"},"Children":[{"ID":"20240201213147-pncvecd","Type":"NodeParagraph","Properties":{"id":"20240201213147-pncvecd","updated":"20240201213147"},"Children":[{"Type":"NodeText","Data":"客户端突然因为网络原因连接不上数据库了。"}]}]},{"ID":"20240201213148-qipucor","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213148-qipucor","updated":"20240201213148"},"Children":[{"ID":"20240201213149-n9j5ajn","Type":"NodeParagraph","Properties":{"id":"20240201213149-n9j5ajn","updated":"20240201213149"},"Children":[{"Type":"NodeText","Data":"并发访问数据库时，多个线程同时写入数据库，覆盖了彼此的更改。"}]}]},{"ID":"20240201213150-s7s0j4j","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213150-s7s0j4j","updated":"20240201213150"},"Children":[{"ID":"20240201213151-gln5mqr","Type":"NodeParagraph","Properties":{"id":"20240201213151-gln5mqr","updated":"20240201213151"},"Children":[{"Type":"NodeText","Data":"……"}]}]}]},{"ID":"20240201213152-z0omxtf","Type":"NodeParagraph","Properties":{"id":"20240201213152-z0omxtf","updated":"20240201213152"},"Children":[{"Type":"NodeText","Data":"上面的任何一个问题都可能会导致数据的不一致性。为了保证数据的一致性，系统必须能够处理这些问题。事务就是我们抽象出来简化这些问题的首选机制。事务的概念起源于数据库，目前，已经成为一个比较广泛的概念。"}]},{"ID":"20240201213153-4hz6hmn","Type":"NodeParagraph","Properties":{"id":"20240201213153-4hz6hmn","updated":"20240201213153"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"何为事务？"},{"Type":"NodeText","Data":" 一言蔽之，"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"事务是逻辑上的一组操作，要么都执行，要么都不执行。"}]},{"ID":"20240201213154-9u40zem","Type":"NodeParagraph","Properties":{"id":"20240201213154-9u40zem","updated":"20240201213154"},"Children":[{"Type":"NodeText","Data":"事务最经典也经常被拿出来说例子就是转账了。假如小明要给小红转账 1000 元，这个转账会涉及到两个关键操作，这两个操作必须都成功或者都失败。"}]},{"ID":"20240201213155-3e05aim","Type":"NodeList","ListData":{"Typ":1,"Tight":true,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20240201213155-3e05aim","updated":"20240201213155"},"Children":[{"ID":"20240201213156-8e2djec","Type":"NodeListItem","Data":"1","ListData":{"Typ":1,"Tight":true,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20240201213156-8e2djec","updated":"20240201213156"},"Children":[{"ID":"20240201213157-k1few1t","Type":"NodeParagraph","Properties":{"id":"20240201213157-k1few1t","updated":"20240201213157"},"Children":[{"Type":"NodeText","Data":"将小明的余额减少 1000 元"}]}]},{"ID":"20240201213158-1gy9g6m","Type":"NodeListItem","Data":"2","ListData":{"Typ":1,"Tight":true,"Start":2,"Delimiter":46,"Padding":3,"Marker":"Mg==","Num":2},"Properties":{"id":"20240201213158-1gy9g6m","updated":"20240201213158"},"Children":[{"ID":"20240201213159-cccu4je","Type":"NodeParagraph","Properties":{"id":"20240201213159-cccu4je","updated":"20240201213159"},"Children":[{"Type":"NodeText","Data":"将小红的余额增加 1000 元。"}]}]}]},{"ID":"20240201213160-79uc2cc","Type":"NodeParagraph","Properties":{"id":"20240201213160-79uc2cc","updated":"20240201213160"},"Children":[{"Type":"NodeText","Data":"事务会把这两个操作就可以看成逻辑上的一个整体，这个整体包含的操作要么都成功，要么都要失败。这样就不会出现小明余额减少而小红的余额却并没有增加的情况。"}]},{"ID":"20240201213161-1yvpb07","Type":"NodeParagraph","Properties":{"id":"20240201213161-1yvpb07","updated":"20240201213161"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"事务示意图","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"https://oss.javaguide.cn/github/javaguide/mysql/%E4%BA%8B%E5%8A%A1%E7%A4%BA%E6%84%8F%E5%9B%BE.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201213162-19c6hph","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240201213162-19c6hph","updated":"20240201213162"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"何谓数据库事务？"}]},{"ID":"20240201213163-2fmn9ty","Type":"NodeParagraph","Properties":{"id":"20240201213163-2fmn9ty","updated":"20240201213163"},"Children":[{"Type":"NodeText","Data":"大多数情况下，我们在谈论事务的时候，如果没有特指"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"分布式事务"},{"Type":"NodeText","Data":"，往往指的就是"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"数据库事务"},{"Type":"NodeText","Data":"。"}]},{"ID":"20240201213164-ma111af","Type":"NodeParagraph","Properties":{"id":"20240201213164-ma111af","updated":"20240201213164"},"Children":[{"Type":"NodeText","Data":"数据库事务在我们日常开发中接触的最多了。如果你的项目属于单体架构的话，你接触到的往往就是数据库事务了。"}]},{"ID":"20240201213165-mwofd74","Type":"NodeParagraph","Properties":{"id":"20240201213165-mwofd74","updated":"20240201213165"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"那数据库事务有什么作用呢？"}]},{"ID":"20240201213166-ajkz7un","Type":"NodeParagraph","Properties":{"id":"20240201213166-ajkz7un","updated":"20240201213166"},"Children":[{"Type":"NodeText","Data":"简单来说，数据库事务可以保证多个对数据库的操作（也就是 SQL 语句）构成一个逻辑上的整体。构成这个逻辑上的整体的这些数据库操作遵循："},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"要么全部执行成功,要么全部不执行"},{"Type":"NodeText","Data":" 。"}]},{"ID":"20240201213167-plobp8m","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"c3Fs","CodeBlockCloseFence":"YGBg","Properties":{"id":"20240201213167-plobp8m","updated":"20240201213167"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"c3Fs","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"# 开启一个事务\nSTART TRANSACTION;\n# 多条 SQL 语句\nSQL1,SQL2...\n## 提交事务\nCOMMIT;\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20240201213168-a21stiz","Type":"NodeParagraph","Properties":{"id":"20240201213168-a21stiz","updated":"20240201213168"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"数据库事务示意图","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"https://oss.javaguide.cn/github/javaguide/mysql/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%BA%8B%E5%8A%A1%E7%A4%BA%E6%84%8F%E5%9B%BE.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201213169-lrcaxtj","Type":"NodeParagraph","Properties":{"id":"20240201213169-lrcaxtj","updated":"20240201213169"},"Children":[{"Type":"NodeText","Data":"另外，关系型数据库（例如："},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"MySQL"},{"Type":"NodeText","Data":"、"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"SQL Server"},{"Type":"NodeText","Data":"、"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"Oracle"},{"Type":"NodeText","Data":" 等）事务都有 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"ACID"},{"Type":"NodeText","Data":" 特性："}]},{"ID":"20240201213170-kjknfgu","Type":"NodeParagraph","Properties":{"id":"20240201213170-kjknfgu","updated":"20240201213170"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"ACID","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"https://oss.javaguide.cn/github/javaguide/mysql/ACID.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201213171-qo6s70t","Type":"NodeList","ListData":{"Typ":1,"Tight":true,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20240201213171-qo6s70t","updated":"20240201213171"},"Children":[{"ID":"20240201213172-984ko21","Type":"NodeListItem","Data":"1","ListData":{"Typ":1,"Tight":true,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20240201213172-984ko21","updated":"20240201213172"},"Children":[{"ID":"20240201213173-vxv5att","Type":"NodeParagraph","Properties":{"id":"20240201213173-vxv5att","updated":"20240201213173"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"原子性"},{"Type":"NodeText","Data":"（"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"Atomicity"},{"Type":"NodeText","Data":"）：事务是最小的执行单位，不允许分割。事务的原子性确保动作要么全部完成，要么完全不起作用；"}]}]},{"ID":"20240201213174-k339l4c","Type":"NodeListItem","Data":"2","ListData":{"Typ":1,"Tight":true,"Start":2,"Delimiter":46,"Padding":3,"Marker":"Mg==","Num":2},"Properties":{"id":"20240201213174-k339l4c","updated":"20240201213174"},"Children":[{"ID":"20240201213175-exocmad","Type":"NodeParagraph","Properties":{"id":"20240201213175-exocmad","updated":"20240201213175"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"一致性"},{"Type":"NodeText","Data":"（"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"Consistency"},{"Type":"NodeText","Data":"）：执行事务前后，数据保持一致，例如转账业务中，无论事务是否成功，转账者和收款人的总额应该是不变的；"}]}]},{"ID":"20240201213176-2qfkcnl","Type":"NodeListItem","Data":"3","ListData":{"Typ":1,"Tight":true,"Start":3,"Delimiter":46,"Padding":3,"Marker":"Mw==","Num":3},"Properties":{"id":"20240201213176-2qfkcnl","updated":"20240201213176"},"Children":[{"ID":"20240201213177-ykqo6zo","Type":"NodeParagraph","Properties":{"id":"20240201213177-ykqo6zo","updated":"20240201213177"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"隔离性"},{"Type":"NodeText","Data":"（"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"Isolation"},{"Type":"NodeText","Data":"）：并发访问数据库时，一个用户的事务不被其他事务所干扰，各并发事务之间数据库是独立的；"}]}]},{"ID":"20240201213178-zcxmcci","Type":"NodeListItem","Data":"4","ListData":{"Typ":1,"Tight":true,"Start":4,"Delimiter":46,"Padding":3,"Marker":"NA==","Num":4},"Properties":{"id":"20240201213178-zcxmcci","updated":"20240201213178"},"Children":[{"ID":"20240201213179-azu8a6o","Type":"NodeParagraph","Properties":{"id":"20240201213179-azu8a6o","updated":"20240201213179"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"持久性"},{"Type":"NodeText","Data":"（"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"Durability"},{"Type":"NodeText","Data":"）：一个事务被提交之后。它对数据库中数据的改变是持久的，即使数据库发生故障也不应该对其有任何影响。"}]}]}]},{"ID":"20240201213180-vuta476","Type":"NodeParagraph","Properties":{"id":"20240201213180-vuta476","updated":"20240201213180"},"Children":[{"Type":"NodeText","Data":"🌈 这里要额外补充一点："},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"只有保证了事务的持久性、原子性、隔离性之后，一致性才能得到保障。也就是说 A、I、D 是手段，C 是目的！"},{"Type":"NodeText","Data":" 想必大家也和我一样，被 ACID 这个概念被误导了很久! 我也是看周志明老师的公开课"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://time.geekbang.org/opencourse/intro/100064201","TextMarkTextContent":"《周志明的软件架构课》"},{"Type":"NodeText","Data":"才搞清楚的（多看好书！！！）。"}]},{"ID":"20240201213181-9p2l70h","Type":"NodeParagraph","Properties":{"id":"20240201213181-9p2l70h","updated":"20240201213181"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"AID-\u003eC","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"https://oss.javaguide.cn/github/javaguide/mysql/AID-%3EC.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201213182-1akrtib","Type":"NodeParagraph","Properties":{"id":"20240201213182-1akrtib","updated":"20240201213182"},"Children":[{"Type":"NodeText","Data":"另外，DDIA 也就是 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://book.douban.com/subject/30329536/","TextMarkTextContent":"《Designing Data-Intensive Application（数据密集型应用系统设计）》"},{"Type":"NodeText","Data":" 的作者在他的这本书中如是说："}]},{"ID":"20240201213183-3po92lf","Type":"NodeBlockquote","Properties":{"id":"20240201213183-3po92lf","updated":"20240201213183"},"Children":[{"Type":"NodeBlockquoteMarker","Data":"\u003e ","Properties":{"id":""}},{"ID":"20240201213184-s4bahr5","Type":"NodeParagraph","Properties":{"id":"20240201213184-s4bahr5","updated":"20240201213184"},"Children":[{"Type":"NodeText","Data":"Atomicity, isolation, and durability are properties of the database, whereas consis‐"},{"Type":"NodeSoftBreak","Data":"\n","Properties":{"id":""}},{"Type":"NodeText","Data":"tency (in the ACID sense) is a property of the application. The application may rely"},{"Type":"NodeSoftBreak","Data":"\n","Properties":{"id":""}},{"Type":"NodeText","Data":"on the database’s atomicity and isolation properties in order to achieve consistency,"},{"Type":"NodeSoftBreak","Data":"\n","Properties":{"id":""}},{"Type":"NodeText","Data":"but it’s not up to the database alone."}]},{"ID":"20240201213185-ibz6fii","Type":"NodeParagraph","Properties":{"id":"20240201213185-ibz6fii","updated":"20240201213185"},"Children":[{"Type":"NodeText","Data":"翻译过来的意思是：原子性，隔离性和持久性是数据库的属性，而一致性（在 ACID 意义上）是应用程序的属性。应用可能依赖数据库的原子性和隔离属性来实现一致性，但这并不仅取决于数据库。因此，字母 C 不属于 ACID 。"}]}]},{"ID":"20240201213186-q16pj9m","Type":"NodeParagraph","Properties":{"id":"20240201213186-q16pj9m","updated":"20240201213186"},"Children":[{"Type":"NodeText","Data":"《Designing Data-Intensive Application（数据密集型应用系统设计）》这本书强推一波，值得读很多遍！豆瓣有接近 90% 的人看了这本书之后给了五星好评。另外，中文翻译版本已经在 GitHub 开源，地址："},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/Vonng/ddia","TextMarkTextContent":"https://github.com/Vonng/ddia"},{"Type":"NodeText","Data":" 。"}]},{"ID":"20240201213187-qiab0y0","Type":"NodeParagraph","Properties":{"id":"20240201213187-qiab0y0","updated":"20240201213187"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"https://oss.javaguide.cn/github/javaguide/books/ddia.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201213188-ohylt7q","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240201213188-ohylt7q","updated":"20240201213188"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"并发事务带来了哪些问题?"}]},{"ID":"20240201213189-hg6jnfa","Type":"NodeParagraph","Properties":{"id":"20240201213189-hg6jnfa","updated":"20240201213189"},"Children":[{"Type":"NodeText","Data":"在典型的应用程序中，多个事务并发运行，经常会操作相同的数据来完成各自的任务（多个用户对同一数据进行操作）。并发虽然是必须的，但可能会导致以下的问题。"}]},{"ID":"20240201213190-kwglxg6","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20240201213190-kwglxg6","updated":"20240201213190"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"脏读（Dirty read）"}]},{"ID":"20240201213191-omeysxc","Type":"NodeParagraph","Properties":{"id":"20240201213191-omeysxc","updated":"20240201213191"},"Children":[{"Type":"NodeText","Data":"一个事务读取数据并且对数据进行了修改，这个修改对其他事务来说是可见的，即使当前事务没有提交。这时另外一个事务读取了这个还未提交的数据，但第一个事务突然回滚，导致数据并没有被提交到数据库，那第二个事务读取到的就是脏数据，这也就是脏读的由来。"}]},{"ID":"20240201213192-o48ussx","Type":"NodeParagraph","Properties":{"id":"20240201213192-o48ussx","updated":"20240201213192"},"Children":[{"Type":"NodeText","Data":"例如：事务 1 读取某表中的数据 A=20，事务 1 修改 A=A-1，事务 2 读取到 A = 19,事务 1 回滚导致对 A 的修改并未提交到数据库， A 的值还是 20。"}]},{"ID":"20240201213193-t79srkj","Type":"NodeParagraph","Properties":{"id":"20240201213193-t79srkj","updated":"20240201213193"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"脏读","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"assets/concurrency-consistency-issues-dirty-reading-20240201213826-nc7plw4.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201213194-t3ttdgg","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20240201213194-t3ttdgg","updated":"20240201213194"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"丢失修改（Lost to modify）"}]},{"ID":"20240201213195-71p9z6z","Type":"NodeParagraph","Properties":{"id":"20240201213195-71p9z6z","updated":"20240201213195"},"Children":[{"Type":"NodeText","Data":"在一个事务读取一个数据时，另外一个事务也访问了该数据，那么在第一个事务中修改了这个数据后，第二个事务也修改了这个数据。这样第一个事务内的修改结果就被丢失，因此称为丢失修改。"}]},{"ID":"20240201213196-ahiad54","Type":"NodeParagraph","Properties":{"id":"20240201213196-ahiad54","updated":"20240201213196"},"Children":[{"Type":"NodeText","Data":"例如：事务 1 读取某表中的数据 A=20，事务 2 也读取 A=20，事务 1 先修改 A=A-1，事务 2 后来也修改 A=A-1，最终结果 A=19，事务 1 的修改被丢失。"}]},{"ID":"20240201213197-v1gprtg","Type":"NodeParagraph","Properties":{"id":"20240201213197-v1gprtg","updated":"20240201213197"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"丢失修改","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"assets/concurrency-consistency-issues-missing-modifications-20240201213826-ehvkxec.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201213198-o935eqv","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20240201213198-o935eqv","updated":"20240201213198"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"不可重复读（Unrepeatable read）"}]},{"ID":"20240201213199-lfztj0w","Type":"NodeParagraph","Properties":{"id":"20240201213199-lfztj0w","updated":"20240201213199"},"Children":[{"Type":"NodeText","Data":"指在一个事务内多次读同一数据。在这个事务还没有结束时，另一个事务也访问该数据。那么，在第一个事务中的两次读数据之间，由于第二个事务的修改导致第一个事务两次读取的数据可能不太一样。这就发生了在一个事务内两次读到的数据是不一样的情况，因此称为不可重复读。"}]},{"ID":"20240201213200-31zp58o","Type":"NodeParagraph","Properties":{"id":"20240201213200-31zp58o","updated":"20240201213200"},"Children":[{"Type":"NodeText","Data":"例如：事务 1 读取某表中的数据 A=20，事务 2 也读取 A=20，事务 1 修改 A=A-1，事务 2 再次读取 A =19，此时读取的结果和第一次读取的结果不同。"}]},{"ID":"20240201213201-1xkqaoh","Type":"NodeParagraph","Properties":{"id":"20240201213201-1xkqaoh","updated":"20240201213201"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"不可重复读","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"assets/concurrency-consistency-issues-unrepeatable-read-20240201213826-58uzpkf.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201213202-93doqq2","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20240201213202-93doqq2","updated":"20240201213202"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"幻读（Phantom read）"}]},{"ID":"20240201213203-rj9ie4m","Type":"NodeParagraph","Properties":{"id":"20240201213203-rj9ie4m","updated":"20240201213203"},"Children":[{"Type":"NodeText","Data":"幻读与不可重复读类似。它发生在一个事务读取了几行数据，接着另一个并发事务插入了一些数据时。在随后的查询中，第一个事务就会发现多了一些原本不存在的记录，就好像发生了幻觉一样，所以称为幻读。"}]},{"ID":"20240201213204-r1ck2lv","Type":"NodeParagraph","Properties":{"id":"20240201213204-r1ck2lv","updated":"20240201213204"},"Children":[{"Type":"NodeText","Data":"例如：事务 2 读取某个范围的数据，事务 1 在这个范围插入了新的数据，事务 2 再次读取这个范围的数据发现相比于第一次读取的结果多了新的数据。"}]},{"ID":"20240201213205-l50fz46","Type":"NodeParagraph","Properties":{"id":"20240201213205-l50fz46","updated":"20240201213205"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"幻读","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"assets/concurrency-consistency-issues-phantom-read-20240201213826-jjt87y8.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201213206-bxsylsq","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240201213206-bxsylsq","updated":"20240201213206"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"不可重复读和幻读有什么区别？"}]},{"ID":"20240201213207-bu62fyh","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213207-bu62fyh","updated":"20240201213207"},"Children":[{"ID":"20240201213208-k4smlf8","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213208-k4smlf8","updated":"20240201213208"},"Children":[{"ID":"20240201213209-20uujnj","Type":"NodeParagraph","Properties":{"id":"20240201213209-20uujnj","updated":"20240201213209"},"Children":[{"Type":"NodeText","Data":"不可重复读的重点是内容修改或者记录减少比如多次读取一条记录发现其中某些记录的值被修改；"}]}]},{"ID":"20240201213210-qaa7kdy","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213210-qaa7kdy","updated":"20240201213210"},"Children":[{"ID":"20240201213211-f1m2qhh","Type":"NodeParagraph","Properties":{"id":"20240201213211-f1m2qhh","updated":"20240201213211"},"Children":[{"Type":"NodeText","Data":"幻读的重点在于记录新增比如多次执行同一条查询语句（DQL）时，发现查到的记录增加了。"}]}]}]},{"ID":"20240201213212-vvxb76q","Type":"NodeParagraph","Properties":{"id":"20240201213212-vvxb76q","updated":"20240201213212"},"Children":[{"Type":"NodeText","Data":"幻读其实可以看作是不可重复读的一种特殊情况，单独把区分幻读的原因主要是解决幻读和不可重复读的方案不一样。"}]},{"ID":"20240201213213-grq8sjx","Type":"NodeParagraph","Properties":{"id":"20240201213213-grq8sjx","updated":"20240201213213"},"Children":[{"Type":"NodeText","Data":"举个例子：执行 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"delete"},{"Type":"NodeText","Data":" 和 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"update"},{"Type":"NodeText","Data":" 操作的时候，可以直接对记录加锁，保证事务安全。而执行 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"insert"},{"Type":"NodeText","Data":" 操作的时候，由于记录锁（Record Lock）只能锁住已经存在的记录，为了避免插入新记录，需要依赖间隙锁（Gap Lock）。也就是说执行 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"insert"},{"Type":"NodeText","Data":" 操作的时候需要依赖 Next-Key Lock（Record Lock+Gap Lock） 进行加锁来保证不出现幻读。"}]},{"ID":"20240201213214-2bwaedb","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240201213214-2bwaedb","updated":"20240201213214"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"并发事务的控制方式有哪些？"}]},{"ID":"20240201213215-61yl069","Type":"NodeParagraph","Properties":{"id":"20240201213215-61yl069","updated":"20240201213215"},"Children":[{"Type":"NodeText","Data":"MySQL 中并发事务的控制方式无非就两种："},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"锁"},{"Type":"NodeText","Data":" 和 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"MVCC"},{"Type":"NodeText","Data":"。锁可以看作是悲观控制的模式，多版本并发控制（MVCC，Multiversion concurrency control）可以看作是乐观控制的模式。"}]},{"ID":"20240201213216-gfpo9nc","Type":"NodeParagraph","Properties":{"id":"20240201213216-gfpo9nc","updated":"20240201213216"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"锁"},{"Type":"NodeText","Data":" 控制方式下会通过锁来显示控制共享资源而不是通过调度手段，MySQL 中主要是通过 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"读写锁"},{"Type":"NodeText","Data":" 来实现并发控制。"}]},{"ID":"20240201213217-dm5fs6m","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213217-dm5fs6m","updated":"20240201213217"},"Children":[{"ID":"20240201213218-7gucc58","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213218-7gucc58","updated":"20240201213218"},"Children":[{"ID":"20240201213219-gudltf9","Type":"NodeParagraph","Properties":{"id":"20240201213219-gudltf9","updated":"20240201213219"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"共享锁（S 锁）"},{"Type":"NodeText","Data":"：又称读锁，事务在读取记录的时候获取共享锁，允许多个事务同时获取（锁兼容）。"}]}]},{"ID":"20240201213220-38a2wfs","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213220-38a2wfs","updated":"20240201213220"},"Children":[{"ID":"20240201213221-4xvxbj5","Type":"NodeParagraph","Properties":{"id":"20240201213221-4xvxbj5","updated":"20240201213221"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"排他锁（X 锁）"},{"Type":"NodeText","Data":"：又称写锁/独占锁，事务在修改记录的时候获取排他锁，不允许多个事务同时获取。如果一个记录已经被加了排他锁，那其他事务不能再对这条记录加任何类型的锁（锁不兼容）。"}]}]}]},{"ID":"20240201213222-dpx04lb","Type":"NodeParagraph","Properties":{"id":"20240201213222-dpx04lb","updated":"20240201213222"},"Children":[{"Type":"NodeText","Data":"读写锁可以做到读读并行，但是无法做到写读、写写并行。另外，根据根据锁粒度的不同，又被分为 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"表级锁(table-level locking)"},{"Type":"NodeText","Data":" 和 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"行级锁(row-level locking)"},{"Type":"NodeText","Data":" 。InnoDB 不光支持表级锁，还支持行级锁，默认为行级锁。行级锁的粒度更小，仅对相关的记录上锁即可（对一行或者多行记录加锁），所以对于并发写入操作来说， InnoDB 的性能更高。不论是表级锁还是行级锁，都存在共享锁（Share Lock，S 锁）和排他锁（Exclusive Lock，X 锁）这两类。"}]},{"ID":"20240201213223-qztbeca","Type":"NodeParagraph","Properties":{"id":"20240201213223-qztbeca","updated":"20240201213223"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"MVCC"},{"Type":"NodeText","Data":" 是多版本并发控制方法，即对一份数据会存储多个版本，通过事务的可见性来保证事务能看到自己应该看到的版本。通常会有一个全局的版本分配器来为每一行数据设置版本号，版本号是唯一的。"}]},{"ID":"20240201213224-hviye2z","Type":"NodeParagraph","Properties":{"id":"20240201213224-hviye2z","updated":"20240201213224"},"Children":[{"Type":"NodeText","Data":"MVCC 在 MySQL 中实现所依赖的手段主要是: "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"隐藏字段、read view、undo log"},{"Type":"NodeText","Data":"。"}]},{"ID":"20240201213225-saxx185","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213225-saxx185","updated":"20240201213225"},"Children":[{"ID":"20240201213226-uebs43d","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213226-uebs43d","updated":"20240201213226"},"Children":[{"ID":"20240201213227-crvqjz2","Type":"NodeParagraph","Properties":{"id":"20240201213227-crvqjz2","updated":"20240201213227"},"Children":[{"Type":"NodeText","Data":"undo log : undo log 用于记录某行数据的多个版本的数据。"}]}]},{"ID":"20240201213228-cpl0vd0","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213228-cpl0vd0","updated":"20240201213228"},"Children":[{"ID":"20240201213229-h8fyuza","Type":"NodeParagraph","Properties":{"id":"20240201213229-h8fyuza","updated":"20240201213229"},"Children":[{"Type":"NodeText","Data":"read view 和 隐藏字段 : 用来判断当前版本数据的可见性。"}]}]}]},{"ID":"20240201213230-7mpop10","Type":"NodeParagraph","Properties":{"id":"20240201213230-7mpop10","updated":"20240201213230"},"Children":[{"Type":"NodeText","Data":"关于 InnoDB 对 MVCC 的具体实现可以看这篇文章："},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"./innodb-implementation-of-mvcc.md","TextMarkTextContent":"InnoDB 存储引擎对 MVCC 的实现"},{"Type":"NodeText","Data":" 。"}]},{"ID":"20240201213231-syztyss","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240201213231-syztyss","updated":"20240201213231"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"SQL 标准定义了哪些事务隔离级别?"}]},{"ID":"20240201213232-ottf48v","Type":"NodeParagraph","Properties":{"id":"20240201213232-ottf48v","updated":"20240201213232"},"Children":[{"Type":"NodeText","Data":"SQL 标准定义了四个隔离级别："}]},{"ID":"20240201213233-s3p79vt","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213233-s3p79vt","updated":"20240201213233"},"Children":[{"ID":"20240201213234-a2ubj2n","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213234-a2ubj2n","updated":"20240201213234"},"Children":[{"ID":"20240201213235-p1l4by4","Type":"NodeParagraph","Properties":{"id":"20240201213235-p1l4by4","updated":"20240201213235"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"READ-UNCOMMITTED(读取未提交)"},{"Type":"NodeText","Data":" ：最低的隔离级别，允许读取尚未提交的数据变更，可能会导致脏读、幻读或不可重复读。"}]}]},{"ID":"20240201213236-lwxy4be","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213236-lwxy4be","updated":"20240201213236"},"Children":[{"ID":"20240201213237-mftgnc7","Type":"NodeParagraph","Properties":{"id":"20240201213237-mftgnc7","updated":"20240201213237"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"READ-COMMITTED(读取已提交)"},{"Type":"NodeText","Data":" ：允许读取并发事务已经提交的数据，可以阻止脏读，但是幻读或不可重复读仍有可能发生。"}]}]},{"ID":"20240201213238-zrs9hpm","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213238-zrs9hpm","updated":"20240201213238"},"Children":[{"ID":"20240201213239-hd38bjb","Type":"NodeParagraph","Properties":{"id":"20240201213239-hd38bjb","updated":"20240201213239"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"REPEATABLE-READ(可重复读)"},{"Type":"NodeText","Data":" ：对同一字段的多次读取结果都是一致的，除非数据是被本身事务自己所修改，可以阻止脏读和不可重复读，但幻读仍有可能发生。"}]}]},{"ID":"20240201213240-7u72n31","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213240-7u72n31","updated":"20240201213240"},"Children":[{"ID":"20240201213241-jui92z7","Type":"NodeParagraph","Properties":{"id":"20240201213241-jui92z7","updated":"20240201213241"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"SERIALIZABLE(可串行化)"},{"Type":"NodeText","Data":" ：最高的隔离级别，完全服从 ACID 的隔离级别。所有的事务依次逐个执行，这样事务之间就完全不可能产生干扰，也就是说，该级别可以防止脏读、不可重复读以及幻读。"}]}]}]},{"ID":"20240201213242-yfp6r37","Type":"NodeThematicBreak","Properties":{"id":"20240201213242-yfp6r37","updated":"20240201213242"}},{"ID":"20240201213243-zl154cn","Type":"NodeTable","Data":"|     隔离级别     | 脏读 | 不可重复读 | 幻读 |\n| :--------------: | :--: | :--------: | :--: |\n| READ-UNCOMMITTED |  √   |     √      |  √   |\n|  READ-COMMITTED  |  ×   |     √      |  √   |\n| REPEATABLE-READ  |  ×   |     ×      |  √   |\n|   SERIALIZABLE   |  ×   |     ×      |  ×   |","TableAligns":[2,2,2,2],"Properties":{"id":"20240201213243-zl154cn","updated":"20240201213243"},"Children":[{"Type":"NodeTableHead","Properties":{"id":""},"Children":[{"Type":"NodeTableRow","Properties":{"id":""},"Children":[{"Type":"NodeTableCell","TableCellAlign":2,"Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"隔离级别"}]},{"Type":"NodeTableCell","TableCellAlign":2,"Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"脏读"}]},{"Type":"NodeTableCell","TableCellAlign":2,"Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"不可重复读"}]},{"Type":"NodeTableCell","TableCellAlign":2,"Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"幻读"}]}]}]},{"Type":"NodeTableRow","TableAligns":[2,2,2,2],"Properties":{"id":""},"Children":[{"Type":"NodeTableCell","TableCellAlign":2,"Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"READ-UNCOMMITTED"}]},{"Type":"NodeTableCell","TableCellAlign":2,"Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"√"}]},{"Type":"NodeTableCell","TableCellAlign":2,"Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"√"}]},{"Type":"NodeTableCell","TableCellAlign":2,"Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"√"}]}]},{"Type":"NodeTableRow","TableAligns":[2,2,2,2],"Properties":{"id":""},"Children":[{"Type":"NodeTableCell","TableCellAlign":2,"Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"READ-COMMITTED"}]},{"Type":"NodeTableCell","TableCellAlign":2,"Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"×"}]},{"Type":"NodeTableCell","TableCellAlign":2,"Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"√"}]},{"Type":"NodeTableCell","TableCellAlign":2,"Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"√"}]}]},{"Type":"NodeTableRow","TableAligns":[2,2,2,2],"Properties":{"id":""},"Children":[{"Type":"NodeTableCell","TableCellAlign":2,"Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"REPEATABLE-READ"}]},{"Type":"NodeTableCell","TableCellAlign":2,"Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"×"}]},{"Type":"NodeTableCell","TableCellAlign":2,"Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"×"}]},{"Type":"NodeTableCell","TableCellAlign":2,"Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"√"}]}]},{"Type":"NodeTableRow","TableAligns":[2,2,2,2],"Properties":{"id":""},"Children":[{"Type":"NodeTableCell","TableCellAlign":2,"Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"SERIALIZABLE"}]},{"Type":"NodeTableCell","TableCellAlign":2,"Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"×"}]},{"Type":"NodeTableCell","TableCellAlign":2,"Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"×"}]},{"Type":"NodeTableCell","TableCellAlign":2,"Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"×"}]}]}]},{"ID":"20240201213244-6q27zwc","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240201213244-6q27zwc","updated":"20240201213244"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"MySQL 的隔离级别是基于锁实现的吗？"}]},{"ID":"20240201213245-fceaxus","Type":"NodeParagraph","Properties":{"id":"20240201213245-fceaxus","updated":"20240201213245"},"Children":[{"Type":"NodeText","Data":"MySQL 的隔离级别基于锁和 MVCC 机制共同实现的。"}]},{"ID":"20240201213246-efhs0vh","Type":"NodeParagraph","Properties":{"id":"20240201213246-efhs0vh","updated":"20240201213246"},"Children":[{"Type":"NodeText","Data":"SERIALIZABLE 隔离级别是通过锁来实现的，READ-COMMITTED 和 REPEATABLE-READ 隔离级别是基于 MVCC 实现的。不过， SERIALIZABLE 之外的其他隔离级别可能也需要用到锁机制，就比如 REPEATABLE-READ 在当前读情况下需要使用加锁读来保证不会出现幻读。"}]},{"ID":"20240201213247-4nk5nmw","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240201213247-4nk5nmw","updated":"20240201213247"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"MySQL 的默认隔离级别是什么?"}]},{"ID":"20240201213248-nfckxvi","Type":"NodeParagraph","Properties":{"id":"20240201213248-nfckxvi","updated":"20240201213248"},"Children":[{"Type":"NodeText","Data":"MySQL InnoDB 存储引擎的默认支持的隔离级别是 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"REPEATABLE-READ（可重读）"},{"Type":"NodeText","Data":"。我们可以通过"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"SELECT @@tx_isolation;"},{"Type":"NodeText","Data":"命令来查看，MySQL 8.0 该命令改为"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"SELECT @@transaction_isolation;"}]},{"ID":"20240201213249-87xn863","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"c3Fs","CodeBlockCloseFence":"YGBg","Properties":{"id":"20240201213249-87xn863","updated":"20240201213249"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"c3Fs","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"mysql\u003e SELECT @@tx_isolation;\n+-----------------+\n| @@tx_isolation  |\n+-----------------+\n| REPEATABLE-READ |\n+-----------------+\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20240201213250-sulmftx","Type":"NodeParagraph","Properties":{"id":"20240201213250-sulmftx","updated":"20240201213250"},"Children":[{"Type":"NodeText","Data":"关于 MySQL 事务隔离级别的详细介绍，可以看看我写的这篇文章："},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"./transaction-isolation-level.md","TextMarkTextContent":"MySQL 事务隔离级别详解"},{"Type":"NodeText","Data":"。"}]},{"ID":"20240201213251-nmpcdjt","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240201213251-nmpcdjt","updated":"20240201213251"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"MySQL 锁"}]},{"ID":"20240201213252-ax95nz6","Type":"NodeParagraph","Properties":{"id":"20240201213252-ax95nz6","updated":"20240201213252"},"Children":[{"Type":"NodeText","Data":"锁是一种常见的并发事务的控制方式。"}]},{"ID":"20240201213253-t19b89n","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240201213253-t19b89n","updated":"20240201213253"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"表级锁和行级锁了解吗？有什么区别？"}]},{"ID":"20240201213254-ljdjt62","Type":"NodeParagraph","Properties":{"id":"20240201213254-ljdjt62","updated":"20240201213254"},"Children":[{"Type":"NodeText","Data":"MyISAM 仅仅支持表级锁(table-level locking)，一锁就锁整张表，这在并发写的情况下性非常差。InnoDB 不光支持表级锁(table-level locking)，还支持行级锁(row-level locking)，默认为行级锁。"}]},{"ID":"20240201213255-8xowfy9","Type":"NodeParagraph","Properties":{"id":"20240201213255-8xowfy9","updated":"20240201213255"},"Children":[{"Type":"NodeText","Data":"行级锁的粒度更小，仅对相关的记录上锁即可（对一行或者多行记录加锁），所以对于并发写入操作来说， InnoDB 的性能更高。"}]},{"ID":"20240201213256-wn8ziwb","Type":"NodeParagraph","Properties":{"id":"20240201213256-wn8ziwb","updated":"20240201213256"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"表级锁和行级锁对比"},{"Type":"NodeText","Data":"："}]},{"ID":"20240201213257-h9gzdm3","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213257-h9gzdm3","updated":"20240201213257"},"Children":[{"ID":"20240201213258-scbctv7","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213258-scbctv7","updated":"20240201213258"},"Children":[{"ID":"20240201213259-ejobo0f","Type":"NodeParagraph","Properties":{"id":"20240201213259-ejobo0f","updated":"20240201213259"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"表级锁："},{"Type":"NodeText","Data":" MySQL 中锁定粒度最大的一种锁（全局锁除外），是针对非索引字段加的锁，对当前操作的整张表加锁，实现简单，资源消耗也比较少，加锁快，不会出现死锁。不过，触发锁冲突的概率最高，高并发下效率极低。表级锁和存储引擎无关，MyISAM 和 InnoDB 引擎都支持表级锁。"}]}]},{"ID":"20240201213260-6svxate","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213260-6svxate","updated":"20240201213260"},"Children":[{"ID":"20240201213261-n48u6qf","Type":"NodeParagraph","Properties":{"id":"20240201213261-n48u6qf","updated":"20240201213261"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"行级锁："},{"Type":"NodeText","Data":" MySQL 中锁定粒度最小的一种锁，是 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"针对索引字段加的锁"},{"Type":"NodeText","Data":" ，只针对当前操作的行记录进行加锁。 行级锁能大大减少数据库操作的冲突。其加锁粒度最小，并发度高，但加锁的开销也最大，加锁慢，会出现死锁。行级锁和存储引擎有关，是在存储引擎层面实现的。"}]}]}]},{"ID":"20240201213262-k2mchl7","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240201213262-k2mchl7","updated":"20240201213262"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"行级锁的使用有什么注意事项？"}]},{"ID":"20240201213263-ml1bq79","Type":"NodeParagraph","Properties":{"id":"20240201213263-ml1bq79","updated":"20240201213263"},"Children":[{"Type":"NodeText","Data":"InnoDB 的行锁是针对索引字段加的锁，表级锁是针对非索引字段加的锁。当我们执行 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"UPDATE"},{"Type":"NodeText","Data":"、"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"DELETE"},{"Type":"NodeText","Data":" 语句时，如果 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"WHERE"},{"Type":"NodeText","Data":"条件中字段没有命中唯一索引或者索引失效的话，就会导致扫描全表对表中的所有行记录进行加锁。这个在我们日常工作开发中经常会遇到，一定要多多注意！！！"}]},{"ID":"20240201213264-ootmgen","Type":"NodeParagraph","Properties":{"id":"20240201213264-ootmgen","updated":"20240201213264"},"Children":[{"Type":"NodeText","Data":"不过，很多时候即使用了索引也有可能会走全表扫描，这是因为 MySQL 优化器的原因。"}]},{"ID":"20240201213265-hqduskj","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240201213265-hqduskj","updated":"20240201213265"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"InnoDB 有哪几类行锁？"}]},{"ID":"20240201213266-d6vnx12","Type":"NodeParagraph","Properties":{"id":"20240201213266-d6vnx12","updated":"20240201213266"},"Children":[{"Type":"NodeText","Data":"InnoDB 行锁是通过对索引数据页上的记录加锁实现的，MySQL InnoDB 支持三种行锁定方式："}]},{"ID":"20240201213267-bqgyrsf","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213267-bqgyrsf","updated":"20240201213267"},"Children":[{"ID":"20240201213268-qzc516r","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213268-qzc516r","updated":"20240201213268"},"Children":[{"ID":"20240201213269-ij9wqvg","Type":"NodeParagraph","Properties":{"id":"20240201213269-ij9wqvg","updated":"20240201213269"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"记录锁（Record Lock）"},{"Type":"NodeText","Data":"：也被称为记录锁，属于单个行记录上的锁。"}]}]},{"ID":"20240201213270-mer5kq3","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213270-mer5kq3","updated":"20240201213270"},"Children":[{"ID":"20240201213271-5thw0xw","Type":"NodeParagraph","Properties":{"id":"20240201213271-5thw0xw","updated":"20240201213271"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"间隙锁（Gap Lock）"},{"Type":"NodeText","Data":"：锁定一个范围，不包括记录本身。"}]}]},{"ID":"20240201213272-xgvvxs0","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213272-xgvvxs0","updated":"20240201213272"},"Children":[{"ID":"20240201213273-mikavic","Type":"NodeParagraph","Properties":{"id":"20240201213273-mikavic","updated":"20240201213273"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"临键锁（Next-Key Lock）"},{"Type":"NodeText","Data":"：Record Lock+Gap Lock，锁定一个范围，包含记录本身，主要目的是为了解决幻读问题（MySQL 事务部分提到过）。记录锁只能锁住已经存在的记录，为了避免插入新记录，需要依赖间隙锁。"}]}]}]},{"ID":"20240201213274-qjc91cr","Type":"NodeParagraph","Properties":{"id":"20240201213274-qjc91cr","updated":"20240201213274"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"在 InnoDB 默认的隔离级别 REPEATABLE-READ 下，行锁默认使用的是 Next-Key Lock。但是，如果操作的索引是唯一索引或主键，InnoDB 会对 Next-Key Lock 进行优化，将其降级为 Record Lock，即仅锁住索引本身，而不是范围。"}]},{"ID":"20240201213275-pogb0z0","Type":"NodeParagraph","Properties":{"id":"20240201213275-pogb0z0","updated":"20240201213275"},"Children":[{"Type":"NodeText","Data":"一些大厂面试中可能会问到 Next-Key Lock 的加锁范围，这里推荐一篇文章："},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://segmentfault.com/a/1190000040129107","TextMarkTextContent":"MySQL next-key lock 加锁范围是什么？ - 程序员小航 - 2021"},{"Type":"NodeText","Data":" 。"}]},{"ID":"20240201213276-ip6l4nu","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240201213276-ip6l4nu","updated":"20240201213276"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"共享锁和排他锁呢？"}]},{"ID":"20240201213277-livvdjz","Type":"NodeParagraph","Properties":{"id":"20240201213277-livvdjz","updated":"20240201213277"},"Children":[{"Type":"NodeText","Data":"不论是表级锁还是行级锁，都存在共享锁（Share Lock，S 锁）和排他锁（Exclusive Lock，X 锁）这两类："}]},{"ID":"20240201213278-1hmbtdm","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213278-1hmbtdm","updated":"20240201213278"},"Children":[{"ID":"20240201213279-5u60r2f","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213279-5u60r2f","updated":"20240201213279"},"Children":[{"ID":"20240201213280-zs0jsig","Type":"NodeParagraph","Properties":{"id":"20240201213280-zs0jsig","updated":"20240201213280"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"共享锁（S 锁）"},{"Type":"NodeText","Data":"：又称读锁，事务在读取记录的时候获取共享锁，允许多个事务同时获取（锁兼容）。"}]}]},{"ID":"20240201213281-yetcyhe","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213281-yetcyhe","updated":"20240201213281"},"Children":[{"ID":"20240201213282-v0qh9cu","Type":"NodeParagraph","Properties":{"id":"20240201213282-v0qh9cu","updated":"20240201213282"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"排他锁（X 锁）"},{"Type":"NodeText","Data":"：又称写锁/独占锁，事务在修改记录的时候获取排他锁，不允许多个事务同时获取。如果一个记录已经被加了排他锁，那其他事务不能再对这条事务加任何类型的锁（锁不兼容）。"}]}]}]},{"ID":"20240201213283-fqmiax4","Type":"NodeParagraph","Properties":{"id":"20240201213283-fqmiax4","updated":"20240201213283"},"Children":[{"Type":"NodeText","Data":"排他锁与任何的锁都不兼容，共享锁仅和共享锁兼容。"}]},{"ID":"20240201213284-mrbtjo7","Type":"NodeTable","Data":"|      | S 锁   | X 锁 |\n| :--- | :----- | :--- |\n| S 锁 | 不冲突 | 冲突 |\n| X 锁 | 冲突   | 冲突 |","TableAligns":[1,1,1],"Properties":{"id":"20240201213284-mrbtjo7","updated":"20240201213284"},"Children":[{"Type":"NodeTableHead","Properties":{"id":""},"Children":[{"Type":"NodeTableRow","Properties":{"id":""},"Children":[{"Type":"NodeTableCell","TableCellAlign":1,"Properties":{"id":""}},{"Type":"NodeTableCell","TableCellAlign":1,"Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"S 锁"}]},{"Type":"NodeTableCell","TableCellAlign":1,"Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"X 锁"}]}]}]},{"Type":"NodeTableRow","TableAligns":[1,1,1],"Properties":{"id":""},"Children":[{"Type":"NodeTableCell","TableCellAlign":1,"Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"S 锁"}]},{"Type":"NodeTableCell","TableCellAlign":1,"Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"不冲突"}]},{"Type":"NodeTableCell","TableCellAlign":1,"Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"冲突"}]}]},{"Type":"NodeTableRow","TableAligns":[1,1,1],"Properties":{"id":""},"Children":[{"Type":"NodeTableCell","TableCellAlign":1,"Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"X 锁"}]},{"Type":"NodeTableCell","TableCellAlign":1,"Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"冲突"}]},{"Type":"NodeTableCell","TableCellAlign":1,"Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"冲突"}]}]}]},{"ID":"20240201213285-nq1om73","Type":"NodeParagraph","Properties":{"id":"20240201213285-nq1om73","updated":"20240201213285"},"Children":[{"Type":"NodeText","Data":"由于 MVCC 的存在，对于一般的 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"SELECT"},{"Type":"NodeText","Data":" 语句，InnoDB 不会加任何锁。不过， 你可以通过以下语句显式加共享锁或排他锁。"}]},{"ID":"20240201213286-amavpv4","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"c3Fs","CodeBlockCloseFence":"YGBg","Properties":{"id":"20240201213286-amavpv4","updated":"20240201213286"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"c3Fs","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"# 共享锁 可以在 MySQL 5.7 和 MySQL 8.0 中使用\nSELECT ... LOCK IN SHARE MODE;\n# 共享锁 可以在 MySQL 8.0 中使用\nSELECT ... FOR SHARE;\n# 排他锁\nSELECT ... FOR UPDATE;\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20240201213287-ta7jr2m","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240201213287-ta7jr2m","updated":"20240201213287"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"意向锁有什么作用？"}]},{"ID":"20240201213288-j3yhglw","Type":"NodeParagraph","Properties":{"id":"20240201213288-j3yhglw","updated":"20240201213288"},"Children":[{"Type":"NodeText","Data":"如果需要用到表锁的话，如何判断表中的记录没有行锁呢，一行一行遍历肯定是不行，性能太差。我们需要用到一个叫做意向锁的东东来快速判断是否可以对某个表使用表锁。"}]},{"ID":"20240201213289-bphinr7","Type":"NodeParagraph","Properties":{"id":"20240201213289-bphinr7","updated":"20240201213289"},"Children":[{"Type":"NodeText","Data":"意向锁是表级锁，共有两种："}]},{"ID":"20240201213290-2aam6g1","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213290-2aam6g1","updated":"20240201213290"},"Children":[{"ID":"20240201213291-so1x8ri","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213291-so1x8ri","updated":"20240201213291"},"Children":[{"ID":"20240201213292-k6z54ba","Type":"NodeParagraph","Properties":{"id":"20240201213292-k6z54ba","updated":"20240201213292"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"意向共享锁（Intention Shared Lock，IS 锁）"},{"Type":"NodeText","Data":"：事务有意向对表中的某些记录加共享锁（S 锁），加共享锁前必须先取得该表的 IS 锁。"}]}]},{"ID":"20240201213293-j7oh9o2","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213293-j7oh9o2","updated":"20240201213293"},"Children":[{"ID":"20240201213294-l6a0npk","Type":"NodeParagraph","Properties":{"id":"20240201213294-l6a0npk","updated":"20240201213294"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"意向排他锁（Intention Exclusive Lock，IX 锁）"},{"Type":"NodeText","Data":"：事务有意向对表中的某些记录加排他锁（X 锁），加排他锁之前必须先取得该表的 IX 锁。"}]}]}]},{"ID":"20240201213295-efkkhp2","Type":"NodeParagraph","Properties":{"id":"20240201213295-efkkhp2","updated":"20240201213295"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"意向锁是由数据引擎自己维护的，用户无法手动操作意向锁，在为数据行加共享/排他锁之前，InooDB 会先获取该数据行所在在数据表的对应意向锁。"}]},{"ID":"20240201213296-iupt2i4","Type":"NodeParagraph","Properties":{"id":"20240201213296-iupt2i4","updated":"20240201213296"},"Children":[{"Type":"NodeText","Data":"意向锁之间是互相兼容的。"}]},{"ID":"20240201213297-tq2vh0e","Type":"NodeTable","Data":"|       | IS 锁 | IX 锁 |\n| ----- | ----- | ----- |\n| IS 锁 | 兼容  | 兼容  |\n| IX 锁 | 兼容  | 兼容  |","TableAligns":[0,0,0],"Properties":{"id":"20240201213297-tq2vh0e","updated":"20240201213297"},"Children":[{"Type":"NodeTableHead","Properties":{"id":""},"Children":[{"Type":"NodeTableRow","Properties":{"id":""},"Children":[{"Type":"NodeTableCell","Properties":{"id":""}},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"IS 锁"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"IX 锁"}]}]}]},{"Type":"NodeTableRow","TableAligns":[0,0,0],"Properties":{"id":""},"Children":[{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"IS 锁"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"兼容"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"兼容"}]}]},{"Type":"NodeTableRow","TableAligns":[0,0,0],"Properties":{"id":""},"Children":[{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"IX 锁"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"兼容"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"兼容"}]}]}]},{"ID":"20240201213298-qc4yb1g","Type":"NodeParagraph","Properties":{"id":"20240201213298-qc4yb1g","updated":"20240201213298"},"Children":[{"Type":"NodeText","Data":"意向锁和共享锁和排它锁互斥（这里指的是表级别的共享锁和排他锁，意向锁不会与行级的共享锁和排他锁互斥）。"}]},{"ID":"20240201213299-aa9trfc","Type":"NodeTable","Data":"|      | IS 锁 | IX 锁 |\n| ---- | ----- | ----- |\n| S 锁 | 兼容  | 互斥  |\n| X 锁 | 互斥  | 互斥  |","TableAligns":[0,0,0],"Properties":{"id":"20240201213299-aa9trfc","updated":"20240201213299"},"Children":[{"Type":"NodeTableHead","Properties":{"id":""},"Children":[{"Type":"NodeTableRow","Properties":{"id":""},"Children":[{"Type":"NodeTableCell","Properties":{"id":""}},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"IS 锁"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"IX 锁"}]}]}]},{"Type":"NodeTableRow","TableAligns":[0,0,0],"Properties":{"id":""},"Children":[{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"S 锁"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"兼容"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"互斥"}]}]},{"Type":"NodeTableRow","TableAligns":[0,0,0],"Properties":{"id":""},"Children":[{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"X 锁"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"互斥"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"互斥"}]}]}]},{"ID":"20240201213300-j3739zh","Type":"NodeParagraph","Properties":{"id":"20240201213300-j3739zh","updated":"20240201213300"},"Children":[{"Type":"NodeText","Data":"《MySQL 技术内幕 InnoDB 存储引擎》这本书对应的描述应该是笔误了。"}]},{"ID":"20240201213301-6jqvjie","Type":"NodeParagraph","Properties":{"id":"20240201213301-6jqvjie","updated":"20240201213301"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"https://oss.javaguide.cn/github/javaguide/mysql/image-20220511171419081.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201213302-rxs85ee","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240201213302-rxs85ee","updated":"20240201213302"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"当前读和快照读有什么区别？"}]},{"ID":"20240201213303-k2sgyh0","Type":"NodeParagraph","Properties":{"id":"20240201213303-k2sgyh0","updated":"20240201213303"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"快照读"},{"Type":"NodeText","Data":"（一致性非锁定读）就是单纯的 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"SELECT"},{"Type":"NodeText","Data":" 语句，但不包括下面这两类 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"SELECT"},{"Type":"NodeText","Data":" 语句："}]},{"ID":"20240201213304-scc75yq","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"c3Fs","CodeBlockCloseFence":"YGBg","Properties":{"id":"20240201213304-scc75yq","updated":"20240201213304"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"c3Fs","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"SELECT ... FOR UPDATE\n# 共享锁 可以在 MySQL 5.7 和 MySQL 8.0 中使用\nSELECT ... LOCK IN SHARE MODE;\n# 共享锁 可以在 MySQL 8.0 中使用\nSELECT ... FOR SHARE;\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20240201213305-ypeycnn","Type":"NodeParagraph","Properties":{"id":"20240201213305-ypeycnn","updated":"20240201213305"},"Children":[{"Type":"NodeText","Data":"快照即记录的历史版本，每行记录可能存在多个历史版本（多版本技术）。"}]},{"ID":"20240201213306-f1fkqmt","Type":"NodeParagraph","Properties":{"id":"20240201213306-f1fkqmt","updated":"20240201213306"},"Children":[{"Type":"NodeText","Data":"快照读的情况下，如果读取的记录正在执行 UPDATE/DELETE 操作，读取操作不会因此去等待记录上 X 锁的释放，而是会去读取行的一个快照。"}]},{"ID":"20240201213307-68zqkhu","Type":"NodeParagraph","Properties":{"id":"20240201213307-68zqkhu","updated":"20240201213307"},"Children":[{"Type":"NodeText","Data":"只有在事务隔离级别 RC(读取已提交) 和 RR（可重读）下，InnoDB 才会使用一致性非锁定读："}]},{"ID":"20240201213308-knql2fw","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213308-knql2fw","updated":"20240201213308"},"Children":[{"ID":"20240201213309-a52xm6s","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213309-a52xm6s","updated":"20240201213309"},"Children":[{"ID":"20240201213310-4vlfh4y","Type":"NodeParagraph","Properties":{"id":"20240201213310-4vlfh4y","updated":"20240201213310"},"Children":[{"Type":"NodeText","Data":"在 RC 级别下，对于快照数据，一致性非锁定读总是读取被锁定行的最新一份快照数据。"}]}]},{"ID":"20240201213311-mkgomq1","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213311-mkgomq1","updated":"20240201213311"},"Children":[{"ID":"20240201213312-a5cp62g","Type":"NodeParagraph","Properties":{"id":"20240201213312-a5cp62g","updated":"20240201213312"},"Children":[{"Type":"NodeText","Data":"在 RR 级别下，对于快照数据，一致性非锁定读总是读取本事务开始时的行数据版本。"}]}]}]},{"ID":"20240201213313-r16jlvp","Type":"NodeParagraph","Properties":{"id":"20240201213313-r16jlvp","updated":"20240201213313"},"Children":[{"Type":"NodeText","Data":"快照读比较适合对于数据一致性要求不是特别高且追求极致性能的业务场景。"}]},{"ID":"20240201213314-ql5h81f","Type":"NodeParagraph","Properties":{"id":"20240201213314-ql5h81f","updated":"20240201213314"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"当前读"},{"Type":"NodeText","Data":" （一致性锁定读）就是给行记录加 X 锁或 S 锁。"}]},{"ID":"20240201213315-uvr5aa8","Type":"NodeParagraph","Properties":{"id":"20240201213315-uvr5aa8","updated":"20240201213315"},"Children":[{"Type":"NodeText","Data":"当前读的一些常见 SQL 语句类型如下："}]},{"ID":"20240201213316-rngkuhs","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"c3Fs","CodeBlockCloseFence":"YGBg","Properties":{"id":"20240201213316-rngkuhs","updated":"20240201213316"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"c3Fs","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"# 对读的记录加一个X锁\nSELECT...FOR UPDATE\n# 对读的记录加一个S锁\nSELECT...LOCK IN SHARE MODE\n# 对读的记录加一个S锁\nSELECT...FOR SHARE\n# 对修改的记录加一个X锁\nINSERT...\nUPDATE...\nDELETE...\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20240201213317-hw1jkwr","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240201213317-hw1jkwr","updated":"20240201213317"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"自增锁有了解吗？"}]},{"ID":"20240201213318-uebiaxz","Type":"NodeBlockquote","Properties":{"id":"20240201213318-uebiaxz","updated":"20240201213318"},"Children":[{"Type":"NodeBlockquoteMarker","Data":"\u003e ","Properties":{"id":""}},{"ID":"20240201213319-ixbythp","Type":"NodeParagraph","Properties":{"id":"20240201213319-ixbythp","updated":"20240201213319"},"Children":[{"Type":"NodeText","Data":"不太重要的一个知识点，简单了解即可。"}]}]},{"ID":"20240201213320-ds8exh7","Type":"NodeParagraph","Properties":{"id":"20240201213320-ds8exh7","updated":"20240201213320"},"Children":[{"Type":"NodeText","Data":"关系型数据库设计表的时候，通常会有一列作为自增主键。InnoDB 中的自增主键会涉及一种比较特殊的表级锁— "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"自增锁（AUTO-INC Locks）"},{"Type":"NodeText","Data":" 。"}]},{"ID":"20240201213321-v2zams2","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"c3Fs","CodeBlockCloseFence":"YGBg","Properties":{"id":"20240201213321-v2zams2","updated":"20240201213321"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"c3Fs","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"CREATE TABLE `sequence_id` (\n  `id` BIGINT(20) UNSIGNED NOT NULL AUTO_INCREMENT,\n  `stub` CHAR(10) NOT NULL DEFAULT '',\n  PRIMARY KEY (`id`),\n  UNIQUE KEY `stub` (`stub`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20240201213322-r1n6koq","Type":"NodeParagraph","Properties":{"id":"20240201213322-r1n6koq","updated":"20240201213322"},"Children":[{"Type":"NodeText","Data":"更准确点来说，不仅仅是自增主键，"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"AUTO_INCREMENT"},{"Type":"NodeText","Data":"的列都会涉及到自增锁，毕竟非主键也可以设置自增长。"}]},{"ID":"20240201213323-pwmao1d","Type":"NodeParagraph","Properties":{"id":"20240201213323-pwmao1d","updated":"20240201213323"},"Children":[{"Type":"NodeText","Data":"如果一个事务正在插入数据到有自增列的表时，会先获取自增锁，拿不到就可能会被阻塞住。这里的阻塞行为只是自增锁行为的其中一种，可以理解为自增锁就是一个接口，其具体的实现有多种。具体的配置项为 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"innodb_autoinc_lock_mode"},{"Type":"NodeText","Data":" （MySQL 5.1.22 引入），可以选择的值如下："}]},{"ID":"20240201213324-6wvrzcl","Type":"NodeTable","Data":"| innodb_autoinc_lock_mode | 介绍                           |\n| :----------------------- | :----------------------------- |\n| 0                        | 传统模式                       |\n| 1                        | 连续模式（MySQL 8.0 之前默认） |\n| 2                        | 交错模式(MySQL 8.0 之后默认)   |","TableAligns":[1,1],"Properties":{"id":"20240201213324-6wvrzcl","updated":"20240201213324"},"Children":[{"Type":"NodeTableHead","Properties":{"id":""},"Children":[{"Type":"NodeTableRow","Properties":{"id":""},"Children":[{"Type":"NodeTableCell","TableCellAlign":1,"Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"innodb_autoinc_lock_mode"}]},{"Type":"NodeTableCell","TableCellAlign":1,"Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"介绍"}]}]}]},{"Type":"NodeTableRow","TableAligns":[1,1],"Properties":{"id":""},"Children":[{"Type":"NodeTableCell","TableCellAlign":1,"Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"0"}]},{"Type":"NodeTableCell","TableCellAlign":1,"Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"传统模式"}]}]},{"Type":"NodeTableRow","TableAligns":[1,1],"Properties":{"id":""},"Children":[{"Type":"NodeTableCell","TableCellAlign":1,"Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"1"}]},{"Type":"NodeTableCell","TableCellAlign":1,"Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"连续模式（MySQL 8.0 之前默认）"}]}]},{"Type":"NodeTableRow","TableAligns":[1,1],"Properties":{"id":""},"Children":[{"Type":"NodeTableCell","TableCellAlign":1,"Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"2"}]},{"Type":"NodeTableCell","TableCellAlign":1,"Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"交错模式(MySQL 8.0 之后默认)"}]}]}]},{"ID":"20240201213325-tmhq237","Type":"NodeParagraph","Properties":{"id":"20240201213325-tmhq237","updated":"20240201213325"},"Children":[{"Type":"NodeText","Data":"交错模式下，所有的“INSERT-LIKE”语句（所有的插入语句，包括："},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"INSERT"},{"Type":"NodeText","Data":"、"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"REPLACE"},{"Type":"NodeText","Data":"、"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"INSERT…SELECT"},{"Type":"NodeText","Data":"、"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"REPLACE…SELECT"},{"Type":"NodeText","Data":"、"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"LOAD DATA"},{"Type":"NodeText","Data":"等）都不使用表级锁，使用的是轻量级互斥锁实现，多条插入语句可以并发执行，速度更快，扩展性也更好。"}]},{"ID":"20240201213326-29o9tgm","Type":"NodeParagraph","Properties":{"id":"20240201213326-29o9tgm","updated":"20240201213326"},"Children":[{"Type":"NodeText","Data":"不过，如果你的 MySQL 数据库有主从同步需求并且 Binlog 存储格式为 Statement 的话，不要将 InnoDB 自增锁模式设置为交叉模式，不然会有数据不一致性问题。这是因为并发情况下插入语句的执行顺序就无法得到保障。"}]},{"ID":"20240201213327-wbsrobx","Type":"NodeBlockquote","Properties":{"id":"20240201213327-wbsrobx","updated":"20240201213327"},"Children":[{"Type":"NodeBlockquoteMarker","Data":"\u003e ","Properties":{"id":""}},{"ID":"20240201213328-koq80wc","Type":"NodeParagraph","Properties":{"id":"20240201213328-koq80wc","updated":"20240201213328"},"Children":[{"Type":"NodeText","Data":"如果 MySQL 采用的格式为 Statement ，那么 MySQL 的主从同步实际上同步的就是一条一条的 SQL 语句。"}]}]},{"ID":"20240201213329-i7rfk6s","Type":"NodeParagraph","Properties":{"id":"20240201213329-i7rfk6s","updated":"20240201213329"},"Children":[{"Type":"NodeText","Data":"最后，再推荐一篇文章："},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://draveness.me/whys-the-design-mysql-auto-increment/","TextMarkTextContent":"为什么 MySQL 的自增主键不单调也不连续"},{"Type":"NodeText","Data":" 。"}]},{"ID":"20240201213330-kjbz2ny","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240201213330-kjbz2ny","updated":"20240201213330"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"MySQL 性能优化"}]},{"ID":"20240201213331-dj48ngc","Type":"NodeParagraph","Properties":{"id":"20240201213331-dj48ngc","updated":"20240201213331"},"Children":[{"Type":"NodeText","Data":"关于 MySQL 性能优化的建议总结，请看这篇文章："},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"./mysql-high-performance-optimization-specification-recommendations.md","TextMarkTextContent":"MySQL 高性能优化规范建议总结"},{"Type":"NodeText","Data":" 。"}]},{"ID":"20240201213332-ons27tn","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240201213332-ons27tn","updated":"20240201213332"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"能用 MySQL 直接存储文件（比如图片）吗？"}]},{"ID":"20240201213333-8p02a0x","Type":"NodeParagraph","Properties":{"id":"20240201213333-8p02a0x","updated":"20240201213333"},"Children":[{"Type":"NodeText","Data":"可以是可以，直接存储文件对应的二进制数据即可。不过，还是建议不要在数据库中存储文件，会严重影响数据库性能，消耗过多存储空间。"}]},{"ID":"20240201213334-oadcjin","Type":"NodeParagraph","Properties":{"id":"20240201213334-oadcjin","updated":"20240201213334"},"Children":[{"Type":"NodeText","Data":"可以选择使用云服务厂商提供的开箱即用的文件存储服务，成熟稳定，价格也比较低。"}]},{"ID":"20240201213335-k5cuqxh","Type":"NodeParagraph","Properties":{"id":"20240201213335-k5cuqxh","updated":"20240201213335"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"https://oss.javaguide.cn/github/javaguide/mysql/oss-search.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201213336-hjgsajz","Type":"NodeParagraph","Properties":{"id":"20240201213336-hjgsajz","updated":"20240201213336"},"Children":[{"Type":"NodeText","Data":"也可以选择自建文件存储服务，实现起来也不难，基于 FastDFS、MinIO（推荐） 等开源项目就可以实现分布式文件服务。"}]},{"ID":"20240201213337-14pizet","Type":"NodeParagraph","Properties":{"id":"20240201213337-14pizet","updated":"20240201213337"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"数据库只存储文件地址信息，文件由文件存储服务负责存储。"}]},{"ID":"20240201213338-pstjqwg","Type":"NodeParagraph","Properties":{"id":"20240201213338-pstjqwg","updated":"20240201213338"},"Children":[{"Type":"NodeText","Data":"相关阅读："},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://www.51cto.com/article/716978.html","TextMarkTextContent":"Spring Boot 整合 MinIO 实现分布式文件服务"},{"Type":"NodeText","Data":" 。"}]},{"ID":"20240201213339-jektlj8","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240201213339-jektlj8","updated":"20240201213339"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"MySQL 如何存储 IP 地址？"}]},{"ID":"20240201213340-5kpvc9o","Type":"NodeParagraph","Properties":{"id":"20240201213340-5kpvc9o","updated":"20240201213340"},"Children":[{"Type":"NodeText","Data":"可以将 IP 地址转换成整形数据存储，性能更好，占用空间也更小。"}]},{"ID":"20240201213341-vmrkdti","Type":"NodeParagraph","Properties":{"id":"20240201213341-vmrkdti","updated":"20240201213341"},"Children":[{"Type":"NodeText","Data":"MySQL 提供了两个方法来处理 ip 地址"}]},{"ID":"20240201213342-y5eky3t","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213342-y5eky3t","updated":"20240201213342"},"Children":[{"ID":"20240201213343-71ku7lq","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213343-71ku7lq","updated":"20240201213343"},"Children":[{"ID":"20240201213344-kuxq666","Type":"NodeParagraph","Properties":{"id":"20240201213344-kuxq666","updated":"20240201213344"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"INET_ATON()"},{"Type":"NodeText","Data":"：把 ip 转为无符号整型 (4-8 位)"}]}]},{"ID":"20240201213345-wjz54q2","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213345-wjz54q2","updated":"20240201213345"},"Children":[{"ID":"20240201213346-l9tw6dt","Type":"NodeParagraph","Properties":{"id":"20240201213346-l9tw6dt","updated":"20240201213346"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"INET_NTOA()"},{"Type":"NodeText","Data":" :把整型的 ip 转为地址"}]}]}]},{"ID":"20240201213347-5bq5n8r","Type":"NodeParagraph","Properties":{"id":"20240201213347-5bq5n8r","updated":"20240201213347"},"Children":[{"Type":"NodeText","Data":"插入数据前，先用 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"INET_ATON()"},{"Type":"NodeText","Data":" 把 ip 地址转为整型，显示数据时，使用 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"INET_NTOA()"},{"Type":"NodeText","Data":" 把整型的 ip 地址转为地址显示即可。"}]},{"ID":"20240201213348-opyt7x1","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240201213348-opyt7x1","updated":"20240201213348"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"有哪些常见的 SQL 优化手段？"}]},{"ID":"20240201213349-gd8quxq","Type":"NodeParagraph","Properties":{"id":"20240201213349-gd8quxq","updated":"20240201213349"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"../../zhuanlan/java-mian-shi-zhi-bei.md","TextMarkTextContent":"《Java 面试指北》(付费)"},{"Type":"NodeText","Data":" 的 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"「技术面试题篇」"},{"Type":"NodeText","Data":" 有一篇文章详细介绍了常见的 SQL 优化手段，非常全面，清晰易懂！"}]},{"ID":"20240201213350-d1w125g","Type":"NodeParagraph","Properties":{"id":"20240201213350-d1w125g","updated":"20240201213350"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"常见的 SQL 优化手段","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"https://oss.javaguide.cn/javamianshizhibei/javamianshizhibei-sql-optimization.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201213351-tyitkqd","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240201213351-tyitkqd","updated":"20240201213351"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"如何分析 SQL 的性能？"}]},{"ID":"20240201213352-b1ouuym","Type":"NodeParagraph","Properties":{"id":"20240201213352-b1ouuym","updated":"20240201213352"},"Children":[{"Type":"NodeText","Data":"我们可以使用 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"EXPLAIN"},{"Type":"NodeText","Data":" 命令来分析 SQL 的 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"执行计划"},{"Type":"NodeText","Data":" 。执行计划是指一条 SQL 语句在经过 MySQL 查询优化器的优化会后，具体的执行方式。"}]},{"ID":"20240201213353-se9912w","Type":"NodeParagraph","Properties":{"id":"20240201213353-se9912w","updated":"20240201213353"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"EXPLAIN"},{"Type":"NodeText","Data":" 并不会真的去执行相关的语句，而是通过 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"查询优化器"},{"Type":"NodeText","Data":" 对语句进行分析，找出最优的查询方案，并显示对应的信息。"}]},{"ID":"20240201213354-gjpov7x","Type":"NodeParagraph","Properties":{"id":"20240201213354-gjpov7x","updated":"20240201213354"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"EXPLAIN"},{"Type":"NodeText","Data":" 适用于 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"SELECT"},{"Type":"NodeText","Data":", "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"DELETE"},{"Type":"NodeText","Data":", "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"INSERT"},{"Type":"NodeText","Data":", "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"REPLACE"},{"Type":"NodeText","Data":", 和 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"UPDATE"},{"Type":"NodeText","Data":"语句，我们一般分析 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"SELECT"},{"Type":"NodeText","Data":" 查询较多。"}]},{"ID":"20240201213355-uinxcq2","Type":"NodeParagraph","Properties":{"id":"20240201213355-uinxcq2","updated":"20240201213355"},"Children":[{"Type":"NodeText","Data":"我们这里简单来演示一下 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"EXPLAIN"},{"Type":"NodeText","Data":" 的使用。"}]},{"ID":"20240201213356-giy5r9w","Type":"NodeParagraph","Properties":{"id":"20240201213356-giy5r9w","updated":"20240201213356"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"EXPLAIN"},{"Type":"NodeText","Data":" 的输出格式如下："}]},{"ID":"20240201213357-splfjsi","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"c3Fs","CodeBlockCloseFence":"YGBg","Properties":{"id":"20240201213357-splfjsi","updated":"20240201213357"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"c3Fs","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"mysql\u003e EXPLAIN SELECT `score`,`name` FROM `cus_order` ORDER BY `score` DESC;\n+----+-------------+-----------+------------+------+---------------+------+---------+------+--------+----------+----------------+\n| id | select_type | table     | partitions | type | possible_keys | key  | key_len | ref  | rows   | filtered | Extra          |\n+----+-------------+-----------+------------+------+---------------+------+---------+------+--------+----------+----------------+\n|  1 | SIMPLE      | cus_order | NULL       | ALL  | NULL          | NULL | NULL    | NULL | 997572 |   100.00 | Using filesort |\n+----+-------------+-----------+------------+------+---------------+------+---------+------+--------+----------+----------------+\n1 row in set, 1 warning (0.00 sec)\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20240201213358-60hlgkb","Type":"NodeParagraph","Properties":{"id":"20240201213358-60hlgkb","updated":"20240201213358"},"Children":[{"Type":"NodeText","Data":"各个字段的含义如下："}]},{"ID":"20240201213359-fdwdoaf","Type":"NodeTable","Data":"| **列名**      | **含义**                                     |\n| ------------- | -------------------------------------------- |\n| id            | SELECT 查询的序列标识符                      |\n| select_type   | SELECT 关键字对应的查询类型                  |\n| table         | 用到的表名                                   |\n| partitions    | 匹配的分区，对于未分区的表，值为 NULL        |\n| type          | 表的访问方法                                 |\n| possible_keys | 可能用到的索引                               |\n| key           | 实际用到的索引                               |\n| key_len       | 所选索引的长度                               |\n| ref           | 当使用索引等值查询时，与索引作比较的列或常量 |\n| rows          | 预计要读取的行数                             |\n| filtered      | 按表条件过滤后，留存的记录数的百分比         |\n| Extra         | 附加信息                                     |","TableAligns":[0,0],"Properties":{"id":"20240201213359-fdwdoaf","updated":"20240201213359"},"Children":[{"Type":"NodeTableHead","Properties":{"id":""},"Children":[{"Type":"NodeTableRow","Properties":{"id":""},"Children":[{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"列名"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"含义"}]}]}]},{"Type":"NodeTableRow","TableAligns":[0,0],"Properties":{"id":""},"Children":[{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"id"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"SELECT 查询的序列标识符"}]}]},{"Type":"NodeTableRow","TableAligns":[0,0],"Properties":{"id":""},"Children":[{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"select_type"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"SELECT 关键字对应的查询类型"}]}]},{"Type":"NodeTableRow","TableAligns":[0,0],"Properties":{"id":""},"Children":[{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"table"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"用到的表名"}]}]},{"Type":"NodeTableRow","TableAligns":[0,0],"Properties":{"id":""},"Children":[{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"partitions"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"匹配的分区，对于未分区的表，值为 NULL"}]}]},{"Type":"NodeTableRow","TableAligns":[0,0],"Properties":{"id":""},"Children":[{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"type"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"表的访问方法"}]}]},{"Type":"NodeTableRow","TableAligns":[0,0],"Properties":{"id":""},"Children":[{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"possible_keys"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"可能用到的索引"}]}]},{"Type":"NodeTableRow","TableAligns":[0,0],"Properties":{"id":""},"Children":[{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"key"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"实际用到的索引"}]}]},{"Type":"NodeTableRow","TableAligns":[0,0],"Properties":{"id":""},"Children":[{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"key_len"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"所选索引的长度"}]}]},{"Type":"NodeTableRow","TableAligns":[0,0],"Properties":{"id":""},"Children":[{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"ref"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"当使用索引等值查询时，与索引作比较的列或常量"}]}]},{"Type":"NodeTableRow","TableAligns":[0,0],"Properties":{"id":""},"Children":[{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"rows"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"预计要读取的行数"}]}]},{"Type":"NodeTableRow","TableAligns":[0,0],"Properties":{"id":""},"Children":[{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"filtered"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"按表条件过滤后，留存的记录数的百分比"}]}]},{"Type":"NodeTableRow","TableAligns":[0,0],"Properties":{"id":""},"Children":[{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"Extra"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"附加信息"}]}]}]},{"ID":"20240201213360-531yoob","Type":"NodeParagraph","Properties":{"id":"20240201213360-531yoob","updated":"20240201213360"},"Children":[{"Type":"NodeText","Data":"篇幅问题，我这里只是简单介绍了一下 MySQL 执行计划，详细介绍请看："},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"./mysql-query-execution-plan.md","TextMarkTextContent":"SQL 的执行计划"},{"Type":"NodeText","Data":"这篇文章。"}]},{"ID":"20240201213361-90ep24k","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240201213361-90ep24k","updated":"20240201213361"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"读写分离和分库分表了解吗？"}]},{"ID":"20240201213362-vydzeq8","Type":"NodeParagraph","Properties":{"id":"20240201213362-vydzeq8","updated":"20240201213362"},"Children":[{"Type":"NodeText","Data":"读写分离和分库分表相关的问题比较多，于是，我单独写了一篇文章来介绍："},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"../../high-performance/read-and-write-separation-and-library-subtable.md","TextMarkTextContent":"读写分离和分库分表详解"},{"Type":"NodeText","Data":"。"}]},{"ID":"20240201213363-jopkzoa","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240201213363-jopkzoa","updated":"20240201213363"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"深度分页如何优化？"}]},{"ID":"20240201213364-vo1g7bf","Type":"NodeParagraph","Properties":{"id":"20240201213364-vo1g7bf","updated":"20240201213364"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"../../high-performance/deep-pagination-optimization.md","TextMarkTextContent":"深度分页介绍及优化建议"}]},{"ID":"20240201213365-er8clb7","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240201213365-er8clb7","updated":"20240201213365"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"数据冷热分离如何做？"}]},{"ID":"20240201213366-t29ju0v","Type":"NodeParagraph","Properties":{"id":"20240201213366-t29ju0v","updated":"20240201213366"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"../../high-performance/data-cold-hot-separation.md","TextMarkTextContent":"数据冷热分离详解"}]},{"ID":"20240201213367-qe8wm0h","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240201213367-qe8wm0h","updated":"20240201213367"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"常见的数据库优化方法有哪些？"}]},{"ID":"20240201213368-1afnorj","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213368-1afnorj","updated":"20240201213368"},"Children":[{"ID":"20240201213369-g7bi29u","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213369-g7bi29u","updated":"20240201213369"},"Children":[{"ID":"20240201213370-pr4vh9a","Type":"NodeParagraph","Properties":{"id":"20240201213370-pr4vh9a","updated":"20240201213370"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"./mysql-index.md","TextMarkTextContent":"索引优化"}]}]},{"ID":"20240201213371-67iw47k","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213371-67iw47k","updated":"20240201213371"},"Children":[{"ID":"20240201213372-0jsf41q","Type":"NodeParagraph","Properties":{"id":"20240201213372-0jsf41q","updated":"20240201213372"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"../../high-performance/read-and-write-separation-and-library-subtable.md","TextMarkTextContent":"读写分离和分库分表"}]}]},{"ID":"20240201213373-5btyd1o","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213373-5btyd1o","updated":"20240201213373"},"Children":[{"ID":"20240201213374-yvun2mr","Type":"NodeParagraph","Properties":{"id":"20240201213374-yvun2mr","updated":"20240201213374"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"../../high-performance/data-cold-hot-separation.md","TextMarkTextContent":"数据冷热分离"}]}]},{"ID":"20240201213375-563jdke","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213375-563jdke","updated":"20240201213375"},"Children":[{"ID":"20240201213376-pdjgx7u","Type":"NodeParagraph","Properties":{"id":"20240201213376-pdjgx7u","updated":"20240201213376"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"../../high-performance/sql-optimization.md","TextMarkTextContent":"SQL 优化"}]}]},{"ID":"20240201213377-55ppxeu","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213377-55ppxeu","updated":"20240201213377"},"Children":[{"ID":"20240201213378-rijrtuk","Type":"NodeParagraph","Properties":{"id":"20240201213378-rijrtuk","updated":"20240201213378"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"../../high-performance/deep-pagination-optimization.md","TextMarkTextContent":"深度分页优化"}]}]},{"ID":"20240201213379-awzccj1","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213379-awzccj1","updated":"20240201213379"},"Children":[{"ID":"20240201213380-qtqz6kv","Type":"NodeParagraph","Properties":{"id":"20240201213380-qtqz6kv","updated":"20240201213380"},"Children":[{"Type":"NodeText","Data":"适当冗余数据"}]}]},{"ID":"20240201213381-ycrz9oz","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213381-ycrz9oz","updated":"20240201213381"},"Children":[{"ID":"20240201213382-xr7pfta","Type":"NodeParagraph","Properties":{"id":"20240201213382-xr7pfta","updated":"20240201213382"},"Children":[{"Type":"NodeText","Data":"使用更高的硬件配置"}]}]}]},{"ID":"20240201213383-0dpfgq3","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240201213383-0dpfgq3","updated":"20240201213383"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"MySQL 学习资料推荐"}]},{"ID":"20240201213384-45mconk","Type":"NodeParagraph","Properties":{"id":"20240201213384-45mconk","updated":"20240201213384"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a strong","TextMarkAHref":"../../books/database.md#mysql","TextMarkTextContent":"书籍推荐"},{"Type":"NodeText","Data":" 。"}]},{"ID":"20240201213385-vevodtt","Type":"NodeParagraph","Properties":{"id":"20240201213385-vevodtt","updated":"20240201213385"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"文章推荐"},{"Type":"NodeText","Data":" :"}]},{"ID":"20240201213386-lanrqi0","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213386-lanrqi0","updated":"20240201213386"},"Children":[{"ID":"20240201213387-lzejeta","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213387-lzejeta","updated":"20240201213387"},"Children":[{"ID":"20240201213388-dziezet","Type":"NodeParagraph","Properties":{"id":"20240201213388-dziezet","updated":"20240201213388"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://mp.weixin.qq.com/mp/appmsgalbum?__biz=Mzg3NTc3NjM4Nw==\u0026action=getalbum\u0026album_id=2372043523518300162\u0026scene=173\u0026from_msgid=2247484308\u0026from_itemidx=1\u0026count=3\u0026nolastread=1#wechat_redirect","TextMarkTextContent":"一树一溪的 MySQL 系列教程"}]}]},{"ID":"20240201213389-bfsmnfp","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213389-bfsmnfp","updated":"20240201213389"},"Children":[{"ID":"20240201213390-s4n1rog","Type":"NodeParagraph","Properties":{"id":"20240201213390-s4n1rog","updated":"20240201213390"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://mp.weixin.qq.com/mp/appmsgalbum?__biz=MzkxNTE3NjQ3MA==\u0026action=getalbum\u0026album_id=1903249596194095112\u0026scene=173\u0026from_msgid=2247490365\u0026from_itemidx=1\u0026count=3\u0026nolastread=1#wechat_redirect","TextMarkTextContent":"Yes 的 MySQL 系列教程"}]}]},{"ID":"20240201213391-dfzyb2h","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213391-dfzyb2h","updated":"20240201213391"},"Children":[{"ID":"20240201213392-w3snv73","Type":"NodeParagraph","Properties":{"id":"20240201213392-w3snv73","updated":"20240201213392"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://juejin.cn/post/7161964571853815822","TextMarkTextContent":"写完这篇 我的 SQL 优化能力直接进入新层次 - 变成派大星 - 2022"}]}]},{"ID":"20240201213393-malgf4w","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213393-malgf4w","updated":"20240201213393"},"Children":[{"ID":"20240201213394-zfy4w0g","Type":"NodeParagraph","Properties":{"id":"20240201213394-zfy4w0g","updated":"20240201213394"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://juejin.cn/post/7094049650428084232","TextMarkTextContent":"两万字详解！InnoDB 锁专题！ - 捡田螺的小男孩 - 2022"}]}]},{"ID":"20240201213395-darrtpr","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213395-darrtpr","updated":"20240201213395"},"Children":[{"ID":"20240201213396-0cec2nk","Type":"NodeParagraph","Properties":{"id":"20240201213396-0cec2nk","updated":"20240201213396"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://mp.weixin.qq.com/s/qci10h9rJx_COZbHV3aygQ","TextMarkTextContent":"MySQL 的自增主键一定是连续的吗？ - 飞天小牛肉 - 2022"}]}]},{"ID":"20240201213397-hlpwkxm","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213397-hlpwkxm","updated":"20240201213397"},"Children":[{"ID":"20240201213398-l7puwaq","Type":"NodeParagraph","Properties":{"id":"20240201213398-l7puwaq","updated":"20240201213398"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://zhuanlan.zhihu.com/p/113917726","TextMarkTextContent":"深入理解 MySQL 索引底层原理 - 腾讯技术工程 - 2020"}]}]}]},{"ID":"20240201213399-8yy7vli","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240201213399-8yy7vli","updated":"20240201213399"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"参考"}]},{"ID":"20240201213400-5ppailv","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213400-5ppailv","updated":"20240201213400"},"Children":[{"ID":"20240201213401-7msr0qu","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213401-7msr0qu","updated":"20240201213401"},"Children":[{"ID":"20240201213402-1j61xln","Type":"NodeParagraph","Properties":{"id":"20240201213402-1j61xln","updated":"20240201213402"},"Children":[{"Type":"NodeText","Data":"《高性能 MySQL》第 7 章 MySQL 高级特性"}]}]},{"ID":"20240201213403-1f2oqi1","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213403-1f2oqi1","updated":"20240201213403"},"Children":[{"ID":"20240201213404-m0jz2cr","Type":"NodeParagraph","Properties":{"id":"20240201213404-m0jz2cr","updated":"20240201213404"},"Children":[{"Type":"NodeText","Data":"《MySQL 技术内幕 InnoDB 存储引擎》第 6 章 锁"}]}]},{"ID":"20240201213405-urq7j9j","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213405-urq7j9j","updated":"20240201213405"},"Children":[{"ID":"20240201213406-r2sk24z","Type":"NodeParagraph","Properties":{"id":"20240201213406-r2sk24z","updated":"20240201213406"},"Children":[{"Type":"NodeText","Data":"Relational Database："},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://www.omnisci.com/technical-glossary/relational-database","TextMarkTextContent":"https://www.omnisci.com/technical-glossary/relational-database"}]}]},{"ID":"20240201213407-zuja2ds","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213407-zuja2ds","updated":"20240201213407"},"Children":[{"ID":"20240201213408-6730vql","Type":"NodeParagraph","Properties":{"id":"20240201213408-6730vql","updated":"20240201213408"},"Children":[{"Type":"NodeText","Data":"一篇文章看懂 mysql 中 varchar 能存多少汉字、数字，以及 varchar(100)和 varchar(10)的区别："},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://www.cnblogs.com/zhuyeshen/p/11642211.html","TextMarkTextContent":"https://www.cnblogs.com/zhuyeshen/p/11642211.html"}]}]},{"ID":"20240201213409-i4vaeox","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213409-i4vaeox","updated":"20240201213409"},"Children":[{"ID":"20240201213410-jow4ok7","Type":"NodeParagraph","Properties":{"id":"20240201213410-jow4ok7","updated":"20240201213410"},"Children":[{"Type":"NodeText","Data":"技术分享 | 隔离级别：正确理解幻读："},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://opensource.actionsky.com/20210818-mysql/","TextMarkTextContent":"https://opensource.actionsky.com/20210818-mysql/"}]}]},{"ID":"20240201213411-21ixv0j","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213411-21ixv0j","updated":"20240201213411"},"Children":[{"ID":"20240201213412-t827ra3","Type":"NodeParagraph","Properties":{"id":"20240201213412-t827ra3","updated":"20240201213412"},"Children":[{"Type":"NodeText","Data":"MySQL Server Logs - MySQL 5.7 Reference Manual："},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://dev.mysql.com/doc/refman/5.7/en/server-logs.html","TextMarkTextContent":"https://dev.mysql.com/doc/refman/5.7/en/server-logs.html"}]}]},{"ID":"20240201213413-suttv9s","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213413-suttv9s","updated":"20240201213413"},"Children":[{"ID":"20240201213414-3nikgb9","Type":"NodeParagraph","Properties":{"id":"20240201213414-3nikgb9","updated":"20240201213414"},"Children":[{"Type":"NodeText","Data":"Redo Log - MySQL 5.7 Reference Manual："},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://dev.mysql.com/doc/refman/5.7/en/innodb-redo-log.html","TextMarkTextContent":"https://dev.mysql.com/doc/refman/5.7/en/innodb-redo-log.html"}]}]},{"ID":"20240201213415-5r9ifvr","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213415-5r9ifvr","updated":"20240201213415"},"Children":[{"ID":"20240201213416-nrf1v4j","Type":"NodeParagraph","Properties":{"id":"20240201213416-nrf1v4j","updated":"20240201213416"},"Children":[{"Type":"NodeText","Data":"Locking Reads - MySQL 5.7 Reference Manual："},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://dev.mysql.com/doc/refman/5.7/en/innodb-locking-reads.html","TextMarkTextContent":"https://dev.mysql.com/doc/refman/5.7/en/innodb-locking-reads.html"}]}]},{"ID":"20240201213417-97r4idu","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213417-97r4idu","updated":"20240201213417"},"Children":[{"ID":"20240201213418-laczvdf","Type":"NodeParagraph","Properties":{"id":"20240201213418-laczvdf","updated":"20240201213418"},"Children":[{"Type":"NodeText","Data":"深入理解数据库行锁与表锁 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://zhuanlan.zhihu.com/p/52678870","TextMarkTextContent":"https://zhuanlan.zhihu.com/p/52678870"}]}]},{"ID":"20240201213419-o14yzjq","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213419-o14yzjq","updated":"20240201213419"},"Children":[{"ID":"20240201213420-o48qc3f","Type":"NodeParagraph","Properties":{"id":"20240201213420-o48qc3f","updated":"20240201213420"},"Children":[{"Type":"NodeText","Data":"详解 MySQL InnoDB 中意向锁的作用："},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://juejin.cn/post/6844903666332368909","TextMarkTextContent":"https://juejin.cn/post/6844903666332368909"}]}]},{"ID":"20240201213421-1ahxt4m","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213421-1ahxt4m","updated":"20240201213421"},"Children":[{"ID":"20240201213422-jy634ec","Type":"NodeParagraph","Properties":{"id":"20240201213422-jy634ec","updated":"20240201213422"},"Children":[{"Type":"NodeText","Data":"深入剖析 MySQL 自增锁："},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://juejin.cn/post/6968420054287253540","TextMarkTextContent":"https://juejin.cn/post/6968420054287253540"}]}]},{"ID":"20240201213423-b3nldvv","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213423-b3nldvv","updated":"20240201213423"},"Children":[{"ID":"20240201213424-b3ltcoc","Type":"NodeParagraph","Properties":{"id":"20240201213424-b3ltcoc","updated":"20240201213424"},"Children":[{"Type":"NodeText","Data":"在数据库中不可重复读和幻读到底应该怎么分？："},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://www.zhihu.com/question/392569386","TextMarkTextContent":"https://www.zhihu.com/question/392569386"}]}]}]},{"ID":"20240201213425-4jkdw8l","Type":"NodeHTMLBlock","Data":"\u003cdiv\u003e\n\u003c!-- @include: @article-footer.snippet.md --\u003e\n\u003c/div\u003e","HtmlBlockType":2,"Properties":{"id":"20240201213425-4jkdw8l","updated":"20240201213425"}}]}