{"ID":"20240201213724-xtwfrjv","Spec":"1","Type":"NodeDocument","Properties":{"id":"20240201213724-xtwfrjv","title":"bigdecimal","updated":"20240201213724"},"Children":[{"ID":"20240201213725-5ibj69y","Type":"NodeThematicBreak","Properties":{"id":"20240201213725-5ibj69y","updated":"20240201213725"}},{"ID":"20240201213726-8n3gpny","Type":"NodeParagraph","Properties":{"id":"20240201213726-8n3gpny","updated":"20240201213726"},"Children":[{"Type":"NodeText","Data":"title: BigDecimal 详解"},{"Type":"NodeSoftBreak","Data":"\n","Properties":{"id":""}},{"Type":"NodeText","Data":"category: Java"},{"Type":"NodeSoftBreak","Data":"\n","Properties":{"id":""}},{"Type":"NodeText","Data":"tag:"}]},{"ID":"20240201213727-capadyy","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"MarkerOffset":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213727-capadyy","updated":"20240201213727"},"Children":[{"ID":"20240201213728-2glxrni","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"MarkerOffset":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213728-2glxrni","updated":"20240201213728"},"Children":[{"ID":"20240201213729-ipuz0hy","Type":"NodeParagraph","Properties":{"id":"20240201213729-ipuz0hy","updated":"20240201213729"},"Children":[{"Type":"NodeText","Data":"Java基础"}]}]}]},{"ID":"20240201213730-klbtkk8","Type":"NodeThematicBreak","Properties":{"id":"20240201213730-klbtkk8","updated":"20240201213730"}},{"ID":"20240201213731-b6f1856","Type":"NodeParagraph","Properties":{"id":"20240201213731-b6f1856","updated":"20240201213731"},"Children":[{"Type":"NodeText","Data":"《阿里巴巴 Java 开发手册》中提到：“为了避免精度丢失，可以使用 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"BigDecimal"},{"Type":"NodeText","Data":" 来进行浮点数的运算”。"}]},{"ID":"20240201213732-n1f08eq","Type":"NodeParagraph","Properties":{"id":"20240201213732-n1f08eq","updated":"20240201213732"},"Children":[{"Type":"NodeText","Data":"浮点数的运算竟然还会有精度丢失的风险吗？确实会！"}]},{"ID":"20240201213733-vj3cpqz","Type":"NodeParagraph","Properties":{"id":"20240201213733-vj3cpqz","updated":"20240201213733"},"Children":[{"Type":"NodeText","Data":"示例代码："}]},{"ID":"20240201213734-otldfqn","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20240201213734-otldfqn","updated":"20240201213734"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"float a = 2.0f - 1.9f;\nfloat b = 1.8f - 1.7f;\nSystem.out.println(a);// 0.100000024\nSystem.out.println(b);// 0.099999905\nSystem.out.println(a == b);// false\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20240201213735-ccnvqbb","Type":"NodeParagraph","Properties":{"id":"20240201213735-ccnvqbb","updated":"20240201213735"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"为什么浮点数 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong code","TextMarkTextContent":"float"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":" 或 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong code","TextMarkTextContent":"double"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":" 运算的时候会有精度丢失的风险呢？"}]},{"ID":"20240201213736-kdqoood","Type":"NodeParagraph","Properties":{"id":"20240201213736-kdqoood","updated":"20240201213736"},"Children":[{"Type":"NodeText","Data":"这个和计算机保存浮点数的机制有很大关系。我们知道计算机是二进制的，而且计算机在表示一个数字时，宽度是有限的，无限循环的小数存储在计算机时，只能被截断，所以就会导致小数精度发生损失的情况。这也就是解释了为什么浮点数没有办法用二进制精确表示。"}]},{"ID":"20240201213737-tl1umyq","Type":"NodeParagraph","Properties":{"id":"20240201213737-tl1umyq","updated":"20240201213737"},"Children":[{"Type":"NodeText","Data":"就比如说十进制下的 0.2 就没办法精确转换成二进制小数："}]},{"ID":"20240201213738-co4odq5","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20240201213738-co4odq5","updated":"20240201213738"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"// 0.2 转换为二进制数的过程为，不断乘以 2，直到不存在小数为止，\n// 在这个计算过程中，得到的整数部分从上到下排列就是二进制的结果。\n0.2 * 2 = 0.4 -\u003e 0\n0.4 * 2 = 0.8 -\u003e 0\n0.8 * 2 = 1.6 -\u003e 1\n0.6 * 2 = 1.2 -\u003e 1\n0.2 * 2 = 0.4 -\u003e 0（发生循环）\n...\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20240201213739-9xzdygo","Type":"NodeParagraph","Properties":{"id":"20240201213739-9xzdygo","updated":"20240201213739"},"Children":[{"Type":"NodeText","Data":"关于浮点数的更多内容，建议看一下"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"http://kaito-kidd.com/2018/08/08/computer-system-float-point/","TextMarkTextContent":"计算机系统基础（四）浮点数"},{"Type":"NodeText","Data":"这篇文章。"}]},{"ID":"20240201213740-lfysrj6","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240201213740-lfysrj6","updated":"20240201213740"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"BigDecimal 介绍"}]},{"ID":"20240201213741-nq75dtb","Type":"NodeParagraph","Properties":{"id":"20240201213741-nq75dtb","updated":"20240201213741"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"BigDecimal"},{"Type":"NodeText","Data":" 可以实现对浮点数的运算，不会造成精度丢失。"}]},{"ID":"20240201213742-yq01yv1","Type":"NodeParagraph","Properties":{"id":"20240201213742-yq01yv1","updated":"20240201213742"},"Children":[{"Type":"NodeText","Data":"通常情况下，大部分需要浮点数精确运算结果的业务场景（比如涉及到钱的场景）都是通过 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"BigDecimal"},{"Type":"NodeText","Data":" 来做的。"}]},{"ID":"20240201213743-k9p5cu0","Type":"NodeParagraph","Properties":{"id":"20240201213743-k9p5cu0","updated":"20240201213743"},"Children":[{"Type":"NodeText","Data":"《阿里巴巴 Java 开发手册》中提到："},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"浮点数之间的等值判断，基本数据类型不能用 == 来比较，包装数据类型不能用 equals 来判断。"}]},{"ID":"20240201213744-mr4013x","Type":"NodeParagraph","Properties":{"id":"20240201213744-mr4013x","updated":"20240201213744"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"https://oss.javaguide.cn/javaguide/image-20211213101646884.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201213745-knr8evi","Type":"NodeParagraph","Properties":{"id":"20240201213745-knr8evi","updated":"20240201213745"},"Children":[{"Type":"NodeText","Data":"具体原因我们在上面已经详细介绍了，这里就不多提了。"}]},{"ID":"20240201213746-1z3kr29","Type":"NodeParagraph","Properties":{"id":"20240201213746-1z3kr29","updated":"20240201213746"},"Children":[{"Type":"NodeText","Data":"想要解决浮点数运算精度丢失这个问题，可以直接使用 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"BigDecimal"},{"Type":"NodeText","Data":" 来定义浮点数的值，然后再进行浮点数的运算操作即可。"}]},{"ID":"20240201213747-z4g0cmb","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20240201213747-z4g0cmb","updated":"20240201213747"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"BigDecimal a = new BigDecimal(\"1.0\");\nBigDecimal b = new BigDecimal(\"0.9\");\nBigDecimal c = new BigDecimal(\"0.8\");\n\nBigDecimal x = a.subtract(b);\nBigDecimal y = b.subtract(c);\n\nSystem.out.println(x.compareTo(y));// 0\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20240201213748-7yrbrve","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240201213748-7yrbrve","updated":"20240201213748"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"BigDecimal 常见方法"}]},{"ID":"20240201213749-0te0ce2","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240201213749-0te0ce2","updated":"20240201213749"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"创建"}]},{"ID":"20240201213750-i2z09ku","Type":"NodeParagraph","Properties":{"id":"20240201213750-i2z09ku","updated":"20240201213750"},"Children":[{"Type":"NodeText","Data":"我们在使用 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"BigDecimal"},{"Type":"NodeText","Data":" 时，为了防止精度丢失，推荐使用它的"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"BigDecimal(String val)"},{"Type":"NodeText","Data":"构造方法或者 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"BigDecimal.valueOf(double val)"},{"Type":"NodeText","Data":" 静态方法来创建对象。"}]},{"ID":"20240201213751-th6hvje","Type":"NodeParagraph","Properties":{"id":"20240201213751-th6hvje","updated":"20240201213751"},"Children":[{"Type":"NodeText","Data":"《阿里巴巴 Java 开发手册》对这部分内容也有提到，如下图所示。"}]},{"ID":"20240201213752-vte1tu3","Type":"NodeParagraph","Properties":{"id":"20240201213752-vte1tu3","updated":"20240201213752"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"https://oss.javaguide.cn/javaguide/image-20211213102222601.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201213753-4echbfg","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240201213753-4echbfg","updated":"20240201213753"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"加减乘除"}]},{"ID":"20240201213754-24n6g2u","Type":"NodeParagraph","Properties":{"id":"20240201213754-24n6g2u","updated":"20240201213754"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"add"},{"Type":"NodeText","Data":" 方法用于将两个 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"BigDecimal"},{"Type":"NodeText","Data":" 对象相加，"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"subtract"},{"Type":"NodeText","Data":" 方法用于将两个 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"BigDecimal"},{"Type":"NodeText","Data":" 对象相减。"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"multiply"},{"Type":"NodeText","Data":" 方法用于将两个 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"BigDecimal"},{"Type":"NodeText","Data":" 对象相乘，"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"divide"},{"Type":"NodeText","Data":" 方法用于将两个 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"BigDecimal"},{"Type":"NodeText","Data":" 对象相除。"}]},{"ID":"20240201213755-ow436c7","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20240201213755-ow436c7","updated":"20240201213755"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"BigDecimal a = new BigDecimal(\"1.0\");\nBigDecimal b = new BigDecimal(\"0.9\");\nSystem.out.println(a.add(b));// 1.9\nSystem.out.println(a.subtract(b));// 0.1\nSystem.out.println(a.multiply(b));// 0.90\nSystem.out.println(a.divide(b));// 无法除尽，抛出 ArithmeticException 异常\nSystem.out.println(a.divide(b, 2, RoundingMode.HALF_UP));// 1.11\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20240201213756-93ehtnq","Type":"NodeParagraph","Properties":{"id":"20240201213756-93ehtnq","updated":"20240201213756"},"Children":[{"Type":"NodeText","Data":"这里需要注意的是，在我们使用 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"divide"},{"Type":"NodeText","Data":" 方法的时候尽量使用 3 个参数版本，并且"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"RoundingMode"},{"Type":"NodeText","Data":" 不要选择 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"UNNECESSARY"},{"Type":"NodeText","Data":"，否则很可能会遇到 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"ArithmeticException"},{"Type":"NodeText","Data":"（无法除尽出现无限循环小数的时候），其中 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"scale"},{"Type":"NodeText","Data":" 表示要保留几位小数，"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"roundingMode"},{"Type":"NodeText","Data":" 代表保留规则。"}]},{"ID":"20240201213757-n0abt2x","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20240201213757-n0abt2x","updated":"20240201213757"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"public BigDecimal divide(BigDecimal divisor, int scale, RoundingMode roundingMode) {\n    return divide(divisor, scale, roundingMode.oldMode);\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20240201213758-7mir2fs","Type":"NodeParagraph","Properties":{"id":"20240201213758-7mir2fs","updated":"20240201213758"},"Children":[{"Type":"NodeText","Data":"保留规则非常多，这里列举几种:"}]},{"ID":"20240201213759-pwidt63","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20240201213759-pwidt63","updated":"20240201213759"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"public enum RoundingMode {\n   // 2.5 -\u003e 3 , 1.6 -\u003e 2\n   // -1.6 -\u003e -2 , -2.5 -\u003e -3\n   UP(BigDecimal.ROUND_UP),\n   // 2.5 -\u003e 2 , 1.6 -\u003e 1\n   // -1.6 -\u003e -1 , -2.5 -\u003e -2\n   DOWN(BigDecimal.ROUND_DOWN),\n   // 2.5 -\u003e 3 , 1.6 -\u003e 2\n   // -1.6 -\u003e -1 , -2.5 -\u003e -2\n   CEILING(BigDecimal.ROUND_CEILING),\n   // 2.5 -\u003e 2 , 1.6 -\u003e 1\n   // -1.6 -\u003e -2 , -2.5 -\u003e -3\n   FLOOR(BigDecimal.ROUND_FLOOR),\n   // 2.5 -\u003e 3 , 1.6 -\u003e 2\n   // -1.6 -\u003e -2 , -2.5 -\u003e -3\n   HALF_UP(BigDecimal.ROUND_HALF_UP),\n   //......\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20240201213760-cko62rx","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240201213760-cko62rx","updated":"20240201213760"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"大小比较"}]},{"ID":"20240201213761-0ipon95","Type":"NodeParagraph","Properties":{"id":"20240201213761-0ipon95","updated":"20240201213761"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"a.compareTo(b)"},{"Type":"NodeText","Data":" : 返回 -1 表示 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"a"},{"Type":"NodeText","Data":" 小于 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"b"},{"Type":"NodeText","Data":"，0 表示 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"a"},{"Type":"NodeText","Data":" 等于 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"b"},{"Type":"NodeText","Data":" ， 1 表示 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"a"},{"Type":"NodeText","Data":" 大于 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"b"},{"Type":"NodeText","Data":"。"}]},{"ID":"20240201213762-hyrfuvo","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20240201213762-hyrfuvo","updated":"20240201213762"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"BigDecimal a = new BigDecimal(\"1.0\");\nBigDecimal b = new BigDecimal(\"0.9\");\nSystem.out.println(a.compareTo(b));// 1\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20240201213763-zse6yld","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240201213763-zse6yld","updated":"20240201213763"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"保留几位小数"}]},{"ID":"20240201213764-7bpcple","Type":"NodeParagraph","Properties":{"id":"20240201213764-7bpcple","updated":"20240201213764"},"Children":[{"Type":"NodeText","Data":"通过 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"setScale"},{"Type":"NodeText","Data":"方法设置保留几位小数以及保留规则。保留规则有挺多种，不需要记，IDEA 会提示。"}]},{"ID":"20240201213765-d4bpwsr","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20240201213765-d4bpwsr","updated":"20240201213765"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"BigDecimal m = new BigDecimal(\"1.255433\");\nBigDecimal n = m.setScale(3,RoundingMode.HALF_DOWN);\nSystem.out.println(n);// 1.255\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20240201213766-05gyj8y","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240201213766-05gyj8y","updated":"20240201213766"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"BigDecimal 等值比较问题"}]},{"ID":"20240201213767-70tbwl7","Type":"NodeParagraph","Properties":{"id":"20240201213767-70tbwl7","updated":"20240201213767"},"Children":[{"Type":"NodeText","Data":"《阿里巴巴 Java 开发手册》中提到："}]},{"ID":"20240201213768-r8e1fud","Type":"NodeParagraph","Properties":{"id":"20240201213768-r8e1fud","updated":"20240201213768"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"https://oss.javaguide.cn/github/javaguide/java/basis/image-20220714161315993.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201213769-onnt74d","Type":"NodeParagraph","Properties":{"id":"20240201213769-onnt74d","updated":"20240201213769"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"BigDecimal"},{"Type":"NodeText","Data":" 使用 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"equals()"},{"Type":"NodeText","Data":" 方法进行等值比较出现问题的代码示例："}]},{"ID":"20240201213770-zfobdz5","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20240201213770-zfobdz5","updated":"20240201213770"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"BigDecimal a = new BigDecimal(\"1\");\nBigDecimal b = new BigDecimal(\"1.0\");\nSystem.out.println(a.equals(b));//false\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20240201213771-ec2coj9","Type":"NodeParagraph","Properties":{"id":"20240201213771-ec2coj9","updated":"20240201213771"},"Children":[{"Type":"NodeText","Data":"这是因为 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"equals()"},{"Type":"NodeText","Data":" 方法不仅仅会比较值的大小（value）还会比较精度（scale），而 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"compareTo()"},{"Type":"NodeText","Data":" 方法比较的时候会忽略精度。"}]},{"ID":"20240201213772-mljh72i","Type":"NodeParagraph","Properties":{"id":"20240201213772-mljh72i","updated":"20240201213772"},"Children":[{"Type":"NodeText","Data":"1.0 的 scale 是 1，1 的 scale 是 0，因此 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"a.equals(b)"},{"Type":"NodeText","Data":" 的结果是 false。"}]},{"ID":"20240201213773-emgssvp","Type":"NodeParagraph","Properties":{"id":"20240201213773-emgssvp","updated":"20240201213773"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"https://oss.javaguide.cn/github/javaguide/java/basis/image-20220714164706390.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201213774-bj1hvrl","Type":"NodeParagraph","Properties":{"id":"20240201213774-bj1hvrl","updated":"20240201213774"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"compareTo()"},{"Type":"NodeText","Data":" 方法可以比较两个 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"BigDecimal"},{"Type":"NodeText","Data":" 的值，如果相等就返回 0，如果第 1 个数比第 2 个数大则返回 1，反之返回-1。"}]},{"ID":"20240201213775-f0redy7","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20240201213775-f0redy7","updated":"20240201213775"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"BigDecimal a = new BigDecimal(\"1\");\nBigDecimal b = new BigDecimal(\"1.0\");\nSystem.out.println(a.compareTo(b));//0\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20240201213776-5n9b8g6","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240201213776-5n9b8g6","updated":"20240201213776"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"BigDecimal 工具类分享"}]},{"ID":"20240201213777-krppf5i","Type":"NodeParagraph","Properties":{"id":"20240201213777-krppf5i","updated":"20240201213777"},"Children":[{"Type":"NodeText","Data":"网上有一个使用人数比较多的 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"BigDecimal"},{"Type":"NodeText","Data":" 工具类，提供了多个静态方法来简化 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"BigDecimal"},{"Type":"NodeText","Data":" 的操作。"}]},{"ID":"20240201213778-79zkahe","Type":"NodeParagraph","Properties":{"id":"20240201213778-79zkahe","updated":"20240201213778"},"Children":[{"Type":"NodeText","Data":"我对其进行了简单改进，分享一下源码："}]},{"ID":"20240201213779-hc5apzy","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20240201213779-hc5apzy","updated":"20240201213779"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"import java.math.BigDecimal;\nimport java.math.RoundingMode;\n\n/**\n * 简化BigDecimal计算的小工具类\n */\npublic class BigDecimalUtil {\n\n    /**\n     * 默认除法运算精度\n     */\n    private static final int DEF_DIV_SCALE = 10;\n\n    private BigDecimalUtil() {\n    }\n\n    /**\n     * 提供精确的加法运算。\n     *\n     * @param v1 被加数\n     * @param v2 加数\n     * @return 两个参数的和\n     */\n    public static double add(double v1, double v2) {\n        BigDecimal b1 = BigDecimal.valueOf(v1);\n        BigDecimal b2 = BigDecimal.valueOf(v2);\n        return b1.add(b2).doubleValue();\n    }\n\n    /**\n     * 提供精确的减法运算。\n     *\n     * @param v1 被减数\n     * @param v2 减数\n     * @return 两个参数的差\n     */\n    public static double subtract(double v1, double v2) {\n        BigDecimal b1 = BigDecimal.valueOf(v1);\n        BigDecimal b2 = BigDecimal.valueOf(v2);\n        return b1.subtract(b2).doubleValue();\n    }\n\n    /**\n     * 提供精确的乘法运算。\n     *\n     * @param v1 被乘数\n     * @param v2 乘数\n     * @return 两个参数的积\n     */\n    public static double multiply(double v1, double v2) {\n        BigDecimal b1 = BigDecimal.valueOf(v1);\n        BigDecimal b2 = BigDecimal.valueOf(v2);\n        return b1.multiply(b2).doubleValue();\n    }\n\n    /**\n     * 提供（相对）精确的除法运算，当发生除不尽的情况时，精确到\n     * 小数点以后10位，以后的数字四舍五入。\n     *\n     * @param v1 被除数\n     * @param v2 除数\n     * @return 两个参数的商\n     */\n    public static double divide(double v1, double v2) {\n        return divide(v1, v2, DEF_DIV_SCALE);\n    }\n\n    /**\n     * 提供（相对）精确的除法运算。当发生除不尽的情况时，由scale参数指\n     * 定精度，以后的数字四舍五入。\n     *\n     * @param v1    被除数\n     * @param v2    除数\n     * @param scale 表示表示需要精确到小数点以后几位。\n     * @return 两个参数的商\n     */\n    public static double divide(double v1, double v2, int scale) {\n        if (scale \u003c 0) {\n            throw new IllegalArgumentException(\n                    \"The scale must be a positive integer or zero\");\n        }\n        BigDecimal b1 = BigDecimal.valueOf(v1);\n        BigDecimal b2 = BigDecimal.valueOf(v2);\n        return b1.divide(b2, scale, RoundingMode.HALF_EVEN).doubleValue();\n    }\n\n    /**\n     * 提供精确的小数位四舍五入处理。\n     *\n     * @param v     需要四舍五入的数字\n     * @param scale 小数点后保留几位\n     * @return 四舍五入后的结果\n     */\n    public static double round(double v, int scale) {\n        if (scale \u003c 0) {\n            throw new IllegalArgumentException(\n                    \"The scale must be a positive integer or zero\");\n        }\n        BigDecimal b = BigDecimal.valueOf(v);\n        BigDecimal one = new BigDecimal(\"1\");\n        return b.divide(one, scale, RoundingMode.HALF_UP).doubleValue();\n    }\n\n    /**\n     * 提供精确的类型转换(Float)\n     *\n     * @param v 需要被转换的数字\n     * @return 返回转换结果\n     */\n    public static float convertToFloat(double v) {\n        BigDecimal b = new BigDecimal(v);\n        return b.floatValue();\n    }\n\n    /**\n     * 提供精确的类型转换(Int)不进行四舍五入\n     *\n     * @param v 需要被转换的数字\n     * @return 返回转换结果\n     */\n    public static int convertsToInt(double v) {\n        BigDecimal b = new BigDecimal(v);\n        return b.intValue();\n    }\n\n    /**\n     * 提供精确的类型转换(Long)\n     *\n     * @param v 需要被转换的数字\n     * @return 返回转换结果\n     */\n    public static long convertsToLong(double v) {\n        BigDecimal b = new BigDecimal(v);\n        return b.longValue();\n    }\n\n    /**\n     * 返回两个数中大的一个值\n     *\n     * @param v1 需要被对比的第一个数\n     * @param v2 需要被对比的第二个数\n     * @return 返回两个数中大的一个值\n     */\n    public static double returnMax(double v1, double v2) {\n        BigDecimal b1 = new BigDecimal(v1);\n        BigDecimal b2 = new BigDecimal(v2);\n        return b1.max(b2).doubleValue();\n    }\n\n    /**\n     * 返回两个数中小的一个值\n     *\n     * @param v1 需要被对比的第一个数\n     * @param v2 需要被对比的第二个数\n     * @return 返回两个数中小的一个值\n     */\n    public static double returnMin(double v1, double v2) {\n        BigDecimal b1 = new BigDecimal(v1);\n        BigDecimal b2 = new BigDecimal(v2);\n        return b1.min(b2).doubleValue();\n    }\n\n    /**\n     * 精确对比两个数字\n     *\n     * @param v1 需要被对比的第一个数\n     * @param v2 需要被对比的第二个数\n     * @return 如果两个数一样则返回0，如果第一个数比第二个数大则返回1，反之返回-1\n     */\n    public static int compareTo(double v1, double v2) {\n        BigDecimal b1 = BigDecimal.valueOf(v1);\n        BigDecimal b2 = BigDecimal.valueOf(v2);\n        return b1.compareTo(b2);\n    }\n\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20240201213780-7xakw7l","Type":"NodeParagraph","Properties":{"id":"20240201213780-7xakw7l","updated":"20240201213780"},"Children":[{"Type":"NodeText","Data":"相关 issue："},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"[#2129](https://github.com/Snailclimb/JavaGuide/issues/2129)","TextMarkTextContent":"建议对保留规则设置为 RoundingMode.HALF_EVEN,即四舍六入五成双"},{"Type":"NodeText","Data":" 。"}]},{"ID":"20240201213781-b6n5m1j","Type":"NodeParagraph","Properties":{"id":"20240201213781-b6n5m1j","updated":"20240201213781"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"RoundingMode.HALF_EVEN","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"https://oss.javaguide.cn/github/javaguide/java/basis/RoundingMode.HALF_EVEN.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201213782-d7gy33v","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240201213782-d7gy33v","updated":"20240201213782"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"总结"}]},{"ID":"20240201213783-8zcov9d","Type":"NodeParagraph","Properties":{"id":"20240201213783-8zcov9d","updated":"20240201213783"},"Children":[{"Type":"NodeText","Data":"浮点数没有办法用二进制精确表示，因此存在精度丢失的风险。"}]},{"ID":"20240201213784-paa28ts","Type":"NodeParagraph","Properties":{"id":"20240201213784-paa28ts","updated":"20240201213784"},"Children":[{"Type":"NodeText","Data":"不过，Java 提供了"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"BigDecimal"},{"Type":"NodeText","Data":" 来操作浮点数。"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"BigDecimal"},{"Type":"NodeText","Data":" 的实现利用到了 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"BigInteger"},{"Type":"NodeText","Data":" （用来操作大整数）, 所不同的是 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"BigDecimal"},{"Type":"NodeText","Data":" 加入了小数位的概念。"}]},{"ID":"20240201213785-u8lbmg3","Type":"NodeHTMLBlock","Data":"\u003cdiv\u003e\n\u003c!-- @include: @article-footer.snippet.md --\u003e\n\u003c/div\u003e","HtmlBlockType":2,"Properties":{"id":"20240201213785-u8lbmg3","updated":"20240201213785"}}]}