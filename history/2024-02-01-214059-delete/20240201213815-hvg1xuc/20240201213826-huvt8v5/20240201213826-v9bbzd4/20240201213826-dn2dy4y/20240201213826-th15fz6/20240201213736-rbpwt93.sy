{"ID":"20240201213736-rbpwt93","Spec":"1","Type":"NodeDocument","Properties":{"id":"20240201213736-rbpwt93","title":"reflection","updated":"20240201213736"},"Children":[{"ID":"20240201213737-n1wz3tk","Type":"NodeThematicBreak","Properties":{"id":"20240201213737-n1wz3tk","updated":"20240201213737"}},{"ID":"20240201213738-obpnjex","Type":"NodeParagraph","Properties":{"id":"20240201213738-obpnjex","updated":"20240201213738"},"Children":[{"Type":"NodeText","Data":"title: Java 反射机制详解"},{"Type":"NodeSoftBreak","Data":"\n","Properties":{"id":""}},{"Type":"NodeText","Data":"category: Java"},{"Type":"NodeSoftBreak","Data":"\n","Properties":{"id":""}},{"Type":"NodeText","Data":"tag:"}]},{"ID":"20240201213739-dcohq2f","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"MarkerOffset":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213739-dcohq2f","updated":"20240201213739"},"Children":[{"ID":"20240201213740-dm042b2","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"MarkerOffset":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213740-dm042b2","updated":"20240201213740"},"Children":[{"ID":"20240201213741-lu7p56q","Type":"NodeParagraph","Properties":{"id":"20240201213741-lu7p56q","updated":"20240201213741"},"Children":[{"Type":"NodeText","Data":"Java基础"}]}]}]},{"ID":"20240201213742-ku63rn6","Type":"NodeThematicBreak","Properties":{"id":"20240201213742-ku63rn6","updated":"20240201213742"}},{"ID":"20240201213743-nujwykw","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240201213743-nujwykw","updated":"20240201213743"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"何为反射？"}]},{"ID":"20240201213744-hluf0yz","Type":"NodeParagraph","Properties":{"id":"20240201213744-hluf0yz","updated":"20240201213744"},"Children":[{"Type":"NodeText","Data":"如果说大家研究过框架的底层原理或者咱们自己写过框架的话，一定对反射这个概念不陌生。"}]},{"ID":"20240201213745-gcpsi6f","Type":"NodeParagraph","Properties":{"id":"20240201213745-gcpsi6f","updated":"20240201213745"},"Children":[{"Type":"NodeText","Data":"反射之所以被称为框架的灵魂，主要是因为它赋予了我们在运行时分析类以及执行类中方法的能力。"}]},{"ID":"20240201213746-o61zy96","Type":"NodeParagraph","Properties":{"id":"20240201213746-o61zy96","updated":"20240201213746"},"Children":[{"Type":"NodeText","Data":"通过反射你可以获取任意一个类的所有属性和方法，你还可以调用这些方法和属性。"}]},{"ID":"20240201213747-j4z953i","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240201213747-j4z953i","updated":"20240201213747"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"反射的应用场景了解么？"}]},{"ID":"20240201213748-nzh975f","Type":"NodeParagraph","Properties":{"id":"20240201213748-nzh975f","updated":"20240201213748"},"Children":[{"Type":"NodeText","Data":"像咱们平时大部分时候都是在写业务代码，很少会接触到直接使用反射机制的场景。"}]},{"ID":"20240201213749-8kysq8c","Type":"NodeParagraph","Properties":{"id":"20240201213749-8kysq8c","updated":"20240201213749"},"Children":[{"Type":"NodeText","Data":"但是，这并不代表反射没有用。相反，正是因为反射，你才能这么轻松地使用各种框架。像 Spring/Spring Boot、MyBatis 等等框架中都大量使用了反射机制。"}]},{"ID":"20240201213750-6yzeg68","Type":"NodeParagraph","Properties":{"id":"20240201213750-6yzeg68","updated":"20240201213750"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"这些框架中也大量使用了动态代理，而动态代理的实现也依赖反射。"}]},{"ID":"20240201213751-lqimgma","Type":"NodeParagraph","Properties":{"id":"20240201213751-lqimgma","updated":"20240201213751"},"Children":[{"Type":"NodeText","Data":"比如下面是通过 JDK 实现动态代理的示例代码，其中就使用了反射类 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"Method"},{"Type":"NodeText","Data":" 来调用指定的方法。"}]},{"ID":"20240201213752-w5ucth4","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20240201213752-w5ucth4","updated":"20240201213752"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"public class DebugInvocationHandler implements InvocationHandler {\n    /**\n     * 代理类中的真实对象\n     */\n    private final Object target;\n\n    public DebugInvocationHandler(Object target) {\n        this.target = target;\n    }\n\n\n    public Object invoke(Object proxy, Method method, Object[] args) throws InvocationTargetException, IllegalAccessException {\n        System.out.println(\"before method \" + method.getName());\n        Object result = method.invoke(target, args);\n        System.out.println(\"after method \" + method.getName());\n        return result;\n    }\n}\n\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20240201213753-rcqhsc2","Type":"NodeParagraph","Properties":{"id":"20240201213753-rcqhsc2","updated":"20240201213753"},"Children":[{"Type":"NodeText","Data":"另外，像 Java 中的一大利器 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"注解"},{"Type":"NodeText","Data":" 的实现也用到了反射。"}]},{"ID":"20240201213754-ap5na71","Type":"NodeParagraph","Properties":{"id":"20240201213754-ap5na71","updated":"20240201213754"},"Children":[{"Type":"NodeText","Data":"为什么你使用 Spring 的时候 ，一个"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"@Component"},{"Type":"NodeText","Data":"注解就声明了一个类为 Spring Bean 呢？为什么你通过一个 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"@Value"},{"Type":"NodeText","Data":"注解就读取到配置文件中的值呢？究竟是怎么起作用的呢？"}]},{"ID":"20240201213755-h143jxn","Type":"NodeParagraph","Properties":{"id":"20240201213755-h143jxn","updated":"20240201213755"},"Children":[{"Type":"NodeText","Data":"这些都是因为你可以基于反射分析类，然后获取到类/属性/方法/方法的参数上的注解。你获取到注解之后，就可以做进一步的处理。"}]},{"ID":"20240201213756-qlnl7d2","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240201213756-qlnl7d2","updated":"20240201213756"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"谈谈反射机制的优缺点"}]},{"ID":"20240201213757-91y90vz","Type":"NodeParagraph","Properties":{"id":"20240201213757-91y90vz","updated":"20240201213757"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"优点"},{"Type":"NodeText","Data":"：可以让咱们的代码更加灵活、为各种框架提供开箱即用的功能提供了便利"}]},{"ID":"20240201213758-arvytyt","Type":"NodeParagraph","Properties":{"id":"20240201213758-arvytyt","updated":"20240201213758"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"缺点"},{"Type":"NodeText","Data":"：让我们在运行时有了分析操作类的能力，这同样也增加了安全问题。比如可以无视泛型参数的安全检查（泛型参数的安全检查发生在编译时）。另外，反射的性能也要稍差点，不过，对于框架来说实际是影响不大的。相关阅读："},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://stackoverflow.com/questions/1392351/java-reflection-why-is-it-so-slow","TextMarkTextContent":"Java Reflection: Why is it so slow?"}]},{"ID":"20240201213759-zubac1r","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240201213759-zubac1r","updated":"20240201213759"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"反射实战"}]},{"ID":"20240201213760-6cfw8l4","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240201213760-6cfw8l4","updated":"20240201213760"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"获取 Class 对象的四种方式"}]},{"ID":"20240201213761-yo88h0d","Type":"NodeParagraph","Properties":{"id":"20240201213761-yo88h0d","updated":"20240201213761"},"Children":[{"Type":"NodeText","Data":"如果我们动态获取到这些信息，我们需要依靠 Class 对象。Class 类对象将一个类的方法、变量等信息告诉运行的程序。Java 提供了四种方式获取 Class 对象:"}]},{"ID":"20240201213762-c0a90z1","Type":"NodeParagraph","Properties":{"id":"20240201213762-c0a90z1","updated":"20240201213762"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"1. 知道具体类的情况下可以使用："}]},{"ID":"20240201213763-96s32uw","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20240201213763-96s32uw","updated":"20240201213763"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"Class alunbarClass = TargetObject.class;\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20240201213764-fen8g4u","Type":"NodeParagraph","Properties":{"id":"20240201213764-fen8g4u","updated":"20240201213764"},"Children":[{"Type":"NodeText","Data":"但是我们一般是不知道具体类的，基本都是通过遍历包下面的类来获取 Class 对象，通过此方式获取 Class 对象不会进行初始化"}]},{"ID":"20240201213765-oi22761","Type":"NodeParagraph","Properties":{"id":"20240201213765-oi22761","updated":"20240201213765"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"2. 通过 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong code","TextMarkTextContent":"Class.forName()"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"传入类的全路径获取："}]},{"ID":"20240201213766-kr295jk","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20240201213766-kr295jk","updated":"20240201213766"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"Class alunbarClass1 = Class.forName(\"cn.javaguide.TargetObject\");\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20240201213767-ua6x657","Type":"NodeParagraph","Properties":{"id":"20240201213767-ua6x657","updated":"20240201213767"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"3. 通过对象实例"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong code","TextMarkTextContent":"instance.getClass()"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"获取："}]},{"ID":"20240201213768-xvz6htc","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20240201213768-xvz6htc","updated":"20240201213768"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"TargetObject o = new TargetObject();\nClass alunbarClass2 = o.getClass();\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20240201213769-zrqhap0","Type":"NodeParagraph","Properties":{"id":"20240201213769-zrqhap0","updated":"20240201213769"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"4. 通过类加载器"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong code","TextMarkTextContent":"xxxClassLoader.loadClass()"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"传入类路径获取:"}]},{"ID":"20240201213770-p00odc9","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20240201213770-p00odc9","updated":"20240201213770"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"ClassLoader.getSystemClassLoader().loadClass(\"cn.javaguide.TargetObject\");\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20240201213771-dvrrsfc","Type":"NodeParagraph","Properties":{"id":"20240201213771-dvrrsfc","updated":"20240201213771"},"Children":[{"Type":"NodeText","Data":"通过类加载器获取 Class 对象不会进行初始化，意味着不进行包括初始化等一系列步骤，静态代码块和静态对象不会得到执行"}]},{"ID":"20240201213772-j0ikj97","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240201213772-j0ikj97","updated":"20240201213772"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"反射的一些基本操作"}]},{"ID":"20240201213773-ev4dbis","Type":"NodeList","ListData":{"Typ":1,"Tight":true,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20240201213773-ev4dbis","updated":"20240201213773"},"Children":[{"ID":"20240201213774-blwtasm","Type":"NodeListItem","Data":"1","ListData":{"Typ":1,"Tight":true,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20240201213774-blwtasm","updated":"20240201213774"},"Children":[{"ID":"20240201213775-osczvyc","Type":"NodeParagraph","Properties":{"id":"20240201213775-osczvyc","updated":"20240201213775"},"Children":[{"Type":"NodeText","Data":"创建一个我们要使用反射操作的类 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"TargetObject"},{"Type":"NodeText","Data":"。"}]}]}]},{"ID":"20240201213776-ahqslh9","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20240201213776-ahqslh9","updated":"20240201213776"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"package cn.javaguide;\n\npublic class TargetObject {\n    private String value;\n\n    public TargetObject() {\n        value = \"JavaGuide\";\n    }\n\n    public void publicMethod(String s) {\n        System.out.println(\"I love \" + s);\n    }\n\n    private void privateMethod() {\n        System.out.println(\"value is \" + value);\n    }\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20240201213777-9gvhyzl","Type":"NodeList","ListData":{"Typ":1,"Tight":true,"Start":2,"Delimiter":46,"Padding":3,"Marker":"Mg==","Num":2},"Properties":{"id":"20240201213777-9gvhyzl","updated":"20240201213777"},"Children":[{"ID":"20240201213778-eyit7t8","Type":"NodeListItem","Data":"2","ListData":{"Typ":1,"Tight":true,"Start":2,"Delimiter":46,"Padding":3,"Marker":"Mg==","Num":2},"Properties":{"id":"20240201213778-eyit7t8","updated":"20240201213778"},"Children":[{"ID":"20240201213779-8jjw1d1","Type":"NodeParagraph","Properties":{"id":"20240201213779-8jjw1d1","updated":"20240201213779"},"Children":[{"Type":"NodeText","Data":"使用反射操作这个类的方法以及参数"}]}]}]},{"ID":"20240201213780-lsj8v89","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20240201213780-lsj8v89","updated":"20240201213780"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"package cn.javaguide;\n\nimport java.lang.reflect.Field;\nimport java.lang.reflect.InvocationTargetException;\nimport java.lang.reflect.Method;\n\npublic class Main {\n    public static void main(String[] args) throws ClassNotFoundException, NoSuchMethodException, IllegalAccessException, InstantiationException, InvocationTargetException, NoSuchFieldException {\n        /**\n         * 获取 TargetObject 类的 Class 对象并且创建 TargetObject 类实例\n         */\n        Class\u003c?\u003e targetClass = Class.forName(\"cn.javaguide.TargetObject\");\n        TargetObject targetObject = (TargetObject) targetClass.newInstance();\n        /**\n         * 获取 TargetObject 类中定义的所有方法\n         */\n        Method[] methods = targetClass.getDeclaredMethods();\n        for (Method method : methods) {\n            System.out.println(method.getName());\n        }\n\n        /**\n         * 获取指定方法并调用\n         */\n        Method publicMethod = targetClass.getDeclaredMethod(\"publicMethod\",\n                String.class);\n\n        publicMethod.invoke(targetObject, \"JavaGuide\");\n\n        /**\n         * 获取指定参数并对参数进行修改\n         */\n        Field field = targetClass.getDeclaredField(\"value\");\n        //为了对类中的参数进行修改我们取消安全检查\n        field.setAccessible(true);\n        field.set(targetObject, \"JavaGuide\");\n\n        /**\n         * 调用 private 方法\n         */\n        Method privateMethod = targetClass.getDeclaredMethod(\"privateMethod\");\n        //为了调用private方法我们取消安全检查\n        privateMethod.setAccessible(true);\n        privateMethod.invoke(targetObject);\n    }\n}\n\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20240201213781-ph9rxjc","Type":"NodeParagraph","Properties":{"id":"20240201213781-ph9rxjc","updated":"20240201213781"},"Children":[{"Type":"NodeText","Data":"输出内容："}]},{"ID":"20240201213782-fm20q5j","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"cGxhaW4=","CodeBlockCloseFence":"YGBg","Properties":{"id":"20240201213782-fm20q5j","updated":"20240201213782"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"cGxhaW4=","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"publicMethod\nprivateMethod\nI love JavaGuide\nvalue is JavaGuide\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20240201213783-8hmpdof","Type":"NodeParagraph","Properties":{"id":"20240201213783-8hmpdof","updated":"20240201213783"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"注意"},{"Type":"NodeText","Data":" : 有读者提到上面代码运行会抛出 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"ClassNotFoundException"},{"Type":"NodeText","Data":" 异常,具体原因是你没有下面把这段代码的包名替换成自己创建的 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"TargetObject"},{"Type":"NodeText","Data":" 所在的包 。"},{"Type":"NodeSoftBreak","Data":"\n","Properties":{"id":""}},{"Type":"NodeText","Data":"可以参考："},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://www.cnblogs.com/chanshuyi/p/head_first_of_reflection.html","TextMarkTextContent":"https://www.cnblogs.com/chanshuyi/p/head_first_of_reflection.html"},{"Type":"NodeText","Data":" 这篇文章。"}]},{"ID":"20240201213784-51nmabd","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20240201213784-51nmabd","updated":"20240201213784"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"Class\u003c?\u003e targetClass = Class.forName(\"cn.javaguide.TargetObject\");\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20240201213785-hkjk3sf","Type":"NodeHTMLBlock","Data":"\u003cdiv\u003e\n\u003c!-- @include: @article-footer.snippet.md --\u003e\n\u003c/div\u003e","HtmlBlockType":2,"Properties":{"id":"20240201213785-hkjk3sf","updated":"20240201213785"}}]}