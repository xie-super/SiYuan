{"ID":"20240201213455-urup5zh","Spec":"1","Type":"NodeDocument","Properties":{"id":"20240201213455-urup5zh","title":"completablefuture-intro","updated":"20240201213455"},"Children":[{"ID":"20240201213456-togis7h","Type":"NodeThematicBreak","Properties":{"id":"20240201213456-togis7h","updated":"20240201213456"}},{"ID":"20240201213457-rt8o7e5","Type":"NodeParagraph","Properties":{"id":"20240201213457-rt8o7e5","updated":"20240201213457"},"Children":[{"Type":"NodeText","Data":"title: CompletableFuture 详解"},{"Type":"NodeSoftBreak","Data":"\n","Properties":{"id":""}},{"Type":"NodeText","Data":"category: Java"},{"Type":"NodeSoftBreak","Data":"\n","Properties":{"id":""}},{"Type":"NodeText","Data":"tag:"}]},{"ID":"20240201213458-a7gac8i","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"MarkerOffset":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213458-a7gac8i","updated":"20240201213458"},"Children":[{"ID":"20240201213459-ti2x5rg","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"MarkerOffset":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213459-ti2x5rg","updated":"20240201213459"},"Children":[{"ID":"20240201213460-pgqwhtf","Type":"NodeParagraph","Properties":{"id":"20240201213460-pgqwhtf","updated":"20240201213460"},"Children":[{"Type":"NodeText","Data":"Java并发"}]}]}]},{"ID":"20240201213461-ylnhilp","Type":"NodeThematicBreak","Properties":{"id":"20240201213461-ylnhilp","updated":"20240201213461"}},{"ID":"20240201213462-6k7qv51","Type":"NodeParagraph","Properties":{"id":"20240201213462-6k7qv51","updated":"20240201213462"},"Children":[{"Type":"NodeText","Data":"一个接口可能需要调用 N 个其他服务的接口，这在项目开发中还是挺常见的。举个例子：用户请求获取订单信息，可能需要调用用户信息、商品详情、物流信息、商品推荐等接口，最后再汇总数据统一返回。"}]},{"ID":"20240201213463-6zrkajh","Type":"NodeParagraph","Properties":{"id":"20240201213463-6zrkajh","updated":"20240201213463"},"Children":[{"Type":"NodeText","Data":"如果是串行（按顺序依次执行每个任务）执行的话，接口的响应速度会非常慢。考虑到这些接口之间有大部分都是 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"无前后顺序关联"},{"Type":"NodeText","Data":" 的，可以 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"并行执行"},{"Type":"NodeText","Data":" ，就比如说调用获取商品详情的时候，可以同时调用获取物流信息。通过并行执行多个任务的方式，接口的响应速度会得到大幅优化。"}]},{"ID":"20240201213464-o8xnz1u","Type":"NodeParagraph","Properties":{"id":"20240201213464-o8xnz1u","updated":"20240201213464"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"serial-to-parallel","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"https://oss.javaguide.cn/github/javaguide/high-performance/serial-to-parallel.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201213465-0gvo87r","Type":"NodeParagraph","Properties":{"id":"20240201213465-0gvo87r","updated":"20240201213465"},"Children":[{"Type":"NodeText","Data":"对于存在前后顺序关系的接口调用，可以进行编排，如下图所示。"}]},{"ID":"20240201213466-ij7zvd0","Type":"NodeParagraph","Properties":{"id":"20240201213466-ij7zvd0","updated":"20240201213466"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"https://oss.javaguide.cn/github/javaguide/high-performance/serial-to-parallel2.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201213467-kxgqd40","Type":"NodeList","ListData":{"Typ":1,"Tight":true,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20240201213467-kxgqd40","updated":"20240201213467"},"Children":[{"ID":"20240201213468-5dfy1ss","Type":"NodeListItem","Data":"1","ListData":{"Typ":1,"Tight":true,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20240201213468-5dfy1ss","updated":"20240201213468"},"Children":[{"ID":"20240201213469-w7zsjvs","Type":"NodeParagraph","Properties":{"id":"20240201213469-w7zsjvs","updated":"20240201213469"},"Children":[{"Type":"NodeText","Data":"获取用户信息之后，才能调用商品详情和物流信息接口。"}]}]},{"ID":"20240201213470-88navyk","Type":"NodeListItem","Data":"2","ListData":{"Typ":1,"Tight":true,"Start":2,"Delimiter":46,"Padding":3,"Marker":"Mg==","Num":2},"Properties":{"id":"20240201213470-88navyk","updated":"20240201213470"},"Children":[{"ID":"20240201213471-chm68e1","Type":"NodeParagraph","Properties":{"id":"20240201213471-chm68e1","updated":"20240201213471"},"Children":[{"Type":"NodeText","Data":"成功获取商品详情和物流信息之后，才能调用商品推荐接口。"}]}]}]},{"ID":"20240201213472-9a3tfl5","Type":"NodeParagraph","Properties":{"id":"20240201213472-9a3tfl5","updated":"20240201213472"},"Children":[{"Type":"NodeText","Data":"对于 Java 程序来说，Java 8 才被引入的 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"CompletableFuture"},{"Type":"NodeText","Data":" 可以帮助我们来做多个任务的编排，功能非常强大。"}]},{"ID":"20240201213473-6aobn9o","Type":"NodeParagraph","Properties":{"id":"20240201213473-6aobn9o","updated":"20240201213473"},"Children":[{"Type":"NodeText","Data":"这篇文章是 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"CompletableFuture"},{"Type":"NodeText","Data":" 的简单入门，带大家看看 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"CompletableFuture"},{"Type":"NodeText","Data":" 常用的 API。"}]},{"ID":"20240201213474-0buhvig","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240201213474-0buhvig","updated":"20240201213474"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"Future 介绍"}]},{"ID":"20240201213475-32ue6v8","Type":"NodeParagraph","Properties":{"id":"20240201213475-32ue6v8","updated":"20240201213475"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"Future"},{"Type":"NodeText","Data":" 类是异步思想的典型运用，主要用在一些需要执行耗时任务的场景，避免程序一直原地等待耗时任务执行完成，执行效率太低。具体来说是这样的：当我们执行某一耗时的任务时，可以将这个耗时任务交给一个子线程去异步执行，同时我们可以干点其他事情，不用傻傻等待耗时任务执行完成。等我们的事情干完后，我们再通过 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"Future"},{"Type":"NodeText","Data":" 类获取到耗时任务的执行结果。这样一来，程序的执行效率就明显提高了。"}]},{"ID":"20240201213476-xnmr3li","Type":"NodeParagraph","Properties":{"id":"20240201213476-xnmr3li","updated":"20240201213476"},"Children":[{"Type":"NodeText","Data":"这其实就是多线程中经典的 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"Future 模式"},{"Type":"NodeText","Data":"，你可以将其看作是一种设计模式，核心思想是异步调用，主要用在多线程领域，并非 Java 语言独有。"}]},{"ID":"20240201213477-3vwjzxo","Type":"NodeParagraph","Properties":{"id":"20240201213477-3vwjzxo","updated":"20240201213477"},"Children":[{"Type":"NodeText","Data":"在 Java 中，"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"Future"},{"Type":"NodeText","Data":" 类只是一个泛型接口，位于 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"java.util.concurrent"},{"Type":"NodeText","Data":" 包下，其中定义了 5 个方法，主要包括下面这 4 个功能："}]},{"ID":"20240201213478-6suqo22","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213478-6suqo22","updated":"20240201213478"},"Children":[{"ID":"20240201213479-ad9t8s6","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213479-ad9t8s6","updated":"20240201213479"},"Children":[{"ID":"20240201213480-a80kdmr","Type":"NodeParagraph","Properties":{"id":"20240201213480-a80kdmr","updated":"20240201213480"},"Children":[{"Type":"NodeText","Data":"取消任务；"}]}]},{"ID":"20240201213481-nbxxbq9","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213481-nbxxbq9","updated":"20240201213481"},"Children":[{"ID":"20240201213482-q78gwuv","Type":"NodeParagraph","Properties":{"id":"20240201213482-q78gwuv","updated":"20240201213482"},"Children":[{"Type":"NodeText","Data":"判断任务是否被取消;"}]}]},{"ID":"20240201213483-f55z9af","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213483-f55z9af","updated":"20240201213483"},"Children":[{"ID":"20240201213484-iksbpzn","Type":"NodeParagraph","Properties":{"id":"20240201213484-iksbpzn","updated":"20240201213484"},"Children":[{"Type":"NodeText","Data":"判断任务是否已经执行完成;"}]}]},{"ID":"20240201213485-qybavji","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213485-qybavji","updated":"20240201213485"},"Children":[{"ID":"20240201213486-gthuqe2","Type":"NodeParagraph","Properties":{"id":"20240201213486-gthuqe2","updated":"20240201213486"},"Children":[{"Type":"NodeText","Data":"获取任务执行结果。"}]}]}]},{"ID":"20240201213487-3vw9y6c","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20240201213487-3vw9y6c","updated":"20240201213487"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"// V 代表了Future执行的任务返回值的类型\npublic interface Future\u003cV\u003e {\n    // 取消任务执行\n    // 成功取消返回 true，否则返回 false\n    boolean cancel(boolean mayInterruptIfRunning);\n    // 判断任务是否被取消\n    boolean isCancelled();\n    // 判断任务是否已经执行完成\n    boolean isDone();\n    // 获取任务执行结果\n    V get() throws InterruptedException, ExecutionException;\n    // 指定时间内没有返回计算结果就抛出 TimeOutException 异常\n    V get(long timeout, TimeUnit unit)\n\n        throws InterruptedException, ExecutionException, TimeoutExceptio\n\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20240201213488-lwd6j50","Type":"NodeParagraph","Properties":{"id":"20240201213488-lwd6j50","updated":"20240201213488"},"Children":[{"Type":"NodeText","Data":"简单理解就是：我有一个任务，提交给了 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"Future"},{"Type":"NodeText","Data":" 来处理。任务执行期间我自己可以去做任何想做的事情。并且，在这期间我还可以取消任务以及获取任务的执行状态。一段时间之后，我就可以 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"Future"},{"Type":"NodeText","Data":" 那里直接取出任务执行结果。"}]},{"ID":"20240201213489-j78a473","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240201213489-j78a473","updated":"20240201213489"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"CompletableFuture 介绍"}]},{"ID":"20240201213490-4yl1r6y","Type":"NodeParagraph","Properties":{"id":"20240201213490-4yl1r6y","updated":"20240201213490"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"Future"},{"Type":"NodeText","Data":" 在实际使用过程中存在一些局限性比如不支持异步任务的编排组合、获取计算结果的 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"get()"},{"Type":"NodeText","Data":" 方法为阻塞调用。"}]},{"ID":"20240201213491-chasr0j","Type":"NodeParagraph","Properties":{"id":"20240201213491-chasr0j","updated":"20240201213491"},"Children":[{"Type":"NodeText","Data":"Java 8 才被引入"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"CompletableFuture"},{"Type":"NodeText","Data":" 类可以解决"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"Future"},{"Type":"NodeText","Data":" 的这些缺陷。"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"CompletableFuture"},{"Type":"NodeText","Data":" 除了提供了更为好用和强大的 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"Future"},{"Type":"NodeText","Data":" 特性之外，还提供了函数式编程、异步任务编排组合（可以将多个异步任务串联起来，组成一个完整的链式调用）等能力。"}]},{"ID":"20240201213492-sngfncf","Type":"NodeParagraph","Properties":{"id":"20240201213492-sngfncf","updated":"20240201213492"},"Children":[{"Type":"NodeText","Data":"下面我们来简单看看 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"CompletableFuture"},{"Type":"NodeText","Data":" 类的定义。"}]},{"ID":"20240201213493-2z9yqka","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20240201213493-2z9yqka","updated":"20240201213493"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"public class CompletableFuture\u003cT\u003e implements Future\u003cT\u003e, CompletionStage\u003cT\u003e {\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20240201213494-m3r40ha","Type":"NodeParagraph","Properties":{"id":"20240201213494-m3r40ha","updated":"20240201213494"},"Children":[{"Type":"NodeText","Data":"可以看到，"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"CompletableFuture"},{"Type":"NodeText","Data":" 同时实现了 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"Future"},{"Type":"NodeText","Data":" 和 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"CompletionStage"},{"Type":"NodeText","Data":" 接口。"}]},{"ID":"20240201213495-y35ufrs","Type":"NodeParagraph","Properties":{"id":"20240201213495-y35ufrs","updated":"20240201213495"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"https://oss.javaguide.cn/github/javaguide/java/concurrent/completablefuture-class-diagram.jpg","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201213496-00mzrum","Type":"NodeParagraph","Properties":{"id":"20240201213496-00mzrum","updated":"20240201213496"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"CompletionStage"},{"Type":"NodeText","Data":" 接口描述了一个异步计算的阶段。很多计算可以分成多个阶段或步骤，此时可以通过它将所有步骤组合起来，形成异步计算的流水线。"}]},{"ID":"20240201213497-5z3c1kz","Type":"NodeParagraph","Properties":{"id":"20240201213497-5z3c1kz","updated":"20240201213497"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"CompletableFuture"},{"Type":"NodeText","Data":" 除了提供了更为好用和强大的 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"Future"},{"Type":"NodeText","Data":" 特性之外，还提供了函数式编程的能力。"}]},{"ID":"20240201213498-2yfi8yp","Type":"NodeParagraph","Properties":{"id":"20240201213498-2yfi8yp","updated":"20240201213498"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"https://oss.javaguide.cn/javaguide/image-20210902092441434.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201213499-781oqk3","Type":"NodeParagraph","Properties":{"id":"20240201213499-781oqk3","updated":"20240201213499"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"Future"},{"Type":"NodeText","Data":" 接口有 5 个方法："}]},{"ID":"20240201213500-ly3luli","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213500-ly3luli","updated":"20240201213500"},"Children":[{"ID":"20240201213501-gclrmwx","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213501-gclrmwx","updated":"20240201213501"},"Children":[{"ID":"20240201213502-0gjqjau","Type":"NodeParagraph","Properties":{"id":"20240201213502-0gjqjau","updated":"20240201213502"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"boolean cancel(boolean mayInterruptIfRunning)"},{"Type":"NodeText","Data":"：尝试取消执行任务。"}]}]},{"ID":"20240201213503-grdydwu","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213503-grdydwu","updated":"20240201213503"},"Children":[{"ID":"20240201213504-o949xfp","Type":"NodeParagraph","Properties":{"id":"20240201213504-o949xfp","updated":"20240201213504"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"boolean isCancelled()"},{"Type":"NodeText","Data":"：判断任务是否被取消。"}]}]},{"ID":"20240201213505-zlbmcfp","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213505-zlbmcfp","updated":"20240201213505"},"Children":[{"ID":"20240201213506-kusd1ku","Type":"NodeParagraph","Properties":{"id":"20240201213506-kusd1ku","updated":"20240201213506"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"boolean isDone()"},{"Type":"NodeText","Data":"：判断任务是否已经被执行完成。"}]}]},{"ID":"20240201213507-ybwj603","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213507-ybwj603","updated":"20240201213507"},"Children":[{"ID":"20240201213508-llw4ffp","Type":"NodeParagraph","Properties":{"id":"20240201213508-llw4ffp","updated":"20240201213508"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"get()"},{"Type":"NodeText","Data":"：等待任务执行完成并获取运算结果。"}]}]},{"ID":"20240201213509-e7b47nf","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213509-e7b47nf","updated":"20240201213509"},"Children":[{"ID":"20240201213510-ri1csfs","Type":"NodeParagraph","Properties":{"id":"20240201213510-ri1csfs","updated":"20240201213510"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"get(long timeout, TimeUnit unit)"},{"Type":"NodeText","Data":"：多了一个超时时间。"}]}]}]},{"ID":"20240201213511-i2kwc8g","Type":"NodeParagraph","Properties":{"id":"20240201213511-i2kwc8g","updated":"20240201213511"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"CompletionStage"},{"Type":"NodeText","Data":" 接口描述了一个异步计算的阶段。很多计算可以分成多个阶段或步骤，此时可以通过它将所有步骤组合起来，形成异步计算的流水线。"}]},{"ID":"20240201213512-spxt1m9","Type":"NodeParagraph","Properties":{"id":"20240201213512-spxt1m9","updated":"20240201213512"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"CompletionStage"},{"Type":"NodeText","Data":" 接口中的方法比较多，"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"CompletableFuture"},{"Type":"NodeText","Data":" 的函数式能力就是这个接口赋予的。从这个接口的方法参数你就可以发现其大量使用了 Java8 引入的函数式编程。"}]},{"ID":"20240201213513-djgzdfz","Type":"NodeParagraph","Properties":{"id":"20240201213513-djgzdfz","updated":"20240201213513"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"https://oss.javaguide.cn/javaguide/image-20210902093026059.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201213514-phro26y","Type":"NodeParagraph","Properties":{"id":"20240201213514-phro26y","updated":"20240201213514"},"Children":[{"Type":"NodeText","Data":"由于方法众多，所以这里不能一一讲解，下文中我会介绍大部分常见方法的使用。"}]},{"ID":"20240201213515-kpws9pp","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240201213515-kpws9pp","updated":"20240201213515"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"CompletableFuture 常见操作"}]},{"ID":"20240201213516-n6exhoi","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240201213516-n6exhoi","updated":"20240201213516"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"创建 CompletableFuture"}]},{"ID":"20240201213517-pn5m1x5","Type":"NodeParagraph","Properties":{"id":"20240201213517-pn5m1x5","updated":"20240201213517"},"Children":[{"Type":"NodeText","Data":"常见的创建 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"CompletableFuture"},{"Type":"NodeText","Data":" 对象的方法如下："}]},{"ID":"20240201213518-w69dc3f","Type":"NodeList","ListData":{"Typ":1,"Tight":true,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20240201213518-w69dc3f","updated":"20240201213518"},"Children":[{"ID":"20240201213519-6cwctcv","Type":"NodeListItem","Data":"1","ListData":{"Typ":1,"Tight":true,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20240201213519-6cwctcv","updated":"20240201213519"},"Children":[{"ID":"20240201213520-cccs110","Type":"NodeParagraph","Properties":{"id":"20240201213520-cccs110","updated":"20240201213520"},"Children":[{"Type":"NodeText","Data":"通过 new 关键字。"}]}]},{"ID":"20240201213521-fklzxxn","Type":"NodeListItem","Data":"2","ListData":{"Typ":1,"Tight":true,"Start":2,"Delimiter":46,"Padding":3,"Marker":"Mg==","Num":2},"Properties":{"id":"20240201213521-fklzxxn","updated":"20240201213521"},"Children":[{"ID":"20240201213522-7l9veo5","Type":"NodeParagraph","Properties":{"id":"20240201213522-7l9veo5","updated":"20240201213522"},"Children":[{"Type":"NodeText","Data":"基于 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"CompletableFuture"},{"Type":"NodeText","Data":" 自带的静态工厂方法："},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"runAsync()"},{"Type":"NodeText","Data":"、"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"supplyAsync()"},{"Type":"NodeText","Data":" 。"}]}]}]},{"ID":"20240201213523-4amlx7i","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20240201213523-4amlx7i","updated":"20240201213523"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"new 关键字"}]},{"ID":"20240201213524-tugyidb","Type":"NodeParagraph","Properties":{"id":"20240201213524-tugyidb","updated":"20240201213524"},"Children":[{"Type":"NodeText","Data":"通过 new 关键字创建 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"CompletableFuture"},{"Type":"NodeText","Data":" 对象这种使用方式可以看作是将 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"CompletableFuture"},{"Type":"NodeText","Data":" 当做 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"Future"},{"Type":"NodeText","Data":" 来使用。"}]},{"ID":"20240201213525-va86akx","Type":"NodeParagraph","Properties":{"id":"20240201213525-va86akx","updated":"20240201213525"},"Children":[{"Type":"NodeText","Data":"我在我的开源项目 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/Snailclimb/guide-rpc-framework","TextMarkTextContent":"guide-rpc-framework"},{"Type":"NodeText","Data":" 中就是这种方式创建的 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"CompletableFuture"},{"Type":"NodeText","Data":" 对象。"}]},{"ID":"20240201213526-8y1kiy5","Type":"NodeParagraph","Properties":{"id":"20240201213526-8y1kiy5","updated":"20240201213526"},"Children":[{"Type":"NodeText","Data":"下面咱们来看一个简单的案例。"}]},{"ID":"20240201213527-ksdio8n","Type":"NodeParagraph","Properties":{"id":"20240201213527-ksdio8n","updated":"20240201213527"},"Children":[{"Type":"NodeText","Data":"我们通过创建了一个结果值类型为 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"RpcResponse\u0026lt;Object\u0026gt;"},{"Type":"NodeText","Data":" 的 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"CompletableFuture"},{"Type":"NodeText","Data":"，你可以把 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"resultFuture"},{"Type":"NodeText","Data":" 看作是异步运算结果的载体。"}]},{"ID":"20240201213528-951w3cj","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20240201213528-951w3cj","updated":"20240201213528"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"CompletableFuture\u003cRpcResponse\u003cObject\u003e\u003e resultFuture = new CompletableFuture\u003c\u003e();\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20240201213529-pxx25rt","Type":"NodeParagraph","Properties":{"id":"20240201213529-pxx25rt","updated":"20240201213529"},"Children":[{"Type":"NodeText","Data":"假设在未来的某个时刻，我们得到了最终的结果。这时，我们可以调用 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"complete()"},{"Type":"NodeText","Data":" 方法为其传入结果，这表示 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"resultFuture"},{"Type":"NodeText","Data":" 已经被完成了。"}]},{"ID":"20240201213530-xr9sdm2","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20240201213530-xr9sdm2","updated":"20240201213530"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"// complete() 方法只能调用一次，后续调用将被忽略。\nresultFuture.complete(rpcResponse);\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20240201213531-x7k8roy","Type":"NodeParagraph","Properties":{"id":"20240201213531-x7k8roy","updated":"20240201213531"},"Children":[{"Type":"NodeText","Data":"你可以通过 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"isDone()"},{"Type":"NodeText","Data":" 方法来检查是否已经完成。"}]},{"ID":"20240201213532-6rrwrj8","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20240201213532-6rrwrj8","updated":"20240201213532"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"public boolean isDone() {\n    return result != null;\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20240201213533-gzr8jlh","Type":"NodeParagraph","Properties":{"id":"20240201213533-gzr8jlh","updated":"20240201213533"},"Children":[{"Type":"NodeText","Data":"获取异步计算的结果也非常简单，直接调用 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"get()"},{"Type":"NodeText","Data":" 方法即可。调用 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"get()"},{"Type":"NodeText","Data":" 方法的线程会阻塞直到 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"CompletableFuture"},{"Type":"NodeText","Data":" 完成运算。"}]},{"ID":"20240201213534-5lflv6e","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20240201213534-5lflv6e","updated":"20240201213534"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"rpcResponse = completableFuture.get();\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20240201213535-2hm7om1","Type":"NodeParagraph","Properties":{"id":"20240201213535-2hm7om1","updated":"20240201213535"},"Children":[{"Type":"NodeText","Data":"如果你已经知道计算的结果的话，可以使用静态方法 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"completedFuture()"},{"Type":"NodeText","Data":" 来创建 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"CompletableFuture"},{"Type":"NodeText","Data":" 。"}]},{"ID":"20240201213536-66uausb","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20240201213536-66uausb","updated":"20240201213536"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"CompletableFuture\u003cString\u003e future = CompletableFuture.completedFuture(\"hello!\");\nassertEquals(\"hello!\", future.get());\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20240201213537-465fmz6","Type":"NodeParagraph","Properties":{"id":"20240201213537-465fmz6","updated":"20240201213537"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"completedFuture()"},{"Type":"NodeText","Data":" 方法底层调用的是带参数的 new 方法，只不过，这个方法不对外暴露。"}]},{"ID":"20240201213538-4kux2nd","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20240201213538-4kux2nd","updated":"20240201213538"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"public static \u003cU\u003e CompletableFuture\u003cU\u003e completedFuture(U value) {\n    return new CompletableFuture\u003cU\u003e((value == null) ? NIL : value);\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20240201213539-br706yk","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20240201213539-br706yk","updated":"20240201213539"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"静态工厂方法"}]},{"ID":"20240201213540-19sapac","Type":"NodeParagraph","Properties":{"id":"20240201213540-19sapac","updated":"20240201213540"},"Children":[{"Type":"NodeText","Data":"这两个方法可以帮助我们封装计算逻辑。"}]},{"ID":"20240201213541-cwxpzar","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20240201213541-cwxpzar","updated":"20240201213541"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"static \u003cU\u003e CompletableFuture\u003cU\u003e supplyAsync(Supplier\u003cU\u003e supplier);\n// 使用自定义线程池(推荐)\nstatic \u003cU\u003e CompletableFuture\u003cU\u003e supplyAsync(Supplier\u003cU\u003e supplier, Executor executor);\nstatic CompletableFuture\u003cVoid\u003e runAsync(Runnable runnable);\n// 使用自定义线程池(推荐)\nstatic CompletableFuture\u003cVoid\u003e runAsync(Runnable runnable, Executor executor);\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20240201213542-g69nkvo","Type":"NodeParagraph","Properties":{"id":"20240201213542-g69nkvo","updated":"20240201213542"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"runAsync()"},{"Type":"NodeText","Data":" 方法接受的参数是 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"Runnable"},{"Type":"NodeText","Data":" ，这是一个函数式接口，不允许返回值。当你需要异步操作且不关心返回结果的时候可以使用 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"runAsync()"},{"Type":"NodeText","Data":" 方法。"}]},{"ID":"20240201213543-uxn6lxo","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20240201213543-uxn6lxo","updated":"20240201213543"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"@FunctionalInterface\npublic interface Runnable {\n    public abstract void run();\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20240201213544-yg97ovn","Type":"NodeParagraph","Properties":{"id":"20240201213544-yg97ovn","updated":"20240201213544"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"supplyAsync()"},{"Type":"NodeText","Data":" 方法接受的参数是 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"Supplier\u0026lt;U\u0026gt;"},{"Type":"NodeText","Data":" ，这也是一个函数式接口，"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"U"},{"Type":"NodeText","Data":" 是返回结果值的类型。"}]},{"ID":"20240201213545-qbabp33","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20240201213545-qbabp33","updated":"20240201213545"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"@FunctionalInterface\npublic interface Supplier\u003cT\u003e {\n\n    /**\n     * Gets a result.\n     *\n     * @return a result\n     */\n    T get();\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20240201213546-6yrhsfq","Type":"NodeParagraph","Properties":{"id":"20240201213546-6yrhsfq","updated":"20240201213546"},"Children":[{"Type":"NodeText","Data":"当你需要异步操作且关心返回结果的时候,可以使用 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"supplyAsync()"},{"Type":"NodeText","Data":" 方法。"}]},{"ID":"20240201213547-17kol3g","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20240201213547-17kol3g","updated":"20240201213547"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"CompletableFuture\u003cVoid\u003e future = CompletableFuture.runAsync(() -\u003e System.out.println(\"hello!\"));\nfuture.get();// 输出 \"hello!\"\nCompletableFuture\u003cString\u003e future2 = CompletableFuture.supplyAsync(() -\u003e \"hello!\");\nassertEquals(\"hello!\", future2.get());\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20240201213548-suzfmzp","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240201213548-suzfmzp","updated":"20240201213548"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"处理异步结算的结果"}]},{"ID":"20240201213549-5y28kri","Type":"NodeParagraph","Properties":{"id":"20240201213549-5y28kri","updated":"20240201213549"},"Children":[{"Type":"NodeText","Data":"当我们获取到异步计算的结果之后，还可以对其进行进一步的处理，比较常用的方法有下面几个："}]},{"ID":"20240201213550-gt0503v","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213550-gt0503v","updated":"20240201213550"},"Children":[{"ID":"20240201213551-wjmkmsf","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213551-wjmkmsf","updated":"20240201213551"},"Children":[{"ID":"20240201213552-zduwa3p","Type":"NodeParagraph","Properties":{"id":"20240201213552-zduwa3p","updated":"20240201213552"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"thenApply()"}]}]},{"ID":"20240201213553-m6d7sgm","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213553-m6d7sgm","updated":"20240201213553"},"Children":[{"ID":"20240201213554-r5fm0kt","Type":"NodeParagraph","Properties":{"id":"20240201213554-r5fm0kt","updated":"20240201213554"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"thenAccept()"}]}]},{"ID":"20240201213555-svlgzrv","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213555-svlgzrv","updated":"20240201213555"},"Children":[{"ID":"20240201213556-elenzb4","Type":"NodeParagraph","Properties":{"id":"20240201213556-elenzb4","updated":"20240201213556"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"thenRun()"}]}]},{"ID":"20240201213557-9nu1m5m","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213557-9nu1m5m","updated":"20240201213557"},"Children":[{"ID":"20240201213558-joaw1bc","Type":"NodeParagraph","Properties":{"id":"20240201213558-joaw1bc","updated":"20240201213558"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"whenComplete()"}]}]}]},{"ID":"20240201213559-6vy3dx0","Type":"NodeParagraph","Properties":{"id":"20240201213559-6vy3dx0","updated":"20240201213559"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"thenApply()"},{"Type":"NodeText","Data":" 方法接受一个 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"Function"},{"Type":"NodeText","Data":" 实例，用它来处理结果。"}]},{"ID":"20240201213560-a1efso4","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20240201213560-a1efso4","updated":"20240201213560"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"// 沿用上一个任务的线程池\npublic \u003cU\u003e CompletableFuture\u003cU\u003e thenApply(\n    Function\u003c? super T,? extends U\u003e fn) {\n    return uniApplyStage(null, fn);\n}\n\n//使用默认的 ForkJoinPool 线程池（不推荐）\npublic \u003cU\u003e CompletableFuture\u003cU\u003e thenApplyAsync(\n    Function\u003c? super T,? extends U\u003e fn) {\n    return uniApplyStage(defaultExecutor(), fn);\n}\n// 使用自定义线程池(推荐)\npublic \u003cU\u003e CompletableFuture\u003cU\u003e thenApplyAsync(\n    Function\u003c? super T,? extends U\u003e fn, Executor executor) {\n    return uniApplyStage(screenExecutor(executor), fn);\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20240201213561-89ajkxy","Type":"NodeParagraph","Properties":{"id":"20240201213561-89ajkxy","updated":"20240201213561"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"thenApply()"},{"Type":"NodeText","Data":" 方法使用示例如下："}]},{"ID":"20240201213562-ovjnvuv","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20240201213562-ovjnvuv","updated":"20240201213562"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"CompletableFuture\u003cString\u003e future = CompletableFuture.completedFuture(\"hello!\")\n        .thenApply(s -\u003e s + \"world!\");\nassertEquals(\"hello!world!\", future.get());\n// 这次调用将被忽略。\nfuture.thenApply(s -\u003e s + \"nice!\");\nassertEquals(\"hello!world!\", future.get());\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20240201213563-5ra96nc","Type":"NodeParagraph","Properties":{"id":"20240201213563-5ra96nc","updated":"20240201213563"},"Children":[{"Type":"NodeText","Data":"你还可以进行 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"流式调用"},{"Type":"NodeText","Data":"："}]},{"ID":"20240201213564-yjy9owf","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20240201213564-yjy9owf","updated":"20240201213564"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"CompletableFuture\u003cString\u003e future = CompletableFuture.completedFuture(\"hello!\")\n        .thenApply(s -\u003e s + \"world!\").thenApply(s -\u003e s + \"nice!\");\nassertEquals(\"hello!world!nice!\", future.get());\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20240201213565-tegdqf9","Type":"NodeParagraph","Properties":{"id":"20240201213565-tegdqf9","updated":"20240201213565"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"如果你不需要从回调函数中获取返回结果，可以使用 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong code","TextMarkTextContent":"thenAccept()"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":" 或者 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong code","TextMarkTextContent":"thenRun()"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"。这两个方法的区别在于 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong code","TextMarkTextContent":"thenRun()"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":" 不能访问异步计算的结果。"}]},{"ID":"20240201213566-jrb0lp1","Type":"NodeParagraph","Properties":{"id":"20240201213566-jrb0lp1","updated":"20240201213566"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"thenAccept()"},{"Type":"NodeText","Data":" 方法的参数是 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"Consumer\u0026lt;? super T\u0026gt;"},{"Type":"NodeText","Data":" 。"}]},{"ID":"20240201213567-0f4905k","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20240201213567-0f4905k","updated":"20240201213567"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"public CompletableFuture\u003cVoid\u003e thenAccept(Consumer\u003c? super T\u003e action) {\n    return uniAcceptStage(null, action);\n}\n\npublic CompletableFuture\u003cVoid\u003e thenAcceptAsync(Consumer\u003c? super T\u003e action) {\n    return uniAcceptStage(defaultExecutor(), action);\n}\n\npublic CompletableFuture\u003cVoid\u003e thenAcceptAsync(Consumer\u003c? super T\u003e action,\n                                               Executor executor) {\n    return uniAcceptStage(screenExecutor(executor), action);\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20240201213568-tkfik8r","Type":"NodeParagraph","Properties":{"id":"20240201213568-tkfik8r","updated":"20240201213568"},"Children":[{"Type":"NodeText","Data":"顾名思义，"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"Consumer"},{"Type":"NodeText","Data":" 属于消费型接口，它可以接收 1 个输入对象然后进行“消费”。"}]},{"ID":"20240201213569-bywcf7d","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20240201213569-bywcf7d","updated":"20240201213569"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"@FunctionalInterface\npublic interface Consumer\u003cT\u003e {\n\n    void accept(T t);\n\n    default Consumer\u003cT\u003e andThen(Consumer\u003c? super T\u003e after) {\n        Objects.requireNonNull(after);\n        return (T t) -\u003e { accept(t); after.accept(t); };\n    }\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20240201213570-sdj9wco","Type":"NodeParagraph","Properties":{"id":"20240201213570-sdj9wco","updated":"20240201213570"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"thenRun()"},{"Type":"NodeText","Data":" 的方法是的参数是 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"Runnable"},{"Type":"NodeText","Data":" 。"}]},{"ID":"20240201213571-4s62lzd","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20240201213571-4s62lzd","updated":"20240201213571"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"public CompletableFuture\u003cVoid\u003e thenRun(Runnable action) {\n    return uniRunStage(null, action);\n}\n\npublic CompletableFuture\u003cVoid\u003e thenRunAsync(Runnable action) {\n    return uniRunStage(defaultExecutor(), action);\n}\n\npublic CompletableFuture\u003cVoid\u003e thenRunAsync(Runnable action,\n                                            Executor executor) {\n    return uniRunStage(screenExecutor(executor), action);\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20240201213572-y0cxr8h","Type":"NodeParagraph","Properties":{"id":"20240201213572-y0cxr8h","updated":"20240201213572"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"thenAccept()"},{"Type":"NodeText","Data":" 和 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"thenRun()"},{"Type":"NodeText","Data":" 使用示例如下："}]},{"ID":"20240201213573-slwqn0g","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20240201213573-slwqn0g","updated":"20240201213573"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"CompletableFuture.completedFuture(\"hello!\")\n        .thenApply(s -\u003e s + \"world!\").thenApply(s -\u003e s + \"nice!\").thenAccept(System.out::println);//hello!world!nice!\n\nCompletableFuture.completedFuture(\"hello!\")\n        .thenApply(s -\u003e s + \"world!\").thenApply(s -\u003e s + \"nice!\").thenRun(() -\u003e System.out.println(\"hello!\"));//hello!\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20240201213574-phr36e4","Type":"NodeParagraph","Properties":{"id":"20240201213574-phr36e4","updated":"20240201213574"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"whenComplete()"},{"Type":"NodeText","Data":" 的方法的参数是 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"BiConsumer\u0026lt;? super T, ? super Throwable\u0026gt;"},{"Type":"NodeText","Data":" 。"}]},{"ID":"20240201213575-qjj6lio","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20240201213575-qjj6lio","updated":"20240201213575"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"public CompletableFuture\u003cT\u003e whenComplete(\n    BiConsumer\u003c? super T, ? super Throwable\u003e action) {\n    return uniWhenCompleteStage(null, action);\n}\n\n\npublic CompletableFuture\u003cT\u003e whenCompleteAsync(\n    BiConsumer\u003c? super T, ? super Throwable\u003e action) {\n    return uniWhenCompleteStage(defaultExecutor(), action);\n}\n// 使用自定义线程池(推荐)\npublic CompletableFuture\u003cT\u003e whenCompleteAsync(\n    BiConsumer\u003c? super T, ? super Throwable\u003e action, Executor executor) {\n    return uniWhenCompleteStage(screenExecutor(executor), action);\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20240201213576-2m0sg9v","Type":"NodeParagraph","Properties":{"id":"20240201213576-2m0sg9v","updated":"20240201213576"},"Children":[{"Type":"NodeText","Data":"相对于 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"Consumer"},{"Type":"NodeText","Data":" ， "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"BiConsumer"},{"Type":"NodeText","Data":" 可以接收 2 个输入对象然后进行“消费”。"}]},{"ID":"20240201213577-fbsaq6l","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20240201213577-fbsaq6l","updated":"20240201213577"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"@FunctionalInterface\npublic interface BiConsumer\u003cT, U\u003e {\n    void accept(T t, U u);\n\n    default BiConsumer\u003cT, U\u003e andThen(BiConsumer\u003c? super T, ? super U\u003e after) {\n        Objects.requireNonNull(after);\n\n        return (l, r) -\u003e {\n            accept(l, r);\n            after.accept(l, r);\n        };\n    }\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20240201213578-c94qgge","Type":"NodeParagraph","Properties":{"id":"20240201213578-c94qgge","updated":"20240201213578"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"whenComplete()"},{"Type":"NodeText","Data":" 使用示例如下："}]},{"ID":"20240201213579-7umtvj1","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20240201213579-7umtvj1","updated":"20240201213579"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"CompletableFuture\u003cString\u003e future = CompletableFuture.supplyAsync(() -\u003e \"hello!\")\n        .whenComplete((res, ex) -\u003e {\n            // res 代表返回的结果\n            // ex 的类型为 Throwable ，代表抛出的异常\n            System.out.println(res);\n            // 这里没有抛出异常所有为 null\n            assertNull(ex);\n        });\nassertEquals(\"hello!\", future.get());\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20240201213580-r0efznk","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240201213580-r0efznk","updated":"20240201213580"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"异常处理"}]},{"ID":"20240201213581-ygzu1ki","Type":"NodeParagraph","Properties":{"id":"20240201213581-ygzu1ki","updated":"20240201213581"},"Children":[{"Type":"NodeText","Data":"你可以通过 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"handle()"},{"Type":"NodeText","Data":" 方法来处理任务执行过程中可能出现的抛出异常的情况。"}]},{"ID":"20240201213582-6x8433f","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20240201213582-6x8433f","updated":"20240201213582"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"public \u003cU\u003e CompletableFuture\u003cU\u003e handle(\n    BiFunction\u003c? super T, Throwable, ? extends U\u003e fn) {\n    return uniHandleStage(null, fn);\n}\n\npublic \u003cU\u003e CompletableFuture\u003cU\u003e handleAsync(\n    BiFunction\u003c? super T, Throwable, ? extends U\u003e fn) {\n    return uniHandleStage(defaultExecutor(), fn);\n}\n\npublic \u003cU\u003e CompletableFuture\u003cU\u003e handleAsync(\n    BiFunction\u003c? super T, Throwable, ? extends U\u003e fn, Executor executor) {\n    return uniHandleStage(screenExecutor(executor), fn);\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20240201213583-ql7rgrc","Type":"NodeParagraph","Properties":{"id":"20240201213583-ql7rgrc","updated":"20240201213583"},"Children":[{"Type":"NodeText","Data":"示例代码如下："}]},{"ID":"20240201213584-ze2mfb7","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20240201213584-ze2mfb7","updated":"20240201213584"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"CompletableFuture\u003cString\u003e future\n        = CompletableFuture.supplyAsync(() -\u003e {\n    if (true) {\n        throw new RuntimeException(\"Computation error!\");\n    }\n    return \"hello!\";\n}).handle((res, ex) -\u003e {\n    // res 代表返回的结果\n    // ex 的类型为 Throwable ，代表抛出的异常\n    return res != null ? res : \"world!\";\n});\nassertEquals(\"world!\", future.get());\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20240201213585-cmq5os4","Type":"NodeParagraph","Properties":{"id":"20240201213585-cmq5os4","updated":"20240201213585"},"Children":[{"Type":"NodeText","Data":"你还可以通过 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"exceptionally()"},{"Type":"NodeText","Data":" 方法来处理异常情况。"}]},{"ID":"20240201213586-9l0yuf5","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20240201213586-9l0yuf5","updated":"20240201213586"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"CompletableFuture\u003cString\u003e future\n        = CompletableFuture.supplyAsync(() -\u003e {\n    if (true) {\n        throw new RuntimeException(\"Computation error!\");\n    }\n    return \"hello!\";\n}).exceptionally(ex -\u003e {\n    System.out.println(ex.toString());// CompletionException\n    return \"world!\";\n});\nassertEquals(\"world!\", future.get());\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20240201213587-26kra6s","Type":"NodeParagraph","Properties":{"id":"20240201213587-26kra6s","updated":"20240201213587"},"Children":[{"Type":"NodeText","Data":"如果你想让 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"CompletableFuture"},{"Type":"NodeText","Data":" 的结果就是异常的话，可以使用 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"completeExceptionally()"},{"Type":"NodeText","Data":" 方法为其赋值。"}]},{"ID":"20240201213588-hweaoh5","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20240201213588-hweaoh5","updated":"20240201213588"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"CompletableFuture\u003cString\u003e completableFuture = new CompletableFuture\u003c\u003e();\n// ...\ncompletableFuture.completeExceptionally(\n  new RuntimeException(\"Calculation failed!\"));\n// ...\ncompletableFuture.get(); // ExecutionException\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20240201213589-699lkpc","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240201213589-699lkpc","updated":"20240201213589"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"组合 CompletableFuture"}]},{"ID":"20240201213590-z7qnm7u","Type":"NodeParagraph","Properties":{"id":"20240201213590-z7qnm7u","updated":"20240201213590"},"Children":[{"Type":"NodeText","Data":"你可以使用 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"thenCompose()"},{"Type":"NodeText","Data":" 按顺序链接两个 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"CompletableFuture"},{"Type":"NodeText","Data":" 对象，实现异步的任务链。它的作用是将前一个任务的返回结果作为下一个任务的输入参数，从而形成一个依赖关系。"}]},{"ID":"20240201213591-tdi1ptg","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20240201213591-tdi1ptg","updated":"20240201213591"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"public \u003cU\u003e CompletableFuture\u003cU\u003e thenCompose(\n    Function\u003c? super T, ? extends CompletionStage\u003cU\u003e\u003e fn) {\n    return uniComposeStage(null, fn);\n}\n\npublic \u003cU\u003e CompletableFuture\u003cU\u003e thenComposeAsync(\n    Function\u003c? super T, ? extends CompletionStage\u003cU\u003e\u003e fn) {\n    return uniComposeStage(defaultExecutor(), fn);\n}\n\npublic \u003cU\u003e CompletableFuture\u003cU\u003e thenComposeAsync(\n    Function\u003c? super T, ? extends CompletionStage\u003cU\u003e\u003e fn,\n    Executor executor) {\n    return uniComposeStage(screenExecutor(executor), fn);\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20240201213592-4yvtoqm","Type":"NodeParagraph","Properties":{"id":"20240201213592-4yvtoqm","updated":"20240201213592"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"thenCompose()"},{"Type":"NodeText","Data":" 方法会使用示例如下："}]},{"ID":"20240201213593-99nw0pa","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20240201213593-99nw0pa","updated":"20240201213593"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"CompletableFuture\u003cString\u003e future\n        = CompletableFuture.supplyAsync(() -\u003e \"hello!\")\n        .thenCompose(s -\u003e CompletableFuture.supplyAsync(() -\u003e s + \"world!\"));\nassertEquals(\"hello!world!\", future.get());\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20240201213594-flhm927","Type":"NodeParagraph","Properties":{"id":"20240201213594-flhm927","updated":"20240201213594"},"Children":[{"Type":"NodeText","Data":"在实际开发中，这个方法还是非常有用的。比如说，task1 和 task2 都是异步执行的，但 task1 必须执行完成后才能开始执行 task2（task2 依赖 task1 的执行结果）。"}]},{"ID":"20240201213595-hwztew1","Type":"NodeParagraph","Properties":{"id":"20240201213595-hwztew1","updated":"20240201213595"},"Children":[{"Type":"NodeText","Data":"和 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"thenCompose()"},{"Type":"NodeText","Data":" 方法类似的还有 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"thenCombine()"},{"Type":"NodeText","Data":" 方法， 它同样可以组合两个 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"CompletableFuture"},{"Type":"NodeText","Data":" 对象。"}]},{"ID":"20240201213596-rh8er3v","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20240201213596-rh8er3v","updated":"20240201213596"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"CompletableFuture\u003cString\u003e completableFuture\n        = CompletableFuture.supplyAsync(() -\u003e \"hello!\")\n        .thenCombine(CompletableFuture.supplyAsync(\n                () -\u003e \"world!\"), (s1, s2) -\u003e s1 + s2)\n        .thenCompose(s -\u003e CompletableFuture.supplyAsync(() -\u003e s + \"nice!\"));\nassertEquals(\"hello!world!nice!\", completableFuture.get());\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20240201213597-qrtiz05","Type":"NodeParagraph","Properties":{"id":"20240201213597-qrtiz05","updated":"20240201213597"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"那 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong code","TextMarkTextContent":"thenCompose()"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":" 和 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong code","TextMarkTextContent":"thenCombine()"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":" 有什么区别呢？"}]},{"ID":"20240201213598-wy0izwg","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213598-wy0izwg","updated":"20240201213598"},"Children":[{"ID":"20240201213599-yl5r77u","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213599-yl5r77u","updated":"20240201213599"},"Children":[{"ID":"20240201213600-eydpacl","Type":"NodeParagraph","Properties":{"id":"20240201213600-eydpacl","updated":"20240201213600"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"thenCompose()"},{"Type":"NodeText","Data":" 可以链接两个 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"CompletableFuture"},{"Type":"NodeText","Data":" 对象，并将前一个任务的返回结果作为下一个任务的参数，它们之间存在着先后顺序。"}]}]},{"ID":"20240201213601-5qbj05a","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213601-5qbj05a","updated":"20240201213601"},"Children":[{"ID":"20240201213602-8995m09","Type":"NodeParagraph","Properties":{"id":"20240201213602-8995m09","updated":"20240201213602"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"thenCombine()"},{"Type":"NodeText","Data":" 会在两个任务都执行完成后，把两个任务的结果合并。两个任务是并行执行的，它们之间并没有先后依赖顺序。"}]}]}]},{"ID":"20240201213603-27modb9","Type":"NodeParagraph","Properties":{"id":"20240201213603-27modb9","updated":"20240201213603"},"Children":[{"Type":"NodeText","Data":"除了 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"thenCompose()"},{"Type":"NodeText","Data":" 和 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"thenCombine()"},{"Type":"NodeText","Data":" 之外， 还有一些其他的组合 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"CompletableFuture"},{"Type":"NodeText","Data":" 的方法用于实现不同的效果，满足不同的业务需求。"}]},{"ID":"20240201213604-4rn121l","Type":"NodeParagraph","Properties":{"id":"20240201213604-4rn121l","updated":"20240201213604"},"Children":[{"Type":"NodeText","Data":"例如，如果我们想要实现 task1 和 task2 中的任意一个任务执行完后就执行 task3 的话，可以使用 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"acceptEither()"},{"Type":"NodeText","Data":"。"}]},{"ID":"20240201213605-juda6m3","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20240201213605-juda6m3","updated":"20240201213605"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"public CompletableFuture\u003cVoid\u003e acceptEither(\n    CompletionStage\u003c? extends T\u003e other, Consumer\u003c? super T\u003e action) {\n    return orAcceptStage(null, other, action);\n}\n\npublic CompletableFuture\u003cVoid\u003e acceptEitherAsync(\n    CompletionStage\u003c? extends T\u003e other, Consumer\u003c? super T\u003e action) {\n    return orAcceptStage(asyncPool, other, action);\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20240201213606-3i3bl8n","Type":"NodeParagraph","Properties":{"id":"20240201213606-3i3bl8n","updated":"20240201213606"},"Children":[{"Type":"NodeText","Data":"简单举一个例子："}]},{"ID":"20240201213607-bi6qbuh","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20240201213607-bi6qbuh","updated":"20240201213607"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"CompletableFuture\u003cString\u003e task = CompletableFuture.supplyAsync(() -\u003e {\n    System.out.println(\"任务1开始执行，当前时间：\" + System.currentTimeMillis());\n    try {\n        Thread.sleep(500);\n    } catch (InterruptedException e) {\n        e.printStackTrace();\n    }\n    System.out.println(\"任务1执行完毕，当前时间：\" + System.currentTimeMillis());\n    return \"task1\";\n});\n\nCompletableFuture\u003cString\u003e task2 = CompletableFuture.supplyAsync(() -\u003e {\n    System.out.println(\"任务2开始执行，当前时间：\" + System.currentTimeMillis());\n    try {\n        Thread.sleep(1000);\n    } catch (InterruptedException e) {\n        e.printStackTrace();\n    }\n    System.out.println(\"任务2执行完毕，当前时间：\" + System.currentTimeMillis());\n    return \"task2\";\n});\n\ntask.acceptEitherAsync(task2, (res) -\u003e {\n    System.out.println(\"任务3开始执行，当前时间：\" + System.currentTimeMillis());\n    System.out.println(\"上一个任务的结果为：\" + res);\n});\n\n// 增加一些延迟时间，确保异步任务有足够的时间完成\ntry {\n    Thread.sleep(2000);\n} catch (InterruptedException e) {\n    e.printStackTrace();\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20240201213608-m3z08kp","Type":"NodeParagraph","Properties":{"id":"20240201213608-m3z08kp","updated":"20240201213608"},"Children":[{"Type":"NodeText","Data":"输出："}]},{"ID":"20240201213609-8y33s65","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"cGxhaW4=","CodeBlockCloseFence":"YGBg","Properties":{"id":"20240201213609-8y33s65","updated":"20240201213609"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"cGxhaW4=","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"任务1开始执行，当前时间：1695088058520\n任务2开始执行，当前时间：1695088058521\n任务1执行完毕，当前时间：1695088059023\n任务3开始执行，当前时间：1695088059023\n上一个任务的结果为：task1\n任务2执行完毕，当前时间：1695088059523\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20240201213610-hjaztyd","Type":"NodeParagraph","Properties":{"id":"20240201213610-hjaztyd","updated":"20240201213610"},"Children":[{"Type":"NodeText","Data":"任务组合操作"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"acceptEitherAsync()"},{"Type":"NodeText","Data":"会在异步任务 1 和异步任务 2 中的任意一个完成时触发执行任务 3，但是需要注意，这个触发时机是不确定的。如果任务 1 和任务 2 都还未完成，那么任务 3 就不能被执行。"}]},{"ID":"20240201213611-5o018th","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240201213611-5o018th","updated":"20240201213611"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"并行运行多个 CompletableFuture"}]},{"ID":"20240201213612-7iw0ae4","Type":"NodeParagraph","Properties":{"id":"20240201213612-7iw0ae4","updated":"20240201213612"},"Children":[{"Type":"NodeText","Data":"你可以通过 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"CompletableFuture"},{"Type":"NodeText","Data":" 的 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"allOf()"},{"Type":"NodeText","Data":"这个静态方法来并行运行多个 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"CompletableFuture"},{"Type":"NodeText","Data":" 。"}]},{"ID":"20240201213613-hrf81pm","Type":"NodeParagraph","Properties":{"id":"20240201213613-hrf81pm","updated":"20240201213613"},"Children":[{"Type":"NodeText","Data":"实际项目中，我们经常需要并行运行多个互不相关的任务，这些任务之间没有依赖关系，可以互相独立地运行。"}]},{"ID":"20240201213614-trelfyj","Type":"NodeParagraph","Properties":{"id":"20240201213614-trelfyj","updated":"20240201213614"},"Children":[{"Type":"NodeText","Data":"比说我们要读取处理 6 个文件，这 6 个任务都是没有执行顺序依赖的任务，但是我们需要返回给用户的时候将这几个文件的处理的结果进行统计整理。像这种情况我们就可以使用并行运行多个 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"CompletableFuture"},{"Type":"NodeText","Data":" 来处理。"}]},{"ID":"20240201213615-t99vppi","Type":"NodeParagraph","Properties":{"id":"20240201213615-t99vppi","updated":"20240201213615"},"Children":[{"Type":"NodeText","Data":"示例代码如下："}]},{"ID":"20240201213616-j3nsaaj","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20240201213616-j3nsaaj","updated":"20240201213616"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"CompletableFuture\u003cVoid\u003e task1 =\n  CompletableFuture.supplyAsync(()-\u003e{\n    //自定义业务操作\n  });\n......\nCompletableFuture\u003cVoid\u003e task6 =\n  CompletableFuture.supplyAsync(()-\u003e{\n    //自定义业务操作\n  });\n......\n CompletableFuture\u003cVoid\u003e headerFuture=CompletableFuture.allOf(task1,.....,task6);\n\n  try {\n    headerFuture.join();\n  } catch (Exception ex) {\n    ......\n  }\nSystem.out.println(\"all done. \");\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20240201213617-r88i8jb","Type":"NodeParagraph","Properties":{"id":"20240201213617-r88i8jb","updated":"20240201213617"},"Children":[{"Type":"NodeText","Data":"经常和 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"allOf()"},{"Type":"NodeText","Data":" 方法拿来对比的是 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"anyOf()"},{"Type":"NodeText","Data":" 方法。"}]},{"ID":"20240201213618-yt4n0fy","Type":"NodeParagraph","Properties":{"id":"20240201213618-yt4n0fy","updated":"20240201213618"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong code","TextMarkTextContent":"allOf()"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":" 方法会等到所有的 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong code","TextMarkTextContent":"CompletableFuture"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":" 都运行完成之后再返回"}]},{"ID":"20240201213619-o3b5y9a","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20240201213619-o3b5y9a","updated":"20240201213619"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"Random rand = new Random();\nCompletableFuture\u003cString\u003e future1 = CompletableFuture.supplyAsync(() -\u003e {\n    try {\n        Thread.sleep(1000 + rand.nextInt(1000));\n    } catch (InterruptedException e) {\n        e.printStackTrace();\n    } finally {\n        System.out.println(\"future1 done...\");\n    }\n    return \"abc\";\n});\nCompletableFuture\u003cString\u003e future2 = CompletableFuture.supplyAsync(() -\u003e {\n    try {\n        Thread.sleep(1000 + rand.nextInt(1000));\n    } catch (InterruptedException e) {\n        e.printStackTrace();\n    } finally {\n        System.out.println(\"future2 done...\");\n    }\n    return \"efg\";\n});\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20240201213620-fe9m8v9","Type":"NodeParagraph","Properties":{"id":"20240201213620-fe9m8v9","updated":"20240201213620"},"Children":[{"Type":"NodeText","Data":"调用 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"join()"},{"Type":"NodeText","Data":" 可以让程序等"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"future1"},{"Type":"NodeText","Data":" 和 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"future2"},{"Type":"NodeText","Data":" 都运行完了之后再继续执行。"}]},{"ID":"20240201213621-s9a0own","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20240201213621-s9a0own","updated":"20240201213621"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"CompletableFuture\u003cVoid\u003e completableFuture = CompletableFuture.allOf(future1, future2);\ncompletableFuture.join();\nassertTrue(completableFuture.isDone());\nSystem.out.println(\"all futures done...\");\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20240201213622-ji1k83p","Type":"NodeParagraph","Properties":{"id":"20240201213622-ji1k83p","updated":"20240201213622"},"Children":[{"Type":"NodeText","Data":"输出："}]},{"ID":"20240201213623-zfnlw54","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"cGxhaW4=","CodeBlockCloseFence":"YGBg","Properties":{"id":"20240201213623-zfnlw54","updated":"20240201213623"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"cGxhaW4=","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"future1 done...\nfuture2 done...\nall futures done...\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20240201213624-7siulne","Type":"NodeParagraph","Properties":{"id":"20240201213624-7siulne","updated":"20240201213624"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong code","TextMarkTextContent":"anyOf()"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":" 方法不会等待所有的 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong code","TextMarkTextContent":"CompletableFuture"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":" 都运行完成之后再返回，只要有一个执行完成即可！"}]},{"ID":"20240201213625-tpssyg2","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20240201213625-tpssyg2","updated":"20240201213625"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"CompletableFuture\u003cObject\u003e f = CompletableFuture.anyOf(future1, future2);\nSystem.out.println(f.get());\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20240201213626-fwwvld7","Type":"NodeParagraph","Properties":{"id":"20240201213626-fwwvld7","updated":"20240201213626"},"Children":[{"Type":"NodeText","Data":"输出结果可能是："}]},{"ID":"20240201213627-fdarq07","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"cGxhaW4=","CodeBlockCloseFence":"YGBg","Properties":{"id":"20240201213627-fdarq07","updated":"20240201213627"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"cGxhaW4=","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"future2 done...\nefg\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20240201213628-upyliw8","Type":"NodeParagraph","Properties":{"id":"20240201213628-upyliw8","updated":"20240201213628"},"Children":[{"Type":"NodeText","Data":"也可能是："}]},{"ID":"20240201213629-z0gp17y","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"cGxhaW4=","CodeBlockCloseFence":"YGBg","Properties":{"id":"20240201213629-z0gp17y","updated":"20240201213629"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"cGxhaW4=","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"future1 done...\nabc\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20240201213630-nq9p4xn","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240201213630-nq9p4xn","updated":"20240201213630"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"CompletableFuture 使用建议"}]},{"ID":"20240201213631-jvaeimn","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240201213631-jvaeimn","updated":"20240201213631"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"使用自定义线程池"}]},{"ID":"20240201213632-ab36uly","Type":"NodeParagraph","Properties":{"id":"20240201213632-ab36uly","updated":"20240201213632"},"Children":[{"Type":"NodeText","Data":"我们上面的代码示例中，为了方便，都没有选择自定义线程池。实际项目中，这是不可取的。"}]},{"ID":"20240201213633-wsg8qtl","Type":"NodeParagraph","Properties":{"id":"20240201213633-wsg8qtl","updated":"20240201213633"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"CompletableFuture"},{"Type":"NodeText","Data":" 默认使用"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"ForkJoinPool.commonPool()"},{"Type":"NodeText","Data":" 作为执行器，这个线程池是全局共享的，可能会被其他任务占用，导致性能下降或者饥饿。因此，建议使用自定义的线程池来执行 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"CompletableFuture"},{"Type":"NodeText","Data":" 的异步任务，可以提高并发度和灵活性。"}]},{"ID":"20240201213634-7qr30f2","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20240201213634-7qr30f2","updated":"20240201213634"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"private ThreadPoolExecutor executor = new ThreadPoolExecutor(10, 10,\n        0L, TimeUnit.MILLISECONDS,\n        new LinkedBlockingQueue\u003cRunnable\u003e());\n\nCompletableFuture.runAsync(() -\u003e {\n     //...\n}, executor);\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20240201213635-h30k7yz","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240201213635-h30k7yz","updated":"20240201213635"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"尽量避免使用 get()"}]},{"ID":"20240201213636-j5k0nno","Type":"NodeParagraph","Properties":{"id":"20240201213636-j5k0nno","updated":"20240201213636"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"CompletableFuture"},{"Type":"NodeText","Data":"的"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"get()"},{"Type":"NodeText","Data":"方法是阻塞的，尽量避免使用。如果必须要使用的话，需要添加超时时间，否则可能会导致主线程一直等待，无法执行其他任务。"}]},{"ID":"20240201213637-ntrrli5","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20240201213637-ntrrli5","updated":"20240201213637"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"    CompletableFuture\u003cString\u003e future = CompletableFuture.supplyAsync(() -\u003e {\n        try {\n            Thread.sleep(10_000);\n        } catch (InterruptedException e) {\n            e.printStackTrace();\n        }\n        return \"Hello, world!\";\n    });\n\n    // 获取异步任务的返回值，设置超时时间为 5 秒\n    try {\n        String result = future.get(5, TimeUnit.SECONDS);\n        System.out.println(result);\n    } catch (InterruptedException | ExecutionException | TimeoutException e) {\n        // 处理异常\n        e.printStackTrace();\n    }\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20240201213638-rcxacwx","Type":"NodeParagraph","Properties":{"id":"20240201213638-rcxacwx","updated":"20240201213638"},"Children":[{"Type":"NodeText","Data":"上面这段代码在调用 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"get()"},{"Type":"NodeText","Data":" 时抛出了 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"TimeoutException"},{"Type":"NodeText","Data":" 异常。这样我们就可以在异常处理中进行相应的操作，比如取消任务、重试任务、记录日志等。"}]},{"ID":"20240201213639-fkuy55x","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240201213639-fkuy55x","updated":"20240201213639"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"正确进行异常处理"}]},{"ID":"20240201213640-8496s2m","Type":"NodeParagraph","Properties":{"id":"20240201213640-8496s2m","updated":"20240201213640"},"Children":[{"Type":"NodeText","Data":"使用 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"CompletableFuture"},{"Type":"NodeText","Data":"的时候一定要以正确的方式进行异常处理，避免异常丢失或者出现不可控问题。"}]},{"ID":"20240201213641-u1fw5ju","Type":"NodeParagraph","Properties":{"id":"20240201213641-u1fw5ju","updated":"20240201213641"},"Children":[{"Type":"NodeText","Data":"下面是一些建议："}]},{"ID":"20240201213642-eub5zwl","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213642-eub5zwl","updated":"20240201213642"},"Children":[{"ID":"20240201213643-9lcid1e","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213643-9lcid1e","updated":"20240201213643"},"Children":[{"ID":"20240201213644-km6mzby","Type":"NodeParagraph","Properties":{"id":"20240201213644-km6mzby","updated":"20240201213644"},"Children":[{"Type":"NodeText","Data":"使用 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"whenComplete"},{"Type":"NodeText","Data":" 方法可以在任务完成时触发回调函数，并正确地处理异常，而不是让异常被吞噬或丢失。"}]}]},{"ID":"20240201213645-4lad3lo","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213645-4lad3lo","updated":"20240201213645"},"Children":[{"ID":"20240201213646-0sqe2ap","Type":"NodeParagraph","Properties":{"id":"20240201213646-0sqe2ap","updated":"20240201213646"},"Children":[{"Type":"NodeText","Data":"使用 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"exceptionally"},{"Type":"NodeText","Data":" 方法可以处理异常并重新抛出，以便异常能够传播到后续阶段，而不是让异常被忽略或终止。"}]}]},{"ID":"20240201213647-78hu3jo","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213647-78hu3jo","updated":"20240201213647"},"Children":[{"ID":"20240201213648-9oe6wkq","Type":"NodeParagraph","Properties":{"id":"20240201213648-9oe6wkq","updated":"20240201213648"},"Children":[{"Type":"NodeText","Data":"使用 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"handle"},{"Type":"NodeText","Data":" 方法可以处理正常的返回结果和异常，并返回一个新的结果，而不是让异常影响正常的业务逻辑。"}]}]},{"ID":"20240201213649-6xvkvau","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213649-6xvkvau","updated":"20240201213649"},"Children":[{"ID":"20240201213650-l4xubh7","Type":"NodeParagraph","Properties":{"id":"20240201213650-l4xubh7","updated":"20240201213650"},"Children":[{"Type":"NodeText","Data":"使用 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"CompletableFuture.allOf"},{"Type":"NodeText","Data":" 方法可以组合多个 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"CompletableFuture"},{"Type":"NodeText","Data":"，并统一处理所有任务的异常，而不是让异常处理过于冗长或重复。"}]}]},{"ID":"20240201213651-cir2wep","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213651-cir2wep","updated":"20240201213651"},"Children":[{"ID":"20240201213652-3bcdhz4","Type":"NodeParagraph","Properties":{"id":"20240201213652-3bcdhz4","updated":"20240201213652"},"Children":[{"Type":"NodeText","Data":"……"}]}]}]},{"ID":"20240201213653-ay5g7op","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240201213653-ay5g7op","updated":"20240201213653"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"合理组合多个异步任务"}]},{"ID":"20240201213654-38zqgot","Type":"NodeParagraph","Properties":{"id":"20240201213654-38zqgot","updated":"20240201213654"},"Children":[{"Type":"NodeText","Data":"正确使用 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"thenCompose()"},{"Type":"NodeText","Data":" 、 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"thenCombine()"},{"Type":"NodeText","Data":" 、"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"acceptEither()"},{"Type":"NodeText","Data":"、"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"allOf()"},{"Type":"NodeText","Data":"、"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"anyOf()"},{"Type":"NodeText","Data":"等方法来组合多个异步任务，以满足实际业务的需求，提高程序执行效率。"}]},{"ID":"20240201213655-osy67b7","Type":"NodeParagraph","Properties":{"id":"20240201213655-osy67b7","updated":"20240201213655"},"Children":[{"Type":"NodeText","Data":"实际使用中，我们还可以利用或者参考现成的异步任务编排框架，比如京东的 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://gitee.com/jd-platform-opensource/asyncTool","TextMarkTextContent":"asyncTool"},{"Type":"NodeText","Data":" 。"}]},{"ID":"20240201213656-drtwb2f","Type":"NodeParagraph","Properties":{"id":"20240201213656-drtwb2f","updated":"20240201213656"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"asyncTool README 文档","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"https://oss.javaguide.cn/github/javaguide/java/concurrent/asyncTool-readme.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201213657-n8qqe9h","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240201213657-n8qqe9h","updated":"20240201213657"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"后记"}]},{"ID":"20240201213658-lwmuhy0","Type":"NodeParagraph","Properties":{"id":"20240201213658-lwmuhy0","updated":"20240201213658"},"Children":[{"Type":"NodeText","Data":"这篇文章只是简单介绍了 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"CompletableFuture"},{"Type":"NodeText","Data":" 的核心概念和比较常用的一些 API 。如果想要深入学习的话，还可以多找一些书籍和博客看，比如下面几篇文章就挺不错："}]},{"ID":"20240201213659-yi6kful","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213659-yi6kful","updated":"20240201213659"},"Children":[{"ID":"20240201213660-e5n7usu","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213660-e5n7usu","updated":"20240201213660"},"Children":[{"ID":"20240201213661-grxoijf","Type":"NodeParagraph","Properties":{"id":"20240201213661-grxoijf","updated":"20240201213661"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://tech.meituan.com/2022/05/12/principles-and-practices-of-completablefuture.html","TextMarkTextContent":"CompletableFuture 原理与实践-外卖商家端 API 的异步化 - 美团技术团队"},{"Type":"NodeText","Data":"：这篇文章详细介绍了 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"CompletableFuture"},{"Type":"NodeText","Data":" 在实际项目中的运用。参考这篇文章，可以对项目中类似的场景进行优化，也算是一个小亮点了。这种性能优化方式比较简单且效果还不错！"}]}]},{"ID":"20240201213662-9retbyh","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213662-9retbyh","updated":"20240201213662"},"Children":[{"ID":"20240201213663-er5t6tg","Type":"NodeParagraph","Properties":{"id":"20240201213663-er5t6tg","updated":"20240201213663"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://mp.weixin.qq.com/s/32Ak-WFLynQfpn0Cg0N-0A","TextMarkTextContent":"读 RocketMQ 源码，学习并发编程三大神器 - 勇哥 java 实战分享"},{"Type":"NodeText","Data":"：这篇文章介绍了 RocketMQ 对"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"CompletableFuture"},{"Type":"NodeText","Data":"的应用。具体来说，从 RocketMQ 4.7 开始，RocketMQ 引入了 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"CompletableFuture"},{"Type":"NodeText","Data":"来实现异步消息处理 。"}]}]}]},{"ID":"20240201213664-r5p4qyi","Type":"NodeParagraph","Properties":{"id":"20240201213664-r5p4qyi","updated":"20240201213664"},"Children":[{"Type":"NodeText","Data":"另外，建议 G 友们可以看看京东的 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://gitee.com/jd-platform-opensource/asyncTool","TextMarkTextContent":"asyncTool"},{"Type":"NodeText","Data":" 这个并发框架，里面大量使用到了 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"CompletableFuture"},{"Type":"NodeText","Data":" 。"}]},{"ID":"20240201213665-at2h5bs","Type":"NodeHTMLBlock","Data":"\u003cdiv\u003e\n\u003c!-- @include: @article-footer.snippet.md --\u003e\n\u003c/div\u003e","HtmlBlockType":2,"Properties":{"id":"20240201213665-at2h5bs","updated":"20240201213665"}}]}