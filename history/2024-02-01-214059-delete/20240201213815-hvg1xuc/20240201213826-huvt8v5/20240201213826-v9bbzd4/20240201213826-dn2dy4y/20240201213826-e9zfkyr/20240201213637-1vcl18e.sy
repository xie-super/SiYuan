{"ID":"20240201213637-1vcl18e","Spec":"1","Type":"NodeDocument","Properties":{"id":"20240201213637-1vcl18e","title":"java-collection-precautions-for-use","updated":"20240201213637"},"Children":[{"ID":"20240201213638-ntmn0ns","Type":"NodeThematicBreak","Properties":{"id":"20240201213638-ntmn0ns","updated":"20240201213638"}},{"ID":"20240201213639-tl5sv0k","Type":"NodeParagraph","Properties":{"id":"20240201213639-tl5sv0k","updated":"20240201213639"},"Children":[{"Type":"NodeText","Data":"title: Java集合使用注意事项总结"},{"Type":"NodeSoftBreak","Data":"\n","Properties":{"id":""}},{"Type":"NodeText","Data":"category: Java"},{"Type":"NodeSoftBreak","Data":"\n","Properties":{"id":""}},{"Type":"NodeText","Data":"tag:"}]},{"ID":"20240201213640-bs4uvtb","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"MarkerOffset":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213640-bs4uvtb","updated":"20240201213640"},"Children":[{"ID":"20240201213641-k73bleb","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"MarkerOffset":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213641-k73bleb","updated":"20240201213641"},"Children":[{"ID":"20240201213642-fssqanb","Type":"NodeParagraph","Properties":{"id":"20240201213642-fssqanb","updated":"20240201213642"},"Children":[{"Type":"NodeText","Data":"Java集合"}]}]}]},{"ID":"20240201213643-g2zrrpl","Type":"NodeThematicBreak","Properties":{"id":"20240201213643-g2zrrpl","updated":"20240201213643"}},{"ID":"20240201213644-7q1eotb","Type":"NodeParagraph","Properties":{"id":"20240201213644-7q1eotb","updated":"20240201213644"},"Children":[{"Type":"NodeText","Data":"这篇文章我根据《阿里巴巴 Java 开发手册》总结了关于集合使用常见的注意事项以及其具体原理。"}]},{"ID":"20240201213645-9hoxiwt","Type":"NodeParagraph","Properties":{"id":"20240201213645-9hoxiwt","updated":"20240201213645"},"Children":[{"Type":"NodeText","Data":"强烈建议小伙伴们多多阅读几遍，避免自己写代码的时候出现这些低级的问题。"}]},{"ID":"20240201213646-iru4dru","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240201213646-iru4dru","updated":"20240201213646"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"集合判空"}]},{"ID":"20240201213647-akzun86","Type":"NodeParagraph","Properties":{"id":"20240201213647-akzun86","updated":"20240201213647"},"Children":[{"Type":"NodeText","Data":"《阿里巴巴 Java 开发手册》的描述如下："}]},{"ID":"20240201213648-mig6sun","Type":"NodeBlockquote","Properties":{"id":"20240201213648-mig6sun","updated":"20240201213648"},"Children":[{"Type":"NodeBlockquoteMarker","Data":"\u003e ","Properties":{"id":""}},{"ID":"20240201213649-3wgsviy","Type":"NodeParagraph","Properties":{"id":"20240201213649-3wgsviy","updated":"20240201213649"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"判断所有集合内部的元素是否为空，使用 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong code","TextMarkTextContent":"isEmpty()"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":" 方法，而不是 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong code","TextMarkTextContent":"size()==0"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":" 的方式。"}]}]},{"ID":"20240201213650-99xoeel","Type":"NodeParagraph","Properties":{"id":"20240201213650-99xoeel","updated":"20240201213650"},"Children":[{"Type":"NodeText","Data":"这是因为 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"isEmpty()"},{"Type":"NodeText","Data":" 方法的可读性更好，并且时间复杂度为 O(1)。"}]},{"ID":"20240201213651-dk0iwwn","Type":"NodeParagraph","Properties":{"id":"20240201213651-dk0iwwn","updated":"20240201213651"},"Children":[{"Type":"NodeText","Data":"绝大部分我们使用的集合的 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"size()"},{"Type":"NodeText","Data":" 方法的时间复杂度也是 O(1)，不过，也有很多复杂度不是 O(1) 的，比如 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"java.util.concurrent"},{"Type":"NodeText","Data":" 包下的某些集合（"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"ConcurrentLinkedQueue"},{"Type":"NodeText","Data":"、"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"ConcurrentHashMap"},{"Type":"NodeText","Data":"...）。"}]},{"ID":"20240201213652-kna53zv","Type":"NodeParagraph","Properties":{"id":"20240201213652-kna53zv","updated":"20240201213652"},"Children":[{"Type":"NodeText","Data":"下面是 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"ConcurrentHashMap"},{"Type":"NodeText","Data":" 的 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"size()"},{"Type":"NodeText","Data":" 方法和 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"isEmpty()"},{"Type":"NodeText","Data":" 方法的源码。"}]},{"ID":"20240201213653-otxuzey","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20240201213653-otxuzey","updated":"20240201213653"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"public int size() {\n    long n = sumCount();\n    return ((n \u003c 0L) ? 0 :\n            (n \u003e (long)Integer.MAX_VALUE) ? Integer.MAX_VALUE :\n            (int)n);\n}\nfinal long sumCount() {\n    CounterCell[] as = counterCells; CounterCell a;\n    long sum = baseCount;\n    if (as != null) {\n        for (int i = 0; i \u003c as.length; ++i) {\n            if ((a = as[i]) != null)\n                sum += a.value;\n        }\n    }\n    return sum;\n}\npublic boolean isEmpty() {\n    return sumCount() \u003c= 0L; // ignore transient negative values\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20240201213654-t54b6d7","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240201213654-t54b6d7","updated":"20240201213654"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"集合转 Map"}]},{"ID":"20240201213655-4n1sye4","Type":"NodeParagraph","Properties":{"id":"20240201213655-4n1sye4","updated":"20240201213655"},"Children":[{"Type":"NodeText","Data":"《阿里巴巴 Java 开发手册》的描述如下："}]},{"ID":"20240201213656-hdwwxf2","Type":"NodeBlockquote","Properties":{"id":"20240201213656-hdwwxf2","updated":"20240201213656"},"Children":[{"Type":"NodeBlockquoteMarker","Data":"\u003e ","Properties":{"id":""}},{"ID":"20240201213657-asimd1w","Type":"NodeParagraph","Properties":{"id":"20240201213657-asimd1w","updated":"20240201213657"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"在使用 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong code","TextMarkTextContent":"java.util.stream.Collectors"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":" 类的 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong code","TextMarkTextContent":"toMap()"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":" 方法转为 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong code","TextMarkTextContent":"Map"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":" 集合时，一定要注意当 value 为 null 时会抛 NPE 异常。"}]}]},{"ID":"20240201213658-fscuqlm","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20240201213658-fscuqlm","updated":"20240201213658"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"class Person {\n    private String name;\n    private String phoneNumber;\n     // getters and setters\n}\n\nList\u003cPerson\u003e bookList = new ArrayList\u003c\u003e();\nbookList.add(new Person(\"jack\",\"18163138123\"));\nbookList.add(new Person(\"martin\",null));\n// 空指针异常\nbookList.stream().collect(Collectors.toMap(Person::getName, Person::getPhoneNumber));\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20240201213659-23k6g1x","Type":"NodeParagraph","Properties":{"id":"20240201213659-23k6g1x","updated":"20240201213659"},"Children":[{"Type":"NodeText","Data":"下面我们来解释一下原因。"}]},{"ID":"20240201213660-wm7bc15","Type":"NodeParagraph","Properties":{"id":"20240201213660-wm7bc15","updated":"20240201213660"},"Children":[{"Type":"NodeText","Data":"首先，我们来看 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"java.util.stream.Collectors"},{"Type":"NodeText","Data":" 类的 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"toMap()"},{"Type":"NodeText","Data":" 方法 ，可以看到其内部调用了 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"Map"},{"Type":"NodeText","Data":" 接口的 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"merge()"},{"Type":"NodeText","Data":" 方法。"}]},{"ID":"20240201213661-xhnubqc","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20240201213661-xhnubqc","updated":"20240201213661"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"public static \u003cT, K, U, M extends Map\u003cK, U\u003e\u003e\nCollector\u003cT, ?, M\u003e toMap(Function\u003c? super T, ? extends K\u003e keyMapper,\n                            Function\u003c? super T, ? extends U\u003e valueMapper,\n                            BinaryOperator\u003cU\u003e mergeFunction,\n                            Supplier\u003cM\u003e mapSupplier) {\n    BiConsumer\u003cM, T\u003e accumulator\n            = (map, element) -\u003e map.merge(keyMapper.apply(element),\n                                          valueMapper.apply(element), mergeFunction);\n    return new CollectorImpl\u003c\u003e(mapSupplier, accumulator, mapMerger(mergeFunction), CH_ID);\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20240201213662-dgfiwln","Type":"NodeParagraph","Properties":{"id":"20240201213662-dgfiwln","updated":"20240201213662"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"Map"},{"Type":"NodeText","Data":" 接口的 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"merge()"},{"Type":"NodeText","Data":" 方法如下，这个方法是接口中的默认实现。"}]},{"ID":"20240201213663-c9yi4wk","Type":"NodeBlockquote","Properties":{"id":"20240201213663-c9yi4wk","updated":"20240201213663"},"Children":[{"Type":"NodeBlockquoteMarker","Data":"\u003e ","Properties":{"id":""}},{"ID":"20240201213664-9wswkcp","Type":"NodeParagraph","Properties":{"id":"20240201213664-9wswkcp","updated":"20240201213664"},"Children":[{"Type":"NodeText","Data":"如果你还不了解 Java 8 新特性的话，请看这篇文章："},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://mp.weixin.qq.com/s/ojyl7B6PiHaTWADqmUq2rw","TextMarkTextContent":"《Java8 新特性总结》"},{"Type":"NodeText","Data":" 。"}]}]},{"ID":"20240201213665-uzismoy","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20240201213665-uzismoy","updated":"20240201213665"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"default V merge(K key, V value,\n        BiFunction\u003c? super V, ? super V, ? extends V\u003e remappingFunction) {\n    Objects.requireNonNull(remappingFunction);\n    Objects.requireNonNull(value);\n    V oldValue = get(key);\n    V newValue = (oldValue == null) ? value :\n               remappingFunction.apply(oldValue, value);\n    if(newValue == null) {\n        remove(key);\n    } else {\n        put(key, newValue);\n    }\n    return newValue;\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20240201213666-c7mdvsk","Type":"NodeParagraph","Properties":{"id":"20240201213666-c7mdvsk","updated":"20240201213666"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"merge()"},{"Type":"NodeText","Data":" 方法会先调用 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"Objects.requireNonNull()"},{"Type":"NodeText","Data":" 方法判断 value 是否为空。"}]},{"ID":"20240201213667-wk5g9lj","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20240201213667-wk5g9lj","updated":"20240201213667"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"public static \u003cT\u003e T requireNonNull(T obj) {\n    if (obj == null)\n        throw new NullPointerException();\n    return obj;\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20240201213668-m7dkcir","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240201213668-m7dkcir","updated":"20240201213668"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"集合遍历"}]},{"ID":"20240201213669-6g51nox","Type":"NodeParagraph","Properties":{"id":"20240201213669-6g51nox","updated":"20240201213669"},"Children":[{"Type":"NodeText","Data":"《阿里巴巴 Java 开发手册》的描述如下："}]},{"ID":"20240201213670-4zr5zr1","Type":"NodeBlockquote","Properties":{"id":"20240201213670-4zr5zr1","updated":"20240201213670"},"Children":[{"Type":"NodeBlockquoteMarker","Data":"\u003e ","Properties":{"id":""}},{"ID":"20240201213671-c9mkiwx","Type":"NodeParagraph","Properties":{"id":"20240201213671-c9mkiwx","updated":"20240201213671"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"不要在 foreach 循环里进行元素的 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong code","TextMarkTextContent":"remove/add"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":" 操作。remove 元素请使用 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong code","TextMarkTextContent":"Iterator"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":" 方式，如果并发操作，需要对 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong code","TextMarkTextContent":"Iterator"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":" 对象加锁。"}]}]},{"ID":"20240201213672-lbsgj2u","Type":"NodeParagraph","Properties":{"id":"20240201213672-lbsgj2u","updated":"20240201213672"},"Children":[{"Type":"NodeText","Data":"通过反编译你会发现 foreach 语法底层其实还是依赖 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"Iterator"},{"Type":"NodeText","Data":" 。不过， "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"remove/add"},{"Type":"NodeText","Data":" 操作直接调用的是集合自己的方法，而不是 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"Iterator"},{"Type":"NodeText","Data":" 的 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"remove/add"},{"Type":"NodeText","Data":"方法"}]},{"ID":"20240201213673-p4g3oj4","Type":"NodeParagraph","Properties":{"id":"20240201213673-p4g3oj4","updated":"20240201213673"},"Children":[{"Type":"NodeText","Data":"这就导致 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"Iterator"},{"Type":"NodeText","Data":" 莫名其妙地发现自己有元素被 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"remove/add"},{"Type":"NodeText","Data":" ，然后，它就会抛出一个 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"ConcurrentModificationException"},{"Type":"NodeText","Data":" 来提示用户发生了并发修改异常。这就是单线程状态下产生的 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"fail-fast 机制"},{"Type":"NodeText","Data":"。"}]},{"ID":"20240201213674-mskej33","Type":"NodeBlockquote","Properties":{"id":"20240201213674-mskej33","updated":"20240201213674"},"Children":[{"Type":"NodeBlockquoteMarker","Data":"\u003e ","Properties":{"id":""}},{"ID":"20240201213675-2w7kkiv","Type":"NodeParagraph","Properties":{"id":"20240201213675-2w7kkiv","updated":"20240201213675"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"fail-fast 机制"},{"Type":"NodeText","Data":"：多个线程对 fail-fast 集合进行修改的时候，可能会抛出"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"ConcurrentModificationException"},{"Type":"NodeText","Data":"。 即使是单线程下也有可能会出现这种情况，上面已经提到过。"}]},{"ID":"20240201213676-43uh80b","Type":"NodeParagraph","Properties":{"id":"20240201213676-43uh80b","updated":"20240201213676"},"Children":[{"Type":"NodeText","Data":"相关阅读："},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://www.cnblogs.com/54chensongxia/p/12470446.html","TextMarkTextContent":"什么是 fail-fast"},{"Type":"NodeText","Data":" 。"}]}]},{"ID":"20240201213677-vz8c027","Type":"NodeParagraph","Properties":{"id":"20240201213677-vz8c027","updated":"20240201213677"},"Children":[{"Type":"NodeText","Data":"Java8 开始，可以使用 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"Collection#removeIf()"},{"Type":"NodeText","Data":"方法删除满足特定条件的元素,如"}]},{"ID":"20240201213678-rxvdytd","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20240201213678-rxvdytd","updated":"20240201213678"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"List\u003cInteger\u003e list = new ArrayList\u003c\u003e();\nfor (int i = 1; i \u003c= 10; ++i) {\n    list.add(i);\n}\nlist.removeIf(filter -\u003e filter % 2 == 0); /* 删除list中的所有偶数 */\nSystem.out.println(list); /* [1, 3, 5, 7, 9] */\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20240201213679-28tho37","Type":"NodeParagraph","Properties":{"id":"20240201213679-28tho37","updated":"20240201213679"},"Children":[{"Type":"NodeText","Data":"除了上面介绍的直接使用 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"Iterator"},{"Type":"NodeText","Data":" 进行遍历操作之外，你还可以："}]},{"ID":"20240201213680-7ln4ccx","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213680-7ln4ccx","updated":"20240201213680"},"Children":[{"ID":"20240201213681-8sr7vyo","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213681-8sr7vyo","updated":"20240201213681"},"Children":[{"ID":"20240201213682-k2v7drf","Type":"NodeParagraph","Properties":{"id":"20240201213682-k2v7drf","updated":"20240201213682"},"Children":[{"Type":"NodeText","Data":"使用普通的 for 循环"}]}]},{"ID":"20240201213683-qhsazfy","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213683-qhsazfy","updated":"20240201213683"},"Children":[{"ID":"20240201213684-w24pjgw","Type":"NodeParagraph","Properties":{"id":"20240201213684-w24pjgw","updated":"20240201213684"},"Children":[{"Type":"NodeText","Data":"使用 fail-safe 的集合类。"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"java.util"},{"Type":"NodeText","Data":"包下面的所有的集合类都是 fail-fast 的，而"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"java.util.concurrent"},{"Type":"NodeText","Data":"包下面的所有的类都是 fail-safe 的。"}]}]},{"ID":"20240201213685-yl6nc3y","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213685-yl6nc3y","updated":"20240201213685"},"Children":[{"ID":"20240201213686-tibqz3m","Type":"NodeParagraph","Properties":{"id":"20240201213686-tibqz3m","updated":"20240201213686"},"Children":[{"Type":"NodeText","Data":"……"}]}]}]},{"ID":"20240201213687-stgut0z","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240201213687-stgut0z","updated":"20240201213687"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"集合去重"}]},{"ID":"20240201213688-2ny1ayx","Type":"NodeParagraph","Properties":{"id":"20240201213688-2ny1ayx","updated":"20240201213688"},"Children":[{"Type":"NodeText","Data":"《阿里巴巴 Java 开发手册》的描述如下："}]},{"ID":"20240201213689-mpt9880","Type":"NodeBlockquote","Properties":{"id":"20240201213689-mpt9880","updated":"20240201213689"},"Children":[{"Type":"NodeBlockquoteMarker","Data":"\u003e ","Properties":{"id":""}},{"ID":"20240201213690-kwm2un6","Type":"NodeParagraph","Properties":{"id":"20240201213690-kwm2un6","updated":"20240201213690"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"可以利用 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong code","TextMarkTextContent":"Set"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":" 元素唯一的特性，可以快速对一个集合进行去重操作，避免使用 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong code","TextMarkTextContent":"List"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":" 的 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong code","TextMarkTextContent":"contains()"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":" 进行遍历去重或者判断包含操作。"}]}]},{"ID":"20240201213691-fhe4xyv","Type":"NodeParagraph","Properties":{"id":"20240201213691-fhe4xyv","updated":"20240201213691"},"Children":[{"Type":"NodeText","Data":"这里我们以 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"HashSet"},{"Type":"NodeText","Data":" 和 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"ArrayList"},{"Type":"NodeText","Data":" 为例说明。"}]},{"ID":"20240201213692-1k2aig2","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20240201213692-1k2aig2","updated":"20240201213692"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"// Set 去重代码示例\npublic static \u003cT\u003e Set\u003cT\u003e removeDuplicateBySet(List\u003cT\u003e data) {\n\n    if (CollectionUtils.isEmpty(data)) {\n        return new HashSet\u003c\u003e();\n    }\n    return new HashSet\u003c\u003e(data);\n}\n\n// List 去重代码示例\npublic static \u003cT\u003e List\u003cT\u003e removeDuplicateByList(List\u003cT\u003e data) {\n\n    if (CollectionUtils.isEmpty(data)) {\n        return new ArrayList\u003c\u003e();\n\n    }\n    List\u003cT\u003e result = new ArrayList\u003c\u003e(data.size());\n    for (T current : data) {\n        if (!result.contains(current)) {\n            result.add(current);\n        }\n    }\n    return result;\n}\n\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20240201213693-mrh2m43","Type":"NodeParagraph","Properties":{"id":"20240201213693-mrh2m43","updated":"20240201213693"},"Children":[{"Type":"NodeText","Data":"两者的核心差别在于 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"contains()"},{"Type":"NodeText","Data":" 方法的实现。"}]},{"ID":"20240201213694-9hxfsgs","Type":"NodeParagraph","Properties":{"id":"20240201213694-9hxfsgs","updated":"20240201213694"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"HashSet"},{"Type":"NodeText","Data":" 的 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"contains()"},{"Type":"NodeText","Data":" 方法底部依赖的 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"HashMap"},{"Type":"NodeText","Data":" 的 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"containsKey()"},{"Type":"NodeText","Data":" 方法，时间复杂度接近于 O（1）（没有出现哈希冲突的时候为 O（1））。"}]},{"ID":"20240201213695-4b7ca04","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20240201213695-4b7ca04","updated":"20240201213695"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"private transient HashMap\u003cE,Object\u003e map;\npublic boolean contains(Object o) {\n    return map.containsKey(o);\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20240201213696-ebkrid1","Type":"NodeParagraph","Properties":{"id":"20240201213696-ebkrid1","updated":"20240201213696"},"Children":[{"Type":"NodeText","Data":"我们有 N 个元素插入进 Set 中，那时间复杂度就接近是 O (n)。"}]},{"ID":"20240201213697-uqvnfwg","Type":"NodeParagraph","Properties":{"id":"20240201213697-uqvnfwg","updated":"20240201213697"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"ArrayList"},{"Type":"NodeText","Data":" 的 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"contains()"},{"Type":"NodeText","Data":" 方法是通过遍历所有元素的方法来做的，时间复杂度接近是 O(n)。"}]},{"ID":"20240201213698-0a3pg3j","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20240201213698-0a3pg3j","updated":"20240201213698"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"public boolean contains(Object o) {\n    return indexOf(o) \u003e= 0;\n}\npublic int indexOf(Object o) {\n    if (o == null) {\n        for (int i = 0; i \u003c size; i++)\n            if (elementData[i]==null)\n                return i;\n    } else {\n        for (int i = 0; i \u003c size; i++)\n            if (o.equals(elementData[i]))\n                return i;\n    }\n    return -1;\n}\n\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20240201213699-3i7ido8","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240201213699-3i7ido8","updated":"20240201213699"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"集合转数组"}]},{"ID":"20240201213700-ozbfuf3","Type":"NodeParagraph","Properties":{"id":"20240201213700-ozbfuf3","updated":"20240201213700"},"Children":[{"Type":"NodeText","Data":"《阿里巴巴 Java 开发手册》的描述如下："}]},{"ID":"20240201213701-310nlbo","Type":"NodeBlockquote","Properties":{"id":"20240201213701-310nlbo","updated":"20240201213701"},"Children":[{"Type":"NodeBlockquoteMarker","Data":"\u003e ","Properties":{"id":""}},{"ID":"20240201213702-riwasep","Type":"NodeParagraph","Properties":{"id":"20240201213702-riwasep","updated":"20240201213702"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"使用集合转数组的方法，必须使用集合的 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong code","TextMarkTextContent":"toArray(T[] array)"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"，传入的是类型完全一致、长度为 0 的空数组。"}]}]},{"ID":"20240201213703-bwfog4c","Type":"NodeParagraph","Properties":{"id":"20240201213703-bwfog4c","updated":"20240201213703"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"toArray(T[] array)"},{"Type":"NodeText","Data":" 方法的参数是一个泛型数组，如果 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"toArray"},{"Type":"NodeText","Data":" 方法中没有传递任何参数的话返回的是 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"Object"},{"Type":"NodeText","Data":"类 型数组。"}]},{"ID":"20240201213704-rpxsx9j","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20240201213704-rpxsx9j","updated":"20240201213704"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"String [] s= new String[]{\n    \"dog\", \"lazy\", \"a\", \"over\", \"jumps\", \"fox\", \"brown\", \"quick\", \"A\"\n};\nList\u003cString\u003e list = Arrays.asList(s);\nCollections.reverse(list);\n//没有指定类型的话会报错\ns=list.toArray(new String[0]);\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20240201213705-vvonk7y","Type":"NodeParagraph","Properties":{"id":"20240201213705-vvonk7y","updated":"20240201213705"},"Children":[{"Type":"NodeText","Data":"由于 JVM 优化，"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"new String[0]"},{"Type":"NodeText","Data":"作为"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"Collection.toArray()"},{"Type":"NodeText","Data":"方法的参数现在使用更好，"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"new String[0]"},{"Type":"NodeText","Data":"就是起一个模板的作用，指定了返回数组的类型，0 是为了节省空间，因为它只是为了说明返回的类型。详见："},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://shipilev.net/blog/2016/arrays-wisdom-ancients/","TextMarkTextContent":"https://shipilev.net/blog/2016/arrays-wisdom-ancients/"}]},{"ID":"20240201213706-ei08b1k","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240201213706-ei08b1k","updated":"20240201213706"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"数组转集合"}]},{"ID":"20240201213707-s1yb040","Type":"NodeParagraph","Properties":{"id":"20240201213707-s1yb040","updated":"20240201213707"},"Children":[{"Type":"NodeText","Data":"《阿里巴巴 Java 开发手册》的描述如下："}]},{"ID":"20240201213708-ccptfeg","Type":"NodeBlockquote","Properties":{"id":"20240201213708-ccptfeg","updated":"20240201213708"},"Children":[{"Type":"NodeBlockquoteMarker","Data":"\u003e ","Properties":{"id":""}},{"ID":"20240201213709-46ghqnw","Type":"NodeParagraph","Properties":{"id":"20240201213709-46ghqnw","updated":"20240201213709"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"使用工具类 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong code","TextMarkTextContent":"Arrays.asList()"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":" 把数组转换成集合时，不能使用其修改集合相关的方法， 它的 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong code","TextMarkTextContent":"add/remove/clear"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":" 方法会抛出 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong code","TextMarkTextContent":"UnsupportedOperationException"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":" 异常。"}]}]},{"ID":"20240201213710-09o86h9","Type":"NodeParagraph","Properties":{"id":"20240201213710-09o86h9","updated":"20240201213710"},"Children":[{"Type":"NodeText","Data":"我在之前的一个项目中就遇到一个类似的坑。"}]},{"ID":"20240201213711-xanczsa","Type":"NodeParagraph","Properties":{"id":"20240201213711-xanczsa","updated":"20240201213711"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"Arrays.asList()"},{"Type":"NodeText","Data":"在平时开发中还是比较常见的，我们可以使用它将一个数组转换为一个 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"List"},{"Type":"NodeText","Data":" 集合。"}]},{"ID":"20240201213712-zxscm15","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20240201213712-zxscm15","updated":"20240201213712"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"String[] myArray = {\"Apple\", \"Banana\", \"Orange\"};\nList\u003cString\u003e myList = Arrays.asList(myArray);\n//上面两个语句等价于下面一条语句\nList\u003cString\u003e myList = Arrays.asList(\"Apple\",\"Banana\", \"Orange\");\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20240201213713-k6r14z3","Type":"NodeParagraph","Properties":{"id":"20240201213713-k6r14z3","updated":"20240201213713"},"Children":[{"Type":"NodeText","Data":"JDK 源码对于这个方法的说明："}]},{"ID":"20240201213714-v3qy7y3","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20240201213714-v3qy7y3","updated":"20240201213714"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"/**\n  *返回由指定数组支持的固定大小的列表。此方法作为基于数组和基于集合的API之间的桥梁，\n  * 与 Collection.toArray()结合使用。返回的List是可序列化并实现RandomAccess接口。\n  */\npublic static \u003cT\u003e List\u003cT\u003e asList(T... a) {\n    return new ArrayList\u003c\u003e(a);\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20240201213715-gx79o47","Type":"NodeParagraph","Properties":{"id":"20240201213715-gx79o47","updated":"20240201213715"},"Children":[{"Type":"NodeText","Data":"下面我们来总结一下使用注意事项。"}]},{"ID":"20240201213716-n3t3qc4","Type":"NodeParagraph","Properties":{"id":"20240201213716-n3t3qc4","updated":"20240201213716"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"1、"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong code","TextMarkTextContent":"Arrays.asList()"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"是泛型方法，传递的数组必须是对象数组，而不是基本类型。"}]},{"ID":"20240201213717-v7jaa0x","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20240201213717-v7jaa0x","updated":"20240201213717"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"int[] myArray = {1, 2, 3};\nList myList = Arrays.asList(myArray);\nSystem.out.println(myList.size());//1\nSystem.out.println(myList.get(0));//数组地址值\nSystem.out.println(myList.get(1));//报错：ArrayIndexOutOfBoundsException\nint[] array = (int[]) myList.get(0);\nSystem.out.println(array[0]);//1\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20240201213718-n4e2142","Type":"NodeParagraph","Properties":{"id":"20240201213718-n4e2142","updated":"20240201213718"},"Children":[{"Type":"NodeText","Data":"当传入一个原生数据类型数组时，"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"Arrays.asList()"},{"Type":"NodeText","Data":" 的真正得到的参数就不是数组中的元素，而是数组对象本身！此时 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"List"},{"Type":"NodeText","Data":" 的唯一元素就是这个数组，这也就解释了上面的代码。"}]},{"ID":"20240201213719-50ffl33","Type":"NodeParagraph","Properties":{"id":"20240201213719-50ffl33","updated":"20240201213719"},"Children":[{"Type":"NodeText","Data":"我们使用包装类型数组就可以解决这个问题。"}]},{"ID":"20240201213720-5tcr160","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20240201213720-5tcr160","updated":"20240201213720"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"Integer[] myArray = {1, 2, 3};\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20240201213721-9jasbnw","Type":"NodeParagraph","Properties":{"id":"20240201213721-9jasbnw","updated":"20240201213721"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"2、使用集合的修改方法: "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong code","TextMarkTextContent":"add()"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"、"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong code","TextMarkTextContent":"remove()"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"、"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong code","TextMarkTextContent":"clear()"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"会抛出异常。"}]},{"ID":"20240201213722-p3vzwtl","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20240201213722-p3vzwtl","updated":"20240201213722"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"List myList = Arrays.asList(1, 2, 3);\nmyList.add(4);//运行时报错：UnsupportedOperationException\nmyList.remove(1);//运行时报错：UnsupportedOperationException\nmyList.clear();//运行时报错：UnsupportedOperationException\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20240201213723-tczyooy","Type":"NodeParagraph","Properties":{"id":"20240201213723-tczyooy","updated":"20240201213723"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"Arrays.asList()"},{"Type":"NodeText","Data":" 方法返回的并不是 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"java.util.ArrayList"},{"Type":"NodeText","Data":" ，而是 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"java.util.Arrays"},{"Type":"NodeText","Data":" 的一个内部类,这个内部类并没有实现集合的修改方法或者说并没有重写这些方法。"}]},{"ID":"20240201213724-0xelghh","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20240201213724-0xelghh","updated":"20240201213724"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"List myList = Arrays.asList(1, 2, 3);\nSystem.out.println(myList.getClass());//class java.util.Arrays$ArrayList\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20240201213725-5b2ki2e","Type":"NodeParagraph","Properties":{"id":"20240201213725-5b2ki2e","updated":"20240201213725"},"Children":[{"Type":"NodeText","Data":"下图是 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"java.util.Arrays$ArrayList"},{"Type":"NodeText","Data":" 的简易源码，我们可以看到这个类重写的方法有哪些。"}]},{"ID":"20240201213726-4sikkih","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20240201213726-4sikkih","updated":"20240201213726"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"  private static class ArrayList\u003cE\u003e extends AbstractList\u003cE\u003e\n        implements RandomAccess, java.io.Serializable\n    {\n        ...\n\n        @Override\n        public E get(int index) {\n          ...\n        }\n\n        @Override\n        public E set(int index, E element) {\n          ...\n        }\n\n        @Override\n        public int indexOf(Object o) {\n          ...\n        }\n\n        @Override\n        public boolean contains(Object o) {\n           ...\n        }\n\n        @Override\n        public void forEach(Consumer\u003c? super E\u003e action) {\n          ...\n        }\n\n        @Override\n        public void replaceAll(UnaryOperator\u003cE\u003e operator) {\n          ...\n        }\n\n        @Override\n        public void sort(Comparator\u003c? super E\u003e c) {\n          ...\n        }\n    }\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20240201213727-wnzks8b","Type":"NodeParagraph","Properties":{"id":"20240201213727-wnzks8b","updated":"20240201213727"},"Children":[{"Type":"NodeText","Data":"我们再看一下"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"java.util.AbstractList"},{"Type":"NodeText","Data":"的 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"add/remove/clear"},{"Type":"NodeText","Data":" 方法就知道为什么会抛出 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"UnsupportedOperationException"},{"Type":"NodeText","Data":" 了。"}]},{"ID":"20240201213728-w75eqdz","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20240201213728-w75eqdz","updated":"20240201213728"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"public E remove(int index) {\n    throw new UnsupportedOperationException();\n}\npublic boolean add(E e) {\n    add(size(), e);\n    return true;\n}\npublic void add(int index, E element) {\n    throw new UnsupportedOperationException();\n}\n\npublic void clear() {\n    removeRange(0, size());\n}\nprotected void removeRange(int fromIndex, int toIndex) {\n    ListIterator\u003cE\u003e it = listIterator(fromIndex);\n    for (int i=0, n=toIndex-fromIndex; i\u003cn; i++) {\n        it.next();\n        it.remove();\n    }\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20240201213729-jdnvbay","Type":"NodeParagraph","Properties":{"id":"20240201213729-jdnvbay","updated":"20240201213729"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"那我们如何正确的将数组转换为 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong code","TextMarkTextContent":"ArrayList"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":" ?"}]},{"ID":"20240201213730-lyvzobr","Type":"NodeParagraph","Properties":{"id":"20240201213730-lyvzobr","updated":"20240201213730"},"Children":[{"Type":"NodeText","Data":"1、手动实现工具类"}]},{"ID":"20240201213731-94wtzwp","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20240201213731-94wtzwp","updated":"20240201213731"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"//JDK1.5+\nstatic \u003cT\u003e List\u003cT\u003e arrayToList(final T[] array) {\n  final List\u003cT\u003e l = new ArrayList\u003cT\u003e(array.length);\n\n  for (final T s : array) {\n    l.add(s);\n  }\n  return l;\n}\n\n\nInteger [] myArray = { 1, 2, 3 };\nSystem.out.println(arrayToList(myArray).getClass());//class java.util.ArrayList\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20240201213732-1u5omck","Type":"NodeParagraph","Properties":{"id":"20240201213732-1u5omck","updated":"20240201213732"},"Children":[{"Type":"NodeText","Data":"2、最简便的方法"}]},{"ID":"20240201213733-9rhctx2","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20240201213733-9rhctx2","updated":"20240201213733"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"List list = new ArrayList\u003c\u003e(Arrays.asList(\"a\", \"b\", \"c\"))\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20240201213734-uw1b6ct","Type":"NodeParagraph","Properties":{"id":"20240201213734-uw1b6ct","updated":"20240201213734"},"Children":[{"Type":"NodeText","Data":"3、使用 Java8 的 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"Stream"},{"Type":"NodeText","Data":"(推荐)"}]},{"ID":"20240201213735-0n3bcn4","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20240201213735-0n3bcn4","updated":"20240201213735"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"Integer [] myArray = { 1, 2, 3 };\nList myList = Arrays.stream(myArray).collect(Collectors.toList());\n//基本类型也可以实现转换（依赖boxed的装箱操作）\nint [] myArray2 = { 1, 2, 3 };\nList myList = Arrays.stream(myArray2).boxed().collect(Collectors.toList());\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20240201213736-08ww3vf","Type":"NodeParagraph","Properties":{"id":"20240201213736-08ww3vf","updated":"20240201213736"},"Children":[{"Type":"NodeText","Data":"4、使用 Guava"}]},{"ID":"20240201213737-o5ntr7u","Type":"NodeParagraph","Properties":{"id":"20240201213737-o5ntr7u","updated":"20240201213737"},"Children":[{"Type":"NodeText","Data":"对于不可变集合，你可以使用"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a code","TextMarkAHref":"https://github.com/google/guava/blob/master/guava/src/com/google/common/collect/ImmutableList.java","TextMarkTextContent":"ImmutableList"},{"Type":"NodeText","Data":"类及其"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a code","TextMarkAHref":"https://github.com/google/guava/blob/master/guava/src/com/google/common/collect/ImmutableList.java#L101","TextMarkTextContent":"of()"},{"Type":"NodeText","Data":"与"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a code","TextMarkAHref":"https://github.com/google/guava/blob/master/guava/src/com/google/common/collect/ImmutableList.java#L225","TextMarkTextContent":"copyOf()"},{"Type":"NodeText","Data":"工厂方法：（参数不能为空）"}]},{"ID":"20240201213738-9qulrym","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20240201213738-9qulrym","updated":"20240201213738"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"List\u003cString\u003e il = ImmutableList.of(\"string\", \"elements\");  // from varargs\nList\u003cString\u003e il = ImmutableList.copyOf(aStringArray);      // from array\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20240201213739-4a45wtn","Type":"NodeParagraph","Properties":{"id":"20240201213739-4a45wtn","updated":"20240201213739"},"Children":[{"Type":"NodeText","Data":"对于可变集合，你可以使用"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a code","TextMarkAHref":"https://github.com/google/guava/blob/master/guava/src/com/google/common/collect/Lists.java","TextMarkTextContent":"Lists"},{"Type":"NodeText","Data":"类及其"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a code","TextMarkAHref":"https://github.com/google/guava/blob/master/guava/src/com/google/common/collect/Lists.java#L87","TextMarkTextContent":"newArrayList()"},{"Type":"NodeText","Data":"工厂方法："}]},{"ID":"20240201213740-r1q79b0","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20240201213740-r1q79b0","updated":"20240201213740"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"List\u003cString\u003e l1 = Lists.newArrayList(anotherListOrCollection);    // from collection\nList\u003cString\u003e l2 = Lists.newArrayList(aStringArray);               // from array\nList\u003cString\u003e l3 = Lists.newArrayList(\"or\", \"string\", \"elements\"); // from varargs\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20240201213741-2kse592","Type":"NodeParagraph","Properties":{"id":"20240201213741-2kse592","updated":"20240201213741"},"Children":[{"Type":"NodeText","Data":"5、使用 Apache Commons Collections"}]},{"ID":"20240201213742-ie39acf","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20240201213742-ie39acf","updated":"20240201213742"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"List\u003cString\u003e list = new ArrayList\u003cString\u003e();\nCollectionUtils.addAll(list, str);\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20240201213743-tb1eq9i","Type":"NodeParagraph","Properties":{"id":"20240201213743-tb1eq9i","updated":"20240201213743"},"Children":[{"Type":"NodeText","Data":"6、 使用 Java9 的 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"List.of()"},{"Type":"NodeText","Data":"方法"}]},{"ID":"20240201213744-jorv6dw","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20240201213744-jorv6dw","updated":"20240201213744"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"Integer[] array = {1, 2, 3};\nList\u003cInteger\u003e list = List.of(array);\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20240201213745-w2w0o9e","Type":"NodeHTMLBlock","Data":"\u003cdiv\u003e\n\u003c!-- @include: @article-footer.snippet.md --\u003e\n\u003c/div\u003e","HtmlBlockType":2,"Properties":{"id":"20240201213745-w2w0o9e","updated":"20240201213745"}}]}