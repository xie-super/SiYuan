{"ID":"20240201213705-r6ezqdz","Spec":"1","Type":"NodeDocument","Properties":{"id":"20240201213705-r6ezqdz","title":"java17","updated":"20240201213705"},"Children":[{"ID":"20240201213706-sue8qur","Type":"NodeThematicBreak","Properties":{"id":"20240201213706-sue8qur","updated":"20240201213706"}},{"ID":"20240201213707-is4r5od","Type":"NodeParagraph","Properties":{"id":"20240201213707-is4r5od","updated":"20240201213707"},"Children":[{"Type":"NodeText","Data":"title: Java 17 新特性概览（重要）"},{"Type":"NodeSoftBreak","Data":"\n","Properties":{"id":""}},{"Type":"NodeText","Data":"category: Java"},{"Type":"NodeSoftBreak","Data":"\n","Properties":{"id":""}},{"Type":"NodeText","Data":"tag:"}]},{"ID":"20240201213708-yjgsqr4","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"MarkerOffset":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213708-yjgsqr4","updated":"20240201213708"},"Children":[{"ID":"20240201213709-3b41m8h","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"MarkerOffset":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213709-3b41m8h","updated":"20240201213709"},"Children":[{"ID":"20240201213710-803ugeb","Type":"NodeParagraph","Properties":{"id":"20240201213710-803ugeb","updated":"20240201213710"},"Children":[{"Type":"NodeText","Data":"Java新特性"}]}]}]},{"ID":"20240201213711-53kr4xl","Type":"NodeThematicBreak","Properties":{"id":"20240201213711-53kr4xl","updated":"20240201213711"}},{"ID":"20240201213712-slmrrca","Type":"NodeParagraph","Properties":{"id":"20240201213712-slmrrca","updated":"20240201213712"},"Children":[{"Type":"NodeText","Data":"Java 17 在 2021 年 9 月 14 日正式发布，是一个长期支持（LTS）版本。"}]},{"ID":"20240201213713-nchvv91","Type":"NodeParagraph","Properties":{"id":"20240201213713-nchvv91","updated":"20240201213713"},"Children":[{"Type":"NodeText","Data":"下面这张图是 Oracle 官方给出的 Oracle JDK 支持的时间线。可以看得到，Java"}]},{"ID":"20240201213714-wu2l5zm","Type":"NodeParagraph","Properties":{"id":"20240201213714-wu2l5zm","updated":"20240201213714"},"Children":[{"Type":"NodeText","Data":"17 最多可以支持到 2029 年 9 月份。"}]},{"ID":"20240201213715-fq6ornl","Type":"NodeParagraph","Properties":{"id":"20240201213715-fq6ornl","updated":"20240201213715"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"https://oss.javaguide.cn/github/javaguide/java/new-features/4c1611fad59449edbbd6e233690e9fa7.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201213716-b73hygn","Type":"NodeParagraph","Properties":{"id":"20240201213716-b73hygn","updated":"20240201213716"},"Children":[{"Type":"NodeText","Data":"Java 17 将是继 Java 8 以来最重要的长期支持（LTS）版本，是 Java 社区八年努力的成果。Spring 6.x 和 Spring Boot 3.x 最低支持的就是 Java 17。"}]},{"ID":"20240201213717-ebttifb","Type":"NodeParagraph","Properties":{"id":"20240201213717-ebttifb","updated":"20240201213717"},"Children":[{"Type":"NodeText","Data":"这次更新共带来 14 个新特性："}]},{"ID":"20240201213718-yyn1qng","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213718-yyn1qng","updated":"20240201213718"},"Children":[{"ID":"20240201213719-8zr55il","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213719-8zr55il","updated":"20240201213719"},"Children":[{"ID":"20240201213720-2la5vn6","Type":"NodeParagraph","Properties":{"id":"20240201213720-2la5vn6","updated":"20240201213720"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://openjdk.java.net/jeps/306","TextMarkTextContent":"JEP 306:Restore Always-Strict Floating-Point Semantics（恢复始终严格的浮点语义）"}]}]},{"ID":"20240201213721-adpxgq9","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213721-adpxgq9","updated":"20240201213721"},"Children":[{"ID":"20240201213722-850j5dw","Type":"NodeParagraph","Properties":{"id":"20240201213722-850j5dw","updated":"20240201213722"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://openjdk.java.net/jeps/356","TextMarkTextContent":"JEP 356:Enhanced Pseudo-Random Number Generators（增强的伪随机数生成器）"}]}]},{"ID":"20240201213723-9sfq26t","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213723-9sfq26t","updated":"20240201213723"},"Children":[{"ID":"20240201213724-8p7t120","Type":"NodeParagraph","Properties":{"id":"20240201213724-8p7t120","updated":"20240201213724"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://openjdk.java.net/jeps/382","TextMarkTextContent":"JEP 382:New macOS Rendering Pipeline（新的 macOS 渲染管道）"}]}]},{"ID":"20240201213725-43lqzk6","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213725-43lqzk6","updated":"20240201213725"},"Children":[{"ID":"20240201213726-x2pxpoj","Type":"NodeParagraph","Properties":{"id":"20240201213726-x2pxpoj","updated":"20240201213726"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://openjdk.java.net/jeps/391","TextMarkTextContent":"JEP 391:macOS/AArch64 Port（支持 macOS AArch64）"}]}]},{"ID":"20240201213727-7lp8jzj","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213727-7lp8jzj","updated":"20240201213727"},"Children":[{"ID":"20240201213728-qupdph6","Type":"NodeParagraph","Properties":{"id":"20240201213728-qupdph6","updated":"20240201213728"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://openjdk.java.net/jeps/398","TextMarkTextContent":"JEP 398:Deprecate the Applet API for Removal（删除已弃用的 Applet API）"}]}]},{"ID":"20240201213729-krhqmid","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213729-krhqmid","updated":"20240201213729"},"Children":[{"ID":"20240201213730-4ih8z3k","Type":"NodeParagraph","Properties":{"id":"20240201213730-4ih8z3k","updated":"20240201213730"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://openjdk.java.net/jeps/403","TextMarkTextContent":"JEP 403:Strongly Encapsulate JDK Internals（更强大的封装 JDK 内部元素）"}]}]},{"ID":"20240201213731-z72kqy9","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213731-z72kqy9","updated":"20240201213731"},"Children":[{"ID":"20240201213732-0bi5229","Type":"NodeParagraph","Properties":{"id":"20240201213732-0bi5229","updated":"20240201213732"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://openjdk.java.net/jeps/406","TextMarkTextContent":"JEP 406:Pattern Matching for switch (switch 的类型匹配)"},{"Type":"NodeText","Data":"（预览）"}]}]},{"ID":"20240201213733-n41ynyb","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213733-n41ynyb","updated":"20240201213733"},"Children":[{"ID":"20240201213734-g3wyvrb","Type":"NodeParagraph","Properties":{"id":"20240201213734-g3wyvrb","updated":"20240201213734"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://openjdk.java.net/jeps/407","TextMarkTextContent":"JEP 407:Remove RMI Activation（删除远程方法调用激活机制）"}]}]},{"ID":"20240201213735-i7iw78o","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213735-i7iw78o","updated":"20240201213735"},"Children":[{"ID":"20240201213736-ycx4dfz","Type":"NodeParagraph","Properties":{"id":"20240201213736-ycx4dfz","updated":"20240201213736"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://openjdk.java.net/jeps/409","TextMarkTextContent":"JEP 409:Sealed Classes（密封类）"},{"Type":"NodeText","Data":"（转正）"}]}]},{"ID":"20240201213737-8tob66y","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213737-8tob66y","updated":"20240201213737"},"Children":[{"ID":"20240201213738-dpm8dwh","Type":"NodeParagraph","Properties":{"id":"20240201213738-dpm8dwh","updated":"20240201213738"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://openjdk.java.net/jeps/410","TextMarkTextContent":"JEP 410:Remove the Experimental AOT and JIT Compiler（删除实验性的 AOT 和 JIT 编译器）"}]}]},{"ID":"20240201213739-7ti4pk8","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213739-7ti4pk8","updated":"20240201213739"},"Children":[{"ID":"20240201213740-2xd3efl","Type":"NodeParagraph","Properties":{"id":"20240201213740-2xd3efl","updated":"20240201213740"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://openjdk.java.net/jeps/411","TextMarkTextContent":"JEP 411:Deprecate the Security Manager for Removal（弃用安全管理器以进行删除）"}]}]},{"ID":"20240201213741-j6u8h75","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213741-j6u8h75","updated":"20240201213741"},"Children":[{"ID":"20240201213742-ecssxre","Type":"NodeParagraph","Properties":{"id":"20240201213742-ecssxre","updated":"20240201213742"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://openjdk.java.net/jeps/412","TextMarkTextContent":"JEP 412:Foreign Function \u0026amp; Memory API (外部函数和内存 API)"},{"Type":"NodeText","Data":"（孵化）"}]}]},{"ID":"20240201213743-979pken","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213743-979pken","updated":"20240201213743"},"Children":[{"ID":"20240201213744-sqt3bmd","Type":"NodeParagraph","Properties":{"id":"20240201213744-sqt3bmd","updated":"20240201213744"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://openjdk.java.net/jeps/417","TextMarkTextContent":"JEP 414:Vector（向量） API"},{"Type":"NodeText","Data":"（第二次孵化）"}]}]},{"ID":"20240201213745-421wzhy","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213745-421wzhy","updated":"20240201213745"},"Children":[{"ID":"20240201213746-9lx293t","Type":"NodeParagraph","Properties":{"id":"20240201213746-9lx293t","updated":"20240201213746"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://openjdk.java.net/jeps/415","TextMarkTextContent":"JEP 415:Context-Specific Deserialization Filters"}]}]}]},{"ID":"20240201213747-3bwsxxj","Type":"NodeParagraph","Properties":{"id":"20240201213747-3bwsxxj","updated":"20240201213747"},"Children":[{"Type":"NodeText","Data":"这里只对 356、398、413、406、407、409、410、411、412、414 这几个我觉得比较重要的新特性进行详细介绍。"}]},{"ID":"20240201213748-eyzab6e","Type":"NodeParagraph","Properties":{"id":"20240201213748-eyzab6e","updated":"20240201213748"},"Children":[{"Type":"NodeText","Data":"相关阅读："},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://openjdk.java.net/projects/jdk/17/","TextMarkTextContent":"OpenJDK Java 17 文档"},{"Type":"NodeText","Data":" 。"}]},{"ID":"20240201213749-wlad7e2","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240201213749-wlad7e2","updated":"20240201213749"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"JEP 356:增强的伪随机数生成器"}]},{"ID":"20240201213750-hk3rxfs","Type":"NodeParagraph","Properties":{"id":"20240201213750-hk3rxfs","updated":"20240201213750"},"Children":[{"Type":"NodeText","Data":"JDK 17 之前，我们可以借助 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"Random"},{"Type":"NodeText","Data":"、"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"ThreadLocalRandom"},{"Type":"NodeText","Data":"和"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"SplittableRandom"},{"Type":"NodeText","Data":"来生成随机数。不过，这 3 个类都各有缺陷，且缺少常见的伪随机算法支持。"}]},{"ID":"20240201213751-ufxjjne","Type":"NodeParagraph","Properties":{"id":"20240201213751-ufxjjne","updated":"20240201213751"},"Children":[{"Type":"NodeText","Data":"Java 17 为伪随机数生成器 （pseudorandom number generator，PRNG，又称为确定性随机位生成器）增加了新的接口类型和实现，使得开发者更容易在应用程序中互换使用各种 PRNG 算法。"}]},{"ID":"20240201213752-8kl94gz","Type":"NodeBlockquote","Properties":{"id":"20240201213752-8kl94gz","updated":"20240201213752"},"Children":[{"Type":"NodeBlockquoteMarker","Data":"\u003e ","Properties":{"id":""}},{"ID":"20240201213753-k13l4ek","Type":"NodeParagraph","Properties":{"id":"20240201213753-k13l4ek","updated":"20240201213753"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://ctf-wiki.org/crypto/streamcipher/prng/intro/","TextMarkTextContent":"PRNG"},{"Type":"NodeText","Data":" 用来生成接近于绝对随机数序列的数字序列。一般来说，PRNG 会依赖于一个初始值，也称为种子，来生成对应的伪随机数序列。只要种子确定了，PRNG 所生成的随机数就是完全确定的，因此其生成的随机数序列并不是真正随机的。"}]}]},{"ID":"20240201213754-rtd40uz","Type":"NodeParagraph","Properties":{"id":"20240201213754-rtd40uz","updated":"20240201213754"},"Children":[{"Type":"NodeText","Data":"使用示例："}]},{"ID":"20240201213755-juwdtb8","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20240201213755-juwdtb8","updated":"20240201213755"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"RandomGeneratorFactory\u003cRandomGenerator\u003e l128X256MixRandom = RandomGeneratorFactory.of(\"L128X256MixRandom\");\n// 使用时间戳作为随机数种子\nRandomGenerator randomGenerator = l128X256MixRandom.create(System.currentTimeMillis());\n// 生成随机数\nrandomGenerator.nextInt(10);\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20240201213756-i9fuvcc","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240201213756-i9fuvcc","updated":"20240201213756"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"JEP 398:弃用 Applet API 以进行删除"}]},{"ID":"20240201213757-k79wmc9","Type":"NodeParagraph","Properties":{"id":"20240201213757-k79wmc9","updated":"20240201213757"},"Children":[{"Type":"NodeText","Data":"Applet API 用于编写在 Web 浏览器端运行的 Java 小程序，很多年前就已经被淘汰了，已经没有理由使用了。"}]},{"ID":"20240201213758-pbcy0yc","Type":"NodeParagraph","Properties":{"id":"20240201213758-pbcy0yc","updated":"20240201213758"},"Children":[{"Type":"NodeText","Data":"Applet API 在 Java 9 时被标记弃用（"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://openjdk.java.net/jeps/289","TextMarkTextContent":"JEP 289"},{"Type":"NodeText","Data":"），但不是为了删除。"}]},{"ID":"20240201213759-sdgdzss","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240201213759-sdgdzss","updated":"20240201213759"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"JEP 406:switch 的类型匹配（预览）"}]},{"ID":"20240201213760-egtg8h1","Type":"NodeParagraph","Properties":{"id":"20240201213760-egtg8h1","updated":"20240201213760"},"Children":[{"Type":"NodeText","Data":"正如 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"instanceof"},{"Type":"NodeText","Data":" 一样， "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"switch"},{"Type":"NodeText","Data":" 也紧跟着增加了类型匹配自动转换功能。"}]},{"ID":"20240201213761-8vh1t0k","Type":"NodeParagraph","Properties":{"id":"20240201213761-8vh1t0k","updated":"20240201213761"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"instanceof"},{"Type":"NodeText","Data":" 代码示例："}]},{"ID":"20240201213762-v53dju3","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20240201213762-v53dju3","updated":"20240201213762"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"// Old code\nif (o instanceof String) {\n    String s = (String)o;\n    ... use s ...\n}\n\n// New code\nif (o instanceof String s) {\n    ... use s ...\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20240201213763-h8zoqys","Type":"NodeParagraph","Properties":{"id":"20240201213763-h8zoqys","updated":"20240201213763"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"switch"},{"Type":"NodeText","Data":" 代码示例："}]},{"ID":"20240201213764-v3lwnuq","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20240201213764-v3lwnuq","updated":"20240201213764"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"// Old code\nstatic String formatter(Object o) {\n    String formatted = \"unknown\";\n    if (o instanceof Integer i) {\n        formatted = String.format(\"int %d\", i);\n    } else if (o instanceof Long l) {\n        formatted = String.format(\"long %d\", l);\n    } else if (o instanceof Double d) {\n        formatted = String.format(\"double %f\", d);\n    } else if (o instanceof String s) {\n        formatted = String.format(\"String %s\", s);\n    }\n    return formatted;\n}\n\n// New code\nstatic String formatterPatternSwitch(Object o) {\n    return switch (o) {\n        case Integer i -\u003e String.format(\"int %d\", i);\n        case Long l    -\u003e String.format(\"long %d\", l);\n        case Double d  -\u003e String.format(\"double %f\", d);\n        case String s  -\u003e String.format(\"String %s\", s);\n        default        -\u003e o.toString();\n    };\n}\n\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20240201213765-m9ymggh","Type":"NodeParagraph","Properties":{"id":"20240201213765-m9ymggh","updated":"20240201213765"},"Children":[{"Type":"NodeText","Data":"对于 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"null"},{"Type":"NodeText","Data":" 值的判断也进行了优化。"}]},{"ID":"20240201213766-5nvarfm","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20240201213766-5nvarfm","updated":"20240201213766"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"// Old code\nstatic void testFooBar(String s) {\n    if (s == null) {\n        System.out.println(\"oops!\");\n        return;\n    }\n    switch (s) {\n        case \"Foo\", \"Bar\" -\u003e System.out.println(\"Great\");\n        default           -\u003e System.out.println(\"Ok\");\n    }\n}\n\n// New code\nstatic void testFooBar(String s) {\n    switch (s) {\n        case null         -\u003e System.out.println(\"Oops\");\n        case \"Foo\", \"Bar\" -\u003e System.out.println(\"Great\");\n        default           -\u003e System.out.println(\"Ok\");\n    }\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20240201213767-yljo89i","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240201213767-yljo89i","updated":"20240201213767"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"JEP 407:删除远程方法调用激活机制"}]},{"ID":"20240201213768-qefrecq","Type":"NodeParagraph","Properties":{"id":"20240201213768-qefrecq","updated":"20240201213768"},"Children":[{"Type":"NodeText","Data":"删除远程方法调用 (RMI) 激活机制，同时保留 RMI 的其余部分。RMI 激活机制已过时且不再使用。"}]},{"ID":"20240201213769-dholedn","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240201213769-dholedn","updated":"20240201213769"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"JEP 409:密封类（转正）"}]},{"ID":"20240201213770-5u2shpa","Type":"NodeParagraph","Properties":{"id":"20240201213770-5u2shpa","updated":"20240201213770"},"Children":[{"Type":"NodeText","Data":"密封类由 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://openjdk.java.net/jeps/360","TextMarkTextContent":"JEP 360"},{"Type":"NodeText","Data":" 提出预览，集成到了 Java 15 中。在 JDK 16 中， 密封类得到了改进（更加严格的引用检查和密封类的继承关系），由 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://openjdk.java.net/jeps/397","TextMarkTextContent":"JEP 397"},{"Type":"NodeText","Data":" 提出了再次预览。"}]},{"ID":"20240201213771-q0gezrw","Type":"NodeParagraph","Properties":{"id":"20240201213771-q0gezrw","updated":"20240201213771"},"Children":[{"Type":"NodeText","Data":"在 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"./java14-15.md","TextMarkTextContent":"Java 14 \u0026amp; 15 新特性概览"},{"Type":"NodeText","Data":" 中，我有详细介绍到密封类，这里就不再做额外的介绍了。"}]},{"ID":"20240201213772-d8feqkn","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240201213772-d8feqkn","updated":"20240201213772"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"JEP 410:删除实验性的 AOT 和 JIT 编译器"}]},{"ID":"20240201213773-s0reups","Type":"NodeParagraph","Properties":{"id":"20240201213773-s0reups","updated":"20240201213773"},"Children":[{"Type":"NodeText","Data":"在 Java 9 的 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://openjdk.java.net/jeps/295","TextMarkTextContent":"JEP 295"},{"Type":"NodeText","Data":" ,引入了实验性的提前 (AOT) 编译器，在启动虚拟机之前将 Java 类编译为本机代码。"}]},{"ID":"20240201213774-687y2ru","Type":"NodeParagraph","Properties":{"id":"20240201213774-687y2ru","updated":"20240201213774"},"Children":[{"Type":"NodeText","Data":"Java 17，删除实验性的提前 (AOT) 和即时 (JIT) 编译器，因为该编译器自推出以来很少使用，维护它所需的工作量很大。保留实验性的 Java 级 JVM 编译器接口 (JVMCI)，以便开发人员可以继续使用外部构建的编译器版本进行 JIT 编译。"}]},{"ID":"20240201213775-9y9blqs","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240201213775-9y9blqs","updated":"20240201213775"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"JEP 411:弃用安全管理器以进行删除"}]},{"ID":"20240201213776-413j08a","Type":"NodeParagraph","Properties":{"id":"20240201213776-413j08a","updated":"20240201213776"},"Children":[{"Type":"NodeText","Data":"弃用安全管理器以便在将来的版本中删除。"}]},{"ID":"20240201213777-jzn02lw","Type":"NodeParagraph","Properties":{"id":"20240201213777-jzn02lw","updated":"20240201213777"},"Children":[{"Type":"NodeText","Data":"安全管理器可追溯到 Java 1.0，多年来，它一直不是保护客户端 Java 代码的主要方法，也很少用于保护服务器端代码。为了推动 Java 向前发展，Java 17 弃用安全管理器，以便与旧版 Applet API ( "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://openjdk.java.net/jeps/398","TextMarkTextContent":"JEP 398"},{"Type":"NodeText","Data":" ) 一起移除。"}]},{"ID":"20240201213778-yjqc2er","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240201213778-yjqc2er","updated":"20240201213778"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"JEP 412:外部函数和内存 API（孵化）"}]},{"ID":"20240201213779-be94m9d","Type":"NodeParagraph","Properties":{"id":"20240201213779-be94m9d","updated":"20240201213779"},"Children":[{"Type":"NodeText","Data":"Java 程序可以通过该 API 与 Java 运行时之外的代码和数据进行互操作。通过高效地调用外部函数（即 JVM 之外的代码）和安全地访问外部内存（即不受 JVM 管理的内存），该 API 使 Java 程序能够调用本机库并处理本机数据，而不会像 JNI 那样危险和脆弱。"}]},{"ID":"20240201213780-17x01tq","Type":"NodeParagraph","Properties":{"id":"20240201213780-17x01tq","updated":"20240201213780"},"Children":[{"Type":"NodeText","Data":"外部函数和内存 API 在 Java 17 中进行了第一轮孵化，由 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://openjdk.java.net/jeps/412","TextMarkTextContent":"JEP 412"},{"Type":"NodeText","Data":" 提出。第二轮孵化由"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://openjdk.org/jeps/419","TextMarkTextContent":"JEP 419"},{"Type":"NodeText","Data":" 提出并集成到了 Java 18 中，预览由 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://openjdk.org/jeps/424","TextMarkTextContent":"JEP 424"},{"Type":"NodeText","Data":" 提出并集成到了 Java 19 中。"}]},{"ID":"20240201213781-lvktx3p","Type":"NodeParagraph","Properties":{"id":"20240201213781-lvktx3p","updated":"20240201213781"},"Children":[{"Type":"NodeText","Data":"在 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"./java19.md","TextMarkTextContent":"Java 19 新特性概览"},{"Type":"NodeText","Data":" 中，我有详细介绍到外部函数和内存 API，这里就不再做额外的介绍了。"}]},{"ID":"20240201213782-t30rn6d","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240201213782-t30rn6d","updated":"20240201213782"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"JEP 414:向量 API（第二次孵化）"}]},{"ID":"20240201213783-azg3yep","Type":"NodeParagraph","Properties":{"id":"20240201213783-azg3yep","updated":"20240201213783"},"Children":[{"Type":"NodeText","Data":"向量（Vector） API 最初由 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://openjdk.java.net/jeps/338","TextMarkTextContent":"JEP 338"},{"Type":"NodeText","Data":" 提出，并作为"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"http://openjdk.java.net/jeps/11","TextMarkTextContent":"孵化 API"},{"Type":"NodeText","Data":"集成到 Java 16 中。第二轮孵化由 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://openjdk.java.net/jeps/414","TextMarkTextContent":"JEP 414"},{"Type":"NodeText","Data":" 提出并集成到 Java 17 中，第三轮孵化由 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://openjdk.java.net/jeps/417","TextMarkTextContent":"JEP 417"},{"Type":"NodeText","Data":" 提出并集成到 Java 18 中，第四轮由 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://openjdk.java.net/jeps/426","TextMarkTextContent":"JEP 426"},{"Type":"NodeText","Data":" 提出并集成到了 Java 19 中。"}]},{"ID":"20240201213784-xsid32u","Type":"NodeParagraph","Properties":{"id":"20240201213784-xsid32u","updated":"20240201213784"},"Children":[{"Type":"NodeText","Data":"该孵化器 API 提供了一个 API 的初始迭代以表达一些向量计算，这些计算在运行时可靠地编译为支持的 CPU 架构上的最佳向量硬件指令，从而获得优于同等标量计算的性能，充分利用单指令多数据（SIMD）技术（大多数现代 CPU 上都可以使用的一种指令）。尽管 HotSpot 支持自动向量化，但是可转换的标量操作集有限且易受代码更改的影响。该 API 将使开发人员能够轻松地用 Java 编写可移植的高性能向量算法。"}]},{"ID":"20240201213785-iz8czw3","Type":"NodeParagraph","Properties":{"id":"20240201213785-iz8czw3","updated":"20240201213785"},"Children":[{"Type":"NodeText","Data":"在 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"./java18.md","TextMarkTextContent":"Java 18 新特性概览"},{"Type":"NodeText","Data":" 中，我有详细介绍到向量 API，这里就不再做额外的介绍了。"}]},{"ID":"20240201213786-ufz7229","Type":"NodeHTMLBlock","Data":"\u003cdiv\u003e\n\u003c!-- @include: @article-footer.snippet.md --\u003e\n\u003c/div\u003e","HtmlBlockType":2,"Properties":{"id":"20240201213786-ufz7229","updated":"20240201213786"}}]}