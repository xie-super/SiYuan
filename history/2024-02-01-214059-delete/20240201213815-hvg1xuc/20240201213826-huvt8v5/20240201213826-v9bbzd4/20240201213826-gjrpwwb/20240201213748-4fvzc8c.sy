{"ID":"20240201213748-4fvzc8c","Spec":"1","Type":"NodeDocument","Properties":{"id":"20240201213748-4fvzc8c","title":"redundancy","updated":"20240201213748"},"Children":[{"ID":"20240201213749-n6ypasy","Type":"NodeThematicBreak","Properties":{"id":"20240201213749-n6ypasy","updated":"20240201213749"}},{"ID":"20240201213750-oodw1ui","Type":"NodeParagraph","Properties":{"id":"20240201213750-oodw1ui","updated":"20240201213750"},"Children":[{"Type":"NodeText","Data":"title: 冗余设计详解"},{"Type":"NodeSoftBreak","Data":"\n","Properties":{"id":""}},{"Type":"NodeText","Data":"category: 高可用"},{"Type":"NodeSoftBreak","Data":"\n","Properties":{"id":""}},{"Type":"NodeText","Data":"icon: cluster"}]},{"ID":"20240201213751-wz09q5f","Type":"NodeThematicBreak","Properties":{"id":"20240201213751-wz09q5f","updated":"20240201213751"}},{"ID":"20240201213752-1zk5mv0","Type":"NodeParagraph","Properties":{"id":"20240201213752-1zk5mv0","updated":"20240201213752"},"Children":[{"Type":"NodeText","Data":"冗余设计是保证系统和数据高可用的最常的手段。"}]},{"ID":"20240201213753-7znuq1f","Type":"NodeParagraph","Properties":{"id":"20240201213753-7znuq1f","updated":"20240201213753"},"Children":[{"Type":"NodeText","Data":"对于服务来说，冗余的思想就是相同的服务部署多份，如果正在使用的服务突然挂掉的话，系统可以很快切换到备份服务上，大大减少系统的不可用时间，提高系统的可用性。"}]},{"ID":"20240201213754-d2bde3g","Type":"NodeParagraph","Properties":{"id":"20240201213754-d2bde3g","updated":"20240201213754"},"Children":[{"Type":"NodeText","Data":"对于数据来说，冗余的思想就是相同的数据备份多份，这样就可以很简单地提高数据的安全性。"}]},{"ID":"20240201213755-xq23hn7","Type":"NodeParagraph","Properties":{"id":"20240201213755-xq23hn7","updated":"20240201213755"},"Children":[{"Type":"NodeText","Data":"实际上，日常生活中就有非常多的冗余思想的应用。"}]},{"ID":"20240201213756-lkgppvr","Type":"NodeParagraph","Properties":{"id":"20240201213756-lkgppvr","updated":"20240201213756"},"Children":[{"Type":"NodeText","Data":"拿我自己来说，我对于重要文件的保存方法就是冗余思想的应用。我日常所使用的重要文件都会同步一份在 GitHub 以及个人云盘上，这样就可以保证即使电脑硬盘损坏，我也可以通过 GitHub 或者个人云盘找回自己的重要文件。"}]},{"ID":"20240201213757-8p7nn4t","Type":"NodeParagraph","Properties":{"id":"20240201213757-8p7nn4t","updated":"20240201213757"},"Children":[{"Type":"NodeText","Data":"高可用集群（High Availability Cluster，简称 HA Cluster）、同城灾备、异地灾备、同城多活和异地多活是冗余思想在高可用系统设计中最典型的应用。"}]},{"ID":"20240201213758-871l66t","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213758-871l66t","updated":"20240201213758"},"Children":[{"ID":"20240201213759-lhq27og","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213759-lhq27og","updated":"20240201213759"},"Children":[{"ID":"20240201213760-t7nbtlz","Type":"NodeParagraph","Properties":{"id":"20240201213760-t7nbtlz","updated":"20240201213760"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"高可用集群"},{"Type":"NodeText","Data":" : 同一份服务部署两份或者多份，当正在使用的服务突然挂掉的话，可以切换到另外一台服务，从而保证服务的高可用。"}]}]},{"ID":"20240201213761-bsls428","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213761-bsls428","updated":"20240201213761"},"Children":[{"ID":"20240201213762-4dle7vm","Type":"NodeParagraph","Properties":{"id":"20240201213762-4dle7vm","updated":"20240201213762"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"同城灾备"},{"Type":"NodeText","Data":"：一整个集群可以部署在同一个机房，而同城灾备中相同服务部署在同一个城市的不同机房中。并且，备用服务不处理请求。这样可以避免机房出现意外情况比如停电、火灾。"}]}]},{"ID":"20240201213763-a9ppcnf","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213763-a9ppcnf","updated":"20240201213763"},"Children":[{"ID":"20240201213764-aykd0t6","Type":"NodeParagraph","Properties":{"id":"20240201213764-aykd0t6","updated":"20240201213764"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"异地灾备"},{"Type":"NodeText","Data":"：类似于同城灾备，不同的是，相同服务部署在异地（通常距离较远，甚至是在不同的城市或者国家）的不同机房中"}]}]},{"ID":"20240201213765-f6s43ek","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213765-f6s43ek","updated":"20240201213765"},"Children":[{"ID":"20240201213766-1xizkgq","Type":"NodeParagraph","Properties":{"id":"20240201213766-1xizkgq","updated":"20240201213766"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"同城多活"},{"Type":"NodeText","Data":"：类似于同城灾备，但备用服务可以处理请求，这样可以充分利用系统资源，提高系统的并发。"}]}]},{"ID":"20240201213767-33r3ubc","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213767-33r3ubc","updated":"20240201213767"},"Children":[{"ID":"20240201213768-y3htdd6","Type":"NodeParagraph","Properties":{"id":"20240201213768-y3htdd6","updated":"20240201213768"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"异地多活"},{"Type":"NodeText","Data":" : 将服务部署在异地的不同机房中，并且，它们可以同时对外提供服务。"}]}]}]},{"ID":"20240201213769-wqghsa0","Type":"NodeParagraph","Properties":{"id":"20240201213769-wqghsa0","updated":"20240201213769"},"Children":[{"Type":"NodeText","Data":"高可用集群单纯是服务的冗余，并没有强调地域。同城灾备、异地灾备、同城多活和异地多活实现了地域上的冗余。"}]},{"ID":"20240201213770-qm4rvuf","Type":"NodeParagraph","Properties":{"id":"20240201213770-qm4rvuf","updated":"20240201213770"},"Children":[{"Type":"NodeText","Data":"同城和异地的主要区别在于机房之间的距离。异地通常距离较远，甚至是在不同的城市或者国家。"}]},{"ID":"20240201213771-7fp7zrq","Type":"NodeParagraph","Properties":{"id":"20240201213771-7fp7zrq","updated":"20240201213771"},"Children":[{"Type":"NodeText","Data":"和传统的灾备设计相比，同城多活和异地多活最明显的改变在于“多活”，即所有站点都是同时在对外提供服务的。异地多活是为了应对突发状况比如火灾、地震等自然或者人为灾害。"}]},{"ID":"20240201213772-hdz45fq","Type":"NodeParagraph","Properties":{"id":"20240201213772-hdz45fq","updated":"20240201213772"},"Children":[{"Type":"NodeText","Data":"光做好冗余还不够，必须要配合上 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"故障转移"},{"Type":"NodeText","Data":" 才可以！ 所谓故障转移，简单来说就是实现不可用服务快速且自动地切换到可用服务，整个过程不需要人为干涉。"}]},{"ID":"20240201213773-3e931bo","Type":"NodeParagraph","Properties":{"id":"20240201213773-3e931bo","updated":"20240201213773"},"Children":[{"Type":"NodeText","Data":"举个例子：哨兵模式的 Redis 集群中，如果 Sentinel（哨兵） 检测到 master 节点出现故障的话， 它就会帮助我们实现故障转移，自动将某一台 slave 升级为 master，确保整个 Redis 系统的可用性。整个过程完全自动，不需要人工介入。我在"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://www.yuque.com/docs/share/f37fc804-bfe6-4b0d-b373-9c462188fec7","TextMarkTextContent":"《Java 面试指北》"},{"Type":"NodeText","Data":"的「技术面试题篇」中的数据库部分详细介绍了 Redis 集群相关的知识点\u0026面试题，感兴趣的小伙伴可以看看。"}]},{"ID":"20240201213774-h9rnzes","Type":"NodeParagraph","Properties":{"id":"20240201213774-h9rnzes","updated":"20240201213774"},"Children":[{"Type":"NodeText","Data":"再举个例子：Nginx 可以结合 Keepalived 来实现高可用。如果 Nginx 主服务器宕机的话，Keepalived 可以自动进行故障转移，备用 Nginx 主服务器升级为主服务。并且，这个切换对外是透明的，因为使用的虚拟 IP，虚拟 IP 不会改变。我在"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://www.yuque.com/docs/share/f37fc804-bfe6-4b0d-b373-9c462188fec7","TextMarkTextContent":"《Java 面试指北》"},{"Type":"NodeText","Data":"的「技术面试题篇」中的「服务器」部分详细介绍了 Nginx 相关的知识点\u0026面试题，感兴趣的小伙伴可以看看。"}]},{"ID":"20240201213775-fu4tf2p","Type":"NodeParagraph","Properties":{"id":"20240201213775-fu4tf2p","updated":"20240201213775"},"Children":[{"Type":"NodeText","Data":"异地多活架构实施起来非常难，需要考虑的因素非常多。本人不才，实际项目中并没有实践过异地多活架构，我对其了解还停留在书本知识。"}]},{"ID":"20240201213776-pdunuci","Type":"NodeParagraph","Properties":{"id":"20240201213776-pdunuci","updated":"20240201213776"},"Children":[{"Type":"NodeText","Data":"如果你想要深入学习异地多活相关的知识，我这里推荐几篇我觉得还不错的文章："}]},{"ID":"20240201213777-narwf11","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213777-narwf11","updated":"20240201213777"},"Children":[{"ID":"20240201213778-7gzg866","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213778-7gzg866","updated":"20240201213778"},"Children":[{"ID":"20240201213779-szlpiwa","Type":"NodeParagraph","Properties":{"id":"20240201213779-szlpiwa","updated":"20240201213779"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://mp.weixin.qq.com/s/T6mMDdtTfBuIiEowCpqu6Q","TextMarkTextContent":"搞懂异地多活，看这篇就够了- 水滴与银弹 - 2021"}]}]},{"ID":"20240201213780-un88457","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213780-un88457","updated":"20240201213780"},"Children":[{"ID":"20240201213781-lfq7j6z","Type":"NodeParagraph","Properties":{"id":"20240201213781-lfq7j6z","updated":"20240201213781"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://mp.weixin.qq.com/s/hMD-IS__4JE5_nQhYPYSTg","TextMarkTextContent":"四步构建异地多活"}]}]},{"ID":"20240201213782-x3zns4r","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213782-x3zns4r","updated":"20240201213782"},"Children":[{"ID":"20240201213783-dl4ra9s","Type":"NodeParagraph","Properties":{"id":"20240201213783-dl4ra9s","updated":"20240201213783"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"http://gk.link/a/10pKZ","TextMarkTextContent":"《从零开始学架构》— 28 | 业务高可用的保障：异地多活架构"}]}]}]},{"ID":"20240201213784-heuwzvb","Type":"NodeParagraph","Properties":{"id":"20240201213784-heuwzvb","updated":"20240201213784"},"Children":[{"Type":"NodeText","Data":"不过，这些文章大多也都是在介绍概念知识。目前，网上还缺少真正介绍具体要如何去实践落地异地多活架构的资料。"}]},{"ID":"20240201213785-fn4643j","Type":"NodeHTMLBlock","Data":"\u003cdiv\u003e\n\u003c!-- @include: @article-footer.snippet.md --\u003e\n\u003c/div\u003e","HtmlBlockType":2,"Properties":{"id":"20240201213785-fn4643j","updated":"20240201213785"}}]}