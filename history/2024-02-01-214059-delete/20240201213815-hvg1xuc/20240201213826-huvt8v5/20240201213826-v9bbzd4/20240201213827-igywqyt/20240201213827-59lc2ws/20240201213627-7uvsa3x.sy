{"ID":"20240201213627-7uvsa3x","Spec":"1","Type":"NodeDocument","Properties":{"id":"20240201213627-7uvsa3x","title":"RESTfulAPI","updated":"20240201213627"},"Children":[{"ID":"20240201213628-o5zrmha","Type":"NodeThematicBreak","Properties":{"id":"20240201213628-o5zrmha","updated":"20240201213628"}},{"ID":"20240201213629-ti6kmh3","Type":"NodeParagraph","Properties":{"id":"20240201213629-ti6kmh3","updated":"20240201213629"},"Children":[{"Type":"NodeText","Data":"title: RestFul API 简明教程"},{"Type":"NodeSoftBreak","Data":"\n","Properties":{"id":""}},{"Type":"NodeText","Data":"category: 代码质量"}]},{"ID":"20240201213630-xfrqve8","Type":"NodeThematicBreak","Properties":{"id":"20240201213630-xfrqve8","updated":"20240201213630"}},{"ID":"20240201213631-45xkkm7","Type":"NodeParagraph","Properties":{"id":"20240201213631-45xkkm7","updated":"20240201213631"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"https://oss.javaguide.cn/system-design/basis/2021050713553862.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201213632-erur79t","Type":"NodeParagraph","Properties":{"id":"20240201213632-erur79t","updated":"20240201213632"},"Children":[{"Type":"NodeText","Data":"这篇文章简单聊聊后端程序员必备的 RESTful API 相关的知识。"}]},{"ID":"20240201213633-vu6tzd6","Type":"NodeParagraph","Properties":{"id":"20240201213633-vu6tzd6","updated":"20240201213633"},"Children":[{"Type":"NodeText","Data":"开始正式介绍 RESTful API 之前，我们需要首先搞清："},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"API 到底是什么？"}]},{"ID":"20240201213634-dqeg4a4","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240201213634-dqeg4a4","updated":"20240201213634"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"何为 API？"}]},{"ID":"20240201213635-ur2foab","Type":"NodeParagraph","Properties":{"id":"20240201213635-ur2foab","updated":"20240201213635"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"https://oss.javaguide.cn/system-design/basis/20210507153833945.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201213636-kc7qwlm","Type":"NodeParagraph","Properties":{"id":"20240201213636-kc7qwlm","updated":"20240201213636"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"API（Application Programming Interface）"},{"Type":"NodeText","Data":" 翻译过来是应用程序编程接口的意思。"}]},{"ID":"20240201213637-fnz0i03","Type":"NodeParagraph","Properties":{"id":"20240201213637-fnz0i03","updated":"20240201213637"},"Children":[{"Type":"NodeText","Data":"我们在进行后端开发的时候，主要的工作就是为前端或者其他后端服务提供 API 比如查询用户数据的 API 。"}]},{"ID":"20240201213638-psvaqyn","Type":"NodeParagraph","Properties":{"id":"20240201213638-psvaqyn","updated":"20240201213638"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"https://oss.javaguide.cn/system-design/basis/20210507130629538.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201213639-iwi1k0c","Type":"NodeParagraph","Properties":{"id":"20240201213639-iwi1k0c","updated":"20240201213639"},"Children":[{"Type":"NodeText","Data":"但是， API 不仅仅代表后端系统暴露的接口，像框架中提供的方法也属于 API 的范畴。"}]},{"ID":"20240201213640-2bikw90","Type":"NodeParagraph","Properties":{"id":"20240201213640-2bikw90","updated":"20240201213640"},"Children":[{"Type":"NodeText","Data":"为了方便大家理解，我再列举几个例子 🌰："}]},{"ID":"20240201213641-i8ig3j8","Type":"NodeList","ListData":{"Typ":1,"Tight":true,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20240201213641-i8ig3j8","updated":"20240201213641"},"Children":[{"ID":"20240201213642-n6kvlii","Type":"NodeListItem","Data":"1","ListData":{"Typ":1,"Tight":true,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20240201213642-n6kvlii","updated":"20240201213642"},"Children":[{"ID":"20240201213643-ef8t208","Type":"NodeParagraph","Properties":{"id":"20240201213643-ef8t208","updated":"20240201213643"},"Children":[{"Type":"NodeText","Data":"你通过某电商网站搜索某某商品，电商网站的前端就调用了后端提供了搜索商品相关的 API。"}]}]},{"ID":"20240201213644-vuvdz2a","Type":"NodeListItem","Data":"2","ListData":{"Typ":1,"Tight":true,"Start":2,"Delimiter":46,"Padding":3,"Marker":"Mg==","Num":2},"Properties":{"id":"20240201213644-vuvdz2a","updated":"20240201213644"},"Children":[{"ID":"20240201213645-dce83nu","Type":"NodeParagraph","Properties":{"id":"20240201213645-dce83nu","updated":"20240201213645"},"Children":[{"Type":"NodeText","Data":"你使用 JDK 开发 Java 程序，想要读取用户的输入的话，你就需要使用 JDK 提供的 IO 相关的 API。"}]}]},{"ID":"20240201213646-reylh2o","Type":"NodeListItem","Data":"3","ListData":{"Typ":1,"Tight":true,"Start":3,"Delimiter":46,"Padding":3,"Marker":"Mw==","Num":3},"Properties":{"id":"20240201213646-reylh2o","updated":"20240201213646"},"Children":[{"ID":"20240201213647-ko85hde","Type":"NodeParagraph","Properties":{"id":"20240201213647-ko85hde","updated":"20240201213647"},"Children":[{"Type":"NodeText","Data":"……"}]}]}]},{"ID":"20240201213648-niqyak4","Type":"NodeParagraph","Properties":{"id":"20240201213648-niqyak4","updated":"20240201213648"},"Children":[{"Type":"NodeText","Data":"你可以把 API 理解为程序与程序之间通信的桥梁，其本质就是一个函数而已。另外，API 的使用也不是没有章法的，它的规则由（比如数据输入和输出的格式）API 提供方制定。"}]},{"ID":"20240201213649-hqbwezf","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240201213649-hqbwezf","updated":"20240201213649"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"何为 RESTful API？"}]},{"ID":"20240201213650-unhrxt6","Type":"NodeParagraph","Properties":{"id":"20240201213650-unhrxt6","updated":"20240201213650"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"RESTful API"},{"Type":"NodeText","Data":" 经常也被叫做 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"REST API"},{"Type":"NodeText","Data":"，它是基于 REST 构建的 API。这个 REST 到底是什么，我们后文在讲，涉及到的概念比较多。"}]},{"ID":"20240201213651-6cpmlbv","Type":"NodeParagraph","Properties":{"id":"20240201213651-6cpmlbv","updated":"20240201213651"},"Children":[{"Type":"NodeText","Data":"如果你看 RESTful API 相关的文章的话一般都比较晦涩难懂，主要是因为 REST 涉及到的一些概念比较难以理解。但是，实际上，我们平时开发用到的 RESTful API 的知识非常简单也很容易概括！"}]},{"ID":"20240201213652-olo1km7","Type":"NodeParagraph","Properties":{"id":"20240201213652-olo1km7","updated":"20240201213652"},"Children":[{"Type":"NodeText","Data":"举个例子，如果我给你下面两个 API 你是不是立马能知道它们是干什么用的！这就是 RESTful API 的强大之处！"}]},{"ID":"20240201213653-s52oosc","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"cGxhaW4=","CodeBlockCloseFence":"YGBg","Properties":{"id":"20240201213653-s52oosc","updated":"20240201213653"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"cGxhaW4=","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"GET    /classes：列出所有班级\nPOST   /classes：新建一个班级\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20240201213654-poju9p9","Type":"NodeParagraph","Properties":{"id":"20240201213654-poju9p9","updated":"20240201213654"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"RESTful API 可以让你看到 URL+Http Method 就知道这个 URL 是干什么的，让你看到了 HTTP 状态码（status code）就知道请求结果如何。"}]},{"ID":"20240201213655-0jg7r19","Type":"NodeParagraph","Properties":{"id":"20240201213655-0jg7r19","updated":"20240201213655"},"Children":[{"Type":"NodeText","Data":"像咱们在开发过程中设计 API 的时候也应该至少要满足 RESTful API 的最基本的要求（比如接口中尽量使用名词，使用 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"POST"},{"Type":"NodeText","Data":" 请求创建资源，"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"DELETE"},{"Type":"NodeText","Data":" 请求删除资源等等，示例："},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"GET /notes/id"},{"Type":"NodeText","Data":"：获取某个指定 id 的笔记的信息）。"}]},{"ID":"20240201213656-5uslzys","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240201213656-5uslzys","updated":"20240201213656"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"解读 REST"}]},{"ID":"20240201213657-xxnoizj","Type":"NodeParagraph","Properties":{"id":"20240201213657-xxnoizj","updated":"20240201213657"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"REST"},{"Type":"NodeText","Data":" 是 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"REpresentational State Transfer"},{"Type":"NodeText","Data":" 的缩写。这个词组的翻译过来就是“"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"表现层状态转化"},{"Type":"NodeText","Data":"”。"}]},{"ID":"20240201213658-oj1ens5","Type":"NodeParagraph","Properties":{"id":"20240201213658-oj1ens5","updated":"20240201213658"},"Children":[{"Type":"NodeText","Data":"这样理解起来甚是晦涩，实际上 REST 的全称是 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"Resource Representational State Transfer"},{"Type":"NodeText","Data":" ，直白地翻译过来就是 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"“资源”在网络传输中以某种“表现形式”进行“状态转移”"},{"Type":"NodeText","Data":" 。如果还是不能继续理解，请继续往下看，相信下面的讲解一定能让你理解到底啥是 REST 。"}]},{"ID":"20240201213659-5xmshia","Type":"NodeParagraph","Properties":{"id":"20240201213659-5xmshia","updated":"20240201213659"},"Children":[{"Type":"NodeText","Data":"我们分别对上面涉及到的概念进行解读，以便加深理解，实际上你不需要搞懂下面这些概念，也能看懂我下一部分要介绍到的内容。不过，为了更好地能跟别人扯扯 “RESTful API”我建议你还是要好好理解一下！"}]},{"ID":"20240201213660-0tkubk7","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213660-0tkubk7","updated":"20240201213660"},"Children":[{"ID":"20240201213661-fcwmt7y","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213661-fcwmt7y","updated":"20240201213661"},"Children":[{"ID":"20240201213662-p7exea1","Type":"NodeParagraph","Properties":{"id":"20240201213662-p7exea1","updated":"20240201213662"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"资源（Resource）"},{"Type":"NodeText","Data":"：我们可以把真实的对象数据称为资源。一个资源既可以是一个集合，也可以是单个个体。比如我们的班级 classes 是代表一个集合形式的资源，而特定的 class 代表单个个体资源。每一种资源都有特定的 URI（统一资源标识符）与之对应，如果我们需要获取这个资源，访问这个 URI 就可以了，比如获取特定的班级："},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"/class/12"},{"Type":"NodeText","Data":"。另外，资源也可以包含子资源，比如 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"/classes/classId/teachers"},{"Type":"NodeText","Data":"：列出某个指定班级的所有老师的信息"}]}]},{"ID":"20240201213663-4virf94","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213663-4virf94","updated":"20240201213663"},"Children":[{"ID":"20240201213664-4ynpuca","Type":"NodeParagraph","Properties":{"id":"20240201213664-4ynpuca","updated":"20240201213664"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"表现形式（Representational）"},{"Type":"NodeText","Data":"：\"资源\"是一种信息实体，它可以有多种外在表现形式。我们把\"资源\"具体呈现出来的形式比如 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"json"},{"Type":"NodeText","Data":"，"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"xml"},{"Type":"NodeText","Data":"，"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"image"},{"Type":"NodeText","Data":","},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"txt"},{"Type":"NodeText","Data":" 等等叫做它的\"表现层/表现形式\"。"}]}]},{"ID":"20240201213665-8mpexyi","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213665-8mpexyi","updated":"20240201213665"},"Children":[{"ID":"20240201213666-x45sb4s","Type":"NodeParagraph","Properties":{"id":"20240201213666-x45sb4s","updated":"20240201213666"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"状态转移（State Transfer）"},{"Type":"NodeText","Data":"：大家第一眼看到这个词语一定会很懵逼？内心 BB：这尼玛是啥啊？ 大白话来说 REST 中的状态转移更多地描述的服务器端资源的状态，比如你通过增删改查（通过 HTTP 动词实现）引起资源状态的改变。ps:互联网通信协议 HTTP 协议，是一个无状态协议，所有的资源状态都保存在服务器端。"}]}]}]},{"ID":"20240201213667-9vw1wdk","Type":"NodeParagraph","Properties":{"id":"20240201213667-9vw1wdk","updated":"20240201213667"},"Children":[{"Type":"NodeText","Data":"综合上面的解释，我们总结一下什么是 RESTful 架构："}]},{"ID":"20240201213668-73zekxx","Type":"NodeList","ListData":{"Typ":1,"Tight":true,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20240201213668-73zekxx","updated":"20240201213668"},"Children":[{"ID":"20240201213669-usfa8lu","Type":"NodeListItem","Data":"1","ListData":{"Typ":1,"Tight":true,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20240201213669-usfa8lu","updated":"20240201213669"},"Children":[{"ID":"20240201213670-stlhmcg","Type":"NodeParagraph","Properties":{"id":"20240201213670-stlhmcg","updated":"20240201213670"},"Children":[{"Type":"NodeText","Data":"每一个 URI 代表一种资源；"}]}]},{"ID":"20240201213671-drdjkst","Type":"NodeListItem","Data":"2","ListData":{"Typ":1,"Tight":true,"Start":2,"Delimiter":46,"Padding":3,"Marker":"Mg==","Num":2},"Properties":{"id":"20240201213671-drdjkst","updated":"20240201213671"},"Children":[{"ID":"20240201213672-ka983uv","Type":"NodeParagraph","Properties":{"id":"20240201213672-ka983uv","updated":"20240201213672"},"Children":[{"Type":"NodeText","Data":"客户端和服务器之间，传递这种资源的某种表现形式比如 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"json"},{"Type":"NodeText","Data":"，"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"xml"},{"Type":"NodeText","Data":"，"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"image"},{"Type":"NodeText","Data":","},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"txt"},{"Type":"NodeText","Data":" 等等；"}]}]},{"ID":"20240201213673-yzh2w57","Type":"NodeListItem","Data":"3","ListData":{"Typ":1,"Tight":true,"Start":3,"Delimiter":46,"Padding":3,"Marker":"Mw==","Num":3},"Properties":{"id":"20240201213673-yzh2w57","updated":"20240201213673"},"Children":[{"ID":"20240201213674-pyxygjy","Type":"NodeParagraph","Properties":{"id":"20240201213674-pyxygjy","updated":"20240201213674"},"Children":[{"Type":"NodeText","Data":"客户端通过特定的 HTTP 动词，对服务器端资源进行操作，实现\"表现层状态转化\"。"}]}]}]},{"ID":"20240201213675-jz1p6zx","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240201213675-jz1p6zx","updated":"20240201213675"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"RESTful API 规范"}]},{"ID":"20240201213676-15u843y","Type":"NodeParagraph","Properties":{"id":"20240201213676-15u843y","updated":"20240201213676"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"https://oss.javaguide.cn/system-design/basis/20210507154007779.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201213677-thzt1u2","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240201213677-thzt1u2","updated":"20240201213677"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"动作"}]},{"ID":"20240201213678-cop457x","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213678-cop457x","updated":"20240201213678"},"Children":[{"ID":"20240201213679-t0ydtxc","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213679-t0ydtxc","updated":"20240201213679"},"Children":[{"ID":"20240201213680-2jmwx1d","Type":"NodeParagraph","Properties":{"id":"20240201213680-2jmwx1d","updated":"20240201213680"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"GET"},{"Type":"NodeText","Data":"：请求从服务器获取特定资源。举个例子："},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"GET /classes"},{"Type":"NodeText","Data":"（获取所有班级）"}]}]},{"ID":"20240201213681-yrars1u","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213681-yrars1u","updated":"20240201213681"},"Children":[{"ID":"20240201213682-6gqrg80","Type":"NodeParagraph","Properties":{"id":"20240201213682-6gqrg80","updated":"20240201213682"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"POST"},{"Type":"NodeText","Data":"：在服务器上创建一个新的资源。举个例子："},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"POST /classes"},{"Type":"NodeText","Data":"（创建班级）"}]}]},{"ID":"20240201213683-pqrep30","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213683-pqrep30","updated":"20240201213683"},"Children":[{"ID":"20240201213684-ykckvqk","Type":"NodeParagraph","Properties":{"id":"20240201213684-ykckvqk","updated":"20240201213684"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"PUT"},{"Type":"NodeText","Data":"：更新服务器上的资源（客户端提供更新后的整个资源）。举个例子："},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"PUT /classes/12"},{"Type":"NodeText","Data":"（更新编号为 12 的班级）"}]}]},{"ID":"20240201213685-u860jx0","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213685-u860jx0","updated":"20240201213685"},"Children":[{"ID":"20240201213686-ct1ncu2","Type":"NodeParagraph","Properties":{"id":"20240201213686-ct1ncu2","updated":"20240201213686"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"DELETE"},{"Type":"NodeText","Data":"：从服务器删除特定的资源。举个例子："},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"DELETE /classes/12"},{"Type":"NodeText","Data":"（删除编号为 12 的班级）"}]}]},{"ID":"20240201213687-zyqaabj","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213687-zyqaabj","updated":"20240201213687"},"Children":[{"ID":"20240201213688-azph38l","Type":"NodeParagraph","Properties":{"id":"20240201213688-azph38l","updated":"20240201213688"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"PATCH"},{"Type":"NodeText","Data":"：更新服务器上的资源（客户端提供更改的属性，可以看做作是部分更新），使用的比较少，这里就不举例子了。"}]}]}]},{"ID":"20240201213689-ypbp3yx","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240201213689-ypbp3yx","updated":"20240201213689"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"路径（接口命名）"}]},{"ID":"20240201213690-vrz267y","Type":"NodeParagraph","Properties":{"id":"20240201213690-vrz267y","updated":"20240201213690"},"Children":[{"Type":"NodeText","Data":"路径又称\"终点\"（endpoint），表示 API 的具体网址。实际开发中常见的规范如下："}]},{"ID":"20240201213691-etrib4h","Type":"NodeList","ListData":{"Typ":1,"Tight":true,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20240201213691-etrib4h","updated":"20240201213691"},"Children":[{"ID":"20240201213692-8mdlf00","Type":"NodeListItem","Data":"1","ListData":{"Typ":1,"Tight":true,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20240201213692-8mdlf00","updated":"20240201213692"},"Children":[{"ID":"20240201213693-z5yj8co","Type":"NodeParagraph","Properties":{"id":"20240201213693-z5yj8co","updated":"20240201213693"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"网址中不能有动词，只能有名词，API 中的名词也应该使用复数。"},{"Type":"NodeText","Data":" 因为 REST 中的资源往往和数据库中的表对应，而数据库中的表都是同种记录的\"集合\"（collection）。如果 API 调用并不涉及资源（如计算，翻译等操作）的话，可以用动词。比如："},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"GET /calculate?param1=11\u0026amp;param2=33"},{"Type":"NodeText","Data":" 。"}]}]},{"ID":"20240201213694-mcf8jwf","Type":"NodeListItem","Data":"2","ListData":{"Typ":1,"Tight":true,"Start":2,"Delimiter":46,"Padding":3,"Marker":"Mg==","Num":2},"Properties":{"id":"20240201213694-mcf8jwf","updated":"20240201213694"},"Children":[{"ID":"20240201213695-to7ijrd","Type":"NodeParagraph","Properties":{"id":"20240201213695-to7ijrd","updated":"20240201213695"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"不用大写字母，建议用中杠 - 不用下杠 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"_"},{"Type":"NodeText","Data":" 。比如邀请码写成 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"invitation-code"},{"Type":"NodeText","Data":"而不是 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"s","TextMarkTextContent":"invitation_code"},{"Type":"NodeText","Data":" 。"}]}]},{"ID":"20240201213696-bejt58q","Type":"NodeListItem","Data":"3","ListData":{"Typ":1,"Tight":true,"Start":3,"Delimiter":46,"Padding":3,"Marker":"Mw==","Num":3},"Properties":{"id":"20240201213696-bejt58q","updated":"20240201213696"},"Children":[{"ID":"20240201213697-mvb8wuu","Type":"NodeParagraph","Properties":{"id":"20240201213697-mvb8wuu","updated":"20240201213697"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"善用版本化 API"},{"Type":"NodeText","Data":"。当我们的 API 发生了重大改变而不兼容前期版本的时候，我们可以通过 URL 来实现版本化，比如 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"http://api.example.com/v1"},{"Type":"NodeText","Data":"、"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"http://apiv1.example.com"},{"Type":"NodeText","Data":" 。版本不必非要是数字，只是数字用的最多，日期、季节都可以作为版本标识符，项目团队达成共识就可。"}]}]},{"ID":"20240201213698-eagd6u5","Type":"NodeListItem","Data":"4","ListData":{"Typ":1,"Tight":true,"Start":4,"Delimiter":46,"Padding":3,"Marker":"NA==","Num":4},"Properties":{"id":"20240201213698-eagd6u5","updated":"20240201213698"},"Children":[{"ID":"20240201213699-th4r7p1","Type":"NodeParagraph","Properties":{"id":"20240201213699-th4r7p1","updated":"20240201213699"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"接口尽量使用名词，避免使用动词。"},{"Type":"NodeText","Data":" RESTful API 操作（HTTP Method）的是资源（名词）而不是动作（动词）。"}]}]}]},{"ID":"20240201213700-tus69p7","Type":"NodeParagraph","Properties":{"id":"20240201213700-tus69p7","updated":"20240201213700"},"Children":[{"Type":"NodeText","Data":"Talk is cheap！来举个实际的例子来说明一下吧！现在有这样一个 API 提供班级（class）的信息，还包括班级中的学生和教师的信息，则它的路径应该设计成下面这样。"}]},{"ID":"20240201213701-nza5285","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"cGxhaW4=","CodeBlockCloseFence":"YGBg","Properties":{"id":"20240201213701-nza5285","updated":"20240201213701"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"cGxhaW4=","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"GET    /classes：列出所有班级\nPOST   /classes：新建一个班级\nGET    /classes/{classId}：获取某个指定班级的信息\nPUT    /classes/{classId}：更新某个指定班级的信息（一般倾向整体更新）\nPATCH  /classes/{classId}：更新某个指定班级的信息（一般倾向部分更新）\nDELETE /classes/{classId}：删除某个班级\nGET    /classes/{classId}/teachers：列出某个指定班级的所有老师的信息\nGET    /classes/{classId}/students：列出某个指定班级的所有学生的信息\nDELETE /classes/{classId}/teachers/{ID}：删除某个指定班级下的指定的老师的信息\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20240201213702-a47fjra","Type":"NodeParagraph","Properties":{"id":"20240201213702-a47fjra","updated":"20240201213702"},"Children":[{"Type":"NodeText","Data":"反例："}]},{"ID":"20240201213703-jfj1ov0","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"cGxhaW4=","CodeBlockCloseFence":"YGBg","Properties":{"id":"20240201213703-jfj1ov0","updated":"20240201213703"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"cGxhaW4=","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"/getAllclasses\n/createNewclass\n/deleteAllActiveclasses\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20240201213704-i0vbnlt","Type":"NodeParagraph","Properties":{"id":"20240201213704-i0vbnlt","updated":"20240201213704"},"Children":[{"Type":"NodeText","Data":"理清资源的层次结构，比如业务针对的范围是学校，那么学校会是一级资源:"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"/schools"},{"Type":"NodeText","Data":"，老师: "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"/schools/teachers"},{"Type":"NodeText","Data":"，学生: "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"/schools/students"},{"Type":"NodeText","Data":" 就是二级资源。"}]},{"ID":"20240201213705-yv6akqu","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240201213705-yv6akqu","updated":"20240201213705"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"过滤信息（Filtering）"}]},{"ID":"20240201213706-v2e5h7f","Type":"NodeParagraph","Properties":{"id":"20240201213706-v2e5h7f","updated":"20240201213706"},"Children":[{"Type":"NodeText","Data":"如果我们在查询的时候需要添加特定条件的话，建议使用 url 参数的形式。比如我们要查询 state 状态为 active 并且 name 为 guidegege 的班级："}]},{"ID":"20240201213707-dcz3x3h","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"cGxhaW4=","CodeBlockCloseFence":"YGBg","Properties":{"id":"20240201213707-dcz3x3h","updated":"20240201213707"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"cGxhaW4=","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"GET    /classes?state=active\u0026name=guidegege\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20240201213708-kdie62l","Type":"NodeParagraph","Properties":{"id":"20240201213708-kdie62l","updated":"20240201213708"},"Children":[{"Type":"NodeText","Data":"比如我们要实现分页查询："}]},{"ID":"20240201213709-rsmwxyo","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"cGxhaW4=","CodeBlockCloseFence":"YGBg","Properties":{"id":"20240201213709-rsmwxyo","updated":"20240201213709"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"cGxhaW4=","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"GET    /classes?page=1\u0026size=10 //指定第1页，每页10个数据\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20240201213710-88dn2z5","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240201213710-88dn2z5","updated":"20240201213710"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"状态码（Status Codes）"}]},{"ID":"20240201213711-w074fg5","Type":"NodeParagraph","Properties":{"id":"20240201213711-w074fg5","updated":"20240201213711"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"状态码范围："}]},{"ID":"20240201213712-ccecye8","Type":"NodeTable","Data":"| 2xx：成功 | 3xx：重定向    | 4xx：客户端错误  | 5xx：服务器错误 |\n| --------- | -------------- | ---------------- | --------------- |\n| 200 成功  | 301 永久重定向 | 400 错误请求     | 500 服务器错误  |\n| 201 创建  | 304 资源未修改 | 401 未授权       | 502 网关错误    |\n|           |                | 403 禁止访问     | 504 网关超时    |\n|           |                | 404 未找到       |                 |\n|           |                | 405 请求方法不对 |                 |","TableAligns":[0,0,0,0],"Properties":{"id":"20240201213712-ccecye8","updated":"20240201213712"},"Children":[{"Type":"NodeTableHead","Properties":{"id":""},"Children":[{"Type":"NodeTableRow","Properties":{"id":""},"Children":[{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"2xx：成功"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"3xx：重定向"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"4xx：客户端错误"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"5xx：服务器错误"}]}]}]},{"Type":"NodeTableRow","TableAligns":[0,0,0,0],"Properties":{"id":""},"Children":[{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"200 成功"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"301 永久重定向"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"400 错误请求"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"500 服务器错误"}]}]},{"Type":"NodeTableRow","TableAligns":[0,0,0,0],"Properties":{"id":""},"Children":[{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"201 创建"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"304 资源未修改"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"401 未授权"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"502 网关错误"}]}]},{"Type":"NodeTableRow","TableAligns":[0,0,0,0],"Properties":{"id":""},"Children":[{"Type":"NodeTableCell","Properties":{"id":""}},{"Type":"NodeTableCell","Properties":{"id":""}},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"403 禁止访问"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"504 网关超时"}]}]},{"Type":"NodeTableRow","TableAligns":[0,0,0,0],"Properties":{"id":""},"Children":[{"Type":"NodeTableCell","Properties":{"id":""}},{"Type":"NodeTableCell","Properties":{"id":""}},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"404 未找到"}]},{"Type":"NodeTableCell","Properties":{"id":""}}]},{"Type":"NodeTableRow","TableAligns":[0,0,0,0],"Properties":{"id":""},"Children":[{"Type":"NodeTableCell","Properties":{"id":""}},{"Type":"NodeTableCell","Properties":{"id":""}},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"405 请求方法不对"}]},{"Type":"NodeTableCell","Properties":{"id":""}}]}]},{"ID":"20240201213713-r96ajwy","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240201213713-r96ajwy","updated":"20240201213713"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"RESTful 的极致 HATEOAS"}]},{"ID":"20240201213714-ki1i9et","Type":"NodeBlockquote","Properties":{"id":"20240201213714-ki1i9et","updated":"20240201213714"},"Children":[{"Type":"NodeBlockquoteMarker","Data":"\u003e ","Properties":{"id":""}},{"ID":"20240201213715-rnmw5m7","Type":"NodeParagraph","Properties":{"id":"20240201213715-rnmw5m7","updated":"20240201213715"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"RESTful 的极致是 hateoas ，但是这个基本不会在实际项目中用到。"}]}]},{"ID":"20240201213716-prshvi8","Type":"NodeParagraph","Properties":{"id":"20240201213716-prshvi8","updated":"20240201213716"},"Children":[{"Type":"NodeText","Data":"上面是 RESTful API 最基本的东西，也是我们平时开发过程中最容易实践到的。实际上，RESTful API 最好做到 Hypermedia，即返回结果中提供链接，连向其他 API 方法，使得用户不查文档，也知道下一步应该做什么。"}]},{"ID":"20240201213717-9krpjh9","Type":"NodeParagraph","Properties":{"id":"20240201213717-9krpjh9","updated":"20240201213717"},"Children":[{"Type":"NodeText","Data":"比如，当用户向 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"api.example.com"},{"Type":"NodeText","Data":" 的根目录发出请求，会得到这样一个返回结果"}]},{"ID":"20240201213718-hbp6719","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YXNjcmlwdA==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20240201213718-hbp6719","updated":"20240201213718"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YXNjcmlwdA==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"{\"link\": {\n  \"rel\":   \"collection https://www.example.com/classes\",\n  \"href\":  \"https://api.example.com/classes\",\n  \"title\": \"List of classes\",\n  \"type\":  \"application/vnd.yourformat+json\"\n}}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20240201213719-n1jbhme","Type":"NodeParagraph","Properties":{"id":"20240201213719-n1jbhme","updated":"20240201213719"},"Children":[{"Type":"NodeText","Data":"上面代码表示，文档中有一个 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"link"},{"Type":"NodeText","Data":" 属性，用户读取这个属性就知道下一步该调用什么 API 了。"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"rel"},{"Type":"NodeText","Data":" 表示这个 API 与当前网址的关系（collection 关系，并给出该 collection 的网址），"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"href"},{"Type":"NodeText","Data":" 表示 API 的路径，title 表示 API 的标题，"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"type"},{"Type":"NodeText","Data":" 表示返回类型 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"Hypermedia API"},{"Type":"NodeText","Data":" 的设计被称为"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"http://en.wikipedia.org/wiki/HATEOAS","TextMarkTextContent":"HATEOAS"},{"Type":"NodeText","Data":"。"}]},{"ID":"20240201213720-vbzv5kr","Type":"NodeParagraph","Properties":{"id":"20240201213720-vbzv5kr","updated":"20240201213720"},"Children":[{"Type":"NodeText","Data":"在 Spring 中有一个叫做 HATEOAS 的 API 库，通过它我们可以更轻松的创建出符合 HATEOAS 设计的 API。相关文章："}]},{"ID":"20240201213721-r307rti","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213721-r307rti","updated":"20240201213721"},"Children":[{"ID":"20240201213722-hblu6d2","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213722-hblu6d2","updated":"20240201213722"},"Children":[{"ID":"20240201213723-v0zvoby","Type":"NodeParagraph","Properties":{"id":"20240201213723-v0zvoby","updated":"20240201213723"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://blog.aisensiy.me/2017/06/04/spring-boot-and-hateoas/","TextMarkTextContent":"在 Spring Boot 中使用 HATEOAS"}]}]},{"ID":"20240201213724-0zf7sci","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213724-0zf7sci","updated":"20240201213724"},"Children":[{"ID":"20240201213725-xtyb525","Type":"NodeParagraph","Properties":{"id":"20240201213725-xtyb525","updated":"20240201213725"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://spring.io/guides/tutorials/rest/","TextMarkTextContent":"Building REST services with Spring"},{"Type":"NodeText","Data":" (Spring 官网 )"}]}]},{"ID":"20240201213726-75hgtjl","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213726-75hgtjl","updated":"20240201213726"},"Children":[{"ID":"20240201213727-z9bx9gj","Type":"NodeParagraph","Properties":{"id":"20240201213727-z9bx9gj","updated":"20240201213727"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://www.baeldung.com/spring-hateoas-tutorial","TextMarkTextContent":"An Intro to Spring HATEOAS"}]}]},{"ID":"20240201213728-mb4yhrt","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213728-mb4yhrt","updated":"20240201213728"},"Children":[{"ID":"20240201213729-lcbqvsj","Type":"NodeParagraph","Properties":{"id":"20240201213729-lcbqvsj","updated":"20240201213729"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/spring-projects/spring-hateoas-examples/tree/master/hypermedia","TextMarkTextContent":"spring-hateoas-examples"}]}]},{"ID":"20240201213730-tdkpq52","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213730-tdkpq52","updated":"20240201213730"},"Children":[{"ID":"20240201213731-u5itw3i","Type":"NodeParagraph","Properties":{"id":"20240201213731-u5itw3i","updated":"20240201213731"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://spring.io/projects/spring-hateoas#learn","TextMarkTextContent":"Spring HATEOAS"},{"Type":"NodeText","Data":" (Spring 官网 )"}]}]}]},{"ID":"20240201213732-447w99t","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240201213732-447w99t","updated":"20240201213732"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"参考"}]},{"ID":"20240201213733-b43hd7t","Type":"NodeList","ListData":{"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213733-b43hd7t","updated":"20240201213733"},"Children":[{"ID":"20240201213734-7jvm4k2","Type":"NodeListItem","Data":"-","ListData":{"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213734-7jvm4k2","updated":"20240201213734"},"Children":[{"ID":"20240201213735-83k4zf7","Type":"NodeParagraph","Properties":{"id":"20240201213735-83k4zf7","updated":"20240201213735"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://RESTfulapi.net/","TextMarkTextContent":"https://RESTfulapi.net/"}]}]},{"ID":"20240201213736-3yvd1u8","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213736-3yvd1u8","updated":"20240201213736"},"Children":[{"ID":"20240201213737-1s3dj7n","Type":"NodeParagraph","Properties":{"id":"20240201213737-1s3dj7n","updated":"20240201213737"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://www.ruanyifeng.com/blog/2014/05/restful_api.html","TextMarkTextContent":"https://www.ruanyifeng.com/blog/2014/05/restful_api.html"}]}]},{"ID":"20240201213738-puw883s","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213738-puw883s","updated":"20240201213738"},"Children":[{"ID":"20240201213739-8miino2","Type":"NodeParagraph","Properties":{"id":"20240201213739-8miino2","updated":"20240201213739"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://juejin.im/entry/59e460c951882542f578f2f0","TextMarkTextContent":"https://juejin.im/entry/59e460c951882542f578f2f0"}]}]},{"ID":"20240201213740-geo44oj","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213740-geo44oj","updated":"20240201213740"},"Children":[{"ID":"20240201213741-z4mvzij","Type":"NodeParagraph","Properties":{"id":"20240201213741-z4mvzij","updated":"20240201213741"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://phauer.com/2016/testing-RESTful-services-java-best-practices/","TextMarkTextContent":"https://phauer.com/2016/testing-RESTful-services-java-best-practices/"}]}]},{"ID":"20240201213742-qtgs3ql","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213742-qtgs3ql","updated":"20240201213742"},"Children":[{"ID":"20240201213743-hbkg58w","Type":"NodeParagraph","Properties":{"id":"20240201213743-hbkg58w","updated":"20240201213743"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://www.seobility.net/en/wiki/REST_API","TextMarkTextContent":"https://www.seobility.net/en/wiki/REST_API"}]}]},{"ID":"20240201213744-sae0akj","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213744-sae0akj","updated":"20240201213744"},"Children":[{"ID":"20240201213745-3mrns33","Type":"NodeParagraph","Properties":{"id":"20240201213745-3mrns33","updated":"20240201213745"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://dev.to/duomly/rest-api-vs-graphql-comparison-3j6g","TextMarkTextContent":"https://dev.to/duomly/rest-api-vs-graphql-comparison-3j6g"}]}]}]},{"ID":"20240201213746-pbncxu0","Type":"NodeHTMLBlock","Data":"\u003cdiv\u003e\n\u003c!-- @include: @article-footer.snippet.md --\u003e\n\u003c/div\u003e","HtmlBlockType":2,"Properties":{"id":"20240201213746-pbncxu0","updated":"20240201213746"}}]}