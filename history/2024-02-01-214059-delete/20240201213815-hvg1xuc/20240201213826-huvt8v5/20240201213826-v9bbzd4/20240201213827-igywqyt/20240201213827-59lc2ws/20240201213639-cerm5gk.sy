{"ID":"20240201213639-cerm5gk","Spec":"1","Type":"NodeDocument","Properties":{"id":"20240201213639-cerm5gk","title":"refactoring","updated":"20240201213639"},"Children":[{"ID":"20240201213640-co810en","Type":"NodeThematicBreak","Properties":{"id":"20240201213640-co810en","updated":"20240201213640"}},{"ID":"20240201213641-h09lnkv","Type":"NodeParagraph","Properties":{"id":"20240201213641-h09lnkv","updated":"20240201213641"},"Children":[{"Type":"NodeText","Data":"title: 代码重构指南"},{"Type":"NodeSoftBreak","Data":"\n","Properties":{"id":""}},{"Type":"NodeText","Data":"category: 代码质量"}]},{"ID":"20240201213642-xg8zkg8","Type":"NodeThematicBreak","Properties":{"id":"20240201213642-xg8zkg8","updated":"20240201213642"}},{"ID":"20240201213643-crjy2t7","Type":"NodeParagraph","Properties":{"id":"20240201213643-crjy2t7","updated":"20240201213643"},"Children":[{"Type":"NodeText","Data":"前段时间重读了"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://book.douban.com/subject/30468597/","TextMarkTextContent":"《重构：改善代码既有设计》"},{"Type":"NodeText","Data":"，收货颇多。于是，简单写了一篇文章来聊聊我对重构的看法。"}]},{"ID":"20240201213644-5gmhifu","Type":"NodeParagraph","Properties":{"id":"20240201213644-5gmhifu","updated":"20240201213644"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"https://oss.javaguide.cn/github/javaguide/image-20220311155746549.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201213645-onhlbok","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240201213645-onhlbok","updated":"20240201213645"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"何谓重构？"}]},{"ID":"20240201213646-l82k7tk","Type":"NodeParagraph","Properties":{"id":"20240201213646-l82k7tk","updated":"20240201213646"},"Children":[{"Type":"NodeText","Data":"学习重构必看的一本神书《重构：改善代码既有设计》从两个角度给出了重构的定义："}]},{"ID":"20240201213647-9vr9qhj","Type":"NodeBlockquote","Properties":{"id":"20240201213647-9vr9qhj","updated":"20240201213647"},"Children":[{"Type":"NodeBlockquoteMarker","Data":"\u003e ","Properties":{"id":""}},{"ID":"20240201213648-gt60elp","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213648-gt60elp","updated":"20240201213648"},"Children":[{"ID":"20240201213649-0zmrq5l","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213649-0zmrq5l","updated":"20240201213649"},"Children":[{"ID":"20240201213650-65th48a","Type":"NodeParagraph","Properties":{"id":"20240201213650-65th48a","updated":"20240201213650"},"Children":[{"Type":"NodeText","Data":"重构（名词）：对软件内部结构的一种调整，目的是在不改变软件可观察行为的前提下，提高其可理解性，降低其修改成本。"}]}]},{"ID":"20240201213651-duoj7et","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213651-duoj7et","updated":"20240201213651"},"Children":[{"ID":"20240201213652-afdgbnb","Type":"NodeParagraph","Properties":{"id":"20240201213652-afdgbnb","updated":"20240201213652"},"Children":[{"Type":"NodeText","Data":"重构（动词）：使用一系列重构手法，在不改变软件可观察行为的前提下，调整其结构。"}]}]}]}]},{"ID":"20240201213653-u9rtczh","Type":"NodeParagraph","Properties":{"id":"20240201213653-u9rtczh","updated":"20240201213653"},"Children":[{"Type":"NodeText","Data":"用更贴近工程师的语言来说："},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"重构就是利用设计模式(如组合模式、策略模式、责任链模式)、软件设计原则（如 SOLID 原则、YAGNI 原则、KISS 原则）和重构手段（如封装、继承、构建测试体系）来让代码更容易理解，更易于修改。"}]},{"ID":"20240201213654-yyh0kow","Type":"NodeParagraph","Properties":{"id":"20240201213654-yyh0kow","updated":"20240201213654"},"Children":[{"Type":"NodeText","Data":"软件设计原则指导着我们组织和规范代码，同时，重构也是为了能够尽量设计出尽量满足软件设计原则的软件。"}]},{"ID":"20240201213655-9fj3jti","Type":"NodeParagraph","Properties":{"id":"20240201213655-9fj3jti","updated":"20240201213655"},"Children":[{"Type":"NodeText","Data":"正确重构的核心在于 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"步子一定要小，每一步的重构都不会影响软件的正常运行，可以随时停止重构。"}]},{"ID":"20240201213656-uezx285","Type":"NodeParagraph","Properties":{"id":"20240201213656-uezx285","updated":"20240201213656"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"常见的设计模式如下"},{"Type":"NodeText","Data":"："}]},{"ID":"20240201213657-u0offjm","Type":"NodeParagraph","Properties":{"id":"20240201213657-u0offjm","updated":"20240201213657"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"常见的设计模式","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"https://oss.javaguide.cn/github/javaguide/system-design/basis/common-design-patterns.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201213658-391dj6v","Type":"NodeParagraph","Properties":{"id":"20240201213658-391dj6v","updated":"20240201213658"},"Children":[{"Type":"NodeText","Data":"更全面的设计模式总结，可以看 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong a","TextMarkAHref":"https://github.com/iluwatar/java-design-patterns","TextMarkTextContent":"java-design-patterns"},{"Type":"NodeText","Data":" 这个开源项目。"}]},{"ID":"20240201213659-0l1ageu","Type":"NodeParagraph","Properties":{"id":"20240201213659-0l1ageu","updated":"20240201213659"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"常见的软件设计原则如下"},{"Type":"NodeText","Data":"："}]},{"ID":"20240201213660-h2ncai6","Type":"NodeParagraph","Properties":{"id":"20240201213660-h2ncai6","updated":"20240201213660"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"常见的软件设计原则","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"https://oss.javaguide.cn/github/javaguide/system-design/basis/programming-principles.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201213661-sj9mftf","Type":"NodeParagraph","Properties":{"id":"20240201213661-sj9mftf","updated":"20240201213661"},"Children":[{"Type":"NodeText","Data":"更全面的设计原则总结，可以看 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong a","TextMarkAHref":"https://github.com/iluwatar/java-design-patterns","TextMarkTextContent":"java-design-patterns"},{"Type":"NodeText","Data":" 和 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong a","TextMarkAHref":"https://github.com/nusr/hacker-laws-zh","TextMarkTextContent":"hacker-laws-zh"},{"Type":"NodeText","Data":" 这两个开源项目。"}]},{"ID":"20240201213662-wvtjbzj","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240201213662-wvtjbzj","updated":"20240201213662"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"为什么要重构？"}]},{"ID":"20240201213663-knca2ml","Type":"NodeParagraph","Properties":{"id":"20240201213663-knca2ml","updated":"20240201213663"},"Children":[{"Type":"NodeText","Data":"在上面介绍重构定义的时候，我从比较抽象的角度介绍了重构的好处：重构的主要目的主要是提升代码\u0026架构的灵活性/可扩展性以及复用性。"}]},{"ID":"20240201213664-gsfvrhj","Type":"NodeParagraph","Properties":{"id":"20240201213664-gsfvrhj","updated":"20240201213664"},"Children":[{"Type":"NodeText","Data":"如果对应到一个真实的项目，重构具体能为我们带来什么好处呢？"}]},{"ID":"20240201213665-tugr6iq","Type":"NodeList","ListData":{"Typ":1,"Tight":true,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20240201213665-tugr6iq","updated":"20240201213665"},"Children":[{"ID":"20240201213666-9bp0t8i","Type":"NodeListItem","Data":"1","ListData":{"Typ":1,"Tight":true,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20240201213666-9bp0t8i","updated":"20240201213666"},"Children":[{"ID":"20240201213667-x78ahfw","Type":"NodeParagraph","Properties":{"id":"20240201213667-x78ahfw","updated":"20240201213667"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"让代码更容易理解"},{"Type":"NodeText","Data":"：通过添加注释、命名规范、逻辑优化等手段可以让我们的代码更容易被理解；"}]}]},{"ID":"20240201213668-zym0m72","Type":"NodeListItem","Data":"2","ListData":{"Typ":1,"Tight":true,"Start":2,"Delimiter":46,"Padding":3,"Marker":"Mg==","Num":2},"Properties":{"id":"20240201213668-zym0m72","updated":"20240201213668"},"Children":[{"ID":"20240201213669-avldvul","Type":"NodeParagraph","Properties":{"id":"20240201213669-avldvul","updated":"20240201213669"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"避免代码腐化"},{"Type":"NodeText","Data":"：通过重构干掉坏味道代码；"}]}]},{"ID":"20240201213670-1buo2n7","Type":"NodeListItem","Data":"3","ListData":{"Typ":1,"Tight":true,"Start":3,"Delimiter":46,"Padding":3,"Marker":"Mw==","Num":3},"Properties":{"id":"20240201213670-1buo2n7","updated":"20240201213670"},"Children":[{"ID":"20240201213671-vfd1byf","Type":"NodeParagraph","Properties":{"id":"20240201213671-vfd1byf","updated":"20240201213671"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"加深对代码的理解"},{"Type":"NodeText","Data":"：重构代码的过程会加深你对某部分代码的理解；"}]}]},{"ID":"20240201213672-jdnr15d","Type":"NodeListItem","Data":"4","ListData":{"Typ":1,"Tight":true,"Start":4,"Delimiter":46,"Padding":3,"Marker":"NA==","Num":4},"Properties":{"id":"20240201213672-jdnr15d","updated":"20240201213672"},"Children":[{"ID":"20240201213673-cdtpo7w","Type":"NodeParagraph","Properties":{"id":"20240201213673-cdtpo7w","updated":"20240201213673"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"发现潜在 bug"},{"Type":"NodeText","Data":"：是这样的，很多潜在的 bug ，都是我们在重构的过程中发现的；"}]}]},{"ID":"20240201213674-52csu2y","Type":"NodeListItem","Data":"5","ListData":{"Typ":1,"Tight":true,"Start":5,"Delimiter":46,"Padding":3,"Marker":"NQ==","Num":5},"Properties":{"id":"20240201213674-52csu2y","updated":"20240201213674"},"Children":[{"ID":"20240201213675-l11rdg6","Type":"NodeParagraph","Properties":{"id":"20240201213675-l11rdg6","updated":"20240201213675"},"Children":[{"Type":"NodeText","Data":"……"}]}]}]},{"ID":"20240201213676-psplvf2","Type":"NodeParagraph","Properties":{"id":"20240201213676-psplvf2","updated":"20240201213676"},"Children":[{"Type":"NodeText","Data":"看了上面介绍的关于重构带来的好处之后，你会发现重构的最终目标是 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"提高软件开发速度和质量"},{"Type":"NodeText","Data":" 。"}]},{"ID":"20240201213677-8zbgsfu","Type":"NodeParagraph","Properties":{"id":"20240201213677-8zbgsfu","updated":"20240201213677"},"Children":[{"Type":"NodeText","Data":"重构并不会减慢软件开发速度，相反，如果代码质量和软件设计较差，当我们想要添加新功能的话，开发速度会越来越慢。到了最后，甚至都有想要重写整个系统的冲动。"}]},{"ID":"20240201213678-zj6r4f9","Type":"NodeParagraph","Properties":{"id":"20240201213678-zj6r4f9","updated":"20240201213678"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"https://oss.javaguide.cn/github/javaguide/bad\u0026good-design.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201213679-313qddn","Type":"NodeParagraph","Properties":{"id":"20240201213679-313qddn","updated":"20240201213679"},"Children":[{"Type":"NodeText","Data":"《重构：改善代码既有设计》这本书中这样说："}]},{"ID":"20240201213680-a5ca42d","Type":"NodeBlockquote","Properties":{"id":"20240201213680-a5ca42d","updated":"20240201213680"},"Children":[{"Type":"NodeBlockquoteMarker","Data":"\u003e ","Properties":{"id":""}},{"ID":"20240201213681-vnlk1le","Type":"NodeParagraph","Properties":{"id":"20240201213681-vnlk1le","updated":"20240201213681"},"Children":[{"Type":"NodeText","Data":"重构的唯一目的就是让我们开发更快，用更少的工作量创造更大的价值。"}]}]},{"ID":"20240201213682-z8f0e6y","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240201213682-z8f0e6y","updated":"20240201213682"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"何时进行重构？"}]},{"ID":"20240201213683-cswnmt6","Type":"NodeParagraph","Properties":{"id":"20240201213683-cswnmt6","updated":"20240201213683"},"Children":[{"Type":"NodeText","Data":"重构在是开发过程中随时可以进行的，见机行事即可，并不需要单独分配一两天的时间专门用来重构。"}]},{"ID":"20240201213684-omeoabn","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240201213684-omeoabn","updated":"20240201213684"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"提交代码之前"}]},{"ID":"20240201213685-q76kipx","Type":"NodeParagraph","Properties":{"id":"20240201213685-q76kipx","updated":"20240201213685"},"Children":[{"Type":"NodeText","Data":"《重构：改善代码既有设计》这本书介绍了一个 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"营地法则"},{"Type":"NodeText","Data":" 的概念:"}]},{"ID":"20240201213686-q04714b","Type":"NodeBlockquote","Properties":{"id":"20240201213686-q04714b","updated":"20240201213686"},"Children":[{"Type":"NodeBlockquoteMarker","Data":"\u003e ","Properties":{"id":""}},{"ID":"20240201213687-3chydry","Type":"NodeParagraph","Properties":{"id":"20240201213687-3chydry","updated":"20240201213687"},"Children":[{"Type":"NodeText","Data":"编程时，需要遵循营地法则：保证你离开时的代码库一定比来时更健康。"}]}]},{"ID":"20240201213688-z8i7oik","Type":"NodeParagraph","Properties":{"id":"20240201213688-z8i7oik","updated":"20240201213688"},"Children":[{"Type":"NodeText","Data":"这个概念表达的核心思想其实很简单：在你提交代码的之前，花一会时间想一想，我这次的提交是让项目代码变得更健康了，还是更腐化了，或者说没什么变化？"}]},{"ID":"20240201213689-ju4uqag","Type":"NodeParagraph","Properties":{"id":"20240201213689-ju4uqag","updated":"20240201213689"},"Children":[{"Type":"NodeText","Data":"项目团队的每一个人只有保证自己的提交没有让项目代码变得更腐化，项目代码才会朝着健康的方向发展。"}]},{"ID":"20240201213690-6fn2plh","Type":"NodeParagraph","Properties":{"id":"20240201213690-6fn2plh","updated":"20240201213690"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"当我们离开营地（项目代码）的时候，请不要留下垃圾（代码坏味道）！尽量确保营地变得更干净了！"}]},{"ID":"20240201213691-m9wo48d","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240201213691-m9wo48d","updated":"20240201213691"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"开发一个新功能之后\u0026之前"}]},{"ID":"20240201213692-vk7b952","Type":"NodeParagraph","Properties":{"id":"20240201213692-vk7b952","updated":"20240201213692"},"Children":[{"Type":"NodeText","Data":"在开发一个新功能之后，我们应该回过头看看是不是有可以改进的地方。在添加一个新功能之前，我们可以思考一下自己是否可以重构代码以让新功能的开发更容易。"}]},{"ID":"20240201213693-vajf6y1","Type":"NodeParagraph","Properties":{"id":"20240201213693-vajf6y1","updated":"20240201213693"},"Children":[{"Type":"NodeText","Data":"一个新功能的开发不应该仅仅只有功能验证通过那么简单，我们还应该尽量保证代码质量。"}]},{"ID":"20240201213694-fh0rwzr","Type":"NodeParagraph","Properties":{"id":"20240201213694-fh0rwzr","updated":"20240201213694"},"Children":[{"Type":"NodeText","Data":"有一个两顶帽子的比喻：在我开发新功能之前，我发现重构可以让新功能的开发更容易，于是我戴上了重构的帽子。重构之后，我换回原来的帽子，继续开发新能功能。新功能开发完成之后，我又发现自己的代码难以理解，于是我又戴上了重构帽子。比较好的开发状态就是就是这样在重构和开发新功能之间来回切换。"}]},{"ID":"20240201213695-9y3vxx8","Type":"NodeParagraph","Properties":{"id":"20240201213695-9y3vxx8","updated":"20240201213695"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"refractor-two-hats","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"https://oss.javaguide.cn/github/javaguide/refractor-two-hats.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201213696-n2wmbl1","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240201213696-n2wmbl1","updated":"20240201213696"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"Code Review 之后"}]},{"ID":"20240201213697-vbhgtl1","Type":"NodeParagraph","Properties":{"id":"20240201213697-vbhgtl1","updated":"20240201213697"},"Children":[{"Type":"NodeText","Data":"Code Review 可以非常有效提高代码的整体质量，它会帮助我们发现代码中的坏味道以及可能存在问题的地方。并且， Code Review 可以帮助项目团队其他程序员理解你负责的业务模块，有效避免人员方面的单点风险。"}]},{"ID":"20240201213698-w4u35yq","Type":"NodeParagraph","Properties":{"id":"20240201213698-w4u35yq","updated":"20240201213698"},"Children":[{"Type":"NodeText","Data":"经历一次 Code Review ，你的代码可能会收到很多改进建议。"}]},{"ID":"20240201213699-gwsjjt5","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240201213699-gwsjjt5","updated":"20240201213699"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"捡垃圾式重构"}]},{"ID":"20240201213700-65zodzn","Type":"NodeParagraph","Properties":{"id":"20240201213700-65zodzn","updated":"20240201213700"},"Children":[{"Type":"NodeText","Data":"当我们发现坏味道代码（垃圾）的时候，如果我们不想停下手头自己正在做的工作，但又不想放着垃圾不管，我们可以这样做："}]},{"ID":"20240201213701-9y2apuo","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213701-9y2apuo","updated":"20240201213701"},"Children":[{"ID":"20240201213702-dvek1ui","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213702-dvek1ui","updated":"20240201213702"},"Children":[{"ID":"20240201213703-k97e1qw","Type":"NodeParagraph","Properties":{"id":"20240201213703-k97e1qw","updated":"20240201213703"},"Children":[{"Type":"NodeText","Data":"如果这个垃圾很容易重构的话，我们可以立即重构它。"}]}]},{"ID":"20240201213704-j5w82r1","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213704-j5w82r1","updated":"20240201213704"},"Children":[{"ID":"20240201213705-6k5305b","Type":"NodeParagraph","Properties":{"id":"20240201213705-6k5305b","updated":"20240201213705"},"Children":[{"Type":"NodeText","Data":"如果这个垃圾不太容易重构的话，我们可以先记录下来，当完成当下的任务再回来重构它。"}]}]}]},{"ID":"20240201213706-13uzi63","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240201213706-13uzi63","updated":"20240201213706"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"阅读理解代码的时候"}]},{"ID":"20240201213707-yuapfve","Type":"NodeParagraph","Properties":{"id":"20240201213707-yuapfve","updated":"20240201213707"},"Children":[{"Type":"NodeText","Data":"搞开发的小伙伴应该非常有体会：我们经常需要阅读项目团队中其他人写的代码，也经常需要阅读自己过去写的代码。阅读代码的时候，通常要比我们写代码的时间还要多很多。"}]},{"ID":"20240201213708-bga16kw","Type":"NodeParagraph","Properties":{"id":"20240201213708-bga16kw","updated":"20240201213708"},"Children":[{"Type":"NodeText","Data":"我们在阅读理解代码的时候，如果发现一些坏味道的话，我们就可以对其进行重构。"}]},{"ID":"20240201213709-8d7nif3","Type":"NodeParagraph","Properties":{"id":"20240201213709-8d7nif3","updated":"20240201213709"},"Children":[{"Type":"NodeText","Data":"就比如说你在阅读张三写的某段代码的时候，你发现这段代码逻辑过于复杂难以理解，你有更好的写法，那你就可以对张三的这段代码逻辑进行重构。"}]},{"ID":"20240201213710-bcmkl3y","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240201213710-bcmkl3y","updated":"20240201213710"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"重构有哪些注意事项？"}]},{"ID":"20240201213711-c0exko0","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240201213711-c0exko0","updated":"20240201213711"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"单元测试是重构的保护网"}]},{"ID":"20240201213712-t4evq5g","Type":"NodeParagraph","Properties":{"id":"20240201213712-t4evq5g","updated":"20240201213712"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"单元测试可以为重构提供信心，降低重构的成本。我们要像重视生产代码那样，重视单元测试。"}]},{"ID":"20240201213713-ir94opo","Type":"NodeParagraph","Properties":{"id":"20240201213713-ir94opo","updated":"20240201213713"},"Children":[{"Type":"NodeText","Data":"另外，多提一句：持续集成也要依赖单元测试，当持续集成服务自动构建新代码之后，会自动运行单元测试来发现代码错误。"}]},{"ID":"20240201213714-djfiipe","Type":"NodeParagraph","Properties":{"id":"20240201213714-djfiipe","updated":"20240201213714"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"怎样才能算单元测试呢？"},{"Type":"NodeText","Data":" 网上的定义很多，很抽象，很容易把人给看迷糊了。我觉得对于单元测试的定义主要取决于你的项目，一个函数甚至是一个类都可以看作是一个单元。就比如说我们写了一个计算个人股票收益率的方法，我们为了验证它的正确性专门为它写了一个单元测试。再比如说我们代码有一个类专门负责数据脱敏，我们为了验证脱敏是否符合预期专门为这个类写了一个单元测试。"}]},{"ID":"20240201213715-kvmsdwv","Type":"NodeParagraph","Properties":{"id":"20240201213715-kvmsdwv","updated":"20240201213715"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"单元测试也是需要重构或者修改的。"},{"Type":"NodeText","Data":" "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://book.douban.com/subject/4199741/","TextMarkTextContent":"《代码整洁之道:敏捷软件开发手册》"},{"Type":"NodeText","Data":"这本书这样写到："}]},{"ID":"20240201213716-clo19i6","Type":"NodeBlockquote","Properties":{"id":"20240201213716-clo19i6","updated":"20240201213716"},"Children":[{"Type":"NodeBlockquoteMarker","Data":"\u003e ","Properties":{"id":""}},{"ID":"20240201213717-jp1tv5g","Type":"NodeParagraph","Properties":{"id":"20240201213717-jp1tv5g","updated":"20240201213717"},"Children":[{"Type":"NodeText","Data":"测试代码需要随着生产代码的演进而修改，如果测试不能保持整洁，只会越来越难修改。"}]}]},{"ID":"20240201213718-n11aqm6","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240201213718-n11aqm6","updated":"20240201213718"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"不要为了重构而重构"}]},{"ID":"20240201213719-ydcm560","Type":"NodeParagraph","Properties":{"id":"20240201213719-ydcm560","updated":"20240201213719"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"重构一定是要为项目带来价值的！"},{"Type":"NodeText","Data":" 某些情况下我们不应该进行重构："}]},{"ID":"20240201213720-wrtdg1h","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213720-wrtdg1h","updated":"20240201213720"},"Children":[{"ID":"20240201213721-rv2dzys","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213721-rv2dzys","updated":"20240201213721"},"Children":[{"ID":"20240201213722-hugg4zr","Type":"NodeParagraph","Properties":{"id":"20240201213722-hugg4zr","updated":"20240201213722"},"Children":[{"Type":"NodeText","Data":"学习了某个设计模式/工程实践之后，不顾项目实际情况，刻意使用在项目上（避免货物崇拜编程）；"}]}]},{"ID":"20240201213723-iq3e326","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213723-iq3e326","updated":"20240201213723"},"Children":[{"ID":"20240201213724-3pl67lk","Type":"NodeParagraph","Properties":{"id":"20240201213724-3pl67lk","updated":"20240201213724"},"Children":[{"Type":"NodeText","Data":"项目进展比较急的时候，重构项目调用的某个 API 的底层代码（重构之后对项目调用这个 API 并没有带来什么价值）；"}]}]},{"ID":"20240201213725-g7bxhmf","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213725-g7bxhmf","updated":"20240201213725"},"Children":[{"ID":"20240201213726-0pdlo9c","Type":"NodeParagraph","Properties":{"id":"20240201213726-0pdlo9c","updated":"20240201213726"},"Children":[{"Type":"NodeText","Data":"重写比重构更容易更省事；"}]}]},{"ID":"20240201213727-y0pc16a","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213727-y0pc16a","updated":"20240201213727"},"Children":[{"ID":"20240201213728-jmx5ren","Type":"NodeParagraph","Properties":{"id":"20240201213728-jmx5ren","updated":"20240201213728"},"Children":[{"Type":"NodeText","Data":"……"}]}]}]},{"ID":"20240201213729-5lypo4y","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240201213729-5lypo4y","updated":"20240201213729"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"遵循方法"}]},{"ID":"20240201213730-weo7hj0","Type":"NodeParagraph","Properties":{"id":"20240201213730-weo7hj0","updated":"20240201213730"},"Children":[{"Type":"NodeText","Data":"《重构：改善代码既有设计》这本书中列举除了代码常见的一些坏味道（比如重复代码、过长函数）和重构手段（如提炼函数、提炼变量、提炼类）。我们应该花时间去学习这些重构相关的理论知识，并在代码中去实践这些重构理论。"}]},{"ID":"20240201213731-88wga0f","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240201213731-88wga0f","updated":"20240201213731"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"如何练习重构？"}]},{"ID":"20240201213732-jm09xqf","Type":"NodeParagraph","Properties":{"id":"20240201213732-jm09xqf","updated":"20240201213732"},"Children":[{"Type":"NodeText","Data":"除了可以在重构项目代码的过程中练习精进重构之外，你还可以有下面这些手段："}]},{"ID":"20240201213733-88da6ys","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213733-88da6ys","updated":"20240201213733"},"Children":[{"ID":"20240201213734-6yzjnj8","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213734-6yzjnj8","updated":"20240201213734"},"Children":[{"ID":"20240201213735-jshe6sr","Type":"NodeParagraph","Properties":{"id":"20240201213735-jshe6sr","updated":"20240201213735"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://linesh.gitbook.io/refactoring/","TextMarkTextContent":"重构实战练习"},{"Type":"NodeText","Data":"：通过几个小案例一步一步带你学习重构！"}]}]},{"ID":"20240201213736-7tyblyx","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213736-7tyblyx","updated":"20240201213736"},"Children":[{"ID":"20240201213737-vbo262r","Type":"NodeParagraph","Properties":{"id":"20240201213737-vbo262r","updated":"20240201213737"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://refactoringguru.cn/","TextMarkTextContent":"设计模式+重构学习网站"},{"Type":"NodeText","Data":"：免费在线学习代码重构、 设计模式、 SOLID 原则 （单一职责、 开闭原则、 里氏替换、 接口隔离以及依赖反转） 。"}]}]},{"ID":"20240201213738-v6pojtr","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213738-v6pojtr","updated":"20240201213738"},"Children":[{"ID":"20240201213739-qbhhvz2","Type":"NodeParagraph","Properties":{"id":"20240201213739-qbhhvz2","updated":"20240201213739"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://www.jetbrains.com/help/idea/refactoring-source-code.html#popular-refactorings","TextMarkTextContent":"IDEA 官方文档的代码重构教程"},{"Type":"NodeText","Data":"：教你如何使用 IDEA 进行重构。"}]}]}]},{"ID":"20240201213740-7hkfdyt","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240201213740-7hkfdyt","updated":"20240201213740"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"参考"}]},{"ID":"20240201213741-1l5f4ao","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213741-1l5f4ao","updated":"20240201213741"},"Children":[{"ID":"20240201213742-u2xdqrg","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213742-u2xdqrg","updated":"20240201213742"},"Children":[{"ID":"20240201213743-p85mdb7","Type":"NodeParagraph","Properties":{"id":"20240201213743-p85mdb7","updated":"20240201213743"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://insights.thoughtworks.cn/reread-refactoring/","TextMarkTextContent":"再读《重构》- ThoughtWorks 洞见 - 2020"},{"Type":"NodeText","Data":"：详细介绍了重构的要点比如小步重构、捡垃圾式的重构，主要是重构概念相关的介绍。"}]}]},{"ID":"20240201213744-16asder","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213744-16asder","updated":"20240201213744"},"Children":[{"ID":"20240201213745-8nkcjxe","Type":"NodeParagraph","Properties":{"id":"20240201213745-8nkcjxe","updated":"20240201213745"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://juejin.cn/post/6954378167947624484","TextMarkTextContent":"常见代码重构技巧 - VectorJin - 2021"},{"Type":"NodeText","Data":"：从软件设计原则、设计模式、代码分层、命名规范等角度介绍了如何进行重构，比较偏实战。"}]}]}]},{"ID":"20240201213746-quwuzin","Type":"NodeHTMLBlock","Data":"\u003cdiv\u003e\n\u003c!-- @include: @article-footer.snippet.md --\u003e\n\u003c/div\u003e","HtmlBlockType":2,"Properties":{"id":"20240201213746-quwuzin","updated":"20240201213746"}}]}