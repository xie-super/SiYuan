{"ID":"20240201213730-caqwqur","Spec":"1","Type":"NodeDocument","Properties":{"id":"20240201213730-caqwqur","title":"sentive-words-filter","updated":"20240201213730"},"Children":[{"ID":"20240201213731-inkw6uz","Type":"NodeThematicBreak","Properties":{"id":"20240201213731-inkw6uz","updated":"20240201213731"}},{"ID":"20240201213732-0xg8hzu","Type":"NodeParagraph","Properties":{"id":"20240201213732-0xg8hzu","updated":"20240201213732"},"Children":[{"Type":"NodeText","Data":"title: 敏感词过滤方案总结"},{"Type":"NodeSoftBreak","Data":"\n","Properties":{"id":""}},{"Type":"NodeText","Data":"category: 系统设计"},{"Type":"NodeSoftBreak","Data":"\n","Properties":{"id":""}},{"Type":"NodeText","Data":"tag:"}]},{"ID":"20240201213733-u331ghm","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"MarkerOffset":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213733-u331ghm","updated":"20240201213733"},"Children":[{"ID":"20240201213734-fqtbn4x","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"MarkerOffset":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213734-fqtbn4x","updated":"20240201213734"},"Children":[{"ID":"20240201213735-hy7azvj","Type":"NodeParagraph","Properties":{"id":"20240201213735-hy7azvj","updated":"20240201213735"},"Children":[{"Type":"NodeText","Data":"安全"}]}]}]},{"ID":"20240201213736-5vg7cjn","Type":"NodeThematicBreak","Properties":{"id":"20240201213736-5vg7cjn","updated":"20240201213736"}},{"ID":"20240201213737-jvlfxy4","Type":"NodeParagraph","Properties":{"id":"20240201213737-jvlfxy4","updated":"20240201213737"},"Children":[{"Type":"NodeText","Data":"系统需要对用户输入的文本进行敏感词过滤如色情、政治、暴力相关的词汇。"}]},{"ID":"20240201213738-9xf1paq","Type":"NodeParagraph","Properties":{"id":"20240201213738-9xf1paq","updated":"20240201213738"},"Children":[{"Type":"NodeText","Data":"敏感词过滤用的使用比较多的 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"Trie 树算法"},{"Type":"NodeText","Data":" 和 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"DFA 算法"},{"Type":"NodeText","Data":"。"}]},{"ID":"20240201213739-ed0olf0","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240201213739-ed0olf0","updated":"20240201213739"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"算法实现"}]},{"ID":"20240201213740-eyv2j7v","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240201213740-eyv2j7v","updated":"20240201213740"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"Trie 树"}]},{"ID":"20240201213741-mkkjch6","Type":"NodeParagraph","Properties":{"id":"20240201213741-mkkjch6","updated":"20240201213741"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"Trie 树"},{"Type":"NodeText","Data":" 也称为字典树、单词查找树，哈系树的一种变种，通常被用于字符串匹配，用来解决在一组字符串集合中快速查找某个字符串的问题。像浏览器搜索的关键词提示就可以基于 Trie 树来做的。"}]},{"ID":"20240201213742-jsyo79u","Type":"NodeParagraph","Properties":{"id":"20240201213742-jsyo79u","updated":"20240201213742"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"浏览器 Trie 树效果展示","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"https://oss.javaguide.cn/github/javaguide/system-design/security/brower-trie.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201213743-garjvix","Type":"NodeParagraph","Properties":{"id":"20240201213743-garjvix","updated":"20240201213743"},"Children":[{"Type":"NodeText","Data":"假如我们的敏感词库中有以下敏感词："}]},{"ID":"20240201213744-7kiyntz","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213744-7kiyntz","updated":"20240201213744"},"Children":[{"ID":"20240201213745-43ppvhy","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213745-43ppvhy","updated":"20240201213745"},"Children":[{"ID":"20240201213746-1x5f77t","Type":"NodeParagraph","Properties":{"id":"20240201213746-1x5f77t","updated":"20240201213746"},"Children":[{"Type":"NodeText","Data":"高清视频"}]}]},{"ID":"20240201213747-larcych","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213747-larcych","updated":"20240201213747"},"Children":[{"ID":"20240201213748-1631m0f","Type":"NodeParagraph","Properties":{"id":"20240201213748-1631m0f","updated":"20240201213748"},"Children":[{"Type":"NodeText","Data":"高清 CV"}]}]},{"ID":"20240201213749-226kq5u","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213749-226kq5u","updated":"20240201213749"},"Children":[{"ID":"20240201213750-e5ra0tn","Type":"NodeParagraph","Properties":{"id":"20240201213750-e5ra0tn","updated":"20240201213750"},"Children":[{"Type":"NodeText","Data":"东京冷"}]}]},{"ID":"20240201213751-srb4dq7","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213751-srb4dq7","updated":"20240201213751"},"Children":[{"ID":"20240201213752-iybcdkv","Type":"NodeParagraph","Properties":{"id":"20240201213752-iybcdkv","updated":"20240201213752"},"Children":[{"Type":"NodeText","Data":"东京热"}]}]}]},{"ID":"20240201213753-e863m2g","Type":"NodeParagraph","Properties":{"id":"20240201213753-e863m2g","updated":"20240201213753"},"Children":[{"Type":"NodeText","Data":"我们构造出来的敏感词 Trie 树就是下面这样的："}]},{"ID":"20240201213754-vyqhpq3","Type":"NodeParagraph","Properties":{"id":"20240201213754-vyqhpq3","updated":"20240201213754"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"敏感词 Trie 树","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"https://oss.javaguide.cn/github/javaguide/system-design/security/sensitive-word-trie.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201213755-jeuc48t","Type":"NodeParagraph","Properties":{"id":"20240201213755-jeuc48t","updated":"20240201213755"},"Children":[{"Type":"NodeText","Data":"当我们要查找对应的字符串“东京热”的话，我们会把这个字符串切割成单个的字符“东”、“京”、“热”，然后我们从 Trie 树的根节点开始匹配。"}]},{"ID":"20240201213756-al62wh9","Type":"NodeParagraph","Properties":{"id":"20240201213756-al62wh9","updated":"20240201213756"},"Children":[{"Type":"NodeText","Data":"可以看出， "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"Trie 树的核心原理其实很简单，就是通过公共前缀来提高字符串匹配效率。"}]},{"ID":"20240201213757-s3f4hva","Type":"NodeParagraph","Properties":{"id":"20240201213757-s3f4hva","updated":"20240201213757"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://mvnrepository.com/artifact/org.apache.commons/commons-collections4","TextMarkTextContent":"Apache Commons Collections"},{"Type":"NodeText","Data":" 这个库中就有 Trie 树实现："}]},{"ID":"20240201213758-icsqzzo","Type":"NodeParagraph","Properties":{"id":"20240201213758-icsqzzo","updated":"20240201213758"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"Apache Commons Collections 中的 Trie 树实现","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"https://oss.javaguide.cn/github/javaguide/system-design/security/common-collections-trie.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201213759-4mizds2","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20240201213759-4mizds2","updated":"20240201213759"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"Trie\u003cString, String\u003e trie = new PatriciaTrie\u003c\u003e();\ntrie.put(\"Abigail\", \"student\");\ntrie.put(\"Abi\", \"doctor\");\ntrie.put(\"Annabel\", \"teacher\");\ntrie.put(\"Christina\", \"student\");\ntrie.put(\"Chris\", \"doctor\");\nAssertions.assertTrue(trie.containsKey(\"Abigail\"));\nassertEquals(\"{Abi=doctor, Abigail=student}\", trie.prefixMap(\"Abi\").toString());\nassertEquals(\"{Chris=doctor, Christina=student}\", trie.prefixMap(\"Chr\").toString());\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20240201213760-ja049s0","Type":"NodeParagraph","Properties":{"id":"20240201213760-ja049s0","updated":"20240201213760"},"Children":[{"Type":"NodeText","Data":"Trie 树是一种利用空间换时间的数据结构，占用的内存会比较大。也正是因为这个原因，实际工程项目中都是使用的改进版 Trie 树例如双数组 Trie 树（Double-Array Trie，DAT）。"}]},{"ID":"20240201213761-8jz5skk","Type":"NodeParagraph","Properties":{"id":"20240201213761-8jz5skk","updated":"20240201213761"},"Children":[{"Type":"NodeText","Data":"DAT 的设计者是日本的 Aoe Jun-ichi，Mori Akira 和 Sato Takuya，他们在 1989 年发表了一篇论文"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://www.co-ding.com/assets/pdf/dat.pdf","TextMarkTextContent":"《An Efficient Implementation of Trie Structures》"},{"Type":"NodeText","Data":"，详细介绍了 DAT 的构造和应用，原作者写的示例代码地址："},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/komiya-atsushi/darts-java/blob/e2986a55e648296cc0a6244ae4a2e457cd89fb82/src/main/java/darts/DoubleArrayTrie.java","TextMarkTextContent":"https://github.com/komiya-atsushi/darts-java/blob/e2986a55e648296cc0a6244ae4a2e457cd89fb82/src/main/java/darts/DoubleArrayTrie.java"},{"Type":"NodeText","Data":"。相比较于 Trie 树，DAT 的内存占用极低，可以达到 Trie 树内存的 1%左右。DAT 在中文分词、自然语言处理、信息检索等领域有广泛的应用，是一种非常优秀的数据结构。"}]},{"ID":"20240201213762-n9bg9ba","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240201213762-n9bg9ba","updated":"20240201213762"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"AC 自动机"}]},{"ID":"20240201213763-pmbctih","Type":"NodeParagraph","Properties":{"id":"20240201213763-pmbctih","updated":"20240201213763"},"Children":[{"Type":"NodeText","Data":"Aho-Corasick（AC）自动机是一种建立在 Trie 树上的一种改进算法，是一种多模式匹配算法，由贝尔实验室的研究人员 Alfred V. Aho 和 Margaret J.Corasick 发明。"}]},{"ID":"20240201213764-47e01r5","Type":"NodeParagraph","Properties":{"id":"20240201213764-47e01r5","updated":"20240201213764"},"Children":[{"Type":"NodeText","Data":"AC 自动机算法使用 Trie 树来存放模式串的前缀，通过失败匹配指针（失配指针）来处理匹配失败的跳转。关于 AC 自动机的详细介绍，可以查看这篇文章："},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://zhuanlan.zhihu.com/p/146369212","TextMarkTextContent":"地铁十分钟 | AC 自动机"},{"Type":"NodeText","Data":"。"}]},{"ID":"20240201213765-n1wl12a","Type":"NodeParagraph","Properties":{"id":"20240201213765-n1wl12a","updated":"20240201213765"},"Children":[{"Type":"NodeText","Data":"如果使用上面提到的 DAT 来表示 AC 自动机 ，就可以兼顾两者的优点，得到一种高效的多模式匹配算法。Github 上已经有了开源 Java 实现版本："},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/hankcs/AhoCorasickDoubleArrayTrie","TextMarkTextContent":"https://github.com/hankcs/AhoCorasickDoubleArrayTrie"},{"Type":"NodeText","Data":" 。"}]},{"ID":"20240201213766-0f6dip3","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240201213766-0f6dip3","updated":"20240201213766"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"DFA"}]},{"ID":"20240201213767-9wzt4z5","Type":"NodeParagraph","Properties":{"id":"20240201213767-9wzt4z5","updated":"20240201213767"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"DFA"},{"Type":"NodeText","Data":"（Deterministic Finite Automata)即确定有穷自动机，与之对应的是 NFA（Non-Deterministic Finite Automata，不确定有穷自动机)。"}]},{"ID":"20240201213768-u8fs4zt","Type":"NodeParagraph","Properties":{"id":"20240201213768-u8fs4zt","updated":"20240201213768"},"Children":[{"Type":"NodeText","Data":"关于 DFA 的详细介绍可以看这篇文章："},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://zhuanlan.zhihu.com/p/30009083","TextMarkTextContent":"有穷自动机 DFA\u0026amp;NFA (学习笔记) - 小蜗牛的文章 - 知乎"},{"Type":"NodeText","Data":" 。"}]},{"ID":"20240201213769-v3ua63u","Type":"NodeParagraph","Properties":{"id":"20240201213769-v3ua63u","updated":"20240201213769"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://hutool.cn/docs/#/dfa/%E6%A6%82%E8%BF%B0","TextMarkTextContent":"Hutool"},{"Type":"NodeText","Data":" 提供了 DFA 算法的实现："}]},{"ID":"20240201213770-i41nj3c","Type":"NodeParagraph","Properties":{"id":"20240201213770-i41nj3c","updated":"20240201213770"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"Hutool 的 DFA 算法","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"https://oss.javaguide.cn/github/javaguide/system-design/security/hutool-dfa.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201213771-8064z5p","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20240201213771-8064z5p","updated":"20240201213771"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"WordTree wordTree = new WordTree();\nwordTree.addWord(\"大\");\nwordTree.addWord(\"大憨憨\");\nwordTree.addWord(\"憨憨\");\nString text = \"那人真是个大憨憨！\";\n// 获得第一个匹配的关键字\nString matchStr = wordTree.match(text);\nSystem.out.println(matchStr);\n// 标准匹配，匹配到最短关键词，并跳过已经匹配的关键词\nList\u003cString\u003e matchStrList = wordTree.matchAll(text, -1, false, false);\nSystem.out.println(matchStrList);\n//匹配到最长关键词，跳过已经匹配的关键词\nList\u003cString\u003e matchStrList2 = wordTree.matchAll(text, -1, false, true);\nSystem.out.println(matchStrList2);\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20240201213772-sovr4o7","Type":"NodeParagraph","Properties":{"id":"20240201213772-sovr4o7","updated":"20240201213772"},"Children":[{"Type":"NodeText","Data":"输出："}]},{"ID":"20240201213773-jicdphm","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"cGxhaW4=","CodeBlockCloseFence":"YGBg","Properties":{"id":"20240201213773-jicdphm","updated":"20240201213773"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"cGxhaW4=","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"大\n[大, 憨憨]\n[大, 大憨憨]\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20240201213774-fqgs1fk","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240201213774-fqgs1fk","updated":"20240201213774"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"开源项目"}]},{"ID":"20240201213775-fn2adbq","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213775-fn2adbq","updated":"20240201213775"},"Children":[{"ID":"20240201213776-lwwk820","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213776-lwwk820","updated":"20240201213776"},"Children":[{"ID":"20240201213777-opsieu7","Type":"NodeParagraph","Properties":{"id":"20240201213777-opsieu7","updated":"20240201213777"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/toolgood/ToolGood.Words","TextMarkTextContent":"ToolGood.Words"},{"Type":"NodeText","Data":"：一款高性能敏感词(非法词/脏字)检测过滤组件，附带繁体简体互换，支持全角半角互换，汉字转拼音，模糊搜索等功能。"}]}]},{"ID":"20240201213778-c744vea","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213778-c744vea","updated":"20240201213778"},"Children":[{"ID":"20240201213779-c2tecx7","Type":"NodeParagraph","Properties":{"id":"20240201213779-c2tecx7","updated":"20240201213779"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/hooj0/sensitive-words-filter","TextMarkTextContent":"sensitive-words-filter"},{"Type":"NodeText","Data":"：敏感词过滤项目，提供 TTMP、DFA、DAT、hash bucket、Tire 算法支持过滤。可以支持文本的高亮、过滤、判词、替换的接口支持。"}]}]}]},{"ID":"20240201213780-6ioc9px","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240201213780-6ioc9px","updated":"20240201213780"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"论文"}]},{"ID":"20240201213781-jt83k6k","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213781-jt83k6k","updated":"20240201213781"},"Children":[{"ID":"20240201213782-jei7sru","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213782-jei7sru","updated":"20240201213782"},"Children":[{"ID":"20240201213783-nrewsfz","Type":"NodeParagraph","Properties":{"id":"20240201213783-nrewsfz","updated":"20240201213783"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://patents.google.com/patent/CN101964000B","TextMarkTextContent":"一种敏感词自动过滤管理系统"}]}]},{"ID":"20240201213784-miinjkp","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213784-miinjkp","updated":"20240201213784"},"Children":[{"ID":"20240201213785-yzf7v7o","Type":"NodeParagraph","Properties":{"id":"20240201213785-yzf7v7o","updated":"20240201213785"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://patents.google.com/patent/CN103714160A/zh","TextMarkTextContent":"一种网络游戏中敏感词过滤方法及系统"}]}]}]},{"ID":"20240201213786-g19xf0p","Type":"NodeHTMLBlock","Data":"\u003cdiv\u003e\n\u003c!-- @include: @article-footer.snippet.md --\u003e\n\u003c/div\u003e","HtmlBlockType":2,"Properties":{"id":"20240201213786-g19xf0p","updated":"20240201213786"}}]}