{"ID":"20240201213458-3r7dwvo","Spec":"1","Type":"NodeDocument","Properties":{"id":"20240201213458-3r7dwvo","title":"J2EE基础知识","updated":"20240201213458"},"Children":[{"ID":"20240201213459-qyx36m5","Type":"NodeHeading","HeadingLevel":1,"Properties":{"id":"20240201213459-qyx36m5","updated":"20240201213459"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"# ","Properties":{"id":""}},{"Type":"NodeText","Data":"Servlet 总结"}]},{"ID":"20240201213460-ewbjprl","Type":"NodeParagraph","Properties":{"id":"20240201213460-ewbjprl","updated":"20240201213460"},"Children":[{"Type":"NodeText","Data":"在 Java Web 程序中，"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"Servlet"},{"Type":"NodeText","Data":"主要负责接收用户请求 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"HttpServletRequest"},{"Type":"NodeText","Data":",在"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"doGet()"},{"Type":"NodeText","Data":","},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"doPost()"},{"Type":"NodeText","Data":"中做相应的处理，并将回应"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"HttpServletResponse"},{"Type":"NodeText","Data":"反馈给用户。"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"Servlet"},{"Type":"NodeText","Data":" 可以设置初始化参数，供 Servlet 内部使用。一个 Servlet 类只会有一个实例，在它初始化时调用"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"init()"},{"Type":"NodeText","Data":"方法，销毁时调用"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"destroy()"},{"Type":"NodeText","Data":"方法"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"。"},{"Type":"NodeText","Data":"Servlet 需要在 web.xml 中配置（MyEclipse 中创建 Servlet 会自动配置），"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"一个 Servlet 可以设置多个 URL 访问"},{"Type":"NodeText","Data":"。"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"Servlet 不是线程安全"},{"Type":"NodeText","Data":"，因此要谨慎使用类变量。"}]},{"ID":"20240201213461-gecz9oe","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240201213461-gecz9oe","updated":"20240201213461"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"阐述 Servlet 和 CGI 的区别?"}]},{"ID":"20240201213462-7eouoy2","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240201213462-7eouoy2","updated":"20240201213462"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"CGI 的不足之处"}]},{"ID":"20240201213463-piq45jo","Type":"NodeParagraph","Properties":{"id":"20240201213463-piq45jo","updated":"20240201213463"},"Children":[{"Type":"NodeText","Data":"1，需要为每个请求启动一个操作 CGI 程序的系统进程。如果请求频繁，这将会带来很大的开销。"}]},{"ID":"20240201213464-lesg41v","Type":"NodeParagraph","Properties":{"id":"20240201213464-lesg41v","updated":"20240201213464"},"Children":[{"Type":"NodeText","Data":"2，需要为每个请求加载和运行一个 CGI 程序，这将带来很大的开销"}]},{"ID":"20240201213465-x4moh4l","Type":"NodeParagraph","Properties":{"id":"20240201213465-x4moh4l","updated":"20240201213465"},"Children":[{"Type":"NodeText","Data":"3，需要重复编写处理网络协议的代码以及编码，这些工作都是非常耗时的。"}]},{"ID":"20240201213466-duv0vtp","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240201213466-duv0vtp","updated":"20240201213466"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"Servlet 的优点"}]},{"ID":"20240201213467-h503su8","Type":"NodeParagraph","Properties":{"id":"20240201213467-h503su8","updated":"20240201213467"},"Children":[{"Type":"NodeText","Data":"1，只需要启动一个操作系统进程以及加载一个 JVM，大大降低了系统的开销"}]},{"ID":"20240201213468-xmq5x0n","Type":"NodeParagraph","Properties":{"id":"20240201213468-xmq5x0n","updated":"20240201213468"},"Children":[{"Type":"NodeText","Data":"2，如果多个请求需要做同样处理的时候，这时候只需要加载一个类，这也大大降低了开销"}]},{"ID":"20240201213469-x2cfha4","Type":"NodeParagraph","Properties":{"id":"20240201213469-x2cfha4","updated":"20240201213469"},"Children":[{"Type":"NodeText","Data":"3，所有动态加载的类可以实现对网络协议以及请求解码的共享，大大降低了工作量。"}]},{"ID":"20240201213470-lkwxprf","Type":"NodeParagraph","Properties":{"id":"20240201213470-lkwxprf","updated":"20240201213470"},"Children":[{"Type":"NodeText","Data":"4，Servlet 能直接和 Web 服务器交互，而普通的 CGI 程序不能。Servlet 还能在各个程序之间共享数据，使数据库连接池之类的功能很容易实现。"}]},{"ID":"20240201213471-2nu8xbp","Type":"NodeParagraph","Properties":{"id":"20240201213471-2nu8xbp","updated":"20240201213471"},"Children":[{"Type":"NodeText","Data":"补充：Sun Microsystems 公司在 1996 年发布 Servlet 技术就是为了和 CGI 进行竞争，Servlet 是一个特殊的 Java 程序，一个基于 Java 的 Web 应用通常包含一个或多个 Servlet 类。Servlet 不能够自行创建并执行，它是在 Servlet 容器中运行的，容器将用户的请求传递给 Servlet 程序，并将 Servlet 的响应回传给用户。通常一个 Servlet 会关联一个或多个 JSP 页面。以前 CGI 经常因为性能开销上的问题被诟病，然而 Fast CGI 早就已经解决了 CGI 效率上的问题，所以面试的时候大可不必信口开河的诟病 CGI，事实上有很多你熟悉的网站都使用了 CGI 技术。"}]},{"ID":"20240201213472-r8hd2kp","Type":"NodeParagraph","Properties":{"id":"20240201213472-r8hd2kp","updated":"20240201213472"},"Children":[{"Type":"NodeText","Data":"参考：《javaweb 整合开发王者归来》P7"}]},{"ID":"20240201213473-9qgt2d1","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240201213473-9qgt2d1","updated":"20240201213473"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"Servlet 接口中有哪些方法及 Servlet 生命周期探秘"}]},{"ID":"20240201213474-ehw2vaa","Type":"NodeParagraph","Properties":{"id":"20240201213474-ehw2vaa","updated":"20240201213474"},"Children":[{"Type":"NodeText","Data":"Servlet 接口定义了 5 个方法，其中"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"前三个方法与 Servlet 生命周期相关"},{"Type":"NodeText","Data":"："}]},{"ID":"20240201213475-3uugucb","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213475-3uugucb","updated":"20240201213475"},"Children":[{"ID":"20240201213476-w7yzmea","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213476-w7yzmea","updated":"20240201213476"},"Children":[{"ID":"20240201213477-t2u39bv","Type":"NodeParagraph","Properties":{"id":"20240201213477-t2u39bv","updated":"20240201213477"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"void init(ServletConfig config) throws ServletException"}]}]},{"ID":"20240201213478-55jk5dx","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213478-55jk5dx","updated":"20240201213478"},"Children":[{"ID":"20240201213479-d4zvhik","Type":"NodeParagraph","Properties":{"id":"20240201213479-d4zvhik","updated":"20240201213479"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"void service(ServletRequest req, ServletResponse resp) throws ServletException, java.io.IOException"}]}]},{"ID":"20240201213480-8e97q80","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213480-8e97q80","updated":"20240201213480"},"Children":[{"ID":"20240201213481-38pwx0w","Type":"NodeParagraph","Properties":{"id":"20240201213481-38pwx0w","updated":"20240201213481"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"void destroy()"}]}]},{"ID":"20240201213482-5r4pxlu","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213482-5r4pxlu","updated":"20240201213482"},"Children":[{"ID":"20240201213483-ytlty83","Type":"NodeParagraph","Properties":{"id":"20240201213483-ytlty83","updated":"20240201213483"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"java.lang.String getServletInfo()"}]}]},{"ID":"20240201213484-zn9jdtj","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213484-zn9jdtj","updated":"20240201213484"},"Children":[{"ID":"20240201213485-9v6aaa8","Type":"NodeParagraph","Properties":{"id":"20240201213485-9v6aaa8","updated":"20240201213485"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"ServletConfig getServletConfig()"}]}]}]},{"ID":"20240201213486-pp4akfp","Type":"NodeParagraph","Properties":{"id":"20240201213486-pp4akfp","updated":"20240201213486"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"生命周期："},{"Type":"NodeText","Data":" "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"Web 容器加载 Servlet 并将其实例化后，Servlet 生命周期开始"},{"Type":"NodeText","Data":"，容器运行其"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"init()方法"},{"Type":"NodeText","Data":"进行 Servlet 的初始化；请求到达时调用 Servlet 的"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"service()方法"},{"Type":"NodeText","Data":"，service()方法会根据需要调用与请求对应的"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"doGet 或 doPost"},{"Type":"NodeText","Data":"等方法；当服务器关闭或项目被卸载时服务器会将 Servlet 实例销毁，此时会调用 Servlet 的"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"destroy()方法"},{"Type":"NodeText","Data":"。"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"init 方法和 destroy 方法只会执行一次，service 方法客户端每次请求 Servlet 都会执行"},{"Type":"NodeText","Data":"。Servlet 中有时会用到一些需要初始化与销毁的资源，因此可以把初始化资源的代码放入 init 方法中，销毁资源的代码放入 destroy 方法中，这样就不需要每次处理客户端的请求都要初始化与销毁资源。"}]},{"ID":"20240201213487-w241cgd","Type":"NodeParagraph","Properties":{"id":"20240201213487-w241cgd","updated":"20240201213487"},"Children":[{"Type":"NodeText","Data":"参考：《javaweb 整合开发王者归来》P81"}]},{"ID":"20240201213488-i2aoc8d","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240201213488-i2aoc8d","updated":"20240201213488"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"GET 和 POST 的区别"}]},{"ID":"20240201213489-efiqh6h","Type":"NodeParagraph","Properties":{"id":"20240201213489-efiqh6h","updated":"20240201213489"},"Children":[{"Type":"NodeText","Data":"这个问题在知乎上被讨论的挺火热的，地址："},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://www.zhihu.com/question/28586791","TextMarkTextContent":"https://www.zhihu.com/question/28586791"},{"Type":"NodeText","Data":" 。"}]},{"ID":"20240201213490-f6w5ut9","Type":"NodeParagraph","Properties":{"id":"20240201213490-f6w5ut9","updated":"20240201213490"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"https://static001.geekbang.org/infoq/04/0454a5fff1437c32754f1dfcc3881148.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201213491-21msl4n","Type":"NodeParagraph","Properties":{"id":"20240201213491-21msl4n","updated":"20240201213491"},"Children":[{"Type":"NodeText","Data":"GET 和 POST 是 HTTP 协议中两种常用的请求方法，它们在不同的场景和目的下有不同的特点和用法。一般来说，可以从以下几个方面来区分它们："}]},{"ID":"20240201213492-rup0zub","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213492-rup0zub","updated":"20240201213492"},"Children":[{"ID":"20240201213493-77twrrx","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213493-77twrrx","updated":"20240201213493"},"Children":[{"ID":"20240201213494-0q3miwh","Type":"NodeParagraph","Properties":{"id":"20240201213494-0q3miwh","updated":"20240201213494"},"Children":[{"Type":"NodeText","Data":"语义上的区别：GET 通常用于获取或查询资源，而 POST 通常用于创建或修改资源。GET 请求应该是幂等的，即多次重复执行不会改变资源的状态，而 POST 请求则可能有副作用，即每次执行可能会产生不同的结果或影响资源的状态。"}]}]},{"ID":"20240201213495-enkd2y9","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213495-enkd2y9","updated":"20240201213495"},"Children":[{"ID":"20240201213496-coq2gsz","Type":"NodeParagraph","Properties":{"id":"20240201213496-coq2gsz","updated":"20240201213496"},"Children":[{"Type":"NodeText","Data":"格式上的区别：GET 请求的参数通常放在 URL 中，形成查询字符串（querystring），而 POST 请求的参数通常放在请求体（body）中，可以有多种编码格式，如 application/x-www-form-urlencoded、multipart/form-data、application/json 等。GET 请求的 URL 长度受到浏览器和服务器的限制，而 POST 请求的 body 大小则没有明确的限制。"}]}]},{"ID":"20240201213497-1c2uo3p","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213497-1c2uo3p","updated":"20240201213497"},"Children":[{"ID":"20240201213498-nvfy09d","Type":"NodeParagraph","Properties":{"id":"20240201213498-nvfy09d","updated":"20240201213498"},"Children":[{"Type":"NodeText","Data":"缓存上的区别：由于 GET 请求是幂等的，它可以被浏览器或其他中间节点（如代理、网关）缓存起来，以提高性能和效率。而 POST 请求则不适合被缓存，因为它可能有副作用，每次执行可能需要实时的响应。"}]}]},{"ID":"20240201213499-sco0lxn","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213499-sco0lxn","updated":"20240201213499"},"Children":[{"ID":"20240201213500-tsd7f0p","Type":"NodeParagraph","Properties":{"id":"20240201213500-tsd7f0p","updated":"20240201213500"},"Children":[{"Type":"NodeText","Data":"安全性上的区别：GET 请求和 POST 请求都不是绝对安全的，因为 HTTP 协议本身是明文传输的，无论是 URL、header 还是 body 都可能被窃取或篡改。为了保证安全性，必须使用 HTTPS 协议来加密传输数据。不过，在一些场景下，GET 请求相比 POST 请求更容易泄露敏感数据，因为 GET 请求的参数会出现在 URL 中，而 URL 可能会被记录在浏览器历史、服务器日志、代理日志等地方。因此，一般情况下，私密数据传输应该使用 POST + body。"}]}]}]},{"ID":"20240201213501-0nh3chh","Type":"NodeParagraph","Properties":{"id":"20240201213501-0nh3chh","updated":"20240201213501"},"Children":[{"Type":"NodeText","Data":"重点搞清了，两者在语义上的区别即可。不过，也有一些项目所有的请求都用 POST，这个并不是固定的，项目组达成共识即可。"}]},{"ID":"20240201213502-b1vtdki","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240201213502-b1vtdki","updated":"20240201213502"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"什么情况下调用 doGet()和 doPost()"}]},{"ID":"20240201213503-gnosh4v","Type":"NodeParagraph","Properties":{"id":"20240201213503-gnosh4v","updated":"20240201213503"},"Children":[{"Type":"NodeText","Data":"Form 标签里的 method 的属性为 get 时调用 doGet()，为 post 时调用 doPost()。"}]},{"ID":"20240201213504-84il47a","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240201213504-84il47a","updated":"20240201213504"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"转发(Forward)和重定向(Redirect)的区别"}]},{"ID":"20240201213505-o5cn5q1","Type":"NodeParagraph","Properties":{"id":"20240201213505-o5cn5q1","updated":"20240201213505"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"转发是服务器行为，重定向是客户端行为。"}]},{"ID":"20240201213506-gazivnq","Type":"NodeParagraph","Properties":{"id":"20240201213506-gazivnq","updated":"20240201213506"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"转发（Forward）"},{"Type":"NodeSoftBreak","Data":"\n","Properties":{"id":""}},{"Type":"NodeText","Data":"通过 RequestDispatcher 对象的 forward（HttpServletRequest request,HttpServletResponse response）方法实现的。RequestDispatcher 可以通过 HttpServletRequest 的 getRequestDispatcher()方法获得。例如下面的代码就是跳转到 login_success.jsp 页面。"}]},{"ID":"20240201213507-phri30w","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20240201213507-phri30w","updated":"20240201213507"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"     request.getRequestDispatcher(\"login_success.jsp\").forward(request, response);\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20240201213508-rtqaywu","Type":"NodeParagraph","Properties":{"id":"20240201213508-rtqaywu","updated":"20240201213508"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"重定向（Redirect）"},{"Type":"NodeText","Data":" 是利用服务器返回的状态码来实现的。客户端浏览器请求服务器的时候，服务器会返回一个状态码。服务器通过 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"HttpServletResponse"},{"Type":"NodeText","Data":" 的 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"setStatus(int status)"},{"Type":"NodeText","Data":" 方法设置状态码。如果服务器返回 301 或者 302，则浏览器会到新的网址重新请求该资源。"}]},{"ID":"20240201213509-76npplr","Type":"NodeList","ListData":{"Typ":1,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20240201213509-76npplr","updated":"20240201213509"},"Children":[{"ID":"20240201213510-i0fi6gv","Type":"NodeListItem","Data":"1","ListData":{"Typ":1,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20240201213510-i0fi6gv","updated":"20240201213510"},"Children":[{"ID":"20240201213511-9b4sobe","Type":"NodeParagraph","Properties":{"id":"20240201213511-9b4sobe","updated":"20240201213511"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"从地址栏显示来说"}]},{"ID":"20240201213512-y66e50c","Type":"NodeParagraph","Properties":{"id":"20240201213512-y66e50c","updated":"20240201213512"},"Children":[{"Type":"NodeText","Data":"forward 是服务器请求资源,服务器直接访问目标地址的 URL,把那个 URL 的响应内容读取过来,然后把这些内容再发给浏览器.浏览器根本不知道服务器发送的内容从哪里来的,所以它的地址栏还是原来的地址."},{"Type":"NodeSoftBreak","Data":"\n","Properties":{"id":""}},{"Type":"NodeText","Data":"redirect 是服务端根据逻辑,发送一个状态码,告诉浏览器重新去请求那个地址.所以地址栏显示的是新的 URL."}]}]},{"ID":"20240201213513-vyhhl1l","Type":"NodeListItem","Data":"2","ListData":{"Typ":1,"Tight":true,"Start":2,"Delimiter":46,"Padding":3,"Marker":"Mg==","Num":2},"Properties":{"id":"20240201213513-vyhhl1l","updated":"20240201213513"},"Children":[{"ID":"20240201213514-0ptfuj9","Type":"NodeParagraph","Properties":{"id":"20240201213514-0ptfuj9","updated":"20240201213514"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"从数据共享来说"}]},{"ID":"20240201213515-nmv1d7f","Type":"NodeParagraph","Properties":{"id":"20240201213515-nmv1d7f","updated":"20240201213515"},"Children":[{"Type":"NodeText","Data":"forward:转发页面和转发到的页面可以共享 request 里面的数据."},{"Type":"NodeSoftBreak","Data":"\n","Properties":{"id":""}},{"Type":"NodeText","Data":"redirect:不能共享数据."}]}]},{"ID":"20240201213516-x4rqkud","Type":"NodeListItem","Data":"3","ListData":{"Typ":1,"Tight":true,"Start":3,"Delimiter":46,"Padding":3,"Marker":"Mw==","Num":3},"Properties":{"id":"20240201213516-x4rqkud","updated":"20240201213516"},"Children":[{"ID":"20240201213517-5opdd7a","Type":"NodeParagraph","Properties":{"id":"20240201213517-5opdd7a","updated":"20240201213517"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"从运用地方来说"}]},{"ID":"20240201213518-dzn5kex","Type":"NodeParagraph","Properties":{"id":"20240201213518-dzn5kex","updated":"20240201213518"},"Children":[{"Type":"NodeText","Data":"forward:一般用于用户登陆的时候,根据角色转发到相应的模块."},{"Type":"NodeSoftBreak","Data":"\n","Properties":{"id":""}},{"Type":"NodeText","Data":"redirect:一般用于用户注销登陆时返回主页面和跳转到其它的网站等"}]}]},{"ID":"20240201213519-5r5lxcn","Type":"NodeListItem","Data":"4","ListData":{"Typ":1,"Tight":true,"Start":4,"Delimiter":46,"Padding":3,"Marker":"NA==","Num":4},"Properties":{"id":"20240201213519-5r5lxcn","updated":"20240201213519"},"Children":[{"ID":"20240201213520-yf11d4e","Type":"NodeParagraph","Properties":{"id":"20240201213520-yf11d4e","updated":"20240201213520"},"Children":[{"Type":"NodeText","Data":"从效率来说"}]},{"ID":"20240201213521-1k685z6","Type":"NodeParagraph","Properties":{"id":"20240201213521-1k685z6","updated":"20240201213521"},"Children":[{"Type":"NodeText","Data":"forward:高."},{"Type":"NodeSoftBreak","Data":"\n","Properties":{"id":""}},{"Type":"NodeText","Data":"redirect:低."}]}]}]},{"ID":"20240201213522-cvjdieh","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240201213522-cvjdieh","updated":"20240201213522"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"自动刷新(Refresh)"}]},{"ID":"20240201213523-u9getft","Type":"NodeParagraph","Properties":{"id":"20240201213523-u9getft","updated":"20240201213523"},"Children":[{"Type":"NodeText","Data":"自动刷新不仅可以实现一段时间之后自动跳转到另一个页面，还可以实现一段时间之后自动刷新本页面。Servlet 中通过 HttpServletResponse 对象设置 Header 属性实现自动刷新例如："}]},{"ID":"20240201213524-272qoxm","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20240201213524-272qoxm","updated":"20240201213524"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"Response.setHeader(\"Refresh\",\"5;URL=http://localhost:8080/servlet/example.htm\");\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20240201213525-pgqusz2","Type":"NodeParagraph","Properties":{"id":"20240201213525-pgqusz2","updated":"20240201213525"},"Children":[{"Type":"NodeText","Data":"其中 5 为时间，单位为秒。URL 指定就是要跳转的页面（如果设置自己的路径，就会实现每过 5 秒自动刷新本页面一次）"}]},{"ID":"20240201213526-dxsh4h0","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240201213526-dxsh4h0","updated":"20240201213526"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"Servlet 与线程安全"}]},{"ID":"20240201213527-fox3i7g","Type":"NodeParagraph","Properties":{"id":"20240201213527-fox3i7g","updated":"20240201213527"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"Servlet 不是线程安全的，多线程并发的读写会导致数据不同步的问题。"},{"Type":"NodeText","Data":" 解决的办法是尽量不要定义 name 属性，而是要把 name 变量分别定义在 doGet()和 doPost()方法内。虽然使用 synchronized(name){}语句块可以解决问题，但是会造成线程的等待，不是很科学的办法。"},{"Type":"NodeSoftBreak","Data":"\n","Properties":{"id":""}},{"Type":"NodeText","Data":"注意：多线程的并发的读写 Servlet 类属性会导致数据不同步。但是如果只是并发地读取属性而不写入，则不存在数据不同步的问题。因此 Servlet 里的只读属性最好定义为 final 类型的。"}]},{"ID":"20240201213528-bt8a4l0","Type":"NodeParagraph","Properties":{"id":"20240201213528-bt8a4l0","updated":"20240201213528"},"Children":[{"Type":"NodeText","Data":"参考：《javaweb 整合开发王者归来》P92"}]},{"ID":"20240201213529-aj4qdux","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240201213529-aj4qdux","updated":"20240201213529"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"JSP 和 Servlet 是什么关系"}]},{"ID":"20240201213530-bsf7htk","Type":"NodeParagraph","Properties":{"id":"20240201213530-bsf7htk","updated":"20240201213530"},"Children":[{"Type":"NodeText","Data":"其实这个问题在上面已经阐述过了，Servlet 是一个特殊的 Java 程序，它运行于服务器的 JVM 中，能够依靠服务器的支持向浏览器提供显示内容。JSP 本质上是 Servlet 的一种简易形式，JSP 会被服务器处理成一个类似于 Servlet 的 Java 程序，可以简化页面内容的生成。Servlet 和 JSP 最主要的不同点在于，Servlet 的应用逻辑是在 Java 文件中，并且完全从表示层中的 HTML 分离开来。而 JSP 的情况是 Java 和 HTML 可以组合成一个扩展名为.jsp 的文件。有人说，Servlet 就是在 Java 中写 HTML，而 JSP 就是在 HTML 中写 Java 代码，当然这个说法是很片面且不够准确的。JSP 侧重于视图，Servlet 更侧重于控制逻辑，在 MVC 架构模式中，JSP 适合充当视图（view）而 Servlet 适合充当控制器（controller）。"}]},{"ID":"20240201213531-4z0jvln","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240201213531-4z0jvln","updated":"20240201213531"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"JSP 工作原理"}]},{"ID":"20240201213532-twbt4v1","Type":"NodeParagraph","Properties":{"id":"20240201213532-twbt4v1","updated":"20240201213532"},"Children":[{"Type":"NodeText","Data":"JSP 是一种 Servlet，但是与 HttpServlet 的工作方式不太一样。HttpServlet 是先由源代码编译为 class 文件后部署到服务器下，为先编译后部署。而 JSP 则是先部署后编译。JSP 会在客户端第一次请求 JSP 文件时被编译为 HttpJspPage 类（接口 Servlet 的一个子类）。该类会被服务器临时存放在服务器工作目录里面。下面通过实例给大家介绍。"},{"Type":"NodeSoftBreak","Data":"\n","Properties":{"id":""}},{"Type":"NodeText","Data":"工程 JspLoginDemo 下有一个名为 login.jsp 的 Jsp 文件，把工程第一次部署到服务器上后访问这个 Jsp 文件，我们发现这个目录下多了下图这两个东东。"},{"Type":"NodeSoftBreak","Data":"\n","Properties":{"id":""}},{"Type":"NodeText","Data":".class 文件便是 JSP 对应的 Servlet。编译完毕后再运行 class 文件来响应客户端请求。以后客户端访问 login.jsp 的时候，Tomcat 将不再重新编译 JSP 文件，而是直接调用 class 文件来响应客户端请求。"}]},{"ID":"20240201213533-205rbro","Type":"NodeParagraph","Properties":{"id":"20240201213533-205rbro","updated":"20240201213533"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"JSP工作原理","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"https://oss.javaguide.cn/github/javaguide/1.jpeg","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201213534-1twkk7u","Type":"NodeParagraph","Properties":{"id":"20240201213534-1twkk7u","updated":"20240201213534"},"Children":[{"Type":"NodeText","Data":"由于 JSP 只会在客户端第一次请求的时候被编译 ，因此第一次请求 JSP 时会感觉比较慢，之后就会感觉快很多。如果把服务器保存的 class 文件删除，服务器也会重新编译 JSP。"}]},{"ID":"20240201213535-pyk0z1v","Type":"NodeParagraph","Properties":{"id":"20240201213535-pyk0z1v","updated":"20240201213535"},"Children":[{"Type":"NodeText","Data":"开发 Web 程序时经常需要修改 JSP。Tomcat 能够自动检测到 JSP 程序的改动。如果检测到 JSP 源代码发生了改动。Tomcat 会在下次客户端请求 JSP 时重新编译 JSP，而不需要重启 Tomcat。这种自动检测功能是默认开启的，检测改动会消耗少量的时间，在部署 Web 应用的时候可以在 web.xml 中将它关掉。"}]},{"ID":"20240201213536-5b5aljs","Type":"NodeParagraph","Properties":{"id":"20240201213536-5b5aljs","updated":"20240201213536"},"Children":[{"Type":"NodeText","Data":"参考：《javaweb 整合开发王者归来》P97"}]},{"ID":"20240201213537-tyagsp4","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240201213537-tyagsp4","updated":"20240201213537"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"JSP 有哪些内置对象、作用分别是什么"}]},{"ID":"20240201213538-yrru8a3","Type":"NodeParagraph","Properties":{"id":"20240201213538-yrru8a3","updated":"20240201213538"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"http://blog.csdn.net/qq_34337272/article/details/64310849","TextMarkTextContent":"JSP 内置对象 - CSDN 博客"}]},{"ID":"20240201213539-wnjp96d","Type":"NodeParagraph","Properties":{"id":"20240201213539-wnjp96d","updated":"20240201213539"},"Children":[{"Type":"NodeText","Data":"JSP 有 9 个内置对象："}]},{"ID":"20240201213540-6cydf2x","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213540-6cydf2x","updated":"20240201213540"},"Children":[{"ID":"20240201213541-6n83ryr","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213541-6n83ryr","updated":"20240201213541"},"Children":[{"ID":"20240201213542-8vumwbd","Type":"NodeParagraph","Properties":{"id":"20240201213542-8vumwbd","updated":"20240201213542"},"Children":[{"Type":"NodeText","Data":"request：封装客户端的请求，其中包含来自 GET 或 POST 请求的参数；"}]}]},{"ID":"20240201213543-kot2msw","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213543-kot2msw","updated":"20240201213543"},"Children":[{"ID":"20240201213544-8oenu0j","Type":"NodeParagraph","Properties":{"id":"20240201213544-8oenu0j","updated":"20240201213544"},"Children":[{"Type":"NodeText","Data":"response：封装服务器对客户端的响应；"}]}]},{"ID":"20240201213545-dtl3a4e","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213545-dtl3a4e","updated":"20240201213545"},"Children":[{"ID":"20240201213546-tq4aflz","Type":"NodeParagraph","Properties":{"id":"20240201213546-tq4aflz","updated":"20240201213546"},"Children":[{"Type":"NodeText","Data":"pageContext：通过该对象可以获取其他对象；"}]}]},{"ID":"20240201213547-935r92f","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213547-935r92f","updated":"20240201213547"},"Children":[{"ID":"20240201213548-qcnjujc","Type":"NodeParagraph","Properties":{"id":"20240201213548-qcnjujc","updated":"20240201213548"},"Children":[{"Type":"NodeText","Data":"session：封装用户会话的对象；"}]}]},{"ID":"20240201213549-wla7zck","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213549-wla7zck","updated":"20240201213549"},"Children":[{"ID":"20240201213550-p50223i","Type":"NodeParagraph","Properties":{"id":"20240201213550-p50223i","updated":"20240201213550"},"Children":[{"Type":"NodeText","Data":"application：封装服务器运行环境的对象；"}]}]},{"ID":"20240201213551-xt0m7nm","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213551-xt0m7nm","updated":"20240201213551"},"Children":[{"ID":"20240201213552-8t5rck5","Type":"NodeParagraph","Properties":{"id":"20240201213552-8t5rck5","updated":"20240201213552"},"Children":[{"Type":"NodeText","Data":"out：输出服务器响应的输出流对象；"}]}]},{"ID":"20240201213553-2gff9qk","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213553-2gff9qk","updated":"20240201213553"},"Children":[{"ID":"20240201213554-twdmcb7","Type":"NodeParagraph","Properties":{"id":"20240201213554-twdmcb7","updated":"20240201213554"},"Children":[{"Type":"NodeText","Data":"config：Web 应用的配置对象；"}]}]},{"ID":"20240201213555-u0vxdxl","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213555-u0vxdxl","updated":"20240201213555"},"Children":[{"ID":"20240201213556-8acu7jk","Type":"NodeParagraph","Properties":{"id":"20240201213556-8acu7jk","updated":"20240201213556"},"Children":[{"Type":"NodeText","Data":"page：JSP 页面本身（相当于 Java 程序中的 this）；"}]}]},{"ID":"20240201213557-0mi3q7q","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213557-0mi3q7q","updated":"20240201213557"},"Children":[{"ID":"20240201213558-5p8nc92","Type":"NodeParagraph","Properties":{"id":"20240201213558-5p8nc92","updated":"20240201213558"},"Children":[{"Type":"NodeText","Data":"exception：封装页面抛出异常的对象。"}]}]}]},{"ID":"20240201213559-6ztrt4b","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240201213559-6ztrt4b","updated":"20240201213559"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"Request 对象的主要方法有哪些"}]},{"ID":"20240201213560-o3fscju","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213560-o3fscju","updated":"20240201213560"},"Children":[{"ID":"20240201213561-eo5uj8h","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213561-eo5uj8h","updated":"20240201213561"},"Children":[{"ID":"20240201213562-fvgxbiq","Type":"NodeParagraph","Properties":{"id":"20240201213562-fvgxbiq","updated":"20240201213562"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"setAttribute(String name,Object)"},{"Type":"NodeText","Data":"：设置名字为 name 的 request 的参数值"}]}]},{"ID":"20240201213563-7xua5xu","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213563-7xua5xu","updated":"20240201213563"},"Children":[{"ID":"20240201213564-qp5vdae","Type":"NodeParagraph","Properties":{"id":"20240201213564-qp5vdae","updated":"20240201213564"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"getAttribute(String name)"},{"Type":"NodeText","Data":"：返回由 name 指定的属性值"}]}]},{"ID":"20240201213565-2oo171u","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213565-2oo171u","updated":"20240201213565"},"Children":[{"ID":"20240201213566-l94rt5l","Type":"NodeParagraph","Properties":{"id":"20240201213566-l94rt5l","updated":"20240201213566"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"getAttributeNames()"},{"Type":"NodeText","Data":"：返回 request 对象所有属性的名字集合，结果是一个枚举的实例"}]}]},{"ID":"20240201213567-rqppufy","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213567-rqppufy","updated":"20240201213567"},"Children":[{"ID":"20240201213568-pl8gz6e","Type":"NodeParagraph","Properties":{"id":"20240201213568-pl8gz6e","updated":"20240201213568"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"getCookies()"},{"Type":"NodeText","Data":"：返回客户端的所有 Cookie 对象，结果是一个 Cookie 数组"}]}]},{"ID":"20240201213569-6njyhy4","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213569-6njyhy4","updated":"20240201213569"},"Children":[{"ID":"20240201213570-gi4h5q0","Type":"NodeParagraph","Properties":{"id":"20240201213570-gi4h5q0","updated":"20240201213570"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"getCharacterEncoding()"},{"Type":"NodeText","Data":"：返回请求中的字符编码方式 = getContentLength()`：返回请求的 Body 的长度"}]}]},{"ID":"20240201213571-95vsub2","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213571-95vsub2","updated":"20240201213571"},"Children":[{"ID":"20240201213572-zgl7q63","Type":"NodeParagraph","Properties":{"id":"20240201213572-zgl7q63","updated":"20240201213572"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"getHeader(String name)"},{"Type":"NodeText","Data":"：获得 HTTP 协议定义的文件头信息"}]}]},{"ID":"20240201213573-va75ftm","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213573-va75ftm","updated":"20240201213573"},"Children":[{"ID":"20240201213574-z5362p3","Type":"NodeParagraph","Properties":{"id":"20240201213574-z5362p3","updated":"20240201213574"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"getHeaders(String name)"},{"Type":"NodeText","Data":"：返回指定名字的 request Header 的所有值，结果是一个枚举的实例"}]}]},{"ID":"20240201213575-6q7po3x","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213575-6q7po3x","updated":"20240201213575"},"Children":[{"ID":"20240201213576-2vydzag","Type":"NodeParagraph","Properties":{"id":"20240201213576-2vydzag","updated":"20240201213576"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"getHeaderNames()"},{"Type":"NodeText","Data":"：返回所以 request Header 的名字，结果是一个枚举的实例"}]}]},{"ID":"20240201213577-l2re7jb","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213577-l2re7jb","updated":"20240201213577"},"Children":[{"ID":"20240201213578-95bkn4d","Type":"NodeParagraph","Properties":{"id":"20240201213578-95bkn4d","updated":"20240201213578"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"getInputStream()"},{"Type":"NodeText","Data":"：返回请求的输入流，用于获得请求中的数据"}]}]},{"ID":"20240201213579-124dwgu","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213579-124dwgu","updated":"20240201213579"},"Children":[{"ID":"20240201213580-595kepn","Type":"NodeParagraph","Properties":{"id":"20240201213580-595kepn","updated":"20240201213580"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"getMethod()"},{"Type":"NodeText","Data":"：获得客户端向服务器端传送数据的方法"}]}]},{"ID":"20240201213581-h8jo3fr","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213581-h8jo3fr","updated":"20240201213581"},"Children":[{"ID":"20240201213582-as262vq","Type":"NodeParagraph","Properties":{"id":"20240201213582-as262vq","updated":"20240201213582"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"getParameter(String name)"},{"Type":"NodeText","Data":"：获得客户端传送给服务器端的有 name 指定的参数值"}]}]},{"ID":"20240201213583-4wl6js1","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213583-4wl6js1","updated":"20240201213583"},"Children":[{"ID":"20240201213584-lufd6xg","Type":"NodeParagraph","Properties":{"id":"20240201213584-lufd6xg","updated":"20240201213584"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"getParameterNames()"},{"Type":"NodeText","Data":"：获得客户端传送给服务器端的所有参数的名字，结果是一个枚举的实例"}]}]},{"ID":"20240201213585-yfuay31","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213585-yfuay31","updated":"20240201213585"},"Children":[{"ID":"20240201213586-n9hv3me","Type":"NodeParagraph","Properties":{"id":"20240201213586-n9hv3me","updated":"20240201213586"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"getParameterValues(String name)"},{"Type":"NodeText","Data":"：获得有 name 指定的参数的所有值"}]}]},{"ID":"20240201213587-t99aq9p","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213587-t99aq9p","updated":"20240201213587"},"Children":[{"ID":"20240201213588-jutenub","Type":"NodeParagraph","Properties":{"id":"20240201213588-jutenub","updated":"20240201213588"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"getProtocol()"},{"Type":"NodeText","Data":"：获取客户端向服务器端传送数据所依据的协议名称"}]}]},{"ID":"20240201213589-bp4sr9c","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213589-bp4sr9c","updated":"20240201213589"},"Children":[{"ID":"20240201213590-rb7gs2h","Type":"NodeParagraph","Properties":{"id":"20240201213590-rb7gs2h","updated":"20240201213590"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"getQueryString()"},{"Type":"NodeText","Data":"：获得查询字符串"}]}]},{"ID":"20240201213591-hkzoseh","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213591-hkzoseh","updated":"20240201213591"},"Children":[{"ID":"20240201213592-49abgxk","Type":"NodeParagraph","Properties":{"id":"20240201213592-49abgxk","updated":"20240201213592"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"getRequestURI()"},{"Type":"NodeText","Data":"：获取发出请求字符串的客户端地址"}]}]},{"ID":"20240201213593-i4ff8qf","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213593-i4ff8qf","updated":"20240201213593"},"Children":[{"ID":"20240201213594-so530e5","Type":"NodeParagraph","Properties":{"id":"20240201213594-so530e5","updated":"20240201213594"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"getRemoteAddr()"},{"Type":"NodeText","Data":"：获取客户端的 IP 地址"}]}]},{"ID":"20240201213595-pa0h8hx","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213595-pa0h8hx","updated":"20240201213595"},"Children":[{"ID":"20240201213596-dhyf8fh","Type":"NodeParagraph","Properties":{"id":"20240201213596-dhyf8fh","updated":"20240201213596"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"getRemoteHost()"},{"Type":"NodeText","Data":"：获取客户端的名字"}]}]},{"ID":"20240201213597-by5aep4","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213597-by5aep4","updated":"20240201213597"},"Children":[{"ID":"20240201213598-hi7se9n","Type":"NodeParagraph","Properties":{"id":"20240201213598-hi7se9n","updated":"20240201213598"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"getSession([Boolean create])"},{"Type":"NodeText","Data":"：返回和请求相关 Session"}]}]},{"ID":"20240201213599-kobiv5z","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213599-kobiv5z","updated":"20240201213599"},"Children":[{"ID":"20240201213600-2bw1aew","Type":"NodeParagraph","Properties":{"id":"20240201213600-2bw1aew","updated":"20240201213600"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"getServerName()"},{"Type":"NodeText","Data":"：获取服务器的名字"}]}]},{"ID":"20240201213601-z10mqcj","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213601-z10mqcj","updated":"20240201213601"},"Children":[{"ID":"20240201213602-soy8a1p","Type":"NodeParagraph","Properties":{"id":"20240201213602-soy8a1p","updated":"20240201213602"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"getServletPath()"},{"Type":"NodeText","Data":"：获取客户端所请求的脚本文件的路径"}]}]},{"ID":"20240201213603-8lgwx6t","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213603-8lgwx6t","updated":"20240201213603"},"Children":[{"ID":"20240201213604-ir7z85j","Type":"NodeParagraph","Properties":{"id":"20240201213604-ir7z85j","updated":"20240201213604"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"getServerPort()"},{"Type":"NodeText","Data":"：获取服务器的端口号"}]}]},{"ID":"20240201213605-zlfcwh2","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213605-zlfcwh2","updated":"20240201213605"},"Children":[{"ID":"20240201213606-22d7ojk","Type":"NodeParagraph","Properties":{"id":"20240201213606-22d7ojk","updated":"20240201213606"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"removeAttribute(String name)"},{"Type":"NodeText","Data":"：删除请求中的一个属性"}]}]}]},{"ID":"20240201213607-xtbrkdp","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240201213607-xtbrkdp","updated":"20240201213607"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"request.getAttribute()和 request.getParameter()有何区别"}]},{"ID":"20240201213608-32unug6","Type":"NodeParagraph","Properties":{"id":"20240201213608-32unug6","updated":"20240201213608"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"从获取方向来看："}]},{"ID":"20240201213609-5ms2sbg","Type":"NodeParagraph","Properties":{"id":"20240201213609-5ms2sbg","updated":"20240201213609"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"getParameter()"},{"Type":"NodeText","Data":"是获取 POST/GET 传递的参数值；"}]},{"ID":"20240201213610-vqfetkz","Type":"NodeParagraph","Properties":{"id":"20240201213610-vqfetkz","updated":"20240201213610"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"getAttribute()"},{"Type":"NodeText","Data":"是获取对象容器中的数据值；"}]},{"ID":"20240201213611-rxga22p","Type":"NodeParagraph","Properties":{"id":"20240201213611-rxga22p","updated":"20240201213611"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"从用途来看："}]},{"ID":"20240201213612-su5b8dq","Type":"NodeParagraph","Properties":{"id":"20240201213612-su5b8dq","updated":"20240201213612"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"getParameter()"},{"Type":"NodeText","Data":"用于客户端重定向时，即点击了链接或提交按扭时传值用，即用于在用表单或 url 重定向传值时接收数据用。"}]},{"ID":"20240201213613-xtxu9vh","Type":"NodeParagraph","Properties":{"id":"20240201213613-xtxu9vh","updated":"20240201213613"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"getAttribute()"},{"Type":"NodeText","Data":" 用于服务器端重定向时，即在 sevlet 中使用了 forward 函数,或 struts 中使用了"},{"Type":"NodeSoftBreak","Data":"\n","Properties":{"id":""}},{"Type":"NodeText","Data":"mapping.findForward。 getAttribute 只能收到程序用 setAttribute 传过来的值。"}]},{"ID":"20240201213614-tkwnv5h","Type":"NodeParagraph","Properties":{"id":"20240201213614-tkwnv5h","updated":"20240201213614"},"Children":[{"Type":"NodeText","Data":"另外，可以用 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"setAttribute()"},{"Type":"NodeText","Data":","},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"getAttribute()"},{"Type":"NodeText","Data":" 发送接收对象.而 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"getParameter()"},{"Type":"NodeText","Data":" 显然只能传字符串。"},{"Type":"NodeSoftBreak","Data":"\n","Properties":{"id":""}},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"setAttribute()"},{"Type":"NodeText","Data":" 是应用服务器把这个对象放在该页面所对应的一块内存中去，当你的页面服务器重定向到另一个页面时，应用服务器会把这块内存拷贝另一个页面所对应的内存中。这样"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"getAttribute()"},{"Type":"NodeText","Data":"就能取得你所设下的值，当然这种方法可以传对象。session 也一样，只是对象在内存中的生命周期不一样而已。"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"getParameter()"},{"Type":"NodeText","Data":"只是应用服务器在分析你送上来的 request 页面的文本时，取得你设在表单或 url 重定向时的值。"}]},{"ID":"20240201213615-1bsoqbq","Type":"NodeParagraph","Properties":{"id":"20240201213615-1bsoqbq","updated":"20240201213615"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"总结："}]},{"ID":"20240201213616-fivzak9","Type":"NodeParagraph","Properties":{"id":"20240201213616-fivzak9","updated":"20240201213616"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"getParameter()"},{"Type":"NodeText","Data":"返回的是 String,用于读取提交的表单中的值;（获取之后会根据实际需要转换为自己需要的相应类型，比如整型，日期类型啊等等）"}]},{"ID":"20240201213617-viijyz2","Type":"NodeParagraph","Properties":{"id":"20240201213617-viijyz2","updated":"20240201213617"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"getAttribute()"},{"Type":"NodeText","Data":"返回的是 Object，需进行转换,可用"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"setAttribute()"},{"Type":"NodeText","Data":"设置成任意对象，使用很灵活，可随时用"}]},{"ID":"20240201213618-rbp59gh","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240201213618-rbp59gh","updated":"20240201213618"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"include 指令 include 的行为的区别"}]},{"ID":"20240201213619-ntzmlhd","Type":"NodeParagraph","Properties":{"id":"20240201213619-ntzmlhd","updated":"20240201213619"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"include 指令："},{"Type":"NodeText","Data":" JSP 可以通过 include 指令来包含其他文件。被包含的文件可以是 JSP 文件、HTML 文件或文本文件。包含的文件就好像是该 JSP 文件的一部分，会被同时编译执行。 语法格式如下："},{"Type":"NodeSoftBreak","Data":"\n","Properties":{"id":""}},{"Type":"NodeText","Data":"\u003c%@ include file=\"文件相对 url 地址\" %\u003e"}]},{"ID":"20240201213620-t5l6h6b","Type":"NodeParagraph","Properties":{"id":"20240201213620-t5l6h6b","updated":"20240201213620"},"Children":[{"Type":"NodeText","Data":"i"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"nclude 动作："},{"Type":"NodeText","Data":" "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"\u0026lt;jsp:include\u0026gt;"},{"Type":"NodeText","Data":"动作元素用来包含静态和动态的文件。该动作把指定文件插入正在生成的页面。语法格式如下："},{"Type":"NodeSoftBreak","Data":"\n","Properties":{"id":""}},{"Type":"NodeText","Data":"\u003cjsp:include page=\"相对 URL 地址\" flush=\"true\" /\u003e"}]},{"ID":"20240201213621-x2s3nqe","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240201213621-x2s3nqe","updated":"20240201213621"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"JSP 九大内置对象，七大动作，三大指令"}]},{"ID":"20240201213622-f3aeknj","Type":"NodeParagraph","Properties":{"id":"20240201213622-f3aeknj","updated":"20240201213622"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"http://blog.csdn.net/qq_34337272/article/details/64310849","TextMarkTextContent":"JSP 九大内置对象，七大动作，三大指令总结"}]},{"ID":"20240201213623-xvrmoh4","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240201213623-xvrmoh4","updated":"20240201213623"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"讲解 JSP 中的四种作用域"}]},{"ID":"20240201213624-flcptsz","Type":"NodeParagraph","Properties":{"id":"20240201213624-flcptsz","updated":"20240201213624"},"Children":[{"Type":"NodeText","Data":"JSP 中的四种作用域包括 page、request、session 和 application，具体来说："}]},{"ID":"20240201213625-luvvwp7","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213625-luvvwp7","updated":"20240201213625"},"Children":[{"ID":"20240201213626-3o8n9lr","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213626-3o8n9lr","updated":"20240201213626"},"Children":[{"ID":"20240201213627-8dynqqp","Type":"NodeParagraph","Properties":{"id":"20240201213627-8dynqqp","updated":"20240201213627"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"page"},{"Type":"NodeText","Data":"代表与一个页面相关的对象和属性。"}]}]},{"ID":"20240201213628-9y1xood","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213628-9y1xood","updated":"20240201213628"},"Children":[{"ID":"20240201213629-c3txwcc","Type":"NodeParagraph","Properties":{"id":"20240201213629-c3txwcc","updated":"20240201213629"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"request"},{"Type":"NodeText","Data":"代表与 Web 客户机发出的一个请求相关的对象和属性。一个请求可能跨越多个页面，涉及多个 Web 组件；需要在页面显示的临时数据可以置于此作用域。"}]}]},{"ID":"20240201213630-hts7udb","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213630-hts7udb","updated":"20240201213630"},"Children":[{"ID":"20240201213631-93a25gk","Type":"NodeParagraph","Properties":{"id":"20240201213631-93a25gk","updated":"20240201213631"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"session"},{"Type":"NodeText","Data":"代表与某个用户与服务器建立的一次会话相关的对象和属性。跟某个用户相关的数据应该放在用户自己的 session 中。"}]}]},{"ID":"20240201213632-9evpdpv","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213632-9evpdpv","updated":"20240201213632"},"Children":[{"ID":"20240201213633-mpafpde","Type":"NodeParagraph","Properties":{"id":"20240201213633-mpafpde","updated":"20240201213633"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"application"},{"Type":"NodeText","Data":"代表与整个 Web 应用程序相关的对象和属性，它实质上是跨越整个 Web 应用程序，包括多个页面、请求和会话的一个全局作用域。"}]}]}]},{"ID":"20240201213634-07gpexz","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240201213634-07gpexz","updated":"20240201213634"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"如何实现 JSP 或 Servlet 的单线程模式"}]},{"ID":"20240201213635-7rz4ahs","Type":"NodeParagraph","Properties":{"id":"20240201213635-7rz4ahs","updated":"20240201213635"},"Children":[{"Type":"NodeText","Data":"对于 JSP 页面，可以通过 page 指令进行设置。"},{"Type":"NodeSoftBreak","Data":"\n","Properties":{"id":""}},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"\u0026lt;%@page isThreadSafe=\u0026quot;false\u0026quot;%\u0026gt;"}]},{"ID":"20240201213636-rbbso4g","Type":"NodeParagraph","Properties":{"id":"20240201213636-rbbso4g","updated":"20240201213636"},"Children":[{"Type":"NodeText","Data":"对于 Servlet，可以让自定义的 Servlet 实现 SingleThreadModel 标识接口。"}]},{"ID":"20240201213637-nqg22c7","Type":"NodeParagraph","Properties":{"id":"20240201213637-nqg22c7","updated":"20240201213637"},"Children":[{"Type":"NodeText","Data":"说明：如果将 JSP 或 Servlet 设置成单线程工作模式，会导致每个请求创建一个 Servlet 实例，这种实践将导致严重的性能问题（服务器的内存压力很大，还会导致频繁的垃圾回收），所以通常情况下并不会这么做。"}]},{"ID":"20240201213638-r18bnjy","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240201213638-r18bnjy","updated":"20240201213638"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"实现会话跟踪的技术有哪些"}]},{"ID":"20240201213639-ytzc662","Type":"NodeList","ListData":{"Typ":1,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20240201213639-ytzc662","updated":"20240201213639"},"Children":[{"ID":"20240201213640-5mf30wl","Type":"NodeListItem","Data":"1","ListData":{"Typ":1,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20240201213640-5mf30wl","updated":"20240201213640"},"Children":[{"ID":"20240201213641-cgg98lf","Type":"NodeParagraph","Properties":{"id":"20240201213641-cgg98lf","updated":"20240201213641"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"使用 Cookie"}]},{"ID":"20240201213642-9okj859","Type":"NodeParagraph","Properties":{"id":"20240201213642-9okj859","updated":"20240201213642"},"Children":[{"Type":"NodeText","Data":"向客户端发送 Cookie"}]},{"ID":"20240201213643-1c59jvc","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20240201213643-1c59jvc","updated":"20240201213643"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"Cookie c =new Cookie(\"name\",\"value\"); //创建Cookie\nc.setMaxAge(60*60*24); //设置最大时效，此处设置的最大时效为一天\nresponse.addCookie(c); //把Cookie放入到HTTP响应中\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20240201213644-8fbpdcx","Type":"NodeParagraph","Properties":{"id":"20240201213644-8fbpdcx","updated":"20240201213644"},"Children":[{"Type":"NodeText","Data":"从客户端读取 Cookie"}]},{"ID":"20240201213645-1vv7wwa","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20240201213645-1vv7wwa","updated":"20240201213645"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"String name =\"name\";\nCookie[]cookies =request.getCookies();\nif(cookies !=null){\n   for(int i= 0;i\u003ccookies.length;i++){\n    Cookie cookie =cookies[i];\n    if(name.equals(cookis.getName()))\n    //something is here.\n    //you can get the value\n    cookie.getValue();\n\n   }\n }\n\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20240201213646-xab1lsz","Type":"NodeParagraph","Properties":{"id":"20240201213646-xab1lsz","updated":"20240201213646"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"优点:"},{"Type":"NodeText","Data":" 数据可以持久保存，不需要服务器资源，简单，基于文本的 Key-Value"}]},{"ID":"20240201213647-9kddu1k","Type":"NodeParagraph","Properties":{"id":"20240201213647-9kddu1k","updated":"20240201213647"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"缺点:"},{"Type":"NodeText","Data":" 大小受到限制，用户可以禁用 Cookie 功能，由于保存在本地，有一定的安全风险。"}]}]},{"ID":"20240201213648-hn1g0w1","Type":"NodeListItem","Data":"2","ListData":{"Typ":1,"Tight":true,"Start":2,"Delimiter":46,"Padding":3,"Marker":"Mg==","Num":2},"Properties":{"id":"20240201213648-hn1g0w1","updated":"20240201213648"},"Children":[{"ID":"20240201213649-1twmahn","Type":"NodeParagraph","Properties":{"id":"20240201213649-1twmahn","updated":"20240201213649"},"Children":[{"Type":"NodeText","Data":"URL 重写"}]},{"ID":"20240201213650-ceby3i5","Type":"NodeParagraph","Properties":{"id":"20240201213650-ceby3i5","updated":"20240201213650"},"Children":[{"Type":"NodeText","Data":"在 URL 中添加用户会话的信息作为请求的参数，或者将唯一的会话 ID 添加到 URL 结尾以标识一个会话。"}]},{"ID":"20240201213651-ow9cd54","Type":"NodeParagraph","Properties":{"id":"20240201213651-ow9cd54","updated":"20240201213651"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"优点："},{"Type":"NodeText","Data":" 在 Cookie 被禁用的时候依然可以使用"}]},{"ID":"20240201213652-s1ult7x","Type":"NodeParagraph","Properties":{"id":"20240201213652-s1ult7x","updated":"20240201213652"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"缺点："},{"Type":"NodeText","Data":" 必须对网站的 URL 进行编码，所有页面必须动态生成，不能用预先记录下来的 URL 进行访问。"}]}]},{"ID":"20240201213653-3hgymny","Type":"NodeListItem","Data":"3","ListData":{"Typ":1,"Tight":true,"Start":3,"Delimiter":46,"Padding":3,"Marker":"Mw==","Num":3},"Properties":{"id":"20240201213653-3hgymny","updated":"20240201213653"},"Children":[{"ID":"20240201213654-xrtav7h","Type":"NodeParagraph","Properties":{"id":"20240201213654-xrtav7h","updated":"20240201213654"},"Children":[{"Type":"NodeText","Data":"隐藏的表单域"}]},{"ID":"20240201213655-e50vfhn","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"aHRtbA==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20240201213655-e50vfhn","updated":"20240201213655"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"aHRtbA==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"\u003cinput type=\"hidden\" name=\"session\" value=\"...\" /\u003e\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20240201213656-46688lr","Type":"NodeParagraph","Properties":{"id":"20240201213656-46688lr","updated":"20240201213656"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"优点："},{"Type":"NodeText","Data":" Cookie 被禁时可以使用"}]},{"ID":"20240201213657-mzllggs","Type":"NodeParagraph","Properties":{"id":"20240201213657-mzllggs","updated":"20240201213657"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"缺点："},{"Type":"NodeText","Data":" 所有页面必须是表单提交之后的结果。"}]}]},{"ID":"20240201213658-8bzoe7k","Type":"NodeListItem","Data":"4","ListData":{"Typ":1,"Tight":true,"Start":4,"Delimiter":46,"Padding":3,"Marker":"NA==","Num":4},"Properties":{"id":"20240201213658-8bzoe7k","updated":"20240201213658"},"Children":[{"ID":"20240201213659-lihjb8r","Type":"NodeParagraph","Properties":{"id":"20240201213659-lihjb8r","updated":"20240201213659"},"Children":[{"Type":"NodeText","Data":"HttpSession"}]},{"ID":"20240201213660-vey3ffq","Type":"NodeParagraph","Properties":{"id":"20240201213660-vey3ffq","updated":"20240201213660"},"Children":[{"Type":"NodeText","Data":"在所有会话跟踪技术中，HttpSession 对象是最强大也是功能最多的。当一个用户第一次访问某个网站时会自动创建 HttpSession，每个用户可以访问他自己的 HttpSession。可以通过 HttpServletRequest 对象的 getSession 方 法获得 HttpSession，通过 HttpSession 的 setAttribute 方法可以将一个值放在 HttpSession 中，通过调用 HttpSession 对象的 getAttribute 方法，同时传入属性名就可以获取保存在 HttpSession 中的对象。与上面三种方式不同的 是，HttpSession 放在服务器的内存中，因此不要将过大的对象放在里面，即使目前的 Servlet 容器可以在内存将满时将 HttpSession 中的对象移到其他存储设备中，但是这样势必影响性能。添加到 HttpSession 中的值可以是任意 Java 对象，这个对象最好实现了 Serializable 接口，这样 Servlet 容器在必要的时候可以将其序列化到文件中，否则在序列化时就会出现异常。"}]}]}]},{"ID":"20240201213661-ogjtezz","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240201213661-ogjtezz","updated":"20240201213661"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"Cookie 和 Session 的区别"}]},{"ID":"20240201213662-aqmwca5","Type":"NodeParagraph","Properties":{"id":"20240201213662-aqmwca5","updated":"20240201213662"},"Children":[{"Type":"NodeText","Data":"Cookie 和 Session 都是用来跟踪浏览器用户身份的会话方式，但是两者的应用场景不太一样。"}]},{"ID":"20240201213663-342qzjr","Type":"NodeParagraph","Properties":{"id":"20240201213663-342qzjr","updated":"20240201213663"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"Cookie 一般用来保存用户信息"},{"Type":"NodeText","Data":" 比如 ① 我们在 Cookie 中保存已经登录过得用户信息，下次访问网站的时候页面可以自动帮你登录的一些基本信息给填了；② 一般的网站都会有保持登录也就是说下次你再访问网站的时候就不需要重新登录了，这是因为用户登录的时候我们可以存放了一个 Token 在 Cookie 中，下次登录的时候只需要根据 Token 值来查找用户即可(为了安全考虑，重新登录一般要将 Token 重写)；③ 登录一次网站后访问网站其他页面不需要重新登录。"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"Session 的主要作用就是通过服务端记录用户的状态。"},{"Type":"NodeText","Data":" 典型的场景是购物车，当你要添加商品到购物车的时候，系统不知道是哪个用户操作的，因为 HTTP 协议是无状态的。服务端给特定的用户创建特定的 Session 之后就可以标识这个用户并且跟踪这个用户了。"}]},{"ID":"20240201213664-3y8keoi","Type":"NodeParagraph","Properties":{"id":"20240201213664-3y8keoi","updated":"20240201213664"},"Children":[{"Type":"NodeText","Data":"Cookie 数据保存在客户端(浏览器端)，Session 数据保存在服务器端。"}]},{"ID":"20240201213665-kflxddk","Type":"NodeParagraph","Properties":{"id":"20240201213665-kflxddk","updated":"20240201213665"},"Children":[{"Type":"NodeText","Data":"Cookie 存储在客户端中，而 Session 存储在服务器上，相对来说 Session 安全性更高。如果使用 Cookie 的一些敏感信息不要写入 Cookie 中，最好能将 Cookie 信息加密然后使用到的时候再去服务器端解密。"}]},{"ID":"20240201213666-ihkublp","Type":"NodeHTMLBlock","Data":"\u003cdiv\u003e\n\u003c!-- @include: @article-footer.snippet.md --\u003e\n\u003c/div\u003e","HtmlBlockType":2,"Properties":{"id":"20240201213666-ihkublp","updated":"20240201213666"}}]}