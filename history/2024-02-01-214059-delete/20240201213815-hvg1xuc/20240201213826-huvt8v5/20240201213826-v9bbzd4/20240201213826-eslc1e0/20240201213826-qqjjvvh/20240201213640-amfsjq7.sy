{"ID":"20240201213640-amfsjq7","Spec":"1","Type":"NodeDocument","Properties":{"id":"20240201213640-amfsjq7","title":"http-vs-https","updated":"20240201213640"},"Children":[{"ID":"20240201213641-xlt5rsv","Type":"NodeThematicBreak","Properties":{"id":"20240201213641-xlt5rsv","updated":"20240201213641"}},{"ID":"20240201213642-rx0f9pt","Type":"NodeParagraph","Properties":{"id":"20240201213642-rx0f9pt","updated":"20240201213642"},"Children":[{"Type":"NodeText","Data":"title: HTTP vs HTTPS（应用层）"},{"Type":"NodeSoftBreak","Data":"\n","Properties":{"id":""}},{"Type":"NodeText","Data":"category: 计算机基础"},{"Type":"NodeSoftBreak","Data":"\n","Properties":{"id":""}},{"Type":"NodeText","Data":"tag:"}]},{"ID":"20240201213643-fyb9g6s","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"MarkerOffset":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213643-fyb9g6s","updated":"20240201213643"},"Children":[{"ID":"20240201213644-2n34hj1","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"MarkerOffset":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213644-2n34hj1","updated":"20240201213644"},"Children":[{"ID":"20240201213645-tq3tsjk","Type":"NodeParagraph","Properties":{"id":"20240201213645-tq3tsjk","updated":"20240201213645"},"Children":[{"Type":"NodeText","Data":"计算机网络"}]}]}]},{"ID":"20240201213646-6pq664t","Type":"NodeThematicBreak","Properties":{"id":"20240201213646-6pq664t","updated":"20240201213646"}},{"ID":"20240201213647-yc0fyx0","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240201213647-yc0fyx0","updated":"20240201213647"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"HTTP 协议"}]},{"ID":"20240201213648-9ggo6sz","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240201213648-9ggo6sz","updated":"20240201213648"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"HTTP 协议介绍"}]},{"ID":"20240201213649-8syyrj4","Type":"NodeParagraph","Properties":{"id":"20240201213649-8syyrj4","updated":"20240201213649"},"Children":[{"Type":"NodeText","Data":"HTTP 协议，全称超文本传输协议（Hypertext Transfer Protocol）。顾名思义，HTTP 协议就是用来规范超文本的传输，超文本，也就是网络上的包括文本在内的各式各样的消息，具体来说，主要是来规范浏览器和服务器端的行为的。"}]},{"ID":"20240201213650-ruwyr32","Type":"NodeParagraph","Properties":{"id":"20240201213650-ruwyr32","updated":"20240201213650"},"Children":[{"Type":"NodeText","Data":"并且，HTTP 是一个无状态（stateless）协议，也就是说服务器不维护任何有关客户端过去所发请求的消息。这其实是一种懒政，有状态协议会更加复杂，需要维护状态（历史信息），而且如果客户或服务器失效，会产生状态的不一致，解决这种不一致的代价更高。"}]},{"ID":"20240201213651-30mpn98","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240201213651-30mpn98","updated":"20240201213651"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"HTTP 协议通信过程"}]},{"ID":"20240201213652-jkd6ieo","Type":"NodeParagraph","Properties":{"id":"20240201213652-jkd6ieo","updated":"20240201213652"},"Children":[{"Type":"NodeText","Data":"HTTP 是应用层协议，它以 TCP（传输层）作为底层协议，默认端口为 80. 通信过程主要如下："}]},{"ID":"20240201213653-c3lfxfk","Type":"NodeList","ListData":{"Typ":1,"Tight":true,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20240201213653-c3lfxfk","updated":"20240201213653"},"Children":[{"ID":"20240201213654-uam6ywi","Type":"NodeListItem","Data":"1","ListData":{"Typ":1,"Tight":true,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20240201213654-uam6ywi","updated":"20240201213654"},"Children":[{"ID":"20240201213655-b4ey19v","Type":"NodeParagraph","Properties":{"id":"20240201213655-b4ey19v","updated":"20240201213655"},"Children":[{"Type":"NodeText","Data":"服务器在 80 端口等待客户的请求。"}]}]},{"ID":"20240201213656-5adaeot","Type":"NodeListItem","Data":"2","ListData":{"Typ":1,"Tight":true,"Start":2,"Delimiter":46,"Padding":3,"Marker":"Mg==","Num":2},"Properties":{"id":"20240201213656-5adaeot","updated":"20240201213656"},"Children":[{"ID":"20240201213657-ykc4fvo","Type":"NodeParagraph","Properties":{"id":"20240201213657-ykc4fvo","updated":"20240201213657"},"Children":[{"Type":"NodeText","Data":"浏览器发起到服务器的 TCP 连接（创建套接字 Socket）。"}]}]},{"ID":"20240201213658-v44k0rq","Type":"NodeListItem","Data":"3","ListData":{"Typ":1,"Tight":true,"Start":3,"Delimiter":46,"Padding":3,"Marker":"Mw==","Num":3},"Properties":{"id":"20240201213658-v44k0rq","updated":"20240201213658"},"Children":[{"ID":"20240201213659-3b7aqwd","Type":"NodeParagraph","Properties":{"id":"20240201213659-3b7aqwd","updated":"20240201213659"},"Children":[{"Type":"NodeText","Data":"服务器接收来自浏览器的 TCP 连接。"}]}]},{"ID":"20240201213660-ms51mr3","Type":"NodeListItem","Data":"4","ListData":{"Typ":1,"Tight":true,"Start":4,"Delimiter":46,"Padding":3,"Marker":"NA==","Num":4},"Properties":{"id":"20240201213660-ms51mr3","updated":"20240201213660"},"Children":[{"ID":"20240201213661-4h0qtaj","Type":"NodeParagraph","Properties":{"id":"20240201213661-4h0qtaj","updated":"20240201213661"},"Children":[{"Type":"NodeText","Data":"浏览器（HTTP 客户端）与 Web 服务器（HTTP 服务器）交换 HTTP 消息。"}]}]},{"ID":"20240201213662-f1d7uy4","Type":"NodeListItem","Data":"5","ListData":{"Typ":1,"Tight":true,"Start":5,"Delimiter":46,"Padding":3,"Marker":"NQ==","Num":5},"Properties":{"id":"20240201213662-f1d7uy4","updated":"20240201213662"},"Children":[{"ID":"20240201213663-5qs2dnr","Type":"NodeParagraph","Properties":{"id":"20240201213663-5qs2dnr","updated":"20240201213663"},"Children":[{"Type":"NodeText","Data":"关闭 TCP 连接。"}]}]}]},{"ID":"20240201213664-svbpj4g","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240201213664-svbpj4g","updated":"20240201213664"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"HTTP 协议优点"}]},{"ID":"20240201213665-uav6ktm","Type":"NodeParagraph","Properties":{"id":"20240201213665-uav6ktm","updated":"20240201213665"},"Children":[{"Type":"NodeText","Data":"扩展性强、速度快、跨平台支持性好。"}]},{"ID":"20240201213666-6i7lfhu","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240201213666-6i7lfhu","updated":"20240201213666"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"HTTPS 协议"}]},{"ID":"20240201213667-j84opov","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240201213667-j84opov","updated":"20240201213667"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"HTTPS 协议介绍"}]},{"ID":"20240201213668-pr5wy4e","Type":"NodeParagraph","Properties":{"id":"20240201213668-pr5wy4e","updated":"20240201213668"},"Children":[{"Type":"NodeText","Data":"HTTPS 协议（Hyper Text Transfer Protocol Secure），是 HTTP 的加强安全版本。HTTPS 是基于 HTTP 的，也是用 TCP 作为底层协议，并额外使用 SSL/TLS 协议用作加密和安全认证。默认端口号是 443."}]},{"ID":"20240201213669-22d8raw","Type":"NodeParagraph","Properties":{"id":"20240201213669-22d8raw","updated":"20240201213669"},"Children":[{"Type":"NodeText","Data":"HTTPS 协议中，SSL 通道通常使用基于密钥的加密算法，密钥长度通常是 40 比特或 128 比特。"}]},{"ID":"20240201213670-mh14bl8","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240201213670-mh14bl8","updated":"20240201213670"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"HTTPS 协议优点"}]},{"ID":"20240201213671-gyife0q","Type":"NodeParagraph","Properties":{"id":"20240201213671-gyife0q","updated":"20240201213671"},"Children":[{"Type":"NodeText","Data":"保密性好、信任度高。"}]},{"ID":"20240201213672-akgbddo","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240201213672-akgbddo","updated":"20240201213672"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"HTTPS 的核心—SSL/TLS 协议"}]},{"ID":"20240201213673-0vd3cls","Type":"NodeParagraph","Properties":{"id":"20240201213673-0vd3cls","updated":"20240201213673"},"Children":[{"Type":"NodeText","Data":"HTTPS 之所以能达到较高的安全性要求，就是结合了 SSL/TLS 和 TCP 协议，对通信数据进行加密，解决了 HTTP 数据透明的问题。接下来重点介绍一下 SSL/TLS 的工作原理。"}]},{"ID":"20240201213674-3mkszxx","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240201213674-3mkszxx","updated":"20240201213674"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"SSL 和 TLS 的区别？"}]},{"ID":"20240201213675-vbfxngr","Type":"NodeParagraph","Properties":{"id":"20240201213675-vbfxngr","updated":"20240201213675"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"SSL 和 TLS 没有太大的区别。"}]},{"ID":"20240201213676-oq4qkvw","Type":"NodeParagraph","Properties":{"id":"20240201213676-oq4qkvw","updated":"20240201213676"},"Children":[{"Type":"NodeText","Data":"SSL 指安全套接字协议（Secure Sockets Layer），首次发布与 1996 年。SSL 的首次发布其实已经是他的 3.0 版本，SSL 1.0 从未面世，SSL 2.0 则具有较大的缺陷（DROWN 缺陷——Decrypting RSA with Obsolete and Weakened eNcryption）。很快，在 1999 年，SSL 3.0 进一步升级，"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"新版本被命名为 TLS 1.0"},{"Type":"NodeText","Data":"。因此，TLS 是基于 SSL 之上的，但由于习惯叫法，通常把 HTTPS 中的核心加密协议混称为 SSL/TLS。"}]},{"ID":"20240201213677-6erm4k0","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240201213677-6erm4k0","updated":"20240201213677"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"SSL/TLS 的工作原理"}]},{"ID":"20240201213678-58gc1lu","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20240201213678-58gc1lu","updated":"20240201213678"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"非对称加密"}]},{"ID":"20240201213679-wrhcacu","Type":"NodeParagraph","Properties":{"id":"20240201213679-wrhcacu","updated":"20240201213679"},"Children":[{"Type":"NodeText","Data":"SSL/TLS 的核心要素是"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"非对称加密"},{"Type":"NodeText","Data":"。非对称加密采用两个密钥——一个公钥，一个私钥。在通信时，私钥仅由解密者保存，公钥由任何一个想与解密者通信的发送者（加密者）所知。可以设想一个场景，"}]},{"ID":"20240201213680-ffyiflr","Type":"NodeBlockquote","Properties":{"id":"20240201213680-ffyiflr","updated":"20240201213680"},"Children":[{"Type":"NodeBlockquoteMarker","Data":"\u003e ","Properties":{"id":""}},{"ID":"20240201213681-reknfqs","Type":"NodeParagraph","Properties":{"id":"20240201213681-reknfqs","updated":"20240201213681"},"Children":[{"Type":"NodeText","Data":"在某个自助邮局，每个通信信道都是一个邮箱，每一个邮箱所有者都在旁边立了一个牌子，上面挂着一把钥匙：这是我的公钥，发送者请将信件放入我的邮箱，并用公钥锁好。"}]},{"ID":"20240201213682-06oztg5","Type":"NodeParagraph","Properties":{"id":"20240201213682-06oztg5","updated":"20240201213682"},"Children":[{"Type":"NodeText","Data":"但是公钥只能加锁，并不能解锁。解锁只能由邮箱的所有者——因为只有他保存着私钥。"}]},{"ID":"20240201213683-u3tef19","Type":"NodeParagraph","Properties":{"id":"20240201213683-u3tef19","updated":"20240201213683"},"Children":[{"Type":"NodeText","Data":"这样，通信信息就不会被其他人截获了，这依赖于私钥的保密性。"}]}]},{"ID":"20240201213684-8w2gn21","Type":"NodeParagraph","Properties":{"id":"20240201213684-8w2gn21","updated":"20240201213684"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"assets/public-key-cryptography-20240201213826-2s2q9rn.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201213685-s59dudg","Type":"NodeParagraph","Properties":{"id":"20240201213685-s59dudg","updated":"20240201213685"},"Children":[{"Type":"NodeText","Data":"非对称加密的公钥和私钥需要采用一种复杂的数学机制生成（密码学认为，为了较高的安全性，尽量不要自己创造加密方案）。公私钥对的生成算法依赖于单向陷门函数。"}]},{"ID":"20240201213686-3kc4spt","Type":"NodeBlockquote","Properties":{"id":"20240201213686-3kc4spt","updated":"20240201213686"},"Children":[{"Type":"NodeBlockquoteMarker","Data":"\u003e ","Properties":{"id":""}},{"ID":"20240201213687-kiahzoa","Type":"NodeParagraph","Properties":{"id":"20240201213687-kiahzoa","updated":"20240201213687"},"Children":[{"Type":"NodeText","Data":"单向函数：已知单向函数 f，给定任意一个输入 x，易计算输出 y=f(x)；而给定一个输出 y，假设存在 f(x)=y，很难根据 f 来计算出 x。"}]},{"ID":"20240201213688-lii9hwc","Type":"NodeParagraph","Properties":{"id":"20240201213688-lii9hwc","updated":"20240201213688"},"Children":[{"Type":"NodeText","Data":"单向陷门函数：一个较弱的单向函数。已知单向陷门函数 f，陷门 h，给定任意一个输入 x，易计算出输出 y=f(x;h)；而给定一个输出 y，假设存在 f(x;h)=y，很难根据 f 来计算出 x，但可以根据 f 和 h 来推导出 x。"}]}]},{"ID":"20240201213689-uyofi7w","Type":"NodeParagraph","Properties":{"id":"20240201213689-uyofi7w","updated":"20240201213689"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"单向函数","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"assets/OWF-20240201213826-59shntv.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201213690-x619urw","Type":"NodeParagraph","Properties":{"id":"20240201213690-x619urw","updated":"20240201213690"},"Children":[{"Type":"NodeText","Data":"上图就是一个单向函数（不是单项陷门函数），假设有一个绝世秘籍，任何知道了这个秘籍的人都可以把苹果汁榨成苹果，那么这个秘籍就是“陷门”了吧。"}]},{"ID":"20240201213691-64favle","Type":"NodeParagraph","Properties":{"id":"20240201213691-64favle","updated":"20240201213691"},"Children":[{"Type":"NodeText","Data":"在这里，函数 f 的计算方法相当于公钥，陷门 h 相当于私钥。公钥 f 是公开的，任何人对已有输入，都可以用 f 加密，而要想根据加密信息还原出原信息，必须要有私钥才行。"}]},{"ID":"20240201213692-0xxosov","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20240201213692-0xxosov","updated":"20240201213692"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"对称加密"}]},{"ID":"20240201213693-pnkx2z8","Type":"NodeParagraph","Properties":{"id":"20240201213693-pnkx2z8","updated":"20240201213693"},"Children":[{"Type":"NodeText","Data":"使用 SSL/TLS 进行通信的双方需要使用非对称加密方案来通信，但是非对称加密设计了较为复杂的数学算法，在实际通信过程中，计算的代价较高，效率太低，因此，SSL/TLS 实际对消息的加密使用的是对称加密。"}]},{"ID":"20240201213694-zch5pgg","Type":"NodeBlockquote","Properties":{"id":"20240201213694-zch5pgg","updated":"20240201213694"},"Children":[{"Type":"NodeBlockquoteMarker","Data":"\u003e ","Properties":{"id":""}},{"ID":"20240201213695-y3gf5pv","Type":"NodeParagraph","Properties":{"id":"20240201213695-y3gf5pv","updated":"20240201213695"},"Children":[{"Type":"NodeText","Data":"对称加密：通信双方共享唯一密钥 k，加解密算法已知，加密方利用密钥 k 加密，解密方利用密钥 k 解密，保密性依赖于密钥 k 的保密性。"}]}]},{"ID":"20240201213696-sxtzg3v","Type":"NodeParagraph","Properties":{"id":"20240201213696-sxtzg3v","updated":"20240201213696"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"assets/symmetric-encryption-20240201213826-x2itdw8.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201213697-qi8hog6","Type":"NodeParagraph","Properties":{"id":"20240201213697-qi8hog6","updated":"20240201213697"},"Children":[{"Type":"NodeText","Data":"对称加密的密钥生成代价比公私钥对的生成代价低得多，那么有的人会问了，为什么 SSL/TLS 还需要使用非对称加密呢？因为对称加密的保密性完全依赖于密钥的保密性。在双方通信之前，需要商量一个用于对称加密的密钥。我们知道网络通信的信道是不安全的，传输报文对任何人是可见的，密钥的交换肯定不能直接在网络信道中传输。因此，使用非对称加密，对对称加密的密钥进行加密，保护该密钥不在网络信道中被窃听。这样，通信双方只需要一次非对称加密，交换对称加密的密钥，在之后的信息通信中，使用绝对安全的密钥，对信息进行对称加密，即可保证传输消息的保密性。"}]},{"ID":"20240201213698-evgv3ub","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20240201213698-evgv3ub","updated":"20240201213698"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"公钥传输的信赖性"}]},{"ID":"20240201213699-jovvg6j","Type":"NodeParagraph","Properties":{"id":"20240201213699-jovvg6j","updated":"20240201213699"},"Children":[{"Type":"NodeText","Data":"SSL/TLS 介绍到这里，了解信息安全的朋友又会想到一个安全隐患，设想一个下面的场景："}]},{"ID":"20240201213700-aog2i9h","Type":"NodeBlockquote","Properties":{"id":"20240201213700-aog2i9h","updated":"20240201213700"},"Children":[{"Type":"NodeBlockquoteMarker","Data":"\u003e ","Properties":{"id":""}},{"ID":"20240201213701-2xjn8vp","Type":"NodeParagraph","Properties":{"id":"20240201213701-2xjn8vp","updated":"20240201213701"},"Children":[{"Type":"NodeText","Data":"客户端 C 和服务器 S 想要使用 SSL/TLS 通信，由上述 SSL/TLS 通信原理，C 需要先知道 S 的公钥，而 S 公钥的唯一获取途径，就是把 S 公钥在网络信道中传输。要注意网络信道通信中有几个前提："}]},{"ID":"20240201213702-tvjcry5","Type":"NodeList","ListData":{"Typ":1,"Tight":true,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20240201213702-tvjcry5","updated":"20240201213702"},"Children":[{"ID":"20240201213703-qtptt72","Type":"NodeListItem","Data":"1","ListData":{"Typ":1,"Tight":true,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20240201213703-qtptt72","updated":"20240201213703"},"Children":[{"ID":"20240201213704-zb7w29m","Type":"NodeParagraph","Properties":{"id":"20240201213704-zb7w29m","updated":"20240201213704"},"Children":[{"Type":"NodeText","Data":"任何人都可以捕获通信包"}]}]},{"ID":"20240201213705-nexzwa6","Type":"NodeListItem","Data":"2","ListData":{"Typ":1,"Tight":true,"Start":2,"Delimiter":46,"Padding":3,"Marker":"Mg==","Num":2},"Properties":{"id":"20240201213705-nexzwa6","updated":"20240201213705"},"Children":[{"ID":"20240201213706-brz0ou3","Type":"NodeParagraph","Properties":{"id":"20240201213706-brz0ou3","updated":"20240201213706"},"Children":[{"Type":"NodeText","Data":"通信包的保密性由发送者设计"}]}]},{"ID":"20240201213707-9u2r244","Type":"NodeListItem","Data":"3","ListData":{"Typ":1,"Tight":true,"Start":3,"Delimiter":46,"Padding":3,"Marker":"Mw==","Num":3},"Properties":{"id":"20240201213707-9u2r244","updated":"20240201213707"},"Children":[{"ID":"20240201213708-xo6ryw1","Type":"NodeParagraph","Properties":{"id":"20240201213708-xo6ryw1","updated":"20240201213708"},"Children":[{"Type":"NodeText","Data":"保密算法设计方案默认为公开，而（解密）密钥默认是安全的"}]}]}]},{"ID":"20240201213709-pkba9ws","Type":"NodeParagraph","Properties":{"id":"20240201213709-pkba9ws","updated":"20240201213709"},"Children":[{"Type":"NodeText","Data":"因此，假设 S 公钥不做加密，在信道中传输，那么很有可能存在一个攻击者 A，发送给 C 一个诈包，假装是 S 公钥，其实是诱饵服务器 AS 的公钥。当 C 收获了 AS 的公钥（却以为是 S 的公钥），C 后续就会使用 AS 公钥对数据进行加密，并在公开信道传输，那么 A 将捕获这些加密包，用 AS 的私钥解密，就截获了 C 本要给 S 发送的内容，而 C 和 S 二人全然不知。"}]},{"ID":"20240201213710-crz55q1","Type":"NodeParagraph","Properties":{"id":"20240201213710-crz55q1","updated":"20240201213710"},"Children":[{"Type":"NodeText","Data":"同样的，S 公钥即使做加密，也难以避免这种信任性问题，C 被 AS 拐跑了！"}]}]},{"ID":"20240201213711-00b7cnj","Type":"NodeParagraph","Properties":{"id":"20240201213711-00b7cnj","updated":"20240201213711"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"assets/attack1-20240201213826-naozoud.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201213712-m2023bw","Type":"NodeParagraph","Properties":{"id":"20240201213712-m2023bw","updated":"20240201213712"},"Children":[{"Type":"NodeText","Data":"为了公钥传输的信赖性问题，第三方机构应运而生——证书颁发机构（CA，Certificate Authority）。CA 默认是受信任的第三方。CA 会给各个服务器颁发证书，证书存储在服务器上，并附有 CA 的"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"电子签名"},{"Type":"NodeText","Data":"（见下节）。"}]},{"ID":"20240201213713-ulhz8l1","Type":"NodeParagraph","Properties":{"id":"20240201213713-ulhz8l1","updated":"20240201213713"},"Children":[{"Type":"NodeText","Data":"当客户端（浏览器）向服务器发送 HTTPS 请求时，一定要先获取目标服务器的证书，并根据证书上的信息，检验证书的合法性。一旦客户端检测到证书非法，就会发生错误。客户端获取了服务器的证书后，由于证书的信任性是由第三方信赖机构认证的，而证书上又包含着服务器的公钥信息，客户端就可以放心的信任证书上的公钥就是目标服务器的公钥。"}]},{"ID":"20240201213714-47s8n0y","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20240201213714-47s8n0y","updated":"20240201213714"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"数字签名"}]},{"ID":"20240201213715-xp6x2ve","Type":"NodeParagraph","Properties":{"id":"20240201213715-xp6x2ve","updated":"20240201213715"},"Children":[{"Type":"NodeText","Data":"好，到这一小节，已经是 SSL/TLS 的尾声了。上一小节提到了数字签名，数字签名要解决的问题，是防止证书被伪造。第三方信赖机构 CA 之所以能被信赖，就是 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"靠数字签名技术"},{"Type":"NodeText","Data":" 。"}]},{"ID":"20240201213716-nbc88t2","Type":"NodeParagraph","Properties":{"id":"20240201213716-nbc88t2","updated":"20240201213716"},"Children":[{"Type":"NodeText","Data":"数字签名，是 CA 在给服务器颁发证书时，使用散列+加密的组合技术，在证书上盖个章，以此来提供验伪的功能。具体行为如下："}]},{"ID":"20240201213717-aefklbf","Type":"NodeBlockquote","Properties":{"id":"20240201213717-aefklbf","updated":"20240201213717"},"Children":[{"Type":"NodeBlockquoteMarker","Data":"\u003e ","Properties":{"id":""}},{"ID":"20240201213718-s0ao0gf","Type":"NodeParagraph","Properties":{"id":"20240201213718-s0ao0gf","updated":"20240201213718"},"Children":[{"Type":"NodeText","Data":"CA 知道服务器的公钥，对证书采用散列技术生成一个摘要。CA 使用 CA 私钥对该摘要进行加密，并附在证书下方，发送给服务器。"}]},{"ID":"20240201213719-byutzb7","Type":"NodeParagraph","Properties":{"id":"20240201213719-byutzb7","updated":"20240201213719"},"Children":[{"Type":"NodeText","Data":"现在服务器将该证书发送给客户端，客户端需要验证该证书的身份。客户端找到第三方机构 CA，获知 CA 的公钥，并用 CA 公钥对证书的签名进行解密，获得了 CA 生成的摘要。"}]},{"ID":"20240201213720-jfldeia","Type":"NodeParagraph","Properties":{"id":"20240201213720-jfldeia","updated":"20240201213720"},"Children":[{"Type":"NodeText","Data":"客户端对证书数据（包含服务器的公钥）做相同的散列处理，得到摘要，并将该摘要与之前从签名中解码出的摘要做对比，如果相同，则身份验证成功；否则验证失败。"}]}]},{"ID":"20240201213721-9mox7c4","Type":"NodeParagraph","Properties":{"id":"20240201213721-9mox7c4","updated":"20240201213721"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"assets/digital-signature-20240201213826-gtjny5p.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201213722-drndg4h","Type":"NodeParagraph","Properties":{"id":"20240201213722-drndg4h","updated":"20240201213722"},"Children":[{"Type":"NodeText","Data":"总结来说，带有证书的公钥传输机制如下："}]},{"ID":"20240201213723-ww6jlwh","Type":"NodeList","ListData":{"Typ":1,"Tight":true,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20240201213723-ww6jlwh","updated":"20240201213723"},"Children":[{"ID":"20240201213724-mvoyxk0","Type":"NodeListItem","Data":"1","ListData":{"Typ":1,"Tight":true,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20240201213724-mvoyxk0","updated":"20240201213724"},"Children":[{"ID":"20240201213725-cx107ie","Type":"NodeParagraph","Properties":{"id":"20240201213725-cx107ie","updated":"20240201213725"},"Children":[{"Type":"NodeText","Data":"设有服务器 S，客户端 C，和第三方信赖机构 CA。"}]}]},{"ID":"20240201213726-gd7c6p3","Type":"NodeListItem","Data":"2","ListData":{"Typ":1,"Tight":true,"Start":2,"Delimiter":46,"Padding":3,"Marker":"Mg==","Num":2},"Properties":{"id":"20240201213726-gd7c6p3","updated":"20240201213726"},"Children":[{"ID":"20240201213727-qg8pek3","Type":"NodeParagraph","Properties":{"id":"20240201213727-qg8pek3","updated":"20240201213727"},"Children":[{"Type":"NodeText","Data":"S 信任 CA，CA 是知道 S 公钥的，CA 向 S 颁发证书。并附上 CA 私钥对消息摘要的加密签名。"}]}]},{"ID":"20240201213728-du5dkoz","Type":"NodeListItem","Data":"3","ListData":{"Typ":1,"Tight":true,"Start":3,"Delimiter":46,"Padding":3,"Marker":"Mw==","Num":3},"Properties":{"id":"20240201213728-du5dkoz","updated":"20240201213728"},"Children":[{"ID":"20240201213729-3b04ux0","Type":"NodeParagraph","Properties":{"id":"20240201213729-3b04ux0","updated":"20240201213729"},"Children":[{"Type":"NodeText","Data":"S 获得 CA 颁发的证书，将该证书传递给 C。"}]}]},{"ID":"20240201213730-nkmntur","Type":"NodeListItem","Data":"4","ListData":{"Typ":1,"Tight":true,"Start":4,"Delimiter":46,"Padding":3,"Marker":"NA==","Num":4},"Properties":{"id":"20240201213730-nkmntur","updated":"20240201213730"},"Children":[{"ID":"20240201213731-tr5xjoc","Type":"NodeParagraph","Properties":{"id":"20240201213731-tr5xjoc","updated":"20240201213731"},"Children":[{"Type":"NodeText","Data":"C 获得 S 的证书，信任 CA 并知晓 CA 公钥，使用 CA 公钥对 S 证书上的签名解密，同时对消息进行散列处理，得到摘要。比较摘要，验证 S 证书的真实性。"}]}]},{"ID":"20240201213732-zn3ndwo","Type":"NodeListItem","Data":"5","ListData":{"Typ":1,"Tight":true,"Start":5,"Delimiter":46,"Padding":3,"Marker":"NQ==","Num":5},"Properties":{"id":"20240201213732-zn3ndwo","updated":"20240201213732"},"Children":[{"ID":"20240201213733-g8dg9lj","Type":"NodeParagraph","Properties":{"id":"20240201213733-g8dg9lj","updated":"20240201213733"},"Children":[{"Type":"NodeText","Data":"如果 C 验证 S 证书是真实的，则信任 S 的公钥（在 S 证书中）。"}]}]}]},{"ID":"20240201213734-59ljc5i","Type":"NodeParagraph","Properties":{"id":"20240201213734-59ljc5i","updated":"20240201213734"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"assets/public-key-transmission-20240201213826-3u6574g.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201213735-fb5y61t","Type":"NodeParagraph","Properties":{"id":"20240201213735-fb5y61t","updated":"20240201213735"},"Children":[{"Type":"NodeText","Data":"对于数字签名，我这里讲的比较简单，如果你没有搞清楚的话，强烈推荐你看看"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://www.bilibili.com/video/BV18N411X7ty/","TextMarkTextContent":"数字签名及数字证书原理"},{"Type":"NodeText","Data":"这个视频，这是我看过最清晰的讲解。"}]},{"ID":"20240201213736-v7p6ie6","Type":"NodeParagraph","Properties":{"id":"20240201213736-v7p6ie6","updated":"20240201213736"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"https://oss.javaguide.cn/github/javaguide/image-20220321121814946.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201213737-h0x4v3i","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240201213737-h0x4v3i","updated":"20240201213737"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"总结"}]},{"ID":"20240201213738-w39aeft","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213738-w39aeft","updated":"20240201213738"},"Children":[{"ID":"20240201213739-d04mccr","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213739-d04mccr","updated":"20240201213739"},"Children":[{"ID":"20240201213740-t2n8zf5","Type":"NodeParagraph","Properties":{"id":"20240201213740-t2n8zf5","updated":"20240201213740"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"端口号"},{"Type":"NodeText","Data":"：HTTP 默认是 80，HTTPS 默认是 443。"}]}]},{"ID":"20240201213741-l87z0zf","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213741-l87z0zf","updated":"20240201213741"},"Children":[{"ID":"20240201213742-aiw8u23","Type":"NodeParagraph","Properties":{"id":"20240201213742-aiw8u23","updated":"20240201213742"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"URL 前缀"},{"Type":"NodeText","Data":"：HTTP 的 URL 前缀是 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"http://"},{"Type":"NodeText","Data":"，HTTPS 的 URL 前缀是 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"https://"},{"Type":"NodeText","Data":"。"}]}]},{"ID":"20240201213743-isbaldc","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213743-isbaldc","updated":"20240201213743"},"Children":[{"ID":"20240201213744-p93lrc1","Type":"NodeParagraph","Properties":{"id":"20240201213744-p93lrc1","updated":"20240201213744"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"安全性和资源消耗"},{"Type":"NodeText","Data":"：HTTP 协议运行在 TCP 之上，所有传输的内容都是明文，客户端和服务器端都无法验证对方的身份。HTTPS 是运行在 SSL/TLS 之上的 HTTP 协议，SSL/TLS 运行在 TCP 之上。所有传输的内容都经过加密，加密采用对称加密，但对称加密的密钥用服务器方的证书进行了非对称加密。所以说，HTTP 安全性没有 HTTPS 高，但是 HTTPS 比 HTTP 耗费更多服务器资源。"}]}]}]},{"ID":"20240201213745-liqyl45","Type":"NodeHTMLBlock","Data":"\u003cdiv\u003e\n\u003c!-- @include: @article-footer.snippet.md --\u003e\n\u003c/div\u003e","HtmlBlockType":2,"Properties":{"id":"20240201213745-liqyl45","updated":"20240201213745"}}]}