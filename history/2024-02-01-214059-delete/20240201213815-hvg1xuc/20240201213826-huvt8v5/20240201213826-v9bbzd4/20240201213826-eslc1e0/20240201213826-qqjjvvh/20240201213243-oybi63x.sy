{"ID":"20240201213243-oybi63x","Spec":"1","Type":"NodeDocument","Properties":{"id":"20240201213243-oybi63x","title":"other-network-questions","updated":"20240201213243"},"Children":[{"ID":"20240201213244-5b2n8w6","Type":"NodeThematicBreak","Properties":{"id":"20240201213244-5b2n8w6","updated":"20240201213244"}},{"ID":"20240201213245-j238xxc","Type":"NodeParagraph","Properties":{"id":"20240201213245-j238xxc","updated":"20240201213245"},"Children":[{"Type":"NodeText","Data":"title: 计算机网络常见面试题总结(上)"},{"Type":"NodeSoftBreak","Data":"\n","Properties":{"id":""}},{"Type":"NodeText","Data":"category: 计算机基础"},{"Type":"NodeSoftBreak","Data":"\n","Properties":{"id":""}},{"Type":"NodeText","Data":"tag:"}]},{"ID":"20240201213246-hb6dohp","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"MarkerOffset":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213246-hb6dohp","updated":"20240201213246"},"Children":[{"ID":"20240201213247-r3hqmcx","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"MarkerOffset":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213247-r3hqmcx","updated":"20240201213247"},"Children":[{"ID":"20240201213248-nz4oiji","Type":"NodeParagraph","Properties":{"id":"20240201213248-nz4oiji","updated":"20240201213248"},"Children":[{"Type":"NodeText","Data":"计算机网络"}]}]}]},{"ID":"20240201213249-dzztcnv","Type":"NodeThematicBreak","Properties":{"id":"20240201213249-dzztcnv","updated":"20240201213249"}},{"ID":"20240201213250-74234bu","Type":"NodeHTMLBlock","Data":"\u003cdiv\u003e\n\u003c!-- @include: @small-advertisement.snippet.md --\u003e\n\u003c/div\u003e","HtmlBlockType":2,"Properties":{"id":"20240201213250-74234bu","updated":"20240201213250"}},{"ID":"20240201213251-vw1zlbz","Type":"NodeParagraph","Properties":{"id":"20240201213251-vw1zlbz","updated":"20240201213251"},"Children":[{"Type":"NodeText","Data":"上篇主要是计算机网络基础和应用层相关的内容。"}]},{"ID":"20240201213252-4nfnsep","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240201213252-4nfnsep","updated":"20240201213252"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"计算机网络基础"}]},{"ID":"20240201213253-a0steto","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240201213253-a0steto","updated":"20240201213253"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"网络分层模型"}]},{"ID":"20240201213254-zfyr481","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20240201213254-zfyr481","updated":"20240201213254"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"OSI 七层模型是什么？每一层的作用是什么？"}]},{"ID":"20240201213255-1osuq5p","Type":"NodeParagraph","Properties":{"id":"20240201213255-1osuq5p","updated":"20240201213255"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"OSI 七层模型"},{"Type":"NodeText","Data":" 是国际标准化组织提出一个网络分层模型，其大体结构以及每一层提供的功能如下图所示："}]},{"ID":"20240201213256-cdwzqbm","Type":"NodeParagraph","Properties":{"id":"20240201213256-cdwzqbm","updated":"20240201213256"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"OSI 七层模型","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"https://oss.javaguide.cn/github/javaguide/cs-basics/network/osi-7-model.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201213257-mwvnw1y","Type":"NodeParagraph","Properties":{"id":"20240201213257-mwvnw1y","updated":"20240201213257"},"Children":[{"Type":"NodeText","Data":"每一层都专注做一件事情，并且每一层都需要使用下一层提供的功能比如传输层需要使用网络层提供的路由和寻址功能，这样传输层才知道把数据传输到哪里去。"}]},{"ID":"20240201213258-847tonq","Type":"NodeParagraph","Properties":{"id":"20240201213258-847tonq","updated":"20240201213258"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"OSI 的七层体系结构概念清楚，理论也很完整，但是它比较复杂而且不实用，而且有些功能在多个层中重复出现。"}]},{"ID":"20240201213259-lveqk0j","Type":"NodeParagraph","Properties":{"id":"20240201213259-lveqk0j","updated":"20240201213259"},"Children":[{"Type":"NodeText","Data":"上面这种图可能比较抽象，再来一个比较生动的图片。下面这个图片是我在国外的一个网站上看到的，非常赞！"}]},{"ID":"20240201213260-6o82azg","Type":"NodeParagraph","Properties":{"id":"20240201213260-6o82azg","updated":"20240201213260"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"osi七层模型2","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"https://oss.javaguide.cn/github/javaguide/osi七层模型2.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201213261-5os5zzk","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20240201213261-5os5zzk","updated":"20240201213261"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"TCP/IP 四层模型是什么？每一层的作用是什么？"}]},{"ID":"20240201213262-2lq3agm","Type":"NodeParagraph","Properties":{"id":"20240201213262-2lq3agm","updated":"20240201213262"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"TCP/IP 四层模型"},{"Type":"NodeText","Data":" 是目前被广泛采用的一种模型,我们可以将 TCP / IP 模型看作是 OSI 七层模型的精简版本，由以下 4 层组成："}]},{"ID":"20240201213263-elbxafi","Type":"NodeList","ListData":{"Typ":1,"Tight":true,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20240201213263-elbxafi","updated":"20240201213263"},"Children":[{"ID":"20240201213264-jhlnkqj","Type":"NodeListItem","Data":"1","ListData":{"Typ":1,"Tight":true,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20240201213264-jhlnkqj","updated":"20240201213264"},"Children":[{"ID":"20240201213265-u4fihab","Type":"NodeParagraph","Properties":{"id":"20240201213265-u4fihab","updated":"20240201213265"},"Children":[{"Type":"NodeText","Data":"应用层"}]}]},{"ID":"20240201213266-9ns4k3r","Type":"NodeListItem","Data":"2","ListData":{"Typ":1,"Tight":true,"Start":2,"Delimiter":46,"Padding":3,"Marker":"Mg==","Num":2},"Properties":{"id":"20240201213266-9ns4k3r","updated":"20240201213266"},"Children":[{"ID":"20240201213267-nr139cw","Type":"NodeParagraph","Properties":{"id":"20240201213267-nr139cw","updated":"20240201213267"},"Children":[{"Type":"NodeText","Data":"传输层"}]}]},{"ID":"20240201213268-bakz4th","Type":"NodeListItem","Data":"3","ListData":{"Typ":1,"Tight":true,"Start":3,"Delimiter":46,"Padding":3,"Marker":"Mw==","Num":3},"Properties":{"id":"20240201213268-bakz4th","updated":"20240201213268"},"Children":[{"ID":"20240201213269-kkx5s0n","Type":"NodeParagraph","Properties":{"id":"20240201213269-kkx5s0n","updated":"20240201213269"},"Children":[{"Type":"NodeText","Data":"网络层"}]}]},{"ID":"20240201213270-0vtf7ci","Type":"NodeListItem","Data":"4","ListData":{"Typ":1,"Tight":true,"Start":4,"Delimiter":46,"Padding":3,"Marker":"NA==","Num":4},"Properties":{"id":"20240201213270-0vtf7ci","updated":"20240201213270"},"Children":[{"ID":"20240201213271-3945910","Type":"NodeParagraph","Properties":{"id":"20240201213271-3945910","updated":"20240201213271"},"Children":[{"Type":"NodeText","Data":"网络接口层"}]}]}]},{"ID":"20240201213272-j6qf6rm","Type":"NodeParagraph","Properties":{"id":"20240201213272-j6qf6rm","updated":"20240201213272"},"Children":[{"Type":"NodeText","Data":"需要注意的是，我们并不能将 TCP/IP 四层模型 和 OSI 七层模型完全精确地匹配起来，不过可以简单将两者对应起来，如下图所示："}]},{"ID":"20240201213273-t00800r","Type":"NodeParagraph","Properties":{"id":"20240201213273-t00800r","updated":"20240201213273"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"TCP/IP 四层模型","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"https://oss.javaguide.cn/github/javaguide/cs-basics/network/tcp-ip-4-model.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201213274-3hh6mum","Type":"NodeParagraph","Properties":{"id":"20240201213274-3hh6mum","updated":"20240201213274"},"Children":[{"Type":"NodeText","Data":"关于每一层作用的详细介绍，请看 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"./osi-and-tcp-ip-model.md","TextMarkTextContent":"OSI 和 TCP/IP 网络分层模型详解（基础）"},{"Type":"NodeText","Data":" 这篇文章。"}]},{"ID":"20240201213275-oxbfagu","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20240201213275-oxbfagu","updated":"20240201213275"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"为什么网络要分层？"}]},{"ID":"20240201213276-madsvw1","Type":"NodeParagraph","Properties":{"id":"20240201213276-madsvw1","updated":"20240201213276"},"Children":[{"Type":"NodeText","Data":"说到分层，我们先从我们平时使用框架开发一个后台程序来说，我们往往会按照每一层做不同的事情的原则将系统分为三层（复杂的系统分层会更多）:"}]},{"ID":"20240201213277-3fk5uhf","Type":"NodeList","ListData":{"Typ":1,"Tight":true,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20240201213277-3fk5uhf","updated":"20240201213277"},"Children":[{"ID":"20240201213278-wib6ah7","Type":"NodeListItem","Data":"1","ListData":{"Typ":1,"Tight":true,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20240201213278-wib6ah7","updated":"20240201213278"},"Children":[{"ID":"20240201213279-2w6jkol","Type":"NodeParagraph","Properties":{"id":"20240201213279-2w6jkol","updated":"20240201213279"},"Children":[{"Type":"NodeText","Data":"Repository（数据库操作）"}]}]},{"ID":"20240201213280-8nax66i","Type":"NodeListItem","Data":"2","ListData":{"Typ":1,"Tight":true,"Start":2,"Delimiter":46,"Padding":3,"Marker":"Mg==","Num":2},"Properties":{"id":"20240201213280-8nax66i","updated":"20240201213280"},"Children":[{"ID":"20240201213281-bpz0d6t","Type":"NodeParagraph","Properties":{"id":"20240201213281-bpz0d6t","updated":"20240201213281"},"Children":[{"Type":"NodeText","Data":"Service（业务操作）"}]}]},{"ID":"20240201213282-j094c58","Type":"NodeListItem","Data":"3","ListData":{"Typ":1,"Tight":true,"Start":3,"Delimiter":46,"Padding":3,"Marker":"Mw==","Num":3},"Properties":{"id":"20240201213282-j094c58","updated":"20240201213282"},"Children":[{"ID":"20240201213283-lj8k0sy","Type":"NodeParagraph","Properties":{"id":"20240201213283-lj8k0sy","updated":"20240201213283"},"Children":[{"Type":"NodeText","Data":"Controller（前后端数据交互）"}]}]}]},{"ID":"20240201213284-z4vg4az","Type":"NodeParagraph","Properties":{"id":"20240201213284-z4vg4az","updated":"20240201213284"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"复杂的系统需要分层，因为每一层都需要专注于一类事情。网络分层的原因也是一样，每一层只专注于做一类事情。"}]},{"ID":"20240201213285-uvwqozc","Type":"NodeParagraph","Properties":{"id":"20240201213285-uvwqozc","updated":"20240201213285"},"Children":[{"Type":"NodeText","Data":"好了，再来说回：“为什么网络要分层？”。我觉得主要有 3 方面的原因："}]},{"ID":"20240201213286-1yzo7ad","Type":"NodeList","ListData":{"Typ":1,"Tight":true,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20240201213286-1yzo7ad","updated":"20240201213286"},"Children":[{"ID":"20240201213287-joshoea","Type":"NodeListItem","Data":"1","ListData":{"Typ":1,"Tight":true,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20240201213287-joshoea","updated":"20240201213287"},"Children":[{"ID":"20240201213288-qvqahdp","Type":"NodeParagraph","Properties":{"id":"20240201213288-qvqahdp","updated":"20240201213288"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"各层之间相互独立"},{"Type":"NodeText","Data":"：各层之间相互独立，各层之间不需要关心其他层是如何实现的，只需要知道自己如何调用下层提供好的功能就可以了（可以简单理解为接口调用）"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"。这个和我们对开发时系统进行分层是一个道理。"}]}]},{"ID":"20240201213289-v34go4i","Type":"NodeListItem","Data":"2","ListData":{"Typ":1,"Tight":true,"Start":2,"Delimiter":46,"Padding":3,"Marker":"Mg==","Num":2},"Properties":{"id":"20240201213289-v34go4i","updated":"20240201213289"},"Children":[{"ID":"20240201213290-kkawu39","Type":"NodeParagraph","Properties":{"id":"20240201213290-kkawu39","updated":"20240201213290"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"提高了灵活性和可替换性"},{"Type":"NodeText","Data":"：每一层都可以使用最适合的技术来实现，你只需要保证你提供的功能以及暴露的接口的规则没有改变就行了。并且，每一层都可以根据需要进行修改或替换，而不会影响到整个网络的结构。"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"这个和我们平时开发系统的时候要求的高内聚、低耦合的原则也是可以对应上的。"}]}]},{"ID":"20240201213291-zgyx13c","Type":"NodeListItem","Data":"3","ListData":{"Typ":1,"Tight":true,"Start":3,"Delimiter":46,"Padding":3,"Marker":"Mw==","Num":3},"Properties":{"id":"20240201213291-zgyx13c","updated":"20240201213291"},"Children":[{"ID":"20240201213292-ss9m3pw","Type":"NodeParagraph","Properties":{"id":"20240201213292-ss9m3pw","updated":"20240201213292"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"大问题化小"},{"Type":"NodeText","Data":"：分层可以将复杂的网络问题分解为许多比较小的、界线比较清晰简单的小问题来处理和解决。这样使得复杂的计算机网络系统变得易于设计，实现和标准化。 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"这个和我们平时开发的时候，一般会将系统功能分解，然后将复杂的问题分解为容易理解的更小的问题是相对应的，这些较小的问题具有更好的边界（目标和接口）定义。"}]}]}]},{"ID":"20240201213293-jir7zph","Type":"NodeParagraph","Properties":{"id":"20240201213293-jir7zph","updated":"20240201213293"},"Children":[{"Type":"NodeText","Data":"我想到了计算机世界非常非常有名的一句话，这里分享一下："}]},{"ID":"20240201213294-4bwax7z","Type":"NodeBlockquote","Properties":{"id":"20240201213294-4bwax7z","updated":"20240201213294"},"Children":[{"Type":"NodeBlockquoteMarker","Data":"\u003e ","Properties":{"id":""}},{"ID":"20240201213295-z57m7k0","Type":"NodeParagraph","Properties":{"id":"20240201213295-z57m7k0","updated":"20240201213295"},"Children":[{"Type":"NodeText","Data":"计算机科学领域的任何问题都可以通过增加一个间接的中间层来解决，计算机整个体系从上到下都是按照严格的层次结构设计的。"}]}]},{"ID":"20240201213296-ef7qr97","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240201213296-ef7qr97","updated":"20240201213296"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"常见网络协议"}]},{"ID":"20240201213297-0yvrvcx","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20240201213297-0yvrvcx","updated":"20240201213297"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"应用层有哪些常见的协议？"}]},{"ID":"20240201213298-o3r5ogc","Type":"NodeParagraph","Properties":{"id":"20240201213298-o3r5ogc","updated":"20240201213298"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"应用层常见协议","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"https://oss.javaguide.cn/github/javaguide/cs-basics/network/application-layer-protocol.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201213299-l6yib8n","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213299-l6yib8n","updated":"20240201213299"},"Children":[{"ID":"20240201213300-as7tjdp","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213300-as7tjdp","updated":"20240201213300"},"Children":[{"ID":"20240201213301-syh6khw","Type":"NodeParagraph","Properties":{"id":"20240201213301-syh6khw","updated":"20240201213301"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"HTTP（Hypertext Transfer Protocol，超文本传输协议）"},{"Type":"NodeText","Data":"：基于 TCP 协议，是一种用于传输超文本和多媒体内容的协议，主要是为 Web 浏览器与 Web 服务器之间的通信而设计的。当我们使用浏览器浏览网页的时候，我们网页就是通过 HTTP 请求进行加载的。"}]}]},{"ID":"20240201213302-tpqowdv","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213302-tpqowdv","updated":"20240201213302"},"Children":[{"ID":"20240201213303-e1sgpcz","Type":"NodeParagraph","Properties":{"id":"20240201213303-e1sgpcz","updated":"20240201213303"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"SMTP（Simple Mail Transfer Protocol，简单邮件发送协议）"},{"Type":"NodeText","Data":"：基于 TCP 协议，是一种用于发送电子邮件的协议。注意 ⚠️：SMTP 协议只负责邮件的发送，而不是接收。要从邮件服务器接收邮件，需要使用 POP3 或 IMAP 协议。"}]}]},{"ID":"20240201213304-hud5ahm","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213304-hud5ahm","updated":"20240201213304"},"Children":[{"ID":"20240201213305-3870i3y","Type":"NodeParagraph","Properties":{"id":"20240201213305-3870i3y","updated":"20240201213305"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"POP3/IMAP（邮件接收协议）"},{"Type":"NodeText","Data":"：基于 TCP 协议，两者都是负责邮件接收的协议。IMAP 协议是比 POP3 更新的协议，它在功能和性能上都更加强大。IMAP 支持邮件搜索、标记、分类、归档等高级功能，而且可以在多个设备之间同步邮件状态。几乎所有现代电子邮件客户端和服务器都支持 IMAP。"}]}]},{"ID":"20240201213306-6py4dca","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213306-6py4dca","updated":"20240201213306"},"Children":[{"ID":"20240201213307-1kcvt4c","Type":"NodeParagraph","Properties":{"id":"20240201213307-1kcvt4c","updated":"20240201213307"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"FTP（File Transfer Protocol，文件传输协议）"},{"Type":"NodeText","Data":" : 基于 TCP 协议，是一种用于在计算机之间传输文件的协议，可以屏蔽操作系统和文件存储方式。注意 ⚠️：FTP 是一种不安全的协议，因为它在传输过程中不会对数据进行加密。建议在传输敏感数据时使用更安全的协议，如 SFTP。"}]}]},{"ID":"20240201213308-bk0gc9i","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213308-bk0gc9i","updated":"20240201213308"},"Children":[{"ID":"20240201213309-3y52r72","Type":"NodeParagraph","Properties":{"id":"20240201213309-3y52r72","updated":"20240201213309"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"Telnet（远程登陆协议）"},{"Type":"NodeText","Data":"：基于 TCP 协议，用于通过一个终端登陆到其他服务器。Telnet 协议的最大缺点之一是所有数据（包括用户名和密码）均以明文形式发送，这有潜在的安全风险。这就是为什么如今很少使用 Telnet，而是使用一种称为 SSH 的非常安全的网络传输协议的主要原因。"}]}]},{"ID":"20240201213310-shdgjds","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213310-shdgjds","updated":"20240201213310"},"Children":[{"ID":"20240201213311-g2kvw7j","Type":"NodeParagraph","Properties":{"id":"20240201213311-g2kvw7j","updated":"20240201213311"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"SSH（Secure Shell Protocol，安全的网络传输协议）"},{"Type":"NodeText","Data":"：基于 TCP 协议，通过加密和认证机制实现安全的访问和文件传输等业务"}]}]},{"ID":"20240201213312-fr7ras8","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213312-fr7ras8","updated":"20240201213312"},"Children":[{"ID":"20240201213313-lp6rtre","Type":"NodeParagraph","Properties":{"id":"20240201213313-lp6rtre","updated":"20240201213313"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"RTP（Real-time Transport Protocol，实时传输协议）"},{"Type":"NodeText","Data":"：通常基于 UDP 协议，但也支持 TCP 协议。它提供了端到端的实时传输数据的功能，但不包含资源预留存、不保证实时传输质量，这些功能由 WebRTC 实现。"}]}]},{"ID":"20240201213314-zmpgkxw","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213314-zmpgkxw","updated":"20240201213314"},"Children":[{"ID":"20240201213315-pzkkon4","Type":"NodeParagraph","Properties":{"id":"20240201213315-pzkkon4","updated":"20240201213315"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"DNS（Domain Name System，域名管理系统）"},{"Type":"NodeText","Data":": 基于 UDP 协议，用于解决域名和 IP 地址的映射问题。"}]}]}]},{"ID":"20240201213316-60oh3zq","Type":"NodeParagraph","Properties":{"id":"20240201213316-60oh3zq","updated":"20240201213316"},"Children":[{"Type":"NodeText","Data":"关于这些协议的详细介绍请看 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"./application-layer-protocol.md","TextMarkTextContent":"应用层常见协议总结（应用层）"},{"Type":"NodeText","Data":" 这篇文章。"}]},{"ID":"20240201213317-ys6u4os","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20240201213317-ys6u4os","updated":"20240201213317"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"传输层有哪些常见的协议？"}]},{"ID":"20240201213318-uejmro1","Type":"NodeParagraph","Properties":{"id":"20240201213318-uejmro1","updated":"20240201213318"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"传输层常见协议","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"https://oss.javaguide.cn/github/javaguide/cs-basics/network/transport-layer-protocol.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201213319-beadll2","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213319-beadll2","updated":"20240201213319"},"Children":[{"ID":"20240201213320-sor98kj","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213320-sor98kj","updated":"20240201213320"},"Children":[{"ID":"20240201213321-gkltx1o","Type":"NodeParagraph","Properties":{"id":"20240201213321-gkltx1o","updated":"20240201213321"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"TCP（Transmission Control Protocol，传输控制协议 ）"},{"Type":"NodeText","Data":"：提供 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"面向连接"},{"Type":"NodeText","Data":" 的，"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"可靠"},{"Type":"NodeText","Data":" 的数据传输服务。"}]}]},{"ID":"20240201213322-p1edul5","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213322-p1edul5","updated":"20240201213322"},"Children":[{"ID":"20240201213323-14z2e6z","Type":"NodeParagraph","Properties":{"id":"20240201213323-14z2e6z","updated":"20240201213323"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"UDP（User Datagram Protocol，用户数据协议）"},{"Type":"NodeText","Data":"：提供 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"无连接"},{"Type":"NodeText","Data":" 的，"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"尽最大努力"},{"Type":"NodeText","Data":" 的数据传输服务（不保证数据传输的可靠性），简单高效。"}]}]}]},{"ID":"20240201213324-fqj00s6","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20240201213324-fqj00s6","updated":"20240201213324"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"网络层有哪些常见的协议？"}]},{"ID":"20240201213325-x56gogv","Type":"NodeParagraph","Properties":{"id":"20240201213325-x56gogv","updated":"20240201213325"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"网络层常见协议","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"assets/nerwork-layer-protocol-20240201213826-gmgcysg.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201213326-2l1v8uv","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213326-2l1v8uv","updated":"20240201213326"},"Children":[{"ID":"20240201213327-t6uk8bh","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213327-t6uk8bh","updated":"20240201213327"},"Children":[{"ID":"20240201213328-g9fn3gc","Type":"NodeParagraph","Properties":{"id":"20240201213328-g9fn3gc","updated":"20240201213328"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"IP（Internet Protocol，网际协议）"},{"Type":"NodeText","Data":"：TCP/IP 协议中最重要的协议之一，属于网络层的协议，主要作用是定义数据包的格式、对数据包进行路由和寻址，以便它们可以跨网络传播并到达正确的目的地。目前 IP 协议主要分为两种，一种是过去的 IPv4，另一种是较新的 IPv6，目前这两种协议都在使用，但后者已经被提议来取代前者。"}]}]},{"ID":"20240201213329-7den4yd","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213329-7den4yd","updated":"20240201213329"},"Children":[{"ID":"20240201213330-15vr5et","Type":"NodeParagraph","Properties":{"id":"20240201213330-15vr5et","updated":"20240201213330"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"ARP（Address Resolution Protocol，地址解析协议）"},{"Type":"NodeText","Data":"：ARP 协议解决的是网络层地址和链路层地址之间的转换问题。因为一个 IP 数据报在物理上传输的过程中，总是需要知道下一跳（物理上的下一个目的地）该去往何处，但 IP 地址属于逻辑地址，而 MAC 地址才是物理地址，ARP 协议解决了 IP 地址转 MAC 地址的一些问题。"}]}]},{"ID":"20240201213331-k58ozz5","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213331-k58ozz5","updated":"20240201213331"},"Children":[{"ID":"20240201213332-twvb2xi","Type":"NodeParagraph","Properties":{"id":"20240201213332-twvb2xi","updated":"20240201213332"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"ICMP（Internet Control Message Protocol，互联网控制报文协议）"},{"Type":"NodeText","Data":"：一种用于传输网络状态和错误消息的协议，常用于网络诊断和故障排除。例如，Ping 工具就使用了 ICMP 协议来测试网络连通性。"}]}]},{"ID":"20240201213333-hfqid5t","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213333-hfqid5t","updated":"20240201213333"},"Children":[{"ID":"20240201213334-ml0oud5","Type":"NodeParagraph","Properties":{"id":"20240201213334-ml0oud5","updated":"20240201213334"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"NAT（Network Address Translation，网络地址转换协议）"},{"Type":"NodeText","Data":"：NAT 协议的应用场景如同它的名称——网络地址转换，应用于内部网到外部网的地址转换过程中。具体地说，在一个小的子网（局域网，LAN）内，各主机使用的是同一个 LAN 下的 IP 地址，但在该 LAN 以外，在广域网（WAN）中，需要一个统一的 IP 地址来标识该 LAN 在整个 Internet 上的位置。"}]}]},{"ID":"20240201213335-oagfzsw","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213335-oagfzsw","updated":"20240201213335"},"Children":[{"ID":"20240201213336-5helxq8","Type":"NodeParagraph","Properties":{"id":"20240201213336-5helxq8","updated":"20240201213336"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"OSPF（Open Shortest Path First，开放式最短路径优先）"},{"Type":"NodeText","Data":" ）：一种内部网关协议（Interior Gateway Protocol，IGP），也是广泛使用的一种动态路由协议，基于链路状态算法，考虑了链路的带宽、延迟等因素来选择最佳路径。"}]}]},{"ID":"20240201213337-xxln92y","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213337-xxln92y","updated":"20240201213337"},"Children":[{"ID":"20240201213338-dbpkg31","Type":"NodeParagraph","Properties":{"id":"20240201213338-dbpkg31","updated":"20240201213338"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"RIP(Routing Information Protocol，路由信息协议）"},{"Type":"NodeText","Data":"：一种内部网关协议（Interior Gateway Protocol，IGP），也是一种动态路由协议，基于距离向量算法，使用固定的跳数作为度量标准，选择跳数最少的路径作为最佳路径。"}]}]},{"ID":"20240201213339-w65yetf","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213339-w65yetf","updated":"20240201213339"},"Children":[{"ID":"20240201213340-bh1pyni","Type":"NodeParagraph","Properties":{"id":"20240201213340-bh1pyni","updated":"20240201213340"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"BGP（Border Gateway Protocol，边界网关协议）"},{"Type":"NodeText","Data":"：一种用来在路由选择域之间交换网络层可达性信息（Network Layer Reachability Information，NLRI）的路由选择协议，具有高度的灵活性和可扩展性。"}]}]}]},{"ID":"20240201213341-xm0mnlq","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240201213341-xm0mnlq","updated":"20240201213341"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"HTTP"}]},{"ID":"20240201213342-x2os4f2","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240201213342-x2os4f2","updated":"20240201213342"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"从输入 URL 到页面展示到底发生了什么？（非常重要）"}]},{"ID":"20240201213343-jz973a9","Type":"NodeBlockquote","Properties":{"id":"20240201213343-jz973a9","updated":"20240201213343"},"Children":[{"Type":"NodeBlockquoteMarker","Data":"\u003e ","Properties":{"id":""}},{"ID":"20240201213344-5la86it","Type":"NodeParagraph","Properties":{"id":"20240201213344-5la86it","updated":"20240201213344"},"Children":[{"Type":"NodeText","Data":"类似的问题：打开一个网页，整个过程会使用哪些协议？"}]}]},{"ID":"20240201213345-3pdxt3b","Type":"NodeParagraph","Properties":{"id":"20240201213345-3pdxt3b","updated":"20240201213345"},"Children":[{"Type":"NodeText","Data":"先来看一张图（来源于《图解 HTTP》）："}]},{"ID":"20240201213346-mg3ljg6","Type":"NodeHTMLBlock","Data":"\u003cdiv\u003e\n\u003cimg src=\"https://oss.javaguide.cn/github/javaguide/url%E8%BE%93%E5%85%A5%E5%88%B0%E5%B1%95%E7%A4%BA%E5%87%BA%E6%9D%A5%E7%9A%84%E8%BF%87%E7%A8%8B.jpg\" style=\"zoom:50%\" /\u003e\n\u003c/div\u003e","HtmlBlockType":7,"Properties":{"id":"20240201213346-mg3ljg6","updated":"20240201213346"}},{"ID":"20240201213347-qcg5ylx","Type":"NodeParagraph","Properties":{"id":"20240201213347-qcg5ylx","updated":"20240201213347"},"Children":[{"Type":"NodeText","Data":"上图有一个错误需要注意：是 OSPF 不是 OPSF。 OSPF（Open Shortest Path First，ospf）开放最短路径优先协议, 是由 Internet 工程任务组开发的路由选择协议"}]},{"ID":"20240201213348-1ua72fe","Type":"NodeParagraph","Properties":{"id":"20240201213348-1ua72fe","updated":"20240201213348"},"Children":[{"Type":"NodeText","Data":"总体来说分为以下几个步骤:"}]},{"ID":"20240201213349-oadnwyj","Type":"NodeList","ListData":{"Typ":1,"Tight":true,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20240201213349-oadnwyj","updated":"20240201213349"},"Children":[{"ID":"20240201213350-yq0hlxr","Type":"NodeListItem","Data":"1","ListData":{"Typ":1,"Tight":true,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20240201213350-yq0hlxr","updated":"20240201213350"},"Children":[{"ID":"20240201213351-rly8zc2","Type":"NodeParagraph","Properties":{"id":"20240201213351-rly8zc2","updated":"20240201213351"},"Children":[{"Type":"NodeText","Data":"在浏览器中输入指定网页的 URL。"}]}]},{"ID":"20240201213352-rxt7b7s","Type":"NodeListItem","Data":"2","ListData":{"Typ":1,"Tight":true,"Start":2,"Delimiter":46,"Padding":3,"Marker":"Mg==","Num":2},"Properties":{"id":"20240201213352-rxt7b7s","updated":"20240201213352"},"Children":[{"ID":"20240201213353-ix0a1ae","Type":"NodeParagraph","Properties":{"id":"20240201213353-ix0a1ae","updated":"20240201213353"},"Children":[{"Type":"NodeText","Data":"浏览器通过 DNS 协议，获取域名对应的 IP 地址。"}]}]},{"ID":"20240201213354-gtzmr54","Type":"NodeListItem","Data":"3","ListData":{"Typ":1,"Tight":true,"Start":3,"Delimiter":46,"Padding":3,"Marker":"Mw==","Num":3},"Properties":{"id":"20240201213354-gtzmr54","updated":"20240201213354"},"Children":[{"ID":"20240201213355-xqjhqq0","Type":"NodeParagraph","Properties":{"id":"20240201213355-xqjhqq0","updated":"20240201213355"},"Children":[{"Type":"NodeText","Data":"浏览器根据 IP 地址和端口号，向目标服务器发起一个 TCP 连接请求。"}]}]},{"ID":"20240201213356-mn51iet","Type":"NodeListItem","Data":"4","ListData":{"Typ":1,"Tight":true,"Start":4,"Delimiter":46,"Padding":3,"Marker":"NA==","Num":4},"Properties":{"id":"20240201213356-mn51iet","updated":"20240201213356"},"Children":[{"ID":"20240201213357-dkx4zi1","Type":"NodeParagraph","Properties":{"id":"20240201213357-dkx4zi1","updated":"20240201213357"},"Children":[{"Type":"NodeText","Data":"浏览器在 TCP 连接上，向服务器发送一个 HTTP 请求报文，请求获取网页的内容。"}]}]},{"ID":"20240201213358-ma95cue","Type":"NodeListItem","Data":"5","ListData":{"Typ":1,"Tight":true,"Start":5,"Delimiter":46,"Padding":3,"Marker":"NQ==","Num":5},"Properties":{"id":"20240201213358-ma95cue","updated":"20240201213358"},"Children":[{"ID":"20240201213359-893r0kq","Type":"NodeParagraph","Properties":{"id":"20240201213359-893r0kq","updated":"20240201213359"},"Children":[{"Type":"NodeText","Data":"服务器收到 HTTP 请求报文后，处理请求，并返回 HTTP 响应报文给浏览器。"}]}]},{"ID":"20240201213360-nybjfbb","Type":"NodeListItem","Data":"6","ListData":{"Typ":1,"Tight":true,"Start":6,"Delimiter":46,"Padding":3,"Marker":"Ng==","Num":6},"Properties":{"id":"20240201213360-nybjfbb","updated":"20240201213360"},"Children":[{"ID":"20240201213361-cx7y7gs","Type":"NodeParagraph","Properties":{"id":"20240201213361-cx7y7gs","updated":"20240201213361"},"Children":[{"Type":"NodeText","Data":"浏览器收到 HTTP 响应报文后，解析响应体中的 HTML 代码，渲染网页的结构和样式，同时根据 HTML 中的其他资源的 URL（如图片、CSS、JS 等），再次发起 HTTP 请求，获取这些资源的内容，直到网页完全加载显示。"}]}]},{"ID":"20240201213362-2q0oyy0","Type":"NodeListItem","Data":"7","ListData":{"Typ":1,"Tight":true,"Start":7,"Delimiter":46,"Padding":3,"Marker":"Nw==","Num":7},"Properties":{"id":"20240201213362-2q0oyy0","updated":"20240201213362"},"Children":[{"ID":"20240201213363-i943r2s","Type":"NodeParagraph","Properties":{"id":"20240201213363-i943r2s","updated":"20240201213363"},"Children":[{"Type":"NodeText","Data":"浏览器在不需要和服务器通信时，可以主动关闭 TCP 连接，或者等待服务器的关闭请求。"}]}]}]},{"ID":"20240201213364-7h63t24","Type":"NodeParagraph","Properties":{"id":"20240201213364-7h63t24","updated":"20240201213364"},"Children":[{"Type":"NodeText","Data":"详细介绍可以查看这篇文章："},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"./the-whole-process-of-accessing-web-pages.md","TextMarkTextContent":"访问网页的全过程（知识串联）"},{"Type":"NodeText","Data":"（强烈推荐）。"}]},{"ID":"20240201213365-4ih2l3h","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240201213365-4ih2l3h","updated":"20240201213365"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"HTTP 状态码有哪些？"}]},{"ID":"20240201213366-qv4e09b","Type":"NodeParagraph","Properties":{"id":"20240201213366-qv4e09b","updated":"20240201213366"},"Children":[{"Type":"NodeText","Data":"HTTP 状态码用于描述 HTTP 请求的结果，比如 2xx 就代表请求被成功处理。"}]},{"ID":"20240201213367-gwb0bi8","Type":"NodeParagraph","Properties":{"id":"20240201213367-gwb0bi8","updated":"20240201213367"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"常见 HTTP 状态码","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"https://oss.javaguide.cn/github/javaguide/cs-basics/network/http-status-code.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201213368-ckxkn73","Type":"NodeParagraph","Properties":{"id":"20240201213368-ckxkn73","updated":"20240201213368"},"Children":[{"Type":"NodeText","Data":"关于 HTTP 状态码更详细的总结，可以看我写的这篇文章："},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"./http-status-codes.md","TextMarkTextContent":"HTTP 常见状态码总结（应用层）"},{"Type":"NodeText","Data":"。"}]},{"ID":"20240201213369-gfemjqj","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240201213369-gfemjqj","updated":"20240201213369"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"HTTP Header 中常见的字段有哪些？"}]},{"ID":"20240201213370-jwen440","Type":"NodeTable","Data":"| 请求头字段名        | 说明                                                                                                                                                                            | 示例                                                                                       |\n| :------------------ | :------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ | :----------------------------------------------------------------------------------------- |\n| Accept              | 能够接受的回应内容类型（Content-Types）。                                                                                                                                       | Accept: text/plain                                                                         |\n| Accept-Charset      | 能够接受的字符集                                                                                                                                                                | Accept-Charset: utf-8                                                                      |\n| Accept-Datetime     | 能够接受的按照时间来表示的版本                                                                                                                                                  | Accept-Datetime: Thu, 31 May 2007 20:35:00 GMT                                             |\n| Accept-Encoding     | 能够接受的编码方式列表。参考 HTTP 压缩。                                                                                                                                        | Accept-Encoding: gzip, deflate                                                             |\n| Accept-Language     | 能够接受的回应内容的自然语言列表。                                                                                                                                              | Accept-Language: en-US                                                                     |\n| Authorization       | 用于超文本传输协议的认证的认证信息                                                                                                                                              | Authorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==                                          |\n| Cache-Control       | 用来指定在这次的请求/响应链中的所有缓存机制 都必须 遵守的指令                                                                                                                   | Cache-Control: no-cache                                                                    |\n| Connection          | 该浏览器想要优先使用的连接类型                                                                                                                                                  | Connection: keep-alive Connection: Upgrade                                                 |\n| Content-Length      | 以 八位字节数组 （8 位的字节）表示的请求体的长度                                                                                                                                | Content-Length: 348                                                                        |\n| Content-MD5         | 请求体的内容的二进制 MD5 散列值，以 Base64 编码的结果                                                                                                                           | Content-MD5: Q2hlY2sgSW50ZWdyaXR5IQ==                                                      |\n| Content-Type        | 请求体的 多媒体类型 （用于 POST 和 PUT 请求中）                                                                                                                                 | Content-Type: application/x-www-form-urlencoded                                            |\n| Cookie              | 之前由服务器通过 Set- Cookie （下文详述）发送的一个 超文本传输协议 Cookie                                                                                                       | Cookie: \\$Version=1; Skin=new;                                                             |\n| Date                | 发送该消息的日期和时间(按照 RFC 7231 中定义的\"超文本传输协议日期\"格式来发送)                                                                                                    | Date: Tue, 15 Nov 1994 08:12:31 GMT                                                        |\n| Expect              | 表明客户端要求服务器做出特定的行为                                                                                                                                              | Expect: 100-continue                                                                       |\n| From                | 发起此请求的用户的邮件地址                                                                                                                                                      | From: [user@example.com](mailto:user@example.com)                                          |\n| Host                | 服务器的域名(用于虚拟主机 )，以及服务器所监听的传输控制协议端口号。如果所请求的端口是对应的服务的标准端口，则端口号可被省略。                                                   | Host: en.wikipedia.org:80                                                                  |\n| If-Match            | 仅当客户端提供的实体与服务器上对应的实体相匹配时，才进行对应的操作。主要作用时，用作像 PUT 这样的方法中，仅当从用户上次更新某个资源以来，该资源未被修改的情况下，才更新该资源。 | If-Match: “737060cd8c284d8af7ad3082f209582d”                                               |\n| If-Modified-Since   | 允许在对应的内容未被修改的情况下返回 304 未修改（ 304 Not Modified ）                                                                                                           | If-Modified-Since: Sat, 29 Oct 1994 19:43:31 GMT                                           |\n| If-None-Match       | 允许在对应的内容未被修改的情况下返回 304 未修改（ 304 Not Modified ）                                                                                                           | If-None-Match: “737060cd8c284d8af7ad3082f209582d”                                          |\n| If-Range            | 如果该实体未被修改过，则向我发送我所缺少的那一个或多个部分；否则，发送整个新的实体                                                                                              | If-Range: “737060cd8c284d8af7ad3082f209582d”                                               |\n| If-Unmodified-Since | 仅当该实体自某个特定时间已来未被修改的情况下，才发送回应。                                                                                                                      | If-Unmodified-Since: Sat, 29 Oct 1994 19:43:31 GMT                                         |\n| Max-Forwards        | 限制该消息可被代理及网关转发的次数。                                                                                                                                            | Max-Forwards: 10                                                                           |\n| Origin              | 发起一个针对 跨来源资源共享 的请求。                                                                                                                                            | Origin: [http://www.example-social-network.com](http://www.example-social-network.com/)    |\n| Pragma              | 与具体的实现相关，这些字段可能在请求/回应链中的任何时候产生多种效果。                                                                                                           | Pragma: no-cache                                                                           |\n| Proxy-Authorization | 用来向代理进行认证的认证信息。                                                                                                                                                  | Proxy-Authorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==                                    |\n| Range               | 仅请求某个实体的一部分。字节偏移以 0 开始。参见字节服务。                                                                                                                       | Range: bytes=500-999                                                                       |\n| Referer             | 表示浏览器所访问的前一个页面，正是那个页面上的某个链接将浏览器带到了当前所请求的这个页面。                                                                                      | Referer: [http://en.wikipedia.org/wiki/Main_Page](https://en.wikipedia.org/wiki/Main_Page) |\n| TE                  | 浏览器预期接受的传输编码方式：可使用回应协议头 Transfer-Encoding 字段中的值；                                                                                                   | TE: trailers, deflate                                                                      |\n| Upgrade             | 要求服务器升级到另一个协议。                                                                                                                                                    | Upgrade: HTTP/2.0, SHTTP/1.3, IRC/6.9, RTA/x11                                             |\n| User-Agent          | 浏览器的浏览器身份标识字符串                                                                                                                                                    | User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:12.0) Gecko/20100101 Firefox/21.0           |\n| Via                 | 向服务器告知，这个请求是由哪些代理发出的。                                                                                                                                      | Via: 1.0 fred, 1.1 example.com (Apache/1.1)                                                |\n| Warning             | 一个一般性的警告，告知，在实体内容体中可能存在错误。                                                                                                                            | Warning: 199 Miscellaneous warning                                                         |","TableAligns":[1,1,1],"Properties":{"id":"20240201213370-jwen440","updated":"20240201213370"},"Children":[{"Type":"NodeTableHead","Properties":{"id":""},"Children":[{"Type":"NodeTableRow","Properties":{"id":""},"Children":[{"Type":"NodeTableCell","TableCellAlign":1,"Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"请求头字段名"}]},{"Type":"NodeTableCell","TableCellAlign":1,"Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"说明"}]},{"Type":"NodeTableCell","TableCellAlign":1,"Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"示例"}]}]}]},{"Type":"NodeTableRow","TableAligns":[1,1,1],"Properties":{"id":""},"Children":[{"Type":"NodeTableCell","TableCellAlign":1,"Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"Accept"}]},{"Type":"NodeTableCell","TableCellAlign":1,"Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"能够接受的回应内容类型（Content-Types）。"}]},{"Type":"NodeTableCell","TableCellAlign":1,"Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"Accept: text/plain"}]}]},{"Type":"NodeTableRow","TableAligns":[1,1,1],"Properties":{"id":""},"Children":[{"Type":"NodeTableCell","TableCellAlign":1,"Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"Accept-Charset"}]},{"Type":"NodeTableCell","TableCellAlign":1,"Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"能够接受的字符集"}]},{"Type":"NodeTableCell","TableCellAlign":1,"Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"Accept-Charset: utf-8"}]}]},{"Type":"NodeTableRow","TableAligns":[1,1,1],"Properties":{"id":""},"Children":[{"Type":"NodeTableCell","TableCellAlign":1,"Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"Accept-Datetime"}]},{"Type":"NodeTableCell","TableCellAlign":1,"Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"能够接受的按照时间来表示的版本"}]},{"Type":"NodeTableCell","TableCellAlign":1,"Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"Accept-Datetime: Thu, 31 May 2007 20:35:00 GMT"}]}]},{"Type":"NodeTableRow","TableAligns":[1,1,1],"Properties":{"id":""},"Children":[{"Type":"NodeTableCell","TableCellAlign":1,"Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"Accept-Encoding"}]},{"Type":"NodeTableCell","TableCellAlign":1,"Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"能够接受的编码方式列表。参考 HTTP 压缩。"}]},{"Type":"NodeTableCell","TableCellAlign":1,"Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"Accept-Encoding: gzip, deflate"}]}]},{"Type":"NodeTableRow","TableAligns":[1,1,1],"Properties":{"id":""},"Children":[{"Type":"NodeTableCell","TableCellAlign":1,"Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"Accept-Language"}]},{"Type":"NodeTableCell","TableCellAlign":1,"Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"能够接受的回应内容的自然语言列表。"}]},{"Type":"NodeTableCell","TableCellAlign":1,"Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"Accept-Language: en-US"}]}]},{"Type":"NodeTableRow","TableAligns":[1,1,1],"Properties":{"id":""},"Children":[{"Type":"NodeTableCell","TableCellAlign":1,"Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"Authorization"}]},{"Type":"NodeTableCell","TableCellAlign":1,"Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"用于超文本传输协议的认证的认证信息"}]},{"Type":"NodeTableCell","TableCellAlign":1,"Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"Authorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ=="}]}]},{"Type":"NodeTableRow","TableAligns":[1,1,1],"Properties":{"id":""},"Children":[{"Type":"NodeTableCell","TableCellAlign":1,"Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"Cache-Control"}]},{"Type":"NodeTableCell","TableCellAlign":1,"Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"用来指定在这次的请求/响应链中的所有缓存机制 都必须 遵守的指令"}]},{"Type":"NodeTableCell","TableCellAlign":1,"Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"Cache-Control: no-cache"}]}]},{"Type":"NodeTableRow","TableAligns":[1,1,1],"Properties":{"id":""},"Children":[{"Type":"NodeTableCell","TableCellAlign":1,"Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"Connection"}]},{"Type":"NodeTableCell","TableCellAlign":1,"Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"该浏览器想要优先使用的连接类型"}]},{"Type":"NodeTableCell","TableCellAlign":1,"Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"Connection: keep-alive Connection: Upgrade"}]}]},{"Type":"NodeTableRow","TableAligns":[1,1,1],"Properties":{"id":""},"Children":[{"Type":"NodeTableCell","TableCellAlign":1,"Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"Content-Length"}]},{"Type":"NodeTableCell","TableCellAlign":1,"Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"以 八位字节数组 （8 位的字节）表示的请求体的长度"}]},{"Type":"NodeTableCell","TableCellAlign":1,"Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"Content-Length: 348"}]}]},{"Type":"NodeTableRow","TableAligns":[1,1,1],"Properties":{"id":""},"Children":[{"Type":"NodeTableCell","TableCellAlign":1,"Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"Content-MD5"}]},{"Type":"NodeTableCell","TableCellAlign":1,"Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"请求体的内容的二进制 MD5 散列值，以 Base64 编码的结果"}]},{"Type":"NodeTableCell","TableCellAlign":1,"Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"Content-MD5: Q2hlY2sgSW50ZWdyaXR5IQ=="}]}]},{"Type":"NodeTableRow","TableAligns":[1,1,1],"Properties":{"id":""},"Children":[{"Type":"NodeTableCell","TableCellAlign":1,"Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"Content-Type"}]},{"Type":"NodeTableCell","TableCellAlign":1,"Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"请求体的 多媒体类型 （用于 POST 和 PUT 请求中）"}]},{"Type":"NodeTableCell","TableCellAlign":1,"Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"Content-Type: application/x-www-form-urlencoded"}]}]},{"Type":"NodeTableRow","TableAligns":[1,1,1],"Properties":{"id":""},"Children":[{"Type":"NodeTableCell","TableCellAlign":1,"Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"Cookie"}]},{"Type":"NodeTableCell","TableCellAlign":1,"Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"之前由服务器通过 Set- Cookie （下文详述）发送的一个 超文本传输协议 Cookie"}]},{"Type":"NodeTableCell","TableCellAlign":1,"Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"Cookie: "},{"Type":"NodeBackslash","Properties":{"id":""},"Children":[{"Type":"NodeBackslashContent","Data":"$","Properties":{"id":""}}]},{"Type":"NodeText","Data":"Version=1; Skin=new;"}]}]},{"Type":"NodeTableRow","TableAligns":[1,1,1],"Properties":{"id":""},"Children":[{"Type":"NodeTableCell","TableCellAlign":1,"Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"Date"}]},{"Type":"NodeTableCell","TableCellAlign":1,"Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"发送该消息的日期和时间(按照 RFC 7231 中定义的\"超文本传输协议日期\"格式来发送)"}]},{"Type":"NodeTableCell","TableCellAlign":1,"Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"Date: Tue, 15 Nov 1994 08:12:31 GMT"}]}]},{"Type":"NodeTableRow","TableAligns":[1,1,1],"Properties":{"id":""},"Children":[{"Type":"NodeTableCell","TableCellAlign":1,"Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"Expect"}]},{"Type":"NodeTableCell","TableCellAlign":1,"Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"表明客户端要求服务器做出特定的行为"}]},{"Type":"NodeTableCell","TableCellAlign":1,"Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"Expect: 100-continue"}]}]},{"Type":"NodeTableRow","TableAligns":[1,1,1],"Properties":{"id":""},"Children":[{"Type":"NodeTableCell","TableCellAlign":1,"Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"From"}]},{"Type":"NodeTableCell","TableCellAlign":1,"Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"发起此请求的用户的邮件地址"}]},{"Type":"NodeTableCell","TableCellAlign":1,"Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"From: "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"mailto:user@example.com","TextMarkTextContent":"user@example.com"}]}]},{"Type":"NodeTableRow","TableAligns":[1,1,1],"Properties":{"id":""},"Children":[{"Type":"NodeTableCell","TableCellAlign":1,"Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"Host"}]},{"Type":"NodeTableCell","TableCellAlign":1,"Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"服务器的域名(用于虚拟主机 )，以及服务器所监听的传输控制协议端口号。如果所请求的端口是对应的服务的标准端口，则端口号可被省略。"}]},{"Type":"NodeTableCell","TableCellAlign":1,"Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"Host: en.wikipedia.org:80"}]}]},{"Type":"NodeTableRow","TableAligns":[1,1,1],"Properties":{"id":""},"Children":[{"Type":"NodeTableCell","TableCellAlign":1,"Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"If-Match"}]},{"Type":"NodeTableCell","TableCellAlign":1,"Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"仅当客户端提供的实体与服务器上对应的实体相匹配时，才进行对应的操作。主要作用时，用作像 PUT 这样的方法中，仅当从用户上次更新某个资源以来，该资源未被修改的情况下，才更新该资源。"}]},{"Type":"NodeTableCell","TableCellAlign":1,"Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"If-Match: “737060cd8c284d8af7ad3082f209582d”"}]}]},{"Type":"NodeTableRow","TableAligns":[1,1,1],"Properties":{"id":""},"Children":[{"Type":"NodeTableCell","TableCellAlign":1,"Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"If-Modified-Since"}]},{"Type":"NodeTableCell","TableCellAlign":1,"Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"允许在对应的内容未被修改的情况下返回 304 未修改（ 304 Not Modified ）"}]},{"Type":"NodeTableCell","TableCellAlign":1,"Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"If-Modified-Since: Sat, 29 Oct 1994 19:43:31 GMT"}]}]},{"Type":"NodeTableRow","TableAligns":[1,1,1],"Properties":{"id":""},"Children":[{"Type":"NodeTableCell","TableCellAlign":1,"Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"If-None-Match"}]},{"Type":"NodeTableCell","TableCellAlign":1,"Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"允许在对应的内容未被修改的情况下返回 304 未修改（ 304 Not Modified ）"}]},{"Type":"NodeTableCell","TableCellAlign":1,"Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"If-None-Match: “737060cd8c284d8af7ad3082f209582d”"}]}]},{"Type":"NodeTableRow","TableAligns":[1,1,1],"Properties":{"id":""},"Children":[{"Type":"NodeTableCell","TableCellAlign":1,"Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"If-Range"}]},{"Type":"NodeTableCell","TableCellAlign":1,"Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"如果该实体未被修改过，则向我发送我所缺少的那一个或多个部分；否则，发送整个新的实体"}]},{"Type":"NodeTableCell","TableCellAlign":1,"Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"If-Range: “737060cd8c284d8af7ad3082f209582d”"}]}]},{"Type":"NodeTableRow","TableAligns":[1,1,1],"Properties":{"id":""},"Children":[{"Type":"NodeTableCell","TableCellAlign":1,"Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"If-Unmodified-Since"}]},{"Type":"NodeTableCell","TableCellAlign":1,"Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"仅当该实体自某个特定时间已来未被修改的情况下，才发送回应。"}]},{"Type":"NodeTableCell","TableCellAlign":1,"Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"If-Unmodified-Since: Sat, 29 Oct 1994 19:43:31 GMT"}]}]},{"Type":"NodeTableRow","TableAligns":[1,1,1],"Properties":{"id":""},"Children":[{"Type":"NodeTableCell","TableCellAlign":1,"Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"Max-Forwards"}]},{"Type":"NodeTableCell","TableCellAlign":1,"Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"限制该消息可被代理及网关转发的次数。"}]},{"Type":"NodeTableCell","TableCellAlign":1,"Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"Max-Forwards: 10"}]}]},{"Type":"NodeTableRow","TableAligns":[1,1,1],"Properties":{"id":""},"Children":[{"Type":"NodeTableCell","TableCellAlign":1,"Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"Origin"}]},{"Type":"NodeTableCell","TableCellAlign":1,"Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"发起一个针对 跨来源资源共享 的请求。"}]},{"Type":"NodeTableCell","TableCellAlign":1,"Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"Origin: "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"http://www.example-social-network.com/","TextMarkTextContent":"http://www.example-social-network.com"}]}]},{"Type":"NodeTableRow","TableAligns":[1,1,1],"Properties":{"id":""},"Children":[{"Type":"NodeTableCell","TableCellAlign":1,"Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"Pragma"}]},{"Type":"NodeTableCell","TableCellAlign":1,"Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"与具体的实现相关，这些字段可能在请求/回应链中的任何时候产生多种效果。"}]},{"Type":"NodeTableCell","TableCellAlign":1,"Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"Pragma: no-cache"}]}]},{"Type":"NodeTableRow","TableAligns":[1,1,1],"Properties":{"id":""},"Children":[{"Type":"NodeTableCell","TableCellAlign":1,"Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"Proxy-Authorization"}]},{"Type":"NodeTableCell","TableCellAlign":1,"Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"用来向代理进行认证的认证信息。"}]},{"Type":"NodeTableCell","TableCellAlign":1,"Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"Proxy-Authorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ=="}]}]},{"Type":"NodeTableRow","TableAligns":[1,1,1],"Properties":{"id":""},"Children":[{"Type":"NodeTableCell","TableCellAlign":1,"Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"Range"}]},{"Type":"NodeTableCell","TableCellAlign":1,"Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"仅请求某个实体的一部分。字节偏移以 0 开始。参见字节服务。"}]},{"Type":"NodeTableCell","TableCellAlign":1,"Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"Range: bytes=500-999"}]}]},{"Type":"NodeTableRow","TableAligns":[1,1,1],"Properties":{"id":""},"Children":[{"Type":"NodeTableCell","TableCellAlign":1,"Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"Referer"}]},{"Type":"NodeTableCell","TableCellAlign":1,"Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"表示浏览器所访问的前一个页面，正是那个页面上的某个链接将浏览器带到了当前所请求的这个页面。"}]},{"Type":"NodeTableCell","TableCellAlign":1,"Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"Referer: "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://en.wikipedia.org/wiki/Main_Page","TextMarkTextContent":"http://en.wikipedia.org/wiki/Main_Page"}]}]},{"Type":"NodeTableRow","TableAligns":[1,1,1],"Properties":{"id":""},"Children":[{"Type":"NodeTableCell","TableCellAlign":1,"Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"TE"}]},{"Type":"NodeTableCell","TableCellAlign":1,"Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"浏览器预期接受的传输编码方式：可使用回应协议头 Transfer-Encoding 字段中的值；"}]},{"Type":"NodeTableCell","TableCellAlign":1,"Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"TE: trailers, deflate"}]}]},{"Type":"NodeTableRow","TableAligns":[1,1,1],"Properties":{"id":""},"Children":[{"Type":"NodeTableCell","TableCellAlign":1,"Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"Upgrade"}]},{"Type":"NodeTableCell","TableCellAlign":1,"Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"要求服务器升级到另一个协议。"}]},{"Type":"NodeTableCell","TableCellAlign":1,"Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"Upgrade: HTTP/2.0, SHTTP/1.3, IRC/6.9, RTA/x11"}]}]},{"Type":"NodeTableRow","TableAligns":[1,1,1],"Properties":{"id":""},"Children":[{"Type":"NodeTableCell","TableCellAlign":1,"Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"User-Agent"}]},{"Type":"NodeTableCell","TableCellAlign":1,"Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"浏览器的浏览器身份标识字符串"}]},{"Type":"NodeTableCell","TableCellAlign":1,"Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:12.0) Gecko/20100101 Firefox/21.0"}]}]},{"Type":"NodeTableRow","TableAligns":[1,1,1],"Properties":{"id":""},"Children":[{"Type":"NodeTableCell","TableCellAlign":1,"Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"Via"}]},{"Type":"NodeTableCell","TableCellAlign":1,"Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"向服务器告知，这个请求是由哪些代理发出的。"}]},{"Type":"NodeTableCell","TableCellAlign":1,"Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"Via: 1.0 fred, 1.1 example.com (Apache/1.1)"}]}]},{"Type":"NodeTableRow","TableAligns":[1,1,1],"Properties":{"id":""},"Children":[{"Type":"NodeTableCell","TableCellAlign":1,"Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"Warning"}]},{"Type":"NodeTableCell","TableCellAlign":1,"Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"一个一般性的警告，告知，在实体内容体中可能存在错误。"}]},{"Type":"NodeTableCell","TableCellAlign":1,"Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"Warning: 199 Miscellaneous warning"}]}]}]},{"ID":"20240201213371-e3pbry3","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240201213371-e3pbry3","updated":"20240201213371"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"HTTP 和 HTTPS 有什么区别？（重要）"}]},{"ID":"20240201213372-3cl7vxx","Type":"NodeParagraph","Properties":{"id":"20240201213372-3cl7vxx","updated":"20240201213372"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"HTTP 和 HTTPS 对比","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"https://oss.javaguide.cn/github/javaguide/cs-basics/network/http-vs-https.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201213373-sfd4enk","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213373-sfd4enk","updated":"20240201213373"},"Children":[{"ID":"20240201213374-7xuzgpi","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213374-7xuzgpi","updated":"20240201213374"},"Children":[{"ID":"20240201213375-myl4sb1","Type":"NodeParagraph","Properties":{"id":"20240201213375-myl4sb1","updated":"20240201213375"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"端口号"},{"Type":"NodeText","Data":"：HTTP 默认是 80，HTTPS 默认是 443。"}]}]},{"ID":"20240201213376-rjgixsp","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213376-rjgixsp","updated":"20240201213376"},"Children":[{"ID":"20240201213377-dxatf9o","Type":"NodeParagraph","Properties":{"id":"20240201213377-dxatf9o","updated":"20240201213377"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"URL 前缀"},{"Type":"NodeText","Data":"：HTTP 的 URL 前缀是 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"http://"},{"Type":"NodeText","Data":"，HTTPS 的 URL 前缀是 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"https://"},{"Type":"NodeText","Data":"。"}]}]},{"ID":"20240201213378-l9d7hcd","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213378-l9d7hcd","updated":"20240201213378"},"Children":[{"ID":"20240201213379-b9vl1x6","Type":"NodeParagraph","Properties":{"id":"20240201213379-b9vl1x6","updated":"20240201213379"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"安全性和资源消耗"},{"Type":"NodeText","Data":"：HTTP 协议运行在 TCP 之上，所有传输的内容都是明文，客户端和服务器端都无法验证对方的身份。HTTPS 是运行在 SSL/TLS 之上的 HTTP 协议，SSL/TLS 运行在 TCP 之上。所有传输的内容都经过加密，加密采用对称加密，但对称加密的密钥用服务器方的证书进行了非对称加密。所以说，HTTP 安全性没有 HTTPS 高，但是 HTTPS 比 HTTP 耗费更多服务器资源。"}]}]},{"ID":"20240201213380-ujq2vfs","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213380-ujq2vfs","updated":"20240201213380"},"Children":[{"ID":"20240201213381-j2cpa4d","Type":"NodeParagraph","Properties":{"id":"20240201213381-j2cpa4d","updated":"20240201213381"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"SEO（搜索引擎优化）"},{"Type":"NodeText","Data":"：搜索引擎通常会更青睐使用 HTTPS 协议的网站，因为 HTTPS 能够提供更高的安全性和用户隐私保护。使用 HTTPS 协议的网站在搜索结果中可能会被优先显示，从而对 SEO 产生影响。"}]}]}]},{"ID":"20240201213382-xb6xtev","Type":"NodeParagraph","Properties":{"id":"20240201213382-xb6xtev","updated":"20240201213382"},"Children":[{"Type":"NodeText","Data":"关于 HTTP 和 HTTPS 更详细的对比总结，可以看我写的这篇文章："},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"./http-vs-https.md","TextMarkTextContent":"HTTP vs HTTPS（应用层）"},{"Type":"NodeText","Data":" 。"}]},{"ID":"20240201213383-iirn3oi","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240201213383-iirn3oi","updated":"20240201213383"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"HTTP/1.0 和 HTTP/1.1 有什么区别？"}]},{"ID":"20240201213384-5nfgwi5","Type":"NodeParagraph","Properties":{"id":"20240201213384-5nfgwi5","updated":"20240201213384"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"HTTP/1.0 和 HTTP/1.1 对比","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"https://oss.javaguide.cn/github/javaguide/cs-basics/network/http1.0-vs-http1.1.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201213385-3ci8ls2","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213385-3ci8ls2","updated":"20240201213385"},"Children":[{"ID":"20240201213386-eky4c2v","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213386-eky4c2v","updated":"20240201213386"},"Children":[{"ID":"20240201213387-ft0axe2","Type":"NodeParagraph","Properties":{"id":"20240201213387-ft0axe2","updated":"20240201213387"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"连接方式"},{"Type":"NodeText","Data":" : HTTP/1.0 为短连接，HTTP/1.1 支持长连接。"}]}]},{"ID":"20240201213388-v6nayxe","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213388-v6nayxe","updated":"20240201213388"},"Children":[{"ID":"20240201213389-u4mk72y","Type":"NodeParagraph","Properties":{"id":"20240201213389-u4mk72y","updated":"20240201213389"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"状态响应码"},{"Type":"NodeText","Data":" : HTTP/1.1 中新加入了大量的状态码，光是错误响应状态码就新增了 24 种。比如说，"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"100 (Continue)"},{"Type":"NodeText","Data":"——在请求大资源前的预热请求，"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"206 (Partial Content)"},{"Type":"NodeText","Data":"——范围请求的标识码，"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"409 (Conflict)"},{"Type":"NodeText","Data":"——请求与当前资源的规定冲突，"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"410 (Gone)"},{"Type":"NodeText","Data":"——资源已被永久转移，而且没有任何已知的转发地址。"}]}]},{"ID":"20240201213390-p8tqo0n","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213390-p8tqo0n","updated":"20240201213390"},"Children":[{"ID":"20240201213391-a9uv4hq","Type":"NodeParagraph","Properties":{"id":"20240201213391-a9uv4hq","updated":"20240201213391"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"缓存机制"},{"Type":"NodeText","Data":" : 在 HTTP/1.0 中主要使用 Header 里的 If-Modified-Since,Expires 来做为缓存判断的标准，HTTP/1.1 则引入了更多的缓存控制策略例如 Entity tag，If-Unmodified-Since, If-Match, If-None-Match 等更多可供选择的缓存头来控制缓存策略。"}]}]},{"ID":"20240201213392-v38jqma","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213392-v38jqma","updated":"20240201213392"},"Children":[{"ID":"20240201213393-l3j47cv","Type":"NodeParagraph","Properties":{"id":"20240201213393-l3j47cv","updated":"20240201213393"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"带宽"},{"Type":"NodeText","Data":"：HTTP/1.0 中，存在一些浪费带宽的现象，例如客户端只是需要某个对象的一部分，而服务器却将整个对象送过来了，并且不支持断点续传功能，HTTP/1.1 则在请求头引入了 range 头域，它允许只请求资源的某个部分，即返回码是 206（Partial Content），这样就方便了开发者自由的选择以便于充分利用带宽和连接。"}]}]},{"ID":"20240201213394-zsjbt7a","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213394-zsjbt7a","updated":"20240201213394"},"Children":[{"ID":"20240201213395-cu7h6ni","Type":"NodeParagraph","Properties":{"id":"20240201213395-cu7h6ni","updated":"20240201213395"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"Host 头（Host Header）处理"},{"Type":"NodeText","Data":" :HTTP/1.1 引入了 Host 头字段，允许在同一 IP 地址上托管多个域名，从而支持虚拟主机的功能。而 HTTP/1.0 没有 Host 头字段，无法实现虚拟主机。"}]}]}]},{"ID":"20240201213396-ose1sgo","Type":"NodeParagraph","Properties":{"id":"20240201213396-ose1sgo","updated":"20240201213396"},"Children":[{"Type":"NodeText","Data":"关于 HTTP/1.0 和 HTTP/1.1 更详细的对比总结，可以看我写的这篇文章："},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"./http1.0-vs-http1.1.md","TextMarkTextContent":"HTTP/1.0 vs HTTP/1.1（应用层）"},{"Type":"NodeText","Data":" 。"}]},{"ID":"20240201213397-qgjpa17","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240201213397-qgjpa17","updated":"20240201213397"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"HTTP/1.1 和 HTTP/2.0 有什么区别？"}]},{"ID":"20240201213398-yv659p8","Type":"NodeParagraph","Properties":{"id":"20240201213398-yv659p8","updated":"20240201213398"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"HTTP/1.0 和 HTTP/1.1 对比","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"https://oss.javaguide.cn/github/javaguide/cs-basics/network/http1.1-vs-http2.0.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201213399-lgrhd3q","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213399-lgrhd3q","updated":"20240201213399"},"Children":[{"ID":"20240201213400-9v7vb5l","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213400-9v7vb5l","updated":"20240201213400"},"Children":[{"ID":"20240201213401-iwacld6","Type":"NodeParagraph","Properties":{"id":"20240201213401-iwacld6","updated":"20240201213401"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"多路复用（Multiplexing）"},{"Type":"NodeText","Data":"：HTTP/2.0 在同一连接上可以同时传输多个请求和响应（可以看作是 HTTP/1.1 中长链接的升级版本），互不干扰。HTTP/1.1 则使用串行方式，每个请求和响应都需要独立的连接，而浏览器为了控制资源会有 6-8 个 TCP 连接都限制。。这使得 HTTP/2.0 在处理多个请求时更加高效，减少了网络延迟和提高了性能。"}]}]},{"ID":"20240201213402-8zzwmzj","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213402-8zzwmzj","updated":"20240201213402"},"Children":[{"ID":"20240201213403-2og9qr3","Type":"NodeParagraph","Properties":{"id":"20240201213403-2og9qr3","updated":"20240201213403"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"二进制帧（Binary Frames）"},{"Type":"NodeText","Data":"：HTTP/2.0 使用二进制帧进行数据传输，而 HTTP/1.1 则使用文本格式的报文。二进制帧更加紧凑和高效，减少了传输的数据量和带宽消耗。"}]}]},{"ID":"20240201213404-1jcg4nm","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213404-1jcg4nm","updated":"20240201213404"},"Children":[{"ID":"20240201213405-fo2trrw","Type":"NodeParagraph","Properties":{"id":"20240201213405-fo2trrw","updated":"20240201213405"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"头部压缩（Header Compression）"},{"Type":"NodeText","Data":"：HTTP/1.1 支持"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"Body"},{"Type":"NodeText","Data":"压缩，"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"Header"},{"Type":"NodeText","Data":"不支持压缩。HTTP/2.0 支持对"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"Header"},{"Type":"NodeText","Data":"压缩，使用了专门为"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"Header"},{"Type":"NodeText","Data":"压缩而设计的 HPACK 算法，减少了网络开销。"}]}]},{"ID":"20240201213406-wf3bk0m","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213406-wf3bk0m","updated":"20240201213406"},"Children":[{"ID":"20240201213407-ajcacuu","Type":"NodeParagraph","Properties":{"id":"20240201213407-ajcacuu","updated":"20240201213407"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"服务器推送（Server Push）"},{"Type":"NodeText","Data":"：HTTP/2.0 支持服务器推送，可以在客户端请求一个资源时，将其他相关资源一并推送给客户端，从而减少了客户端的请求次数和延迟。而 HTTP/1.1 需要客户端自己发送请求来获取相关资源。"}]}]}]},{"ID":"20240201213408-rz1uxlb","Type":"NodeParagraph","Properties":{"id":"20240201213408-rz1uxlb","updated":"20240201213408"},"Children":[{"Type":"NodeText","Data":"HTTP/2.0 多路复用效果图（图源： "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://blog.cloudflare.com/http-2-for-web-developers/","TextMarkTextContent":"HTTP/2 For Web Developers"},{"Type":"NodeText","Data":"）："}]},{"ID":"20240201213409-4zffzwb","Type":"NodeParagraph","Properties":{"id":"20240201213409-4zffzwb","updated":"20240201213409"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"HTTP/2 Multiplexing","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"https://oss.javaguide.cn/github/javaguide/cs-basics/network/http2.0-multiplexing.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201213410-4cuog40","Type":"NodeParagraph","Properties":{"id":"20240201213410-4cuog40","updated":"20240201213410"},"Children":[{"Type":"NodeText","Data":"可以看到，HTTP/2.0 的多路复用使得不同的请求可以共用一个 TCP 连接，避免建立多个连接带来不必要的额外开销，而 HTTP/1.1 中的每个请求都会建立一个单独的连接"}]},{"ID":"20240201213411-sjc6skt","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240201213411-sjc6skt","updated":"20240201213411"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"HTTP/2.0 和 HTTP/3.0 有什么区别？"}]},{"ID":"20240201213412-427b0fw","Type":"NodeParagraph","Properties":{"id":"20240201213412-427b0fw","updated":"20240201213412"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"HTTP/2.0 和 HTTP/3.0 对比","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"https://oss.javaguide.cn/github/javaguide/cs-basics/network/http2.0-vs-http3.0.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201213413-ei8k18u","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213413-ei8k18u","updated":"20240201213413"},"Children":[{"ID":"20240201213414-690lgy0","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213414-690lgy0","updated":"20240201213414"},"Children":[{"ID":"20240201213415-cca5gpt","Type":"NodeParagraph","Properties":{"id":"20240201213415-cca5gpt","updated":"20240201213415"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"传输协议"},{"Type":"NodeText","Data":"：HTTP/2.0 是基于 TCP 协议实现的，HTTP/3.0 新增了 QUIC（Quick UDP Internet Connections） 协议来实现可靠的传输，提供与 TLS/SSL 相当的安全性，具有较低的连接和传输延迟。你可以将 QUIC 看作是 UDP 的升级版本，在其基础上新增了很多功能比如加密、重传等等。HTTP/3.0 之前名为 HTTP-over-QUIC，从这个名字中我们也可以发现，HTTP/3 最大的改造就是使用了 QUIC。"}]}]},{"ID":"20240201213416-yb4iz0z","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213416-yb4iz0z","updated":"20240201213416"},"Children":[{"ID":"20240201213417-6q8shm9","Type":"NodeParagraph","Properties":{"id":"20240201213417-6q8shm9","updated":"20240201213417"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"连接建立"},{"Type":"NodeText","Data":"：HTTP/2.0 需要经过经典的 TCP 三次握手过程（由于安全的 HTTPS 连接建立还需要 TLS 握手，共需要大约 3 个 RTT）。由于 QUIC 协议的特性（TLS 1.3，TLS 1.3 除了支持 1 个 RTT 的握手，还支持 0 个 RTT 的握手）连接建立仅需 0-RTT 或者 1-RTT。这意味着 QUIC 在最佳情况下不需要任何的额外往返时间就可以建立新连接。"}]}]},{"ID":"20240201213418-po0axxs","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213418-po0axxs","updated":"20240201213418"},"Children":[{"ID":"20240201213419-g0i6jmd","Type":"NodeParagraph","Properties":{"id":"20240201213419-g0i6jmd","updated":"20240201213419"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"队头阻塞"},{"Type":"NodeText","Data":"：HTTP/2.0 多请求复用一个 TCP 连接，一旦发生丢包，就会阻塞住所有的 HTTP 请求。由于 QUIC 协议的特性，HTTP/3.0 在一定程度上解决了队头阻塞（Head-of-Line blocking, 简写：HOL blocking）问题，一个连接建立多个不同的数据流，这些数据流之间独立互不影响，某个数据流发生丢包了，其数据流不受影响（本质上是多路复用+轮询）。"}]}]},{"ID":"20240201213420-grv0uh5","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213420-grv0uh5","updated":"20240201213420"},"Children":[{"ID":"20240201213421-36r14tc","Type":"NodeParagraph","Properties":{"id":"20240201213421-36r14tc","updated":"20240201213421"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"错误恢复"},{"Type":"NodeText","Data":"：HTTP/3.0 具有更好的错误恢复机制，当出现丢包、延迟等网络问题时，可以更快地进行恢复和重传。而 HTTP/2.0 则需要依赖于 TCP 的错误恢复机制。"}]}]},{"ID":"20240201213422-4nwmqk5","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213422-4nwmqk5","updated":"20240201213422"},"Children":[{"ID":"20240201213423-9yixvl8","Type":"NodeParagraph","Properties":{"id":"20240201213423-9yixvl8","updated":"20240201213423"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"安全性"},{"Type":"NodeText","Data":"：HTTP/2.0 和 HTTP/3.0 在安全性上都有较高的要求，支持加密通信，但在实现上有所不同。HTTP/2.0 使用 TLS 协议进行加密，而 HTTP/3.0 基于 QUIC 协议，包含了内置的加密和身份验证机制，可以提供更强的安全性。"}]}]}]},{"ID":"20240201213424-v5x0qvk","Type":"NodeParagraph","Properties":{"id":"20240201213424-v5x0qvk","updated":"20240201213424"},"Children":[{"Type":"NodeText","Data":"HTTP/1.0、HTTP/2.0 和 HTTP/3.0 的协议栈比较："}]},{"ID":"20240201213425-tb5d3o7","Type":"NodeParagraph","Properties":{"id":"20240201213425-tb5d3o7","updated":"20240201213425"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"http-3-implementation","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"https://oss.javaguide.cn/github/javaguide/cs-basics/network/http-3-implementation.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201213426-ay5ujvq","Type":"NodeParagraph","Properties":{"id":"20240201213426-ay5ujvq","updated":"20240201213426"},"Children":[{"Type":"NodeText","Data":"关于 HTTP/1.0 -\u003e HTTP/3.0 更详细的演进介绍，推荐阅读"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://dbwu.tech/posts/http_evolution/","TextMarkTextContent":"HTTP1 到 HTTP3 的工程优化"},{"Type":"NodeText","Data":"。"}]},{"ID":"20240201213427-n1so6lr","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240201213427-n1so6lr","updated":"20240201213427"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"HTTP 是不保存状态的协议, 如何保存用户状态?"}]},{"ID":"20240201213428-lx0vn5r","Type":"NodeParagraph","Properties":{"id":"20240201213428-lx0vn5r","updated":"20240201213428"},"Children":[{"Type":"NodeText","Data":"HTTP 是一种不保存状态，即无状态（stateless）协议。也就是说 HTTP 协议自身不对请求和响应之间的通信状态进行保存。那么我们如何保存用户状态呢？Session 机制的存在就是为了解决这个问题，Session 的主要作用就是通过服务端记录用户的状态。典型的场景是购物车，当你要添加商品到购物车的时候，系统不知道是哪个用户操作的，因为 HTTP 协议是无状态的。服务端给特定的用户创建特定的 Session 之后就可以标识这个用户并且跟踪这个用户了（一般情况下，服务器会在一定时间内保存这个 Session，过了时间限制，就会销毁这个 Session）。"}]},{"ID":"20240201213429-3qowxqc","Type":"NodeParagraph","Properties":{"id":"20240201213429-3qowxqc","updated":"20240201213429"},"Children":[{"Type":"NodeText","Data":"在服务端保存 Session 的方法很多，最常用的就是内存和数据库(比如是使用内存数据库 redis 保存)。既然 Session 存放在服务器端，那么我们如何实现 Session 跟踪呢？大部分情况下，我们都是通过在 Cookie 中附加一个 Session ID 来方式来跟踪。"}]},{"ID":"20240201213430-amnv4ci","Type":"NodeParagraph","Properties":{"id":"20240201213430-amnv4ci","updated":"20240201213430"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"Cookie 被禁用怎么办?"}]},{"ID":"20240201213431-v24rqgp","Type":"NodeParagraph","Properties":{"id":"20240201213431-v24rqgp","updated":"20240201213431"},"Children":[{"Type":"NodeText","Data":"最常用的就是利用 URL 重写把 Session ID 直接附加在 URL 路径的后面。"}]},{"ID":"20240201213432-p7iy942","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240201213432-p7iy942","updated":"20240201213432"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"URI 和 URL 的区别是什么?"}]},{"ID":"20240201213433-93tipnt","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213433-93tipnt","updated":"20240201213433"},"Children":[{"ID":"20240201213434-z5v8avi","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213434-z5v8avi","updated":"20240201213434"},"Children":[{"ID":"20240201213435-ppnncu4","Type":"NodeParagraph","Properties":{"id":"20240201213435-ppnncu4","updated":"20240201213435"},"Children":[{"Type":"NodeText","Data":"URI(Uniform Resource Identifier) 是统一资源标志符，可以唯一标识一个资源。"}]}]},{"ID":"20240201213436-ttld053","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213436-ttld053","updated":"20240201213436"},"Children":[{"ID":"20240201213437-piis77z","Type":"NodeParagraph","Properties":{"id":"20240201213437-piis77z","updated":"20240201213437"},"Children":[{"Type":"NodeText","Data":"URL(Uniform Resource Locator) 是统一资源定位符，可以提供该资源的路径。它是一种具体的 URI，即 URL 可以用来标识一个资源，而且还指明了如何 locate 这个资源。"}]}]}]},{"ID":"20240201213438-pvg0m1u","Type":"NodeParagraph","Properties":{"id":"20240201213438-pvg0m1u","updated":"20240201213438"},"Children":[{"Type":"NodeText","Data":"URI 的作用像身份证号一样，URL 的作用更像家庭住址一样。URL 是一种具体的 URI，它不仅唯一标识资源，而且还提供了定位该资源的信息。"}]},{"ID":"20240201213439-st9s9d8","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240201213439-st9s9d8","updated":"20240201213439"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"Cookie 和 Session 有什么区别？"}]},{"ID":"20240201213440-8cisp05","Type":"NodeParagraph","Properties":{"id":"20240201213440-8cisp05","updated":"20240201213440"},"Children":[{"Type":"NodeText","Data":"准确点来说，这个问题属于认证授权的范畴，你可以在 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"../../system-design/security/basis-of-authority-certification.md","TextMarkTextContent":"认证授权基础概念详解"},{"Type":"NodeText","Data":" 这篇文章中找到详细的答案。"}]},{"ID":"20240201213441-yrg7xmf","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240201213441-yrg7xmf","updated":"20240201213441"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"GET 和 POST 的区别"}]},{"ID":"20240201213442-cwxqgjh","Type":"NodeParagraph","Properties":{"id":"20240201213442-cwxqgjh","updated":"20240201213442"},"Children":[{"Type":"NodeText","Data":"这个问题在知乎上被讨论的挺火热的，地址："},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://www.zhihu.com/question/28586791","TextMarkTextContent":"https://www.zhihu.com/question/28586791"},{"Type":"NodeText","Data":" 。"}]},{"ID":"20240201213443-cq1ko6w","Type":"NodeParagraph","Properties":{"id":"20240201213443-cq1ko6w","updated":"20240201213443"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"https://static001.geekbang.org/infoq/04/0454a5fff1437c32754f1dfcc3881148.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201213444-ijshy4w","Type":"NodeParagraph","Properties":{"id":"20240201213444-ijshy4w","updated":"20240201213444"},"Children":[{"Type":"NodeText","Data":"GET 和 POST 是 HTTP 协议中两种常用的请求方法，它们在不同的场景和目的下有不同的特点和用法。一般来说，可以从以下几个方面来区分二者（重点搞清两者在语义上的区别即可）："}]},{"ID":"20240201213445-wqmw5em","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213445-wqmw5em","updated":"20240201213445"},"Children":[{"ID":"20240201213446-3h2ks7i","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213446-3h2ks7i","updated":"20240201213446"},"Children":[{"ID":"20240201213447-somvzoz","Type":"NodeParagraph","Properties":{"id":"20240201213447-somvzoz","updated":"20240201213447"},"Children":[{"Type":"NodeText","Data":"语义（主要区别）：GET 通常用于获取或查询资源，而 POST 通常用于创建或修改资源。"}]}]},{"ID":"20240201213448-13clhp7","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213448-13clhp7","updated":"20240201213448"},"Children":[{"ID":"20240201213449-bqycncf","Type":"NodeParagraph","Properties":{"id":"20240201213449-bqycncf","updated":"20240201213449"},"Children":[{"Type":"NodeText","Data":"幂等：GET 请求是幂等的，即多次重复执行不会改变资源的状态，而 POST 请求是不幂等的，即每次执行可能会产生不同的结果或影响资源的状态。"}]}]},{"ID":"20240201213450-nstzaxg","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213450-nstzaxg","updated":"20240201213450"},"Children":[{"ID":"20240201213451-1w7jaql","Type":"NodeParagraph","Properties":{"id":"20240201213451-1w7jaql","updated":"20240201213451"},"Children":[{"Type":"NodeText","Data":"格式：GET 请求的参数通常放在 URL 中，形成查询字符串（querystring），而 POST 请求的参数通常放在请求体（body）中，可以有多种编码格式，如 application/x-www-form-urlencoded、multipart/form-data、application/json 等。GET 请求的 URL 长度受到浏览器和服务器的限制，而 POST 请求的 body 大小则没有明确的限制。不过，实际上 GET 请求也可以用 body 传输数据，只是并不推荐这样做，因为这样可能会导致一些兼容性或者语义上的问题。"}]}]},{"ID":"20240201213452-mbkt95w","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213452-mbkt95w","updated":"20240201213452"},"Children":[{"ID":"20240201213453-huq1x43","Type":"NodeParagraph","Properties":{"id":"20240201213453-huq1x43","updated":"20240201213453"},"Children":[{"Type":"NodeText","Data":"缓存：由于 GET 请求是幂等的，它可以被浏览器或其他中间节点（如代理、网关）缓存起来，以提高性能和效率。而 POST 请求则不适合被缓存，因为它可能有副作用，每次执行可能需要实时的响应。"}]}]},{"ID":"20240201213454-eisdfsj","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213454-eisdfsj","updated":"20240201213454"},"Children":[{"ID":"20240201213455-m1xv9m5","Type":"NodeParagraph","Properties":{"id":"20240201213455-m1xv9m5","updated":"20240201213455"},"Children":[{"Type":"NodeText","Data":"安全性：GET 请求和 POST 请求如果使用 HTTP 协议的话，那都不安全，因为 HTTP 协议本身是明文传输的，必须使用 HTTPS 协议来加密传输数据。另外，GET 请求相比 POST 请求更容易泄露敏感数据，因为 GET 请求的参数通常放在 URL 中。"}]}]}]},{"ID":"20240201213456-rjiorcw","Type":"NodeParagraph","Properties":{"id":"20240201213456-rjiorcw","updated":"20240201213456"},"Children":[{"Type":"NodeText","Data":"再次提示，重点搞清两者在语义上的区别即可，实际使用过程中，也是通过语义来区分使用 GET 还是 POST。不过，也有一些项目所有的请求都用 POST，这个并不是固定的，项目组达成共识即可。"}]},{"ID":"20240201213457-aiu5422","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240201213457-aiu5422","updated":"20240201213457"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"WebSocket"}]},{"ID":"20240201213458-v2fbtwf","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240201213458-v2fbtwf","updated":"20240201213458"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"什么是 WebSocket?"}]},{"ID":"20240201213459-r5wnhgb","Type":"NodeParagraph","Properties":{"id":"20240201213459-r5wnhgb","updated":"20240201213459"},"Children":[{"Type":"NodeText","Data":"WebSocket 是一种基于 TCP 连接的全双工通信协议，即客户端和服务器可以同时发送和接收数据。"}]},{"ID":"20240201213460-7hvuv6z","Type":"NodeParagraph","Properties":{"id":"20240201213460-7hvuv6z","updated":"20240201213460"},"Children":[{"Type":"NodeText","Data":"WebSocket 协议在 2008 年诞生，2011 年成为国际标准，几乎所有主流较新版本的浏览器都支持该协议。不过，WebSocket 不只能在基于浏览器的应用程序中使用，很多编程语言、框架和服务器都提供了 WebSocket 支持。"}]},{"ID":"20240201213461-pdi1fcu","Type":"NodeParagraph","Properties":{"id":"20240201213461-pdi1fcu","updated":"20240201213461"},"Children":[{"Type":"NodeText","Data":"WebSocket 协议本质上是应用层的协议，用于弥补 HTTP 协议在持久通信能力上的不足。客户端和服务器仅需一次握手，两者之间就直接可以创建持久性的连接，并进行双向数据传输。"}]},{"ID":"20240201213462-0s1yn3x","Type":"NodeParagraph","Properties":{"id":"20240201213462-0s1yn3x","updated":"20240201213462"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"Websocket 示意图","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"https://oss.javaguide.cn/github/javaguide/system-design/web-real-time-message-push/1460000042192394.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201213463-2uly5fo","Type":"NodeParagraph","Properties":{"id":"20240201213463-2uly5fo","updated":"20240201213463"},"Children":[{"Type":"NodeText","Data":"下面是 WebSocket 的常见应用场景："}]},{"ID":"20240201213464-9vrcx06","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213464-9vrcx06","updated":"20240201213464"},"Children":[{"ID":"20240201213465-dbtwnxq","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213465-dbtwnxq","updated":"20240201213465"},"Children":[{"ID":"20240201213466-ocksj6g","Type":"NodeParagraph","Properties":{"id":"20240201213466-ocksj6g","updated":"20240201213466"},"Children":[{"Type":"NodeText","Data":"视频弹幕"}]}]},{"ID":"20240201213467-h61glv0","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213467-h61glv0","updated":"20240201213467"},"Children":[{"ID":"20240201213468-lm461du","Type":"NodeParagraph","Properties":{"id":"20240201213468-lm461du","updated":"20240201213468"},"Children":[{"Type":"NodeText","Data":"实时消息推送，详见"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://javaguide.cn/system-design/web-real-time-message-push.html","TextMarkTextContent":"Web 实时消息推送详解"},{"Type":"NodeText","Data":"这篇文章"}]}]},{"ID":"20240201213469-mpmf506","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213469-mpmf506","updated":"20240201213469"},"Children":[{"ID":"20240201213470-tvemybi","Type":"NodeParagraph","Properties":{"id":"20240201213470-tvemybi","updated":"20240201213470"},"Children":[{"Type":"NodeText","Data":"实时游戏对战"}]}]},{"ID":"20240201213471-ae5m4ek","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213471-ae5m4ek","updated":"20240201213471"},"Children":[{"ID":"20240201213472-x1kgy8j","Type":"NodeParagraph","Properties":{"id":"20240201213472-x1kgy8j","updated":"20240201213472"},"Children":[{"Type":"NodeText","Data":"多用户协同编辑"}]}]},{"ID":"20240201213473-ofygb02","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213473-ofygb02","updated":"20240201213473"},"Children":[{"ID":"20240201213474-f6r85wg","Type":"NodeParagraph","Properties":{"id":"20240201213474-f6r85wg","updated":"20240201213474"},"Children":[{"Type":"NodeText","Data":"社交聊天"}]}]},{"ID":"20240201213475-7u915pd","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213475-7u915pd","updated":"20240201213475"},"Children":[{"ID":"20240201213476-18v0cmy","Type":"NodeParagraph","Properties":{"id":"20240201213476-18v0cmy","updated":"20240201213476"},"Children":[{"Type":"NodeText","Data":"……"}]}]}]},{"ID":"20240201213477-8cv6z1u","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240201213477-8cv6z1u","updated":"20240201213477"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"WebSocket 和 HTTP 有什么区别？"}]},{"ID":"20240201213478-se3z6f2","Type":"NodeParagraph","Properties":{"id":"20240201213478-se3z6f2","updated":"20240201213478"},"Children":[{"Type":"NodeText","Data":"WebSocket 和 HTTP 两者都是基于 TCP 的应用层协议，都可以在网络中传输数据。"}]},{"ID":"20240201213479-m2el6cz","Type":"NodeParagraph","Properties":{"id":"20240201213479-m2el6cz","updated":"20240201213479"},"Children":[{"Type":"NodeText","Data":"下面是二者的主要区别："}]},{"ID":"20240201213480-nmuqisx","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213480-nmuqisx","updated":"20240201213480"},"Children":[{"ID":"20240201213481-2ew4x2h","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213481-2ew4x2h","updated":"20240201213481"},"Children":[{"ID":"20240201213482-ayyeckv","Type":"NodeParagraph","Properties":{"id":"20240201213482-ayyeckv","updated":"20240201213482"},"Children":[{"Type":"NodeText","Data":"WebSocket 是一种双向实时通信协议，而 HTTP 是一种单向通信协议。并且，HTTP 协议下的通信只能由客户端发起，服务器无法主动通知客户端。"}]}]},{"ID":"20240201213483-3rqnckj","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213483-3rqnckj","updated":"20240201213483"},"Children":[{"ID":"20240201213484-l5232j7","Type":"NodeParagraph","Properties":{"id":"20240201213484-l5232j7","updated":"20240201213484"},"Children":[{"Type":"NodeText","Data":"WebSocket 使用 ws:// 或 wss://（使用 SSL/TLS 加密后的协议，类似于 HTTP 和 HTTPS 的关系） 作为协议前缀，HTTP 使用 http:// 或 https:// 作为协议前缀。"}]}]},{"ID":"20240201213485-0si06yp","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213485-0si06yp","updated":"20240201213485"},"Children":[{"ID":"20240201213486-qwq5w30","Type":"NodeParagraph","Properties":{"id":"20240201213486-qwq5w30","updated":"20240201213486"},"Children":[{"Type":"NodeText","Data":"WebSocket 可以支持扩展，用户可以扩展协议，实现部分自定义的子协议，如支持压缩、加密等。"}]}]},{"ID":"20240201213487-zpuhtdu","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213487-zpuhtdu","updated":"20240201213487"},"Children":[{"ID":"20240201213488-s9awjr5","Type":"NodeParagraph","Properties":{"id":"20240201213488-s9awjr5","updated":"20240201213488"},"Children":[{"Type":"NodeText","Data":"WebSocket 通信数据格式比较轻量，用于协议控制的数据包头部相对较小，网络开销小，而 HTTP 通信每次都要携带完整的头部，网络开销较大（HTTP/2.0 使用二进制帧进行数据传输，还支持头部压缩，减少了网络开销）。"}]}]}]},{"ID":"20240201213489-sfmo0qb","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240201213489-sfmo0qb","updated":"20240201213489"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"WebSocket 的工作过程是什么样的？"}]},{"ID":"20240201213490-7cnh3xa","Type":"NodeParagraph","Properties":{"id":"20240201213490-7cnh3xa","updated":"20240201213490"},"Children":[{"Type":"NodeText","Data":"WebSocket 的工作过程可以分为以下几个步骤："}]},{"ID":"20240201213491-4hf62qb","Type":"NodeList","ListData":{"Typ":1,"Tight":true,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20240201213491-4hf62qb","updated":"20240201213491"},"Children":[{"ID":"20240201213492-ptnijrp","Type":"NodeListItem","Data":"1","ListData":{"Typ":1,"Tight":true,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20240201213492-ptnijrp","updated":"20240201213492"},"Children":[{"ID":"20240201213493-8kijss9","Type":"NodeParagraph","Properties":{"id":"20240201213493-8kijss9","updated":"20240201213493"},"Children":[{"Type":"NodeText","Data":"客户端向服务器发送一个 HTTP 请求，请求头中包含 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"Upgrade: websocket"},{"Type":"NodeText","Data":" 和 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"Sec-WebSocket-Key"},{"Type":"NodeText","Data":" 等字段，表示要求升级协议为 WebSocket；"}]}]},{"ID":"20240201213494-42ggt4u","Type":"NodeListItem","Data":"2","ListData":{"Typ":1,"Tight":true,"Start":2,"Delimiter":46,"Padding":3,"Marker":"Mg==","Num":2},"Properties":{"id":"20240201213494-42ggt4u","updated":"20240201213494"},"Children":[{"ID":"20240201213495-i3m0s61","Type":"NodeParagraph","Properties":{"id":"20240201213495-i3m0s61","updated":"20240201213495"},"Children":[{"Type":"NodeText","Data":"服务器收到这个请求后，会进行升级协议的操作，如果支持 WebSocket，它将回复一个 HTTP 101 状态码，响应头中包含 ，"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"Connection: Upgrade"},{"Type":"NodeText","Data":"和 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"Sec-WebSocket-Accept: xxx"},{"Type":"NodeText","Data":" 等字段、表示成功升级到 WebSocket 协议。"}]}]},{"ID":"20240201213496-gn0r5d4","Type":"NodeListItem","Data":"3","ListData":{"Typ":1,"Tight":true,"Start":3,"Delimiter":46,"Padding":3,"Marker":"Mw==","Num":3},"Properties":{"id":"20240201213496-gn0r5d4","updated":"20240201213496"},"Children":[{"ID":"20240201213497-ghmlze4","Type":"NodeParagraph","Properties":{"id":"20240201213497-ghmlze4","updated":"20240201213497"},"Children":[{"Type":"NodeText","Data":"客户端和服务器之间建立了一个 WebSocket 连接，可以进行双向的数据传输。数据以帧（frames）的形式进行传送，WebSocket 的每条消息可能会被切分成多个数据帧（最小单位）。发送端会将消息切割成多个帧发送给接收端，接收端接收消息帧，并将关联的帧重新组装成完整的消息。"}]}]},{"ID":"20240201213498-a2vdha3","Type":"NodeListItem","Data":"4","ListData":{"Typ":1,"Tight":true,"Start":4,"Delimiter":46,"Padding":3,"Marker":"NA==","Num":4},"Properties":{"id":"20240201213498-a2vdha3","updated":"20240201213498"},"Children":[{"ID":"20240201213499-kylfybo","Type":"NodeParagraph","Properties":{"id":"20240201213499-kylfybo","updated":"20240201213499"},"Children":[{"Type":"NodeText","Data":"客户端或服务器可以主动发送一个关闭帧，表示要断开连接。另一方收到后，也会回复一个关闭帧，然后双方关闭 TCP 连接。"}]}]}]},{"ID":"20240201213500-43pgg99","Type":"NodeParagraph","Properties":{"id":"20240201213500-43pgg99","updated":"20240201213500"},"Children":[{"Type":"NodeText","Data":"另外，建立 WebSocket 连接之后，通过心跳机制来保持 WebSocket 连接的稳定性和活跃性。"}]},{"ID":"20240201213501-q4nmum0","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240201213501-q4nmum0","updated":"20240201213501"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"SSE 与 WebSocket 有什么区别？"}]},{"ID":"20240201213502-ip7u535","Type":"NodeBlockquote","Properties":{"id":"20240201213502-ip7u535","updated":"20240201213502"},"Children":[{"Type":"NodeBlockquoteMarker","Data":"\u003e ","Properties":{"id":""}},{"ID":"20240201213503-jjgjmd3","Type":"NodeParagraph","Properties":{"id":"20240201213503-jjgjmd3","updated":"20240201213503"},"Children":[{"Type":"NodeText","Data":"摘自"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://javaguide.cn/system-design/web-real-time-message-push.html","TextMarkTextContent":"Web 实时消息推送详解"},{"Type":"NodeText","Data":"。"}]}]},{"ID":"20240201213504-st1o3sl","Type":"NodeParagraph","Properties":{"id":"20240201213504-st1o3sl","updated":"20240201213504"},"Children":[{"Type":"NodeText","Data":"SSE 与 WebSocket 作用相似，都可以建立服务端与浏览器之间的通信，实现服务端向客户端推送消息，但还是有些许不同："}]},{"ID":"20240201213505-fsnf2c7","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213505-fsnf2c7","updated":"20240201213505"},"Children":[{"ID":"20240201213506-5ir9p1x","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213506-5ir9p1x","updated":"20240201213506"},"Children":[{"ID":"20240201213507-nd5ud77","Type":"NodeParagraph","Properties":{"id":"20240201213507-nd5ud77","updated":"20240201213507"},"Children":[{"Type":"NodeText","Data":"SSE 是基于 HTTP 协议的，它们不需要特殊的协议或服务器实现即可工作；WebSocket 需单独服务器来处理协议。"}]}]},{"ID":"20240201213508-4hxznvk","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213508-4hxznvk","updated":"20240201213508"},"Children":[{"ID":"20240201213509-v7bw9b7","Type":"NodeParagraph","Properties":{"id":"20240201213509-v7bw9b7","updated":"20240201213509"},"Children":[{"Type":"NodeText","Data":"SSE 单向通信，只能由服务端向客户端单向通信；WebSocket 全双工通信，即通信的双方可以同时发送和接受信息。"}]}]},{"ID":"20240201213510-j16x2fg","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213510-j16x2fg","updated":"20240201213510"},"Children":[{"ID":"20240201213511-k81i88l","Type":"NodeParagraph","Properties":{"id":"20240201213511-k81i88l","updated":"20240201213511"},"Children":[{"Type":"NodeText","Data":"SSE 实现简单开发成本低，无需引入其他组件；WebSocket 传输数据需做二次解析，开发门槛高一些。"}]}]},{"ID":"20240201213512-jj7v81q","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213512-jj7v81q","updated":"20240201213512"},"Children":[{"ID":"20240201213513-rq0u198","Type":"NodeParagraph","Properties":{"id":"20240201213513-rq0u198","updated":"20240201213513"},"Children":[{"Type":"NodeText","Data":"SSE 默认支持断线重连；WebSocket 则需要自己实现。"}]}]},{"ID":"20240201213514-6pmsm01","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213514-6pmsm01","updated":"20240201213514"},"Children":[{"ID":"20240201213515-89ov9wv","Type":"NodeParagraph","Properties":{"id":"20240201213515-89ov9wv","updated":"20240201213515"},"Children":[{"Type":"NodeText","Data":"SSE 只能传送文本消息，二进制数据需要经过编码后传送；WebSocket 默认支持传送二进制数据。"}]}]}]},{"ID":"20240201213516-3yzniin","Type":"NodeParagraph","Properties":{"id":"20240201213516-3yzniin","updated":"20240201213516"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"SSE 与 WebSocket 该如何选择？"}]},{"ID":"20240201213517-m0ehf1a","Type":"NodeParagraph","Properties":{"id":"20240201213517-m0ehf1a","updated":"20240201213517"},"Children":[{"Type":"NodeText","Data":"SSE 好像一直不被大家所熟知，一部分原因是出现了 WebSocket，这个提供了更丰富的协议来执行双向、全双工通信。对于游戏、即时通信以及需要双向近乎实时更新的场景，拥有双向通道更具吸引力。"}]},{"ID":"20240201213518-hjurm7d","Type":"NodeParagraph","Properties":{"id":"20240201213518-hjurm7d","updated":"20240201213518"},"Children":[{"Type":"NodeText","Data":"但是，在某些情况下，不需要从客户端发送数据。而你只需要一些服务器操作的更新。比如：站内信、未读消息数、状态更新、股票行情、监控数量等场景，SEE 不管是从实现的难易和成本上都更加有优势。此外，SSE 具有 WebSocket 在设计上缺乏的多种功能，例如：自动重新连接、事件 ID 和发送任意事件的能力。"}]},{"ID":"20240201213519-wqtka77","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240201213519-wqtka77","updated":"20240201213519"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"PING"}]},{"ID":"20240201213520-l2bhwsd","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240201213520-l2bhwsd","updated":"20240201213520"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"PING 命令的作用是什么？"}]},{"ID":"20240201213521-cdyzlza","Type":"NodeParagraph","Properties":{"id":"20240201213521-cdyzlza","updated":"20240201213521"},"Children":[{"Type":"NodeText","Data":"PING 命令是一种常用的网络诊断工具，经常用来测试网络中主机之间的连通性和网络延迟。"}]},{"ID":"20240201213522-xlt8nki","Type":"NodeParagraph","Properties":{"id":"20240201213522-xlt8nki","updated":"20240201213522"},"Children":[{"Type":"NodeText","Data":"这里简单举一个例子，我们来 PING 一下百度。"}]},{"ID":"20240201213523-c9tycyw","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"YmFzaA==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20240201213523-c9tycyw","updated":"20240201213523"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"YmFzaA==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"# 发送4个PING请求数据包到 www.baidu.com\n❯ ping -c 4 www.baidu.com\n\nPING www.a.shifen.com (14.119.104.189): 56 data bytes\n64 bytes from 14.119.104.189: icmp_seq=0 ttl=54 time=27.867 ms\n64 bytes from 14.119.104.189: icmp_seq=1 ttl=54 time=28.732 ms\n64 bytes from 14.119.104.189: icmp_seq=2 ttl=54 time=27.571 ms\n64 bytes from 14.119.104.189: icmp_seq=3 ttl=54 time=27.581 ms\n\n--- www.a.shifen.com ping statistics ---\n4 packets transmitted, 4 packets received, 0.0% packet loss\nround-trip min/avg/max/stddev = 27.571/27.938/28.732/0.474 ms\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20240201213524-8qvdwea","Type":"NodeParagraph","Properties":{"id":"20240201213524-8qvdwea","updated":"20240201213524"},"Children":[{"Type":"NodeText","Data":"PING 命令的输出结果通常包括以下几部分信息："}]},{"ID":"20240201213525-wm2wh2k","Type":"NodeList","ListData":{"Typ":1,"Tight":true,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20240201213525-wm2wh2k","updated":"20240201213525"},"Children":[{"ID":"20240201213526-f7t07bc","Type":"NodeListItem","Data":"1","ListData":{"Typ":1,"Tight":true,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20240201213526-f7t07bc","updated":"20240201213526"},"Children":[{"ID":"20240201213527-0753eg3","Type":"NodeParagraph","Properties":{"id":"20240201213527-0753eg3","updated":"20240201213527"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"ICMP Echo Request（请求报文）信息"},{"Type":"NodeText","Data":"：序列号、TTL（Time to Live）值。"}]}]},{"ID":"20240201213528-fsph59x","Type":"NodeListItem","Data":"2","ListData":{"Typ":1,"Tight":true,"Start":2,"Delimiter":46,"Padding":3,"Marker":"Mg==","Num":2},"Properties":{"id":"20240201213528-fsph59x","updated":"20240201213528"},"Children":[{"ID":"20240201213529-u8ara0r","Type":"NodeParagraph","Properties":{"id":"20240201213529-u8ara0r","updated":"20240201213529"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"目标主机的域名或 IP 地址"},{"Type":"NodeText","Data":"：输出结果的第一行。"}]}]},{"ID":"20240201213530-w8924fk","Type":"NodeListItem","Data":"3","ListData":{"Typ":1,"Tight":true,"Start":3,"Delimiter":46,"Padding":3,"Marker":"Mw==","Num":3},"Properties":{"id":"20240201213530-w8924fk","updated":"20240201213530"},"Children":[{"ID":"20240201213531-n1sslt5","Type":"NodeParagraph","Properties":{"id":"20240201213531-n1sslt5","updated":"20240201213531"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"往返时间（RTT，Round-Trip Time）"},{"Type":"NodeText","Data":"：从发送 ICMP Echo Request（请求报文）到接收到 ICMP Echo Reply（响应报文）的总时间，用来衡量网络连接的延迟。"}]}]},{"ID":"20240201213532-0md441g","Type":"NodeListItem","Data":"4","ListData":{"Typ":1,"Tight":true,"Start":4,"Delimiter":46,"Padding":3,"Marker":"NA==","Num":4},"Properties":{"id":"20240201213532-0md441g","updated":"20240201213532"},"Children":[{"ID":"20240201213533-ctfd239","Type":"NodeParagraph","Properties":{"id":"20240201213533-ctfd239","updated":"20240201213533"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"统计结果（Statistics）"},{"Type":"NodeText","Data":"：包括发送的 ICMP 请求数据包数量、接收到的 ICMP 响应数据包数量、丢包率、往返时间（RTT）的最小、平均、最大和标准偏差值。"}]}]}]},{"ID":"20240201213534-v4ruydv","Type":"NodeParagraph","Properties":{"id":"20240201213534-v4ruydv","updated":"20240201213534"},"Children":[{"Type":"NodeText","Data":"如果 PING 对应的目标主机无法得到正确的响应，则表明这两个主机之间的连通性存在问题（有些主机或网络管理员可能禁用了对 ICMP 请求的回复，这样也会导致无法得到正确的响应）。如果往返时间（RTT）过高，则表明网络延迟过高。"}]},{"ID":"20240201213535-yy8m3e1","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240201213535-yy8m3e1","updated":"20240201213535"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"PING 命令的工作原理是什么？"}]},{"ID":"20240201213536-50f457n","Type":"NodeParagraph","Properties":{"id":"20240201213536-50f457n","updated":"20240201213536"},"Children":[{"Type":"NodeText","Data":"PING 基于网络层的 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"ICMP（Internet Control Message Protocol，互联网控制报文协议）"},{"Type":"NodeText","Data":"，其主要原理就是通过在网络上发送和接收 ICMP 报文实现的。"}]},{"ID":"20240201213537-97b1325","Type":"NodeParagraph","Properties":{"id":"20240201213537-97b1325","updated":"20240201213537"},"Children":[{"Type":"NodeText","Data":"ICMP 报文中包含了类型字段，用于标识 ICMP 报文类型。ICMP 报文的类型有很多种，但大致可以分为两类："}]},{"ID":"20240201213538-i71w93p","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213538-i71w93p","updated":"20240201213538"},"Children":[{"ID":"20240201213539-empb3xt","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213539-empb3xt","updated":"20240201213539"},"Children":[{"ID":"20240201213540-mvax3q9","Type":"NodeParagraph","Properties":{"id":"20240201213540-mvax3q9","updated":"20240201213540"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"查询报文类型"},{"Type":"NodeText","Data":"：向目标主机发送请求并期望得到响应。"}]}]},{"ID":"20240201213541-08ccevx","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213541-08ccevx","updated":"20240201213541"},"Children":[{"ID":"20240201213542-n5fwiac","Type":"NodeParagraph","Properties":{"id":"20240201213542-n5fwiac","updated":"20240201213542"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"差错报文类型"},{"Type":"NodeText","Data":"：向源主机发送错误信息，用于报告网络中的错误情况。"}]}]}]},{"ID":"20240201213543-g7ir5tt","Type":"NodeParagraph","Properties":{"id":"20240201213543-g7ir5tt","updated":"20240201213543"},"Children":[{"Type":"NodeText","Data":"PING 用到的 ICMP Echo Request（类型为 8 ） 和 ICMP Echo Reply（类型为 0） 属于查询报文类型 。"}]},{"ID":"20240201213544-0nx8aeg","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213544-0nx8aeg","updated":"20240201213544"},"Children":[{"ID":"20240201213545-akbbaz9","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213545-akbbaz9","updated":"20240201213545"},"Children":[{"ID":"20240201213546-96c0uke","Type":"NodeParagraph","Properties":{"id":"20240201213546-96c0uke","updated":"20240201213546"},"Children":[{"Type":"NodeText","Data":"PING 命令会向目标主机发送 ICMP Echo Request。"}]}]},{"ID":"20240201213547-5hibdr3","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213547-5hibdr3","updated":"20240201213547"},"Children":[{"ID":"20240201213548-4yxyu16","Type":"NodeParagraph","Properties":{"id":"20240201213548-4yxyu16","updated":"20240201213548"},"Children":[{"Type":"NodeText","Data":"如果两个主机的连通性正常，目标主机会返回一个对应的 ICMP Echo Reply。"}]}]}]},{"ID":"20240201213549-qqk7qo0","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240201213549-qqk7qo0","updated":"20240201213549"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"DNS"}]},{"ID":"20240201213550-bccn38m","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240201213550-bccn38m","updated":"20240201213550"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"DNS 的作用是什么？"}]},{"ID":"20240201213551-02a1lks","Type":"NodeParagraph","Properties":{"id":"20240201213551-02a1lks","updated":"20240201213551"},"Children":[{"Type":"NodeText","Data":"DNS（Domain Name System）域名管理系统，是当用户使用浏览器访问网址之后，使用的第一个重要协议。DNS 要解决的是"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"域名和 IP 地址的映射问题"},{"Type":"NodeText","Data":"。"}]},{"ID":"20240201213552-bsehh4q","Type":"NodeParagraph","Properties":{"id":"20240201213552-bsehh4q","updated":"20240201213552"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"DNS:域名系统","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"https://oss.javaguide.cn/github/javaguide/cs-basics/network/dns-overview.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201213553-g7bp98x","Type":"NodeParagraph","Properties":{"id":"20240201213553-g7bp98x","updated":"20240201213553"},"Children":[{"Type":"NodeText","Data":"在一台电脑上，可能存在浏览器 DNS 缓存，操作系统 DNS 缓存，路由器 DNS 缓存。如果以上缓存都查询不到，那么 DNS 就闪亮登场了。"}]},{"ID":"20240201213554-0g0hfon","Type":"NodeParagraph","Properties":{"id":"20240201213554-0g0hfon","updated":"20240201213554"},"Children":[{"Type":"NodeText","Data":"目前 DNS 的设计采用的是分布式、层次数据库结构，"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"DNS 是应用层协议，它可以在 UDP 或 TCP 协议之上运行，端口为 53"},{"Type":"NodeText","Data":" 。"}]},{"ID":"20240201213555-yb7qjv3","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240201213555-yb7qjv3","updated":"20240201213555"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"DNS 服务器有哪些？根服务器有多少个？"}]},{"ID":"20240201213556-emp8c0w","Type":"NodeParagraph","Properties":{"id":"20240201213556-emp8c0w","updated":"20240201213556"},"Children":[{"Type":"NodeText","Data":"DNS 服务器自底向上可以依次分为以下几个层级(所有 DNS 服务器都属于以下四个类别之一):"}]},{"ID":"20240201213557-2vytboh","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213557-2vytboh","updated":"20240201213557"},"Children":[{"ID":"20240201213558-7jn50vf","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213558-7jn50vf","updated":"20240201213558"},"Children":[{"ID":"20240201213559-c9gg66i","Type":"NodeParagraph","Properties":{"id":"20240201213559-c9gg66i","updated":"20240201213559"},"Children":[{"Type":"NodeText","Data":"根 DNS 服务器。根 DNS 服务器提供 TLD 服务器的 IP 地址。目前世界上只有 13 组根服务器，我国境内目前仍没有根服务器。"}]}]},{"ID":"20240201213560-0jzqel7","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213560-0jzqel7","updated":"20240201213560"},"Children":[{"ID":"20240201213561-ej4utxj","Type":"NodeParagraph","Properties":{"id":"20240201213561-ej4utxj","updated":"20240201213561"},"Children":[{"Type":"NodeText","Data":"顶级域 DNS 服务器（TLD 服务器）。顶级域是指域名的后缀，如"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"com"},{"Type":"NodeText","Data":"、"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"org"},{"Type":"NodeText","Data":"、"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"net"},{"Type":"NodeText","Data":"和"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"edu"},{"Type":"NodeText","Data":"等。国家也有自己的顶级域，如"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"uk"},{"Type":"NodeText","Data":"、"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"fr"},{"Type":"NodeText","Data":"和"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"ca"},{"Type":"NodeText","Data":"。TLD 服务器提供了权威 DNS 服务器的 IP 地址。"}]}]},{"ID":"20240201213562-rh4ug6u","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213562-rh4ug6u","updated":"20240201213562"},"Children":[{"ID":"20240201213563-9hx51cd","Type":"NodeParagraph","Properties":{"id":"20240201213563-9hx51cd","updated":"20240201213563"},"Children":[{"Type":"NodeText","Data":"权威 DNS 服务器。在因特网上具有公共可访问主机的每个组织机构必须提供公共可访问的 DNS 记录，这些记录将这些主机的名字映射为 IP 地址。"}]}]},{"ID":"20240201213564-yj8ohlp","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213564-yj8ohlp","updated":"20240201213564"},"Children":[{"ID":"20240201213565-od56go4","Type":"NodeParagraph","Properties":{"id":"20240201213565-od56go4","updated":"20240201213565"},"Children":[{"Type":"NodeText","Data":"本地 DNS 服务器。每个 ISP（互联网服务提供商）都有一个自己的本地 DNS 服务器。当主机发出 DNS 请求时，该请求被发往本地 DNS 服务器，它起着代理的作用，并将该请求转发到 DNS 层次结构中。严格说来，不属于 DNS 层级结构"}]}]}]},{"ID":"20240201213566-5i26kuv","Type":"NodeParagraph","Properties":{"id":"20240201213566-5i26kuv","updated":"20240201213566"},"Children":[{"Type":"NodeText","Data":"世界上并不是只有 13 台根服务器，这是很多人普遍的误解，网上很多文章也是这么写的。实际上，现在根服务器数量远远超过这个数量。最初确实是为 DNS 根服务器分配了 13 个 IP 地址，每个 IP 地址对应一个不同的根 DNS 服务器。然而，由于互联网的快速发展和增长，这个原始的架构变得不太适应当前的需求。为了提高 DNS 的可靠性、安全性和性能，目前这 13 个 IP 地址中的每一个都有多个服务器，截止到 2023 年底，所有根服务器之和达到了 600 多台，未来还会继续增加。"}]},{"ID":"20240201213567-z8xg91h","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240201213567-z8xg91h","updated":"20240201213567"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"DNS 解析的过程是什么样的？"}]},{"ID":"20240201213568-g2x0i1v","Type":"NodeParagraph","Properties":{"id":"20240201213568-g2x0i1v","updated":"20240201213568"},"Children":[{"Type":"NodeText","Data":"整个过程的步骤比较多，我单独写了一篇文章详细介绍："},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"./dns.md","TextMarkTextContent":"DNS 域名系统详解（应用层）"},{"Type":"NodeText","Data":" 。"}]},{"ID":"20240201213569-kcctq9i","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240201213569-kcctq9i","updated":"20240201213569"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"DNS 劫持了解吗？如何应对？"}]},{"ID":"20240201213570-4ev2ul1","Type":"NodeParagraph","Properties":{"id":"20240201213570-4ev2ul1","updated":"20240201213570"},"Children":[{"Type":"NodeText","Data":"DNS 劫持是一种网络攻击，它通过修改 DNS 服务器的解析结果，使用户访问的域名指向错误的 IP 地址，从而导致用户无法访问正常的网站，或者被引导到恶意的网站。DNS 劫持有时也被称为 DNS 重定向、DNS 欺骗或 DNS 污染。DNS 劫持详细介绍可以参考："},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://cloud.tencent.com/developer/article/1197474","TextMarkTextContent":"黑客技术？没你想象的那么难！——DNS 劫持篇"},{"Type":"NodeText","Data":"。"}]},{"ID":"20240201213571-tvmeisf","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240201213571-tvmeisf","updated":"20240201213571"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"参考"}]},{"ID":"20240201213572-lzc2hjv","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213572-lzc2hjv","updated":"20240201213572"},"Children":[{"ID":"20240201213573-r0eop3r","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213573-r0eop3r","updated":"20240201213573"},"Children":[{"ID":"20240201213574-il7q3xg","Type":"NodeParagraph","Properties":{"id":"20240201213574-il7q3xg","updated":"20240201213574"},"Children":[{"Type":"NodeText","Data":"《图解 HTTP》"}]}]},{"ID":"20240201213575-ln5lg68","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213575-ln5lg68","updated":"20240201213575"},"Children":[{"ID":"20240201213576-l21i5z7","Type":"NodeParagraph","Properties":{"id":"20240201213576-l21i5z7","updated":"20240201213576"},"Children":[{"Type":"NodeText","Data":"《计算机网络自顶向下方法》（第七版）"}]}]},{"ID":"20240201213577-wvvj9ed","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213577-wvvj9ed","updated":"20240201213577"},"Children":[{"ID":"20240201213578-zyx8kct","Type":"NodeParagraph","Properties":{"id":"20240201213578-zyx8kct","updated":"20240201213578"},"Children":[{"Type":"NodeText","Data":"详解 HTTP/2.0 及 HTTPS 协议："},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://juejin.cn/post/7034668672262242318","TextMarkTextContent":"https://juejin.cn/post/7034668672262242318"}]}]},{"ID":"20240201213579-gkjvi5z","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213579-gkjvi5z","updated":"20240201213579"},"Children":[{"ID":"20240201213580-9yaaep6","Type":"NodeParagraph","Properties":{"id":"20240201213580-9yaaep6","updated":"20240201213580"},"Children":[{"Type":"NodeText","Data":"HTTP 请求头字段大全| HTTP Request Headers："},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://www.flysnow.org/tools/table/http-request-headers/","TextMarkTextContent":"https://www.flysnow.org/tools/table/http-request-headers/"}]}]},{"ID":"20240201213581-uby62il","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213581-uby62il","updated":"20240201213581"},"Children":[{"ID":"20240201213582-8dhnwf6","Type":"NodeParagraph","Properties":{"id":"20240201213582-8dhnwf6","updated":"20240201213582"},"Children":[{"Type":"NodeText","Data":"HTTP1、HTTP2、HTTP3："},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://juejin.cn/post/6855470356657307662","TextMarkTextContent":"https://juejin.cn/post/6855470356657307662"}]}]},{"ID":"20240201213583-qltb40n","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213583-qltb40n","updated":"20240201213583"},"Children":[{"ID":"20240201213584-3v0g5zh","Type":"NodeParagraph","Properties":{"id":"20240201213584-3v0g5zh","updated":"20240201213584"},"Children":[{"Type":"NodeText","Data":"如何看待 HTTP/3 ？ - 车小胖的回答 - 知乎: "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://www.zhihu.com/question/302412059/answer/533223530","TextMarkTextContent":"https://www.zhihu.com/question/302412059/answer/533223530"}]}]}]},{"ID":"20240201213585-aa01ov2","Type":"NodeHTMLBlock","Data":"\u003cdiv\u003e\n\u003c!-- @include: @article-footer.snippet.md --\u003e\n\u003c/div\u003e","HtmlBlockType":2,"Properties":{"id":"20240201213585-aa01ov2","updated":"20240201213585"}}]}