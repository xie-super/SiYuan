{"ID":"20240201213633-vf5wu5s","Spec":"1","Type":"NodeDocument","Properties":{"id":"20240201213633-vf5wu5s","title":"tree","updated":"20240201213633"},"Children":[{"ID":"20240201213634-xbv0amo","Type":"NodeThematicBreak","Properties":{"id":"20240201213634-xbv0amo","updated":"20240201213634"}},{"ID":"20240201213635-4s94kza","Type":"NodeParagraph","Properties":{"id":"20240201213635-4s94kza","updated":"20240201213635"},"Children":[{"Type":"NodeText","Data":"title: 树"},{"Type":"NodeSoftBreak","Data":"\n","Properties":{"id":""}},{"Type":"NodeText","Data":"category: 计算机基础"},{"Type":"NodeSoftBreak","Data":"\n","Properties":{"id":""}},{"Type":"NodeText","Data":"tag:"}]},{"ID":"20240201213636-wwlodt8","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"MarkerOffset":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213636-wwlodt8","updated":"20240201213636"},"Children":[{"ID":"20240201213637-4zuohxp","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"MarkerOffset":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213637-4zuohxp","updated":"20240201213637"},"Children":[{"ID":"20240201213638-n5i217s","Type":"NodeParagraph","Properties":{"id":"20240201213638-n5i217s","updated":"20240201213638"},"Children":[{"Type":"NodeText","Data":"数据结构"}]}]}]},{"ID":"20240201213639-9tgm5jg","Type":"NodeThematicBreak","Properties":{"id":"20240201213639-9tgm5jg","updated":"20240201213639"}},{"ID":"20240201213640-kie43r0","Type":"NodeParagraph","Properties":{"id":"20240201213640-kie43r0","updated":"20240201213640"},"Children":[{"Type":"NodeText","Data":"树就是一种类似现实生活中的树的数据结构（倒置的树）。任何一颗非空树只有一个根节点。"}]},{"ID":"20240201213641-xy4r27x","Type":"NodeParagraph","Properties":{"id":"20240201213641-xy4r27x","updated":"20240201213641"},"Children":[{"Type":"NodeText","Data":"一棵树具有以下特点："}]},{"ID":"20240201213642-spbelgc","Type":"NodeList","ListData":{"Typ":1,"Tight":true,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20240201213642-spbelgc","updated":"20240201213642"},"Children":[{"ID":"20240201213643-pukklfj","Type":"NodeListItem","Data":"1","ListData":{"Typ":1,"Tight":true,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20240201213643-pukklfj","updated":"20240201213643"},"Children":[{"ID":"20240201213644-y0kwfkh","Type":"NodeParagraph","Properties":{"id":"20240201213644-y0kwfkh","updated":"20240201213644"},"Children":[{"Type":"NodeText","Data":"一棵树中的任意两个结点有且仅有唯一的一条路径连通。"}]}]},{"ID":"20240201213645-tz4sgbo","Type":"NodeListItem","Data":"2","ListData":{"Typ":1,"Tight":true,"Start":2,"Delimiter":46,"Padding":3,"Marker":"Mg==","Num":2},"Properties":{"id":"20240201213645-tz4sgbo","updated":"20240201213645"},"Children":[{"ID":"20240201213646-pa7mf09","Type":"NodeParagraph","Properties":{"id":"20240201213646-pa7mf09","updated":"20240201213646"},"Children":[{"Type":"NodeText","Data":"一棵树如果有 n 个结点，那么它一定恰好有 n-1 条边。"}]}]},{"ID":"20240201213647-d5at0if","Type":"NodeListItem","Data":"3","ListData":{"Typ":1,"Tight":true,"Start":3,"Delimiter":46,"Padding":3,"Marker":"Mw==","Num":3},"Properties":{"id":"20240201213647-d5at0if","updated":"20240201213647"},"Children":[{"ID":"20240201213648-asy2pdo","Type":"NodeParagraph","Properties":{"id":"20240201213648-asy2pdo","updated":"20240201213648"},"Children":[{"Type":"NodeText","Data":"一棵树不包含回路。"}]}]}]},{"ID":"20240201213649-v9crjf4","Type":"NodeParagraph","Properties":{"id":"20240201213649-v9crjf4","updated":"20240201213649"},"Children":[{"Type":"NodeText","Data":"下图就是一颗树，并且是一颗二叉树。"}]},{"ID":"20240201213650-ukw7tnn","Type":"NodeParagraph","Properties":{"id":"20240201213650-ukw7tnn","updated":"20240201213650"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"二叉树","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"https://oss.javaguide.cn/github/javaguide/cs-basics/data-structure/%E4%BA%8C%E5%8F%89%E6%A0%91-2.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201213651-2hjnzhj","Type":"NodeParagraph","Properties":{"id":"20240201213651-2hjnzhj","updated":"20240201213651"},"Children":[{"Type":"NodeText","Data":"如上图所示，通过上面这张图说明一下树中的常用概念："}]},{"ID":"20240201213652-isqx0j2","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213652-isqx0j2","updated":"20240201213652"},"Children":[{"ID":"20240201213653-tt9gfh6","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213653-tt9gfh6","updated":"20240201213653"},"Children":[{"ID":"20240201213654-uz2cm7l","Type":"NodeParagraph","Properties":{"id":"20240201213654-uz2cm7l","updated":"20240201213654"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"节点"},{"Type":"NodeText","Data":"：树中的每个元素都可以统称为节点。"}]}]},{"ID":"20240201213655-a3301v7","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213655-a3301v7","updated":"20240201213655"},"Children":[{"ID":"20240201213656-qhb7sjz","Type":"NodeParagraph","Properties":{"id":"20240201213656-qhb7sjz","updated":"20240201213656"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"根节点"},{"Type":"NodeText","Data":"：顶层节点或者说没有父节点的节点。上图中 A 节点就是根节点。"}]}]},{"ID":"20240201213657-wvoj0wp","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213657-wvoj0wp","updated":"20240201213657"},"Children":[{"ID":"20240201213658-qpcce01","Type":"NodeParagraph","Properties":{"id":"20240201213658-qpcce01","updated":"20240201213658"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"父节点"},{"Type":"NodeText","Data":"：若一个节点含有子节点，则这个节点称为其子节点的父节点。上图中的 B 节点是 D 节点、E 节点的父节点。"}]}]},{"ID":"20240201213659-t70rq7g","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213659-t70rq7g","updated":"20240201213659"},"Children":[{"ID":"20240201213660-aokvb0p","Type":"NodeParagraph","Properties":{"id":"20240201213660-aokvb0p","updated":"20240201213660"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"子节点"},{"Type":"NodeText","Data":"：一个节点含有的子树的根节点称为该节点的子节点。上图中 D 节点、E 节点是 B 节点的子节点。"}]}]},{"ID":"20240201213661-tiibos4","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213661-tiibos4","updated":"20240201213661"},"Children":[{"ID":"20240201213662-ujwrryd","Type":"NodeParagraph","Properties":{"id":"20240201213662-ujwrryd","updated":"20240201213662"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"兄弟节点"},{"Type":"NodeText","Data":"：具有相同父节点的节点互称为兄弟节点。上图中 D 节点、E 节点的共同父节点是 B 节点，故 D 和 E 为兄弟节点。"}]}]},{"ID":"20240201213663-sh0466k","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213663-sh0466k","updated":"20240201213663"},"Children":[{"ID":"20240201213664-lvtmw2b","Type":"NodeParagraph","Properties":{"id":"20240201213664-lvtmw2b","updated":"20240201213664"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"叶子节点"},{"Type":"NodeText","Data":"：没有子节点的节点。上图中的 D、F、H、I 都是叶子节点。"}]}]},{"ID":"20240201213665-mytgp10","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213665-mytgp10","updated":"20240201213665"},"Children":[{"ID":"20240201213666-2efdv0s","Type":"NodeParagraph","Properties":{"id":"20240201213666-2efdv0s","updated":"20240201213666"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"节点的高度"},{"Type":"NodeText","Data":"：该节点到叶子节点的最长路径所包含的边数。"}]}]},{"ID":"20240201213667-t0qblzs","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213667-t0qblzs","updated":"20240201213667"},"Children":[{"ID":"20240201213668-3gk6o4y","Type":"NodeParagraph","Properties":{"id":"20240201213668-3gk6o4y","updated":"20240201213668"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"节点的深度"},{"Type":"NodeText","Data":"：根节点到该节点的路径所包含的边数"}]}]},{"ID":"20240201213669-9ai2ujj","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213669-9ai2ujj","updated":"20240201213669"},"Children":[{"ID":"20240201213670-tbfidwf","Type":"NodeParagraph","Properties":{"id":"20240201213670-tbfidwf","updated":"20240201213670"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"节点的层数"},{"Type":"NodeText","Data":"：节点的深度+1。"}]}]},{"ID":"20240201213671-bq48piq","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213671-bq48piq","updated":"20240201213671"},"Children":[{"ID":"20240201213672-ygdhaww","Type":"NodeParagraph","Properties":{"id":"20240201213672-ygdhaww","updated":"20240201213672"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"树的高度"},{"Type":"NodeText","Data":"：根节点的高度。"}]}]}]},{"ID":"20240201213673-uyny447","Type":"NodeBlockquote","Properties":{"id":"20240201213673-uyny447","updated":"20240201213673"},"Children":[{"Type":"NodeBlockquoteMarker","Data":"\u003e ","Properties":{"id":""}},{"ID":"20240201213674-cn3ibgo","Type":"NodeParagraph","Properties":{"id":"20240201213674-cn3ibgo","updated":"20240201213674"},"Children":[{"Type":"NodeText","Data":"关于树的深度和高度的定义可以看 stackoverflow 上的这个问题："},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://stackoverflow.com/questions/2603692/what-is-the-difference-between-tree-depth-and-height","TextMarkTextContent":"What is the difference between tree depth and height?"},{"Type":"NodeText","Data":" 。"}]}]},{"ID":"20240201213675-b8dbbhf","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240201213675-b8dbbhf","updated":"20240201213675"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"二叉树的分类"}]},{"ID":"20240201213676-fzk4r24","Type":"NodeParagraph","Properties":{"id":"20240201213676-fzk4r24","updated":"20240201213676"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"二叉树"},{"Type":"NodeText","Data":"（Binary tree）是每个节点最多只有两个分支（即不存在分支度大于 2 的节点）的树结构。"}]},{"ID":"20240201213677-3l2z58h","Type":"NodeParagraph","Properties":{"id":"20240201213677-3l2z58h","updated":"20240201213677"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"二叉树"},{"Type":"NodeText","Data":" 的分支通常被称作“"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"左子树"},{"Type":"NodeText","Data":"”或“"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"右子树"},{"Type":"NodeText","Data":"”。并且，"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"二叉树"},{"Type":"NodeText","Data":" 的分支具有左右次序，不能随意颠倒。"}]},{"ID":"20240201213678-rnto0zl","Type":"NodeParagraph","Properties":{"id":"20240201213678-rnto0zl","updated":"20240201213678"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"二叉树"},{"Type":"NodeText","Data":" 的第 i 层至多拥有 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"2^(i-1)"},{"Type":"NodeText","Data":" 个节点，深度为 k 的二叉树至多总共有 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"2^(k+1)-1"},{"Type":"NodeText","Data":" 个节点（满二叉树的情况），至少有 2^(k) 个节点（关于节点的深度的定义国内争议比较多，我个人比较认可维基百科对"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://zh.wikipedia.org/wiki/%E6%A0%91_(%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84)#/%E6%9C%AF%E8%AF%AD","TextMarkTextContent":"节点深度的定义"},{"Type":"NodeText","Data":"）。"}]},{"ID":"20240201213679-u9so1oj","Type":"NodeParagraph","Properties":{"id":"20240201213679-u9so1oj","updated":"20240201213679"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"危机百科对节点深度的定义","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"https://oss.javaguide.cn/github/javaguide/image-20220119112736158.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201213680-n7fc3ny","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240201213680-n7fc3ny","updated":"20240201213680"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"满二叉树"}]},{"ID":"20240201213681-97ve2vi","Type":"NodeParagraph","Properties":{"id":"20240201213681-97ve2vi","updated":"20240201213681"},"Children":[{"Type":"NodeText","Data":"一个二叉树，如果每一个层的结点数都达到最大值，则这个二叉树就是 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"满二叉树"},{"Type":"NodeText","Data":"。也就是说，如果一个二叉树的层数为 K，且结点总数是(2^k) -1 ，则它就是 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"满二叉树"},{"Type":"NodeText","Data":"。如下图所示："}]},{"ID":"20240201213682-7slmt3h","Type":"NodeParagraph","Properties":{"id":"20240201213682-7slmt3h","updated":"20240201213682"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"满二叉树","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"https://oss.javaguide.cn/github/javaguide/cs-basics/data-structure/full-binary-tree.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201213683-9cznvgt","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240201213683-9cznvgt","updated":"20240201213683"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"完全二叉树"}]},{"ID":"20240201213684-ct70jbm","Type":"NodeParagraph","Properties":{"id":"20240201213684-ct70jbm","updated":"20240201213684"},"Children":[{"Type":"NodeText","Data":"除最后一层外，若其余层都是满的，并且最后一层或者是满的，或者是在右边缺少连续若干节点，则这个二叉树就是 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"完全二叉树"},{"Type":"NodeText","Data":" 。"}]},{"ID":"20240201213685-a9zfq9f","Type":"NodeParagraph","Properties":{"id":"20240201213685-a9zfq9f","updated":"20240201213685"},"Children":[{"Type":"NodeText","Data":"大家可以想象为一棵树从根结点开始扩展，扩展完左子节点才能开始扩展右子节点，每扩展完一层，才能继续扩展下一层。如下图所示："}]},{"ID":"20240201213686-pmafiv2","Type":"NodeParagraph","Properties":{"id":"20240201213686-pmafiv2","updated":"20240201213686"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"完全二叉树","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"https://oss.javaguide.cn/github/javaguide/cs-basics/data-structure/complete-binary-tree.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201213687-1zvxjqz","Type":"NodeParagraph","Properties":{"id":"20240201213687-1zvxjqz","updated":"20240201213687"},"Children":[{"Type":"NodeText","Data":"完全二叉树有一个很好的性质："},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"父结点和子节点的序号有着对应关系。"}]},{"ID":"20240201213688-s0ugsyl","Type":"NodeParagraph","Properties":{"id":"20240201213688-s0ugsyl","updated":"20240201213688"},"Children":[{"Type":"NodeText","Data":"细心的小伙伴可能发现了，当根节点的值为 1 的情况下，若父结点的序号是 i，那么左子节点的序号就是 2i，右子节点的序号是 2i+1。这个性质使得完全二叉树利用数组存储时可以极大地节省空间，以及利用序号找到某个节点的父结点和子节点，后续二叉树的存储会详细介绍。"}]},{"ID":"20240201213689-f2ov3vi","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240201213689-f2ov3vi","updated":"20240201213689"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"平衡二叉树"}]},{"ID":"20240201213690-od8mrnl","Type":"NodeParagraph","Properties":{"id":"20240201213690-od8mrnl","updated":"20240201213690"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"平衡二叉树"},{"Type":"NodeText","Data":" 是一棵二叉排序树，且具有以下性质："}]},{"ID":"20240201213691-up3yvs0","Type":"NodeList","ListData":{"Typ":1,"Tight":true,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20240201213691-up3yvs0","updated":"20240201213691"},"Children":[{"ID":"20240201213692-5pwsj4h","Type":"NodeListItem","Data":"1","ListData":{"Typ":1,"Tight":true,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20240201213692-5pwsj4h","updated":"20240201213692"},"Children":[{"ID":"20240201213693-s545nab","Type":"NodeParagraph","Properties":{"id":"20240201213693-s545nab","updated":"20240201213693"},"Children":[{"Type":"NodeText","Data":"可以是一棵空树"}]}]},{"ID":"20240201213694-44xtdpa","Type":"NodeListItem","Data":"2","ListData":{"Typ":1,"Tight":true,"Start":2,"Delimiter":46,"Padding":3,"Marker":"Mg==","Num":2},"Properties":{"id":"20240201213694-44xtdpa","updated":"20240201213694"},"Children":[{"ID":"20240201213695-w8w5q39","Type":"NodeParagraph","Properties":{"id":"20240201213695-w8w5q39","updated":"20240201213695"},"Children":[{"Type":"NodeText","Data":"如果不是空树，它的左右两个子树的高度差的绝对值不超过 1，并且左右两个子树都是一棵平衡二叉树。"}]}]}]},{"ID":"20240201213696-nbimtsn","Type":"NodeParagraph","Properties":{"id":"20240201213696-nbimtsn","updated":"20240201213696"},"Children":[{"Type":"NodeText","Data":"平衡二叉树的常用实现方法有 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"红黑树"},{"Type":"NodeText","Data":"、"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"AVL 树"},{"Type":"NodeText","Data":"、"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"替罪羊树"},{"Type":"NodeText","Data":"、"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"加权平衡树"},{"Type":"NodeText","Data":"、"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"伸展树"},{"Type":"NodeText","Data":" 等。"}]},{"ID":"20240201213697-1km8ajn","Type":"NodeParagraph","Properties":{"id":"20240201213697-1km8ajn","updated":"20240201213697"},"Children":[{"Type":"NodeText","Data":"在给大家展示平衡二叉树之前，先给大家看一棵树："}]},{"ID":"20240201213698-3tdb084","Type":"NodeParagraph","Properties":{"id":"20240201213698-3tdb084","updated":"20240201213698"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"斜树","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"https://oss.javaguide.cn/github/javaguide/cs-basics/data-structure/oblique-tree.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201213699-3ca6car","Type":"NodeParagraph","Properties":{"id":"20240201213699-3ca6car","updated":"20240201213699"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"你管这玩意儿叫树？？？"}]},{"ID":"20240201213700-s1002yb","Type":"NodeParagraph","Properties":{"id":"20240201213700-s1002yb","updated":"20240201213700"},"Children":[{"Type":"NodeText","Data":"没错，这玩意儿还真叫树，只不过这棵树已经退化为一个链表了，我们管它叫 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"斜树"},{"Type":"NodeText","Data":"。"}]},{"ID":"20240201213701-mxsb5hb","Type":"NodeParagraph","Properties":{"id":"20240201213701-mxsb5hb","updated":"20240201213701"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"如果这样，那我为啥不直接用链表呢?"}]},{"ID":"20240201213702-f0rg5co","Type":"NodeParagraph","Properties":{"id":"20240201213702-f0rg5co","updated":"20240201213702"},"Children":[{"Type":"NodeText","Data":"谁说不是呢？"}]},{"ID":"20240201213703-xw9iknn","Type":"NodeParagraph","Properties":{"id":"20240201213703-xw9iknn","updated":"20240201213703"},"Children":[{"Type":"NodeText","Data":"二叉树相比于链表，由于父子节点以及兄弟节点之间往往具有某种特殊的关系，这种关系使得我们在树中对数据进行"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"搜索"},{"Type":"NodeText","Data":"和"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"修改"},{"Type":"NodeText","Data":"时，相对于链表更加快捷便利。"}]},{"ID":"20240201213704-5w40oid","Type":"NodeParagraph","Properties":{"id":"20240201213704-5w40oid","updated":"20240201213704"},"Children":[{"Type":"NodeText","Data":"但是，如果二叉树退化为一个链表了，那么那么树所具有的优秀性质就难以表现出来，效率也会大打折，为了避免这样的情况，我们希望每个做 “家长”（父结点） 的，都 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"一碗水端平"},{"Type":"NodeText","Data":"，分给左儿子和分给右儿子的尽可能一样多，相差最多不超过一层，如下图所示："}]},{"ID":"20240201213705-u190njt","Type":"NodeParagraph","Properties":{"id":"20240201213705-u190njt","updated":"20240201213705"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"平衡二叉树","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"https://oss.javaguide.cn/github/javaguide/cs-basics/data-structure/balanced-binary-tree.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201213706-qh24kje","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240201213706-qh24kje","updated":"20240201213706"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"二叉树的存储"}]},{"ID":"20240201213707-jsm6ou2","Type":"NodeParagraph","Properties":{"id":"20240201213707-jsm6ou2","updated":"20240201213707"},"Children":[{"Type":"NodeText","Data":"二叉树的存储主要分为 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"链式存储"},{"Type":"NodeText","Data":" 和 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"顺序存储"},{"Type":"NodeText","Data":" 两种："}]},{"ID":"20240201213708-a4sua39","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240201213708-a4sua39","updated":"20240201213708"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"链式存储"}]},{"ID":"20240201213709-ym13j56","Type":"NodeParagraph","Properties":{"id":"20240201213709-ym13j56","updated":"20240201213709"},"Children":[{"Type":"NodeText","Data":"和链表类似，二叉树的链式存储依靠指针将各个节点串联起来，不需要连续的存储空间。"}]},{"ID":"20240201213710-sn4korw","Type":"NodeParagraph","Properties":{"id":"20240201213710-sn4korw","updated":"20240201213710"},"Children":[{"Type":"NodeText","Data":"每个节点包括三个属性："}]},{"ID":"20240201213711-l42fmq3","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213711-l42fmq3","updated":"20240201213711"},"Children":[{"ID":"20240201213712-8m4d7lr","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213712-8m4d7lr","updated":"20240201213712"},"Children":[{"ID":"20240201213713-8cd5dt4","Type":"NodeParagraph","Properties":{"id":"20240201213713-8cd5dt4","updated":"20240201213713"},"Children":[{"Type":"NodeText","Data":"数据 data。data 不一定是单一的数据，根据不同情况，可以是多个具有不同类型的数据。"}]}]},{"ID":"20240201213714-xqm8xrf","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213714-xqm8xrf","updated":"20240201213714"},"Children":[{"ID":"20240201213715-sk1ntyh","Type":"NodeParagraph","Properties":{"id":"20240201213715-sk1ntyh","updated":"20240201213715"},"Children":[{"Type":"NodeText","Data":"左节点指针 left"}]}]},{"ID":"20240201213716-jhep1mz","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213716-jhep1mz","updated":"20240201213716"},"Children":[{"ID":"20240201213717-fulmusg","Type":"NodeParagraph","Properties":{"id":"20240201213717-fulmusg","updated":"20240201213717"},"Children":[{"Type":"NodeText","Data":"右节点指针 right。"}]}]}]},{"ID":"20240201213718-124zpix","Type":"NodeParagraph","Properties":{"id":"20240201213718-124zpix","updated":"20240201213718"},"Children":[{"Type":"NodeText","Data":"可是 JAVA 没有指针啊！"}]},{"ID":"20240201213719-n758jp3","Type":"NodeParagraph","Properties":{"id":"20240201213719-n758jp3","updated":"20240201213719"},"Children":[{"Type":"NodeText","Data":"那就直接引用对象呗（别问我对象哪里找）"}]},{"ID":"20240201213720-49fa1j0","Type":"NodeParagraph","Properties":{"id":"20240201213720-49fa1j0","updated":"20240201213720"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"链式存储二叉树","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"https://oss.javaguide.cn/github/javaguide/cs-basics/data-structure/chain-store-binary-tree.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201213721-si1eoyf","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240201213721-si1eoyf","updated":"20240201213721"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"顺序存储"}]},{"ID":"20240201213722-pmatbjf","Type":"NodeParagraph","Properties":{"id":"20240201213722-pmatbjf","updated":"20240201213722"},"Children":[{"Type":"NodeText","Data":"顺序存储就是利用数组进行存储，数组中的每一个位置仅存储节点的 data，不存储左右子节点的指针，子节点的索引通过数组下标完成。根结点的序号为 1，对于每个节点 Node，假设它存储在数组中下标为 i 的位置，那么它的左子节点就存储在 2i 的位置，它的右子节点存储在下标为 2i+1 的位置。"}]},{"ID":"20240201213723-3oqkx6s","Type":"NodeParagraph","Properties":{"id":"20240201213723-3oqkx6s","updated":"20240201213723"},"Children":[{"Type":"NodeText","Data":"一棵完全二叉树的数组顺序存储如下图所示："}]},{"ID":"20240201213724-b36im2b","Type":"NodeParagraph","Properties":{"id":"20240201213724-b36im2b","updated":"20240201213724"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"完全二叉树的数组顺序存储","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"https://oss.javaguide.cn/github/javaguide/cs-basics/data-structure/sequential-storage.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201213725-xe1s1vm","Type":"NodeParagraph","Properties":{"id":"20240201213725-xe1s1vm","updated":"20240201213725"},"Children":[{"Type":"NodeText","Data":"大家可以试着填写一下存储如下二叉树的数组，比较一下和完全二叉树的顺序存储有何区别："}]},{"ID":"20240201213726-or6760n","Type":"NodeParagraph","Properties":{"id":"20240201213726-or6760n","updated":"20240201213726"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"非完全二叉树的数组顺序存储","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"https://oss.javaguide.cn/github/javaguide/cs-basics/data-structure/sequential-storage2.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201213727-dv3yzm9","Type":"NodeParagraph","Properties":{"id":"20240201213727-dv3yzm9","updated":"20240201213727"},"Children":[{"Type":"NodeText","Data":"可以看到，如果我们要存储的二叉树不是完全二叉树，在数组中就会出现空隙，导致内存利用率降低"}]},{"ID":"20240201213728-90x86ee","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240201213728-90x86ee","updated":"20240201213728"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"二叉树的遍历"}]},{"ID":"20240201213729-6yktt3l","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240201213729-6yktt3l","updated":"20240201213729"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"先序遍历"}]},{"ID":"20240201213730-kze3lw7","Type":"NodeParagraph","Properties":{"id":"20240201213730-kze3lw7","updated":"20240201213730"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"先序遍历","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"https://oss.javaguide.cn/github/javaguide/cs-basics/data-structure/preorder-traversal.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201213731-gri2ro7","Type":"NodeParagraph","Properties":{"id":"20240201213731-gri2ro7","updated":"20240201213731"},"Children":[{"Type":"NodeText","Data":"二叉树的先序遍历，就是先输出根结点，再遍历左子树，最后遍历右子树，遍历左子树和右子树的时候，同样遵循先序遍历的规则，也就是说，我们可以递归实现先序遍历。"}]},{"ID":"20240201213732-34bn2pr","Type":"NodeParagraph","Properties":{"id":"20240201213732-34bn2pr","updated":"20240201213732"},"Children":[{"Type":"NodeText","Data":"代码如下："}]},{"ID":"20240201213733-1gi0ss5","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20240201213733-1gi0ss5","updated":"20240201213733"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"public void preOrder(TreeNode root){\n\tif(root == null){\n\t\treturn;\n\t}\n\tsystem.out.println(root.data);\n\tpreOrder(root.left);\n\tpreOrder(root.right);\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20240201213734-ws2tvks","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240201213734-ws2tvks","updated":"20240201213734"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"中序遍历"}]},{"ID":"20240201213735-rjy67tm","Type":"NodeParagraph","Properties":{"id":"20240201213735-rjy67tm","updated":"20240201213735"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"中序遍历","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"https://oss.javaguide.cn/github/javaguide/cs-basics/data-structure/inorder-traversal.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201213736-32bel3d","Type":"NodeParagraph","Properties":{"id":"20240201213736-32bel3d","updated":"20240201213736"},"Children":[{"Type":"NodeText","Data":"二叉树的中序遍历，就是先递归中序遍历左子树，再输出根结点的值，再递归中序遍历右子树，大家可以想象成一巴掌把树压扁，父结点被拍到了左子节点和右子节点的中间，如下图所示："}]},{"ID":"20240201213737-p6dpegs","Type":"NodeParagraph","Properties":{"id":"20240201213737-p6dpegs","updated":"20240201213737"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"中序遍历","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"https://oss.javaguide.cn/github/javaguide/cs-basics/data-structure/inorder-traversal2.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201213738-cpfe1za","Type":"NodeParagraph","Properties":{"id":"20240201213738-cpfe1za","updated":"20240201213738"},"Children":[{"Type":"NodeText","Data":"代码如下："}]},{"ID":"20240201213739-95raahu","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20240201213739-95raahu","updated":"20240201213739"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"public void inOrder(TreeNode root){\n\tif(root == null){\n\t\treturn;\n\t}\n\tinOrder(root.left);\n\tsystem.out.println(root.data);\n\tinOrder(root.right);\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20240201213740-2jxzihh","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240201213740-2jxzihh","updated":"20240201213740"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"后序遍历"}]},{"ID":"20240201213741-72kewdy","Type":"NodeParagraph","Properties":{"id":"20240201213741-72kewdy","updated":"20240201213741"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"后序遍历","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"https://oss.javaguide.cn/github/javaguide/cs-basics/data-structure/postorder-traversal.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201213742-720jhkv","Type":"NodeParagraph","Properties":{"id":"20240201213742-720jhkv","updated":"20240201213742"},"Children":[{"Type":"NodeText","Data":"二叉树的后序遍历，就是先递归后序遍历左子树，再递归后序遍历右子树，最后输出根结点的值"}]},{"ID":"20240201213743-6tnpe5e","Type":"NodeParagraph","Properties":{"id":"20240201213743-6tnpe5e","updated":"20240201213743"},"Children":[{"Type":"NodeText","Data":"代码如下："}]},{"ID":"20240201213744-oq0njfp","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20240201213744-oq0njfp","updated":"20240201213744"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"public void postOrder(TreeNode root){\n\tif(root == null){\n\t\treturn;\n\t}\n postOrder(root.left);\n\tpostOrder(root.right);\n\tsystem.out.println(root.data);\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20240201213745-8k7br3c","Type":"NodeHTMLBlock","Data":"\u003cdiv\u003e\n\u003c!-- @include: @article-footer.snippet.md --\u003e\n\u003c/div\u003e","HtmlBlockType":2,"Properties":{"id":"20240201213745-8k7br3c","updated":"20240201213745"}}]}