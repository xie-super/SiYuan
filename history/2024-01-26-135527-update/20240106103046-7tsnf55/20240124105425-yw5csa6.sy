{"ID":"20240124105425-yw5csa6","Spec":"1","Type":"NodeDocument","Properties":{"id":"20240124105425-yw5csa6","title":"README","updated":"20240126135005"},"Children":[{"ID":"20240124105426-j51atff","Type":"NodeHeading","HeadingLevel":1,"Properties":{"id":"20240124105426-j51atff","updated":"20240124105426"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"# ","Properties":{"id":""}},{"Type":"NodeText","Data":"javaGUI_commonSystem"}]},{"ID":"20240124105427-xs5gcpo","Type":"NodeParagraph","Properties":{"id":"20240124105427-xs5gcpo","updated":"20240124105427"},"Children":[{"Type":"NodeText","Data":"一个基于 javaswing的基本框架，增删改查都用了反射，可以快速搭建一个 javaswing的XX管理系统"}]},{"ID":"20240124114232-aeef6y6","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240124114232-aeef6y6","updated":"20240124115617"},"Children":[{"Type":"NodeText","Data":"功能"}]},{"ID":"20240124114240-9vewynr","Type":"NodeList","ListData":{},"Properties":{"id":"20240124114240-9vewynr","updated":"20240124115646"},"Children":[{"ID":"20240124114241-h7774wq","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240124114241-h7774wq","updated":"20240124114241"},"Children":[{"ID":"20240124114241-at5c9e5","Type":"NodeParagraph","Properties":{"id":"20240124114241-at5c9e5","updated":"20240124114245"},"Children":[{"Type":"NodeText","Data":"登录、注册"}]}]},{"ID":"20240124114245-a9xiwk1","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240124114245-a9xiwk1"},"Children":[{"ID":"20240124114245-kgsjw9w","Type":"NodeParagraph","Properties":{"id":"20240124114245-kgsjw9w","updated":"20240124115633"},"Children":[{"Type":"NodeText","Data":"列表信息显示"}]}]},{"ID":"20240124115634-qxfvf84","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240124115634-qxfvf84"},"Children":[{"ID":"20240124115634-au2yfte","Type":"NodeParagraph","Properties":{"id":"20240124115634-au2yfte","updated":"20240124115639"},"Children":[{"Type":"NodeText","Data":"个人信息展示"}]}]},{"ID":"20240124115639-rm9783l","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240124115639-rm9783l","updated":"20240124115642"},"Children":[{"ID":"20240124115639-4olumvo","Type":"NodeParagraph","Properties":{"id":"20240124115639-4olumvo","updated":"20240124115642"},"Children":[{"Type":"NodeText","Data":"公告栏"}]}]},{"ID":"20240124115622-x5tvn8y","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240124115622-x5tvn8y"},"Children":[{"ID":"20240124115622-96xaznr","Type":"NodeParagraph","Properties":{"id":"20240124115622-96xaznr","updated":"20240124115628"},"Children":[{"Type":"NodeText","Data":"信息修改"}]}]},{"ID":"20240124115628-38hovlc","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240124115628-38hovlc","updated":"20240124115646"},"Children":[{"ID":"20240124115628-emqw9a5","Type":"NodeParagraph","Properties":{"id":"20240124115628-emqw9a5","updated":"20240124115646"},"Children":[{"Type":"NodeText","Data":"......"}]}]}]},{"ID":"20240124105428-xm4xrye","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240124105428-xm4xrye","updated":"20240124115657"},"Children":[{"Type":"NodeText","Data":"快速开发一个系统"}]},{"ID":"20240124114210-dq971ek","Type":"NodeList","ListData":{"Typ":1},"Properties":{"id":"20240124114210-dq971ek","updated":"20240124115657"},"Children":[{"ID":"20240124114616-k3s78uj","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"MS4=","Num":1},"Properties":{"id":"20240124114616-k3s78uj","updated":"20240124114616"},"Children":[{"ID":"20240124114616-p87z5jl","Type":"NodeParagraph","Properties":{"id":"20240124114616-p87z5jl","updated":"20240124114616"},"Children":[{"Type":"NodeText","Data":"在 Common中修改 项目名称，以及角色"}]}]}]},{"ID":"20240124105435-y6wuvsl","Type":"NodeParagraph","Properties":{"id":"20240124105435-y6wuvsl","updated":"20240124115657"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeImage","Data":"span","Properties":{"parent-style":"width: 50%;","style":"width: 10000px;"},"Children":[{"Type":"NodeBang"},{"Type":"NodeOpenBracket"},{"Type":"NodeLinkText","Data":"image"},{"Type":"NodeCloseBracket"},{"Type":"NodeOpenParen"},{"Type":"NodeLinkDest","Data":"assets/image-20240124114159-ia023ek.png"},{"Type":"NodeCloseParen"}]},{"Type":"NodeKramdownSpanIAL","Data":"{: style=\"width: 10000px;\" parent-style=\"width: 50%;\"}"},{"Type":"NodeText","Data":"​"}]},{"ID":"20240124105436-7anhxwp","Type":"NodeParagraph","Properties":{"id":"20240124105436-7anhxwp","updated":"20240124115657"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeImage","Data":"span","Properties":{"parent-style":"width: 50%;","style":"width: 10000px;"},"Children":[{"Type":"NodeBang"},{"Type":"NodeOpenBracket"},{"Type":"NodeLinkText","Data":"image"},{"Type":"NodeCloseBracket"},{"Type":"NodeOpenParen"},{"Type":"NodeLinkDest","Data":"assets/image-20240124105436-xu3w7u9.png"},{"Type":"NodeCloseParen"}]},{"Type":"NodeKramdownSpanIAL","Data":"{: style=\"width: 10000px;\" parent-style=\"width: 50%;\"}"},{"Type":"NodeText","Data":"​"}]},{"ID":"20240124114126-z7e3c3r","Type":"NodeList","ListData":{"Typ":1},"Properties":{"id":"20240124114126-z7e3c3r","updated":"20240124115657"},"Children":[{"ID":"20240124114619-8oamqrn","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"Mi4=","Num":2},"Properties":{"id":"20240124114619-8oamqrn","updated":"20240124114619"},"Children":[{"ID":"20240124114619-mgyprnw","Type":"NodeParagraph","Properties":{"id":"20240124114619-mgyprnw","updated":"20240124114619"},"Children":[{"Type":"NodeText","Data":"写好映射关系："}]}]}]},{"ID":"20240124114605-vhze9c6","Type":"NodeParagraph","Properties":{"id":"20240124114605-vhze9c6","updated":"20240124115657"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeImage","Data":"span","Children":[{"Type":"NodeBang"},{"Type":"NodeOpenBracket"},{"Type":"NodeLinkText","Data":"image"},{"Type":"NodeCloseBracket"},{"Type":"NodeOpenParen"},{"Type":"NodeLinkDest","Data":"assets/image-20240124114605-d10wyyz.png"},{"Type":"NodeCloseParen"}]},{"Type":"NodeText","Data":"​"}]},{"ID":"20240124114159-plywz2v","Type":"NodeList","ListData":{"Typ":1},"Properties":{"id":"20240124114159-plywz2v","updated":"20240124115657"},"Children":[{"ID":"20240124114623-dtvbrxg","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"My4=","Num":3},"Properties":{"id":"20240124114623-dtvbrxg","updated":"20240124114623"},"Children":[{"ID":"20240124114623-gj2qned","Type":"NodeParagraph","Properties":{"id":"20240124114623-gj2qned","updated":"20240124114623"},"Children":[{"Type":"NodeText","Data":"实体类与数据库中字段对应关系"}]}]}]},{"ID":"20240124114332-cd191tq","Type":"NodeParagraph","Properties":{"id":"20240124114332-cd191tq","updated":"20240124115657"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeImage","Data":"span","Children":[{"Type":"NodeBang"},{"Type":"NodeOpenBracket"},{"Type":"NodeLinkText","Data":"image"},{"Type":"NodeCloseBracket"},{"Type":"NodeOpenParen"},{"Type":"NodeLinkDest","Data":"assets/image-20240124114332-vzuy3q2.png"},{"Type":"NodeCloseParen"}]},{"Type":"NodeText","Data":"​"}]},{"ID":"20240124114401-6jjq7x6","Type":"NodeParagraph","Properties":{"id":"20240124114401-6jjq7x6","updated":"20240124115657"}},{"ID":"20240124114503-fo4c74r","Type":"NodeList","ListData":{"Typ":1},"Properties":{"id":"20240124114503-fo4c74r","updated":"20240124115657"},"Children":[{"ID":"20240124114626-87w41b7","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"NC4=","Num":4},"Properties":{"id":"20240124114626-87w41b7","updated":"20240124115001"},"Children":[{"ID":"20240124114626-8a4doae","Type":"NodeParagraph","Properties":{"id":"20240124114626-8a4doae","updated":"20240124115001"},"Children":[{"Type":"NodeText","Data":"信息显示以及更改功能使用"}]},{"ID":"20240124114642-z6pgbju","Type":"NodeParagraph","Properties":{"id":"20240124114642-z6pgbju","updated":"20240124114905"},"Children":[{"Type":"NodeText","Data":"传入显示的表格标题 heard(界面显示时会自动查找其中文映射），传入一个要显示的类（set好某一字段后即为要查找的限制条件）传入为空则返回全部"}]},{"ID":"20240124114705-e01wx86","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240124114705-e01wx86","updated":"20240124114936"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ=="},{"Type":"NodeCodeBlockCode","Data":" String[] heard = {\"id\", \"name\", \"sex\", \"clazz\", \"password\"};\n GenericModifyPanel\u003cStudent\u003e modifyPanel = new GenericModifyPanel\u003c\u003e();\n Student student = new Student(); // Create an instance of Student (you might need to set some values)\n\n student.setSex(\"男\");\n//显示所有性别位男性的学生信息\n modifyPanel.show(heard, student, \"sex\");\n//显示所有学生信息\nmodifyPanel.show(heard, student, \"\");\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]}]}]},{"ID":"20240124114503-q5n36q6","Type":"NodeParagraph","Properties":{"id":"20240124114503-q5n36q6","updated":"20240124115657"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeImage","Data":"span","Properties":{"parent-style":"width: 50%;","style":"width: 10000px;"},"Children":[{"Type":"NodeBang"},{"Type":"NodeOpenBracket"},{"Type":"NodeLinkText","Data":"image"},{"Type":"NodeCloseBracket"},{"Type":"NodeOpenParen"},{"Type":"NodeLinkDest","Data":"assets/image-20240124114503-aleak94.png"},{"Type":"NodeCloseParen"}]},{"Type":"NodeKramdownSpanIAL","Data":"{: style=\"width: 10000px;\" parent-style=\"width: 50%;\"}"},{"Type":"NodeText","Data":"​"}]},{"ID":"20240124114611-6910hq5","Type":"NodeList","ListData":{"Typ":1},"Properties":{"id":"20240124114611-6910hq5","updated":"20240124115657"},"Children":[{"ID":"20240124115100-8r9mrw4","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"NS4=","Num":5},"Properties":{"id":"20240124115100-8r9mrw4","updated":"20240124115108"},"Children":[{"ID":"20240124115100-lcrpx8i","Type":"NodeParagraph","Properties":{"id":"20240124115100-lcrpx8i","updated":"20240124115105"},"Children":[{"Type":"NodeText","Data":"通用列表使用方式"}]},{"ID":"20240124115108-kx7649a","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240124115108-kx7649a","updated":"20240124115108"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ=="},{"Type":"NodeCodeBlockCode","Data":"//通用列表，使用方式\n\n/*\nString[] heard = {\"id\", \"name\", \"sex\", \"clazz\", \"password\"};\n\n        GenericTablePanel\u003cStudent\u003e tablePanel = new GenericTablePanel\u003c\u003e();\n        Student student = new Student(); // Create an instance of Student (you might need to set some values)\n        student.setSex(\"男\");\n        tablePanel.show(heard, student, \"sex\");\n* */\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]}]}]},{"ID":"20240124115119-7az0g7s","Type":"NodeParagraph","Properties":{"id":"20240124115119-7az0g7s","updated":"20240124115657"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeImage","Data":"span","Properties":{"parent-style":"width: 50%;","style":"width: 10000px;"},"Children":[{"Type":"NodeBang"},{"Type":"NodeOpenBracket"},{"Type":"NodeLinkText","Data":"image"},{"Type":"NodeCloseBracket"},{"Type":"NodeOpenParen"},{"Type":"NodeLinkDest","Data":"assets/image-20240124115119-glba9dt.png"},{"Type":"NodeCloseParen"}]},{"Type":"NodeKramdownSpanIAL","Data":"{: style=\"width: 10000px;\" parent-style=\"width: 50%;\"}"},{"Type":"NodeText","Data":"​"}]},{"ID":"20240124115125-d7o2gao","Type":"NodeList","ListData":{"Typ":1},"Properties":{"id":"20240124115125-d7o2gao","updated":"20240124115657"},"Children":[{"ID":"20240124115158-a8h5bpx","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"Ni4=","Num":6},"Properties":{"id":"20240124115158-a8h5bpx","updated":"20240124115204"},"Children":[{"ID":"20240124115158-2rsr35m","Type":"NodeParagraph","Properties":{"id":"20240124115158-2rsr35m","updated":"20240124115203"},"Children":[{"Type":"NodeText","Data":"通用个人信息展示"}]},{"ID":"20240124115204-3r11qkh","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240124115204-3r11qkh","updated":"20240124115204"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ=="},{"Type":"NodeCodeBlockCode","Data":"        GenericInfoPanel\u003cStudent\u003e infoPanel = new GenericInfoPanel\u003c\u003e();\n        Student student = new Student(\"1\", \"John\", \"Male\", 1);\n        infoPanel.show(student);\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]}]}]},{"ID":"20240124115213-ayppvzq","Type":"NodeParagraph","Properties":{"id":"20240124115213-ayppvzq","updated":"20240124115657"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeImage","Data":"span","Properties":{"parent-style":"width: 50%;","style":"width: 10000px;"},"Children":[{"Type":"NodeBang"},{"Type":"NodeOpenBracket"},{"Type":"NodeLinkText","Data":"image"},{"Type":"NodeCloseBracket"},{"Type":"NodeOpenParen"},{"Type":"NodeLinkDest","Data":"assets/image-20240124115213-w302qm0.png"},{"Type":"NodeCloseParen"}]},{"Type":"NodeKramdownSpanIAL","Data":"{: style=\"width: 10000px;\" parent-style=\"width: 50%;\"}"},{"Type":"NodeText","Data":"​"}]},{"ID":"20240124115220-spqz9ow","Type":"NodeList","ListData":{"Typ":1},"Properties":{"id":"20240124115220-spqz9ow","updated":"20240124115710"},"Children":[{"ID":"20240124115221-h17ss9c","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"Ny4=","Num":7},"Properties":{"id":"20240124115221-h17ss9c","updated":"20240124115710"},"Children":[{"ID":"20240124115221-albstri","Type":"NodeParagraph","Properties":{"id":"20240124115221-albstri","updated":"20240124115224"},"Children":[{"Type":"NodeText","Data":"其他界面"}]},{"ID":"20240124115536-8the6cu","Type":"NodeParagraph","Properties":{"id":"20240124115536-8the6cu","updated":"20240124115710"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeImage","Data":"span","Properties":{"parent-style":"width: 50%;","style":"width: 10000px;"},"Children":[{"Type":"NodeBang"},{"Type":"NodeOpenBracket"},{"Type":"NodeLinkText","Data":"image"},{"Type":"NodeCloseBracket"},{"Type":"NodeOpenParen"},{"Type":"NodeLinkDest","Data":"assets/image-20240124115536-ffokobe.png"},{"Type":"NodeCloseParen"}]},{"Type":"NodeKramdownSpanIAL","Data":"{: style=\"width: 10000px;\" parent-style=\"width: 50%;\"}"},{"Type":"NodeText","Data":"​"}]}]}]},{"ID":"20240124115548-c0x8xe0","Type":"NodeParagraph","Properties":{"id":"20240124115548-c0x8xe0","updated":"20240124115714"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeImage","Data":"span","Properties":{"parent-style":"width: 50%;","style":"width: 10000px;"},"Children":[{"Type":"NodeBang"},{"Type":"NodeOpenBracket"},{"Type":"NodeLinkText","Data":"image"},{"Type":"NodeCloseBracket"},{"Type":"NodeOpenParen"},{"Type":"NodeLinkDest","Data":"assets/image-20240124115548-f36526v.png"},{"Type":"NodeCloseParen"}]},{"Type":"NodeKramdownSpanIAL","Data":"{: style=\"width: 10000px;\" parent-style=\"width: 50%;\"}"},{"Type":"NodeText","Data":"​"}]},{"ID":"20240124115550-2qahqlq","Type":"NodeParagraph","Properties":{"id":"20240124115550-2qahqlq","updated":"20240124115657"},"Children":[{"Type":"NodeText","Data":"8......"}]},{"ID":"20240124115555-zun450s","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240124115555-zun450s","updated":"20240124115724"},"Children":[{"Type":"NodeText","Data":"系统设计"}]},{"ID":"20240124115724-dyuv6xa","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240124115724-dyuv6xa","updated":"20240124120241"},"Children":[{"Type":"NodeText","Data":"泛型与反射"}]},{"ID":"20240124120213-tq448nb","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240124120213-tq448nb","updated":"20240124120241"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ=="},{"Type":"NodeCodeBlockCode","Data":"public static \u003cT\u003e boolean insert(T entity) throws SQLException {\n        Connection connection = null;\n        PreparedStatement preparedStatement = null;\n\n        try {\n            connection = getConn();\n            // 获取实体类的所有字段\n            Field[] fields = entity.getClass().getDeclaredFields();\n            // 获取实体类的类名并转换为小写，和数据库中表名字对应\n            String tableName = entity.getClass().getSimpleName().toLowerCase();\n            // 构建SQL语句\n            StringBuilder sql = new StringBuilder(\"INSERT INTO \" + tableName + \" (\");\n            StringBuilder values = new StringBuilder(\") VALUES (\");\n            for (Field field : fields) {\n                //传入类变量只有有值才能更新，获取有值的变量\n                field.setAccessible(true); // 设置字段可访问\n                Object value = field.get(entity);\n                if (value != null) {\n                    sql.append(field.getName()).append(\",\");\n                    values.append(\"?,\");\n                }\n            }\n\n            // 移除末尾的逗号\n            sql.deleteCharAt(sql.length() - 1);\n            values.deleteCharAt(values.length() - 1);\n\n            // 拼接最终的SQL语句\n            sql.append(values).append(\")\");\n\n            // 创建PreparedStatement并设置参数\n            preparedStatement = connection.prepareStatement(sql.toString());\n\n            int parameterIndex = 1;\n            for (Field field : fields) {\n                field.setAccessible(true); // 设置字段可访问\n                Object value = field.get(entity);\n\n                if (value != null) {\n                    preparedStatement.setObject(parameterIndex++, value);\n                }\n            }\n            // 执行插入操作\n            if(preparedStatement.executeUpdate()!=0){\n                return true;\n            }\n            return false;\n        } catch (SQLException | IllegalAccessException e) {\n            e.printStackTrace();\n            // 输出SQL异常信息\n            System.err.println(\"SQL Exception: \" + e.getMessage());\n            return false; // 返回插入失败的标志\n        } finally {\n            connection.close();\n        }\n    }\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240124120422-hbmzjzw","Type":"NodeParagraph","Properties":{"id":"20240124120422-hbmzjzw","updated":"20240124120422"},"Children":[{"Type":"NodeText","Data":"利用反射动态地获取实体类的字段信息，构建 SQL 语句"}]},{"ID":"20240124120946-l5wty4j","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240124120946-l5wty4j","updated":"20240124120946"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ=="},{"Type":"NodeCodeBlockCode","Data":"\n    // 通用的 update 方法，传入的是实体以及字段名（根据该字段找数据）\n    public static \u003cT\u003e boolean update(T entity, String fieldName) throws SQLException {\n        Connection connection = null;\n        PreparedStatement preparedStatement = null;\n\n        try {\n            connection = getConn();\n\n                    // 获取实体类的所有字段\n                    Field[] fields = entity.getClass().getDeclaredFields();\n\n            // 获取实体类的类名并转换为小写\n            String tableName = entity.getClass().getSimpleName().toLowerCase();\n\n            // 构建SQL语句\n            StringBuilder sql = new StringBuilder(\"UPDATE \" + tableName + \" SET \");\n\n            for (Field field : fields) {\n                field.setAccessible(true); // 设置字段可访问\n                Object value = field.get(entity);\n\n                if (value != null) {\n                    sql.append(field.getName()).append(\"=?,\");\n                }\n            }\n\n            // 移除末尾的逗号\n            sql.deleteCharAt(sql.length() - 1);\n\n            // 添加 WHERE 子句\n            sql.append(\" WHERE \").append(fieldName).append(\"=?\");\n\n            // 创建PreparedStatement并设置参数\n            preparedStatement = connection.prepareStatement(sql.toString());\n\n            int parameterIndex = 1;\n            for (Field field : fields) {\n                field.setAccessible(true); // 设置字段可访问\n                Object value = field.get(entity);\n\n                if (value != null) {\n                    preparedStatement.setObject(parameterIndex++, value);\n                }\n            }\n\n            // 设置 WHERE 子句的参数\n            Field targetField = entity.getClass().getDeclaredField(fieldName);\n            targetField.setAccessible(true); // 设置字段可访问\n            Object targetValue = targetField.get(entity);\n            preparedStatement.setObject(parameterIndex, targetValue);\n\n            // 执行更新操作\n            if(preparedStatement.executeUpdate()!=0){\n                return true;\n            }\n            return false;\n\n        } catch (SQLException | IllegalAccessException | NoSuchFieldException e) {\n            e.printStackTrace();\n            // 输出SQL异常信息\n            System.err.println(\"SQL Exception: \" + e.getMessage());\n            return false; // 返回插入失败的标志\n        } finally {\n            connection.close();\n        }\n    }\n\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240124121022-r6mt46g","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240124121022-r6mt46g","updated":"20240124121022"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ=="},{"Type":"NodeCodeBlockCode","Data":" // 简化的 select 方法，传入类型实例，以及 where后的限制字段  select * from (entity的类名) where fieldName = (entity实例的fieldName值)返回传入类型的链表\n    //若field == \"\"则返回表中所有记录\n    public static \u003cT\u003e List\u003cT\u003e select(T entity, String fieldName) throws SQLException {\n        Connection connection = null;\n        PreparedStatement preparedStatement = null;\n        ResultSet resultSet = null;\n\n        try {\n            connection = getConn();\n            // 获取实体类的类名并转换为小写\n            String tableName = entity.getClass().getSimpleName().toLowerCase();\n            // 构建SQL语句\n            String sql = \"SELECT * FROM \" + tableName;\n\n            if (!fieldName.isEmpty()) {\n                // If fieldName is not empty, add WHERE clause\n                sql += \" WHERE \" + fieldName + \"=?\";\n            }\n\n            // 创建PreparedStatement并设置参数\n            preparedStatement = connection.prepareStatement(sql);\n\n            // If fieldName is not empty, set the parameter\n            if (!fieldName.isEmpty()) {\n                // 通过反射获取实体对象的字段值\n                Field field = entity.getClass().getDeclaredField(fieldName);\n                field.setAccessible(true); // 设置字段可访问\n                Object value = field.get(entity);\n\n                preparedStatement.setObject(1, value);\n            }\n\n            // 执行查询操作\n            resultSet = preparedStatement.executeQuery();\n\n            // 创建实体对象列表\n            List\u003cT\u003e resultList = new ArrayList\u003c\u003e();\n\n            // 获取查询结果并设置实体对象的属性\n            while (resultSet.next()) {\n                T resultEntity = (T) entity.getClass().getDeclaredConstructor().newInstance();\n                Field[] fields = resultEntity.getClass().getDeclaredFields();\n                for (Field resultField : fields) {\n                    resultField.setAccessible(true); // 设置字段可访问\n                    Object resultValue = resultSet.getObject(resultField.getName());\n                    resultField.set(resultEntity, resultValue);\n                }\n                resultList.add(resultEntity);\n            }\n\n            return resultList;\n\n        } catch (SQLException | IllegalAccessException | InstantiationException | NoSuchMethodException | NoSuchFieldException | InvocationTargetException e) {\n            e.printStackTrace();\n            // 输出异常信息\n            System.err.println(\"Exception: \" + e.getMessage());\n            return new ArrayList\u003c\u003e(); // 返回空列表或其他标志\n        } finally {\n            connection.close();\n        }\n    }\n\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240124121040-j6s2rnx","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240124121040-j6s2rnx","updated":"20240124121040"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ=="},{"Type":"NodeCodeBlockCode","Data":"\n    // 通用的 delete 方法\n    public static \u003cT\u003e boolean delete(T entity, String fieldName) throws SQLException {\n        Connection connection = null;\n        PreparedStatement preparedStatement = null;\n\n        try {\n            connection = getConn();// 获取数据库连接，这里是你的实现\n\n            // 获取实体类的类名并转换为小写\n            String tableName = entity.getClass().getSimpleName().toLowerCase();\n\n            // 构建SQL语句\n            System.out.println(tableName);\n            String sql = \"DELETE FROM \" + tableName + \" WHERE \" + fieldName + \"=?\";\n\n            // 创建PreparedStatement并设置参数\n            preparedStatement = connection.prepareStatement(sql);\n\n            // 通过反射获取实体对象的字段值\n            Field field = entity.getClass().getDeclaredField(fieldName);\n            field.setAccessible(true); // 设置字段可访问\n            Object value = field.get(entity);\n            System.out.println(value.toString());\n            preparedStatement.setObject(1, value);\n\n            int falg = preparedStatement.executeUpdate();\n            System.out.println(falg);\n            // 执行删除操作\n            if(falg!=0){\n                return true;\n            }\n            return false;\n\n        } catch (SQLException | IllegalAccessException | NoSuchFieldException e) {\n            e.printStackTrace();\n            // 输出异常信息\n            System.err.println(\"Exception: \" + e.getMessage());\n            return false; // 返回删除失败的标志\n        } finally {\n            connection.close();\n        }\n    }\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240124121330-8ecckmj","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240124121330-8ecckmj","updated":"20240124121336"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ=="},{"Type":"NodeCodeBlockCode","Data":"insertProjectButton.addActionListener(new ActionListener() {\n    @SneakyThrows\n    @Override\n    public void actionPerformed(ActionEvent e) {\n        // ... (Prompt user for input, create newValues array, and add new row to the model)\n\n        // Insert into the database\n        T entityToInsert;\n        try {\n            entityToInsert = (T) entity.getClass().getDeclaredConstructor().newInstance();\n        } catch (InstantiationException | IllegalAccessException | InvocationTargetException | NoSuchMethodException ex) {\n            ex.printStackTrace(); // Handle the exception appropriately\n            return;\n        }\n\n        // Set values from newValues to the entity\n        for (int i = 0; i \u003c chineseHeard.length; i++) {\n            setEntityProperty(entityToInsert, heard[i], newValues[i]);\n        }\n\n        // Insert into the database\n        DB.insert(entityToInsert);\n    }\n});\n\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240124121431-8w3hgi4","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240124121431-8w3hgi4","updated":"20240124121448"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ=="},{"Type":"NodeCodeBlockCode","Data":"// 辅助方法：使用反射设置属性值\nprivate void setEntityProperty(T entity, String propertyName, Object value) {\n    try {\n        // 假设 T 类型有一个用于该属性的 setter 方法（例如，setName()）\n        // 通过反射找到实体对象的 setter 方法\n        Method setterMethod = findSetterMethod(entity.getClass(), propertyName);\n\n        // 如果找到了 setter 方法，则调用该方法设置属性值\n        if (setterMethod != null) {\n            setterMethod.invoke(entity, value);\n        }\n    } catch (IllegalAccessException | InvocationTargetException ex) {\n        // 处理反射调用异常\n        ex.printStackTrace(); // 在实际应用中，应该以适当的方式处理异常\n    }\n}\n    // Helper method to find the setter method for a property\n    private Method findSetterMethod(Class\u003c?\u003e clazz, String propertyName) {\n        String setterMethodName = \"set\" + propertyName.substring(0, 1).toUpperCase() + propertyName.substring(1);\n        Method[] methods = clazz.getMethods();\n        for (Method method : methods) {\n            if (method.getName().equals(setterMethodName) \u0026\u0026 method.getParameterCount() == 1) {\n                return method;\n            }\n        }\n        return null;\n    }\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240124170128-1fhjrg0","Type":"NodeParagraph","Properties":{"id":"20240124170128-1fhjrg0"}},{"ID":"20240126133910-i2xye8g","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240126133910-i2xye8g","updated":"20240126135005"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"cGxhbnR1bWw="},{"Type":"NodeCodeBlockCode","Data":"@startuml\ntitle 在线教育平台\nskinparam defaultFontName Microsoft YaHei\nskinparam monochrome true\nskinparam shadowing false\n\nrectangle \u0026quot;在线教育平台\u0026quot; as r1 {\n    rectangle \u0026quot;管理员\u0026quot; as r2\n    rectangle \u0026quot;教师\u0026quot; as r3\n    rectangle \u0026quot;学生\u0026quot; as r4\n    rectangle \u0026quot;学生管理\u0026quot; as r2_1\nrectangle \u0026quot;教师管理\u0026quot; as r2_2\nrectangle \u0026quot;上传课件链接\u0026quot; as r2_3\nrectangle \u0026quot;测试查询\u0026quot; as r2_4\nrectangle \u0026quot;增加测试\u0026quot; as r2_5\nrectangle \u0026quot;题库查询\u0026quot; as r2_6\nrectangle \u0026quot;增加题库\u0026quot; as r2_7\nrectangle \u0026quot;成绩查询\u0026quot; as r2_8\n\nrectangle \u0026quot;添加学生\u0026quot; as r3_1\nrectangle \u0026quot;上传课件链接\u0026quot; as r3_2\nrectangle \u0026quot;测试查询\u0026quot; as r3_3\nrectangle \u0026quot;增加测试\u0026quot; as r3_4\nrectangle \u0026quot;题库查询\u0026quot; as r3_5\nrectangle \u0026quot;增加题库\u0026quot; as r3_6\nrectangle \u0026quot;成绩查询\u0026quot; as r3_7\n\nrectangle \u0026quot;登录\u0026quot; as r4_1\nrectangle \u0026quot;注册\u0026quot; as r4_2\nrectangle \u0026quot;在线学习\u0026quot; as r4_3\nrectangle \u0026quot;在线考试\u0026quot; as r4_4\nrectangle \u0026quot;课件测试\u0026quot; as r4_5\nrectangle \u0026quot;查看成绩\u0026quot; as r4_6\nrectangle \u0026quot;网上留言答疑\u0026quot; as r4_7\n    r2 -down-\u0026gt; r2_1\n    r2 -down-\u0026gt; r2_2\n    r2 -down-\u0026gt; r2_3\n    r2 -down-\u0026gt; r2_4\n    r2 -down-\u0026gt; r2_5\n    r2 -down-\u0026gt; r2_6\n    r2 -down-\u0026gt; r2_7\n    r2 -down-\u0026gt; r2_8\n\n    r3 -down-\u0026gt; r3_1\n    r3 -down-\u0026gt; r3_2\n    r3 -down-\u0026gt; r3_3\n    r3 -down-\u0026gt; r3_4\n    r3 -down-\u0026gt; r3_5\n    r3 -down-\u0026gt; r3_6\n    r3 -down-\u0026gt; r3_7\n\n    r4 -down-\u0026gt; r4_1\n    r4 -down-\u0026gt; r4_2\n    r4 -down-\u0026gt; r4_3\n    r4 -down-\u0026gt; r4_4\n    r4 -down-\u0026gt; r4_5\n    r4 -down-\u0026gt; r4_6\n    r4 -down-\u0026gt; r4_7\n}\n\n\n\n@enduml\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240126134911-6hdec5g","Type":"NodeParagraph","Properties":{"id":"20240126134911-6hdec5g"}},{"ID":"20240126133923-lv622q7","Type":"NodeParagraph","Properties":{"id":"20240126133923-lv622q7"}}]}