{"ID":"20240201214149-1fym5h3","Spec":"1","Type":"NodeDocument","Properties":{"id":"20240201214149-1fym5h3","title":"i-1冗余","updated":"20240201214149"},"Children":[{"ID":"20240201214150-6tquq4f","Type":"NodeThematicBreak","Properties":{"id":"20240201214150-6tquq4f","updated":"20240201214150"}},{"ID":"20240201214151-55rjl0n","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240201214151-55rjl0n","updated":"20240201214151"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"9.2 冗余"}]},{"ID":"20240201214152-divtgn0","Type":"NodeParagraph","Properties":{"id":"20240201214152-divtgn0","updated":"20240201214152"},"Children":[{"Type":"NodeText","Data":"冗余设计是保证系统和数据高可用的最常的手段。"}]},{"ID":"20240201214153-sys5dbs","Type":"NodeParagraph","Properties":{"id":"20240201214153-sys5dbs","updated":"20240201214153"},"Children":[{"Type":"NodeText","Data":"对于服务来说，冗余的思想就是相同的服务部署多份，如果正在使用的服务突然挂掉的话，系统可以很快切换到备份服务上，大大减少系统的不可用时间，提高系统的可用性。"}]},{"ID":"20240201214154-mtlrjcq","Type":"NodeParagraph","Properties":{"id":"20240201214154-mtlrjcq","updated":"20240201214154"},"Children":[{"Type":"NodeText","Data":"对于数据来说，冗余的思想就是相同的数据备份多份，这样就可以很简单地提高数据的安全性。"}]},{"ID":"20240201214155-v9vuchf","Type":"NodeParagraph","Properties":{"id":"20240201214155-v9vuchf","updated":"20240201214155"},"Children":[{"Type":"NodeText","Data":"实际上，日常生活中就有非常多的冗余思想的应用。"}]},{"ID":"20240201214156-b30mt6e","Type":"NodeParagraph","Properties":{"id":"20240201214156-b30mt6e","updated":"20240201214156"},"Children":[{"Type":"NodeText","Data":"拿我自己来说，我对于重要文件的保存方法就是冗余思想的应用。我日常所使用的重要文件都会同步一份在 Github 以及个人云盘上，这样就可以保证即使电脑硬盘损坏，我也可以通过 Github 或者个人云盘找回自己的重要文件。"}]},{"ID":"20240201214157-jwt66n6","Type":"NodeParagraph","Properties":{"id":"20240201214157-jwt66n6","updated":"20240201214157"},"Children":[{"Type":"NodeText","Data":"高可用集群（High Availability Cluster，简称 HA Cluster）、同城灾备、异地灾备、同城多活和异地多活是冗余思想在高可用系统设计中最典型的应用。"}]},{"ID":"20240201214158-wjoeizd","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201214158-wjoeizd","updated":"20240201214158"},"Children":[{"ID":"20240201214159-6c25kxf","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201214159-6c25kxf","updated":"20240201214159"},"Children":[{"ID":"20240201214160-a51wymx","Type":"NodeParagraph","Properties":{"id":"20240201214160-a51wymx","updated":"20240201214160"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"高可用集群"},{"Type":"NodeText","Data":" : 同一份服务部署两份或者多份，当正在使用的服务突然挂掉的话，可以切换到另外一台服务，从而保证服务的高可用。"}]}]},{"ID":"20240201214161-eiwxb0y","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201214161-eiwxb0y","updated":"20240201214161"},"Children":[{"ID":"20240201214162-dtlgjda","Type":"NodeParagraph","Properties":{"id":"20240201214162-dtlgjda","updated":"20240201214162"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"同城灾备"},{"Type":"NodeText","Data":" ：一整个集群可以部署在同一个机房，而同城灾备中相同服务部署在同一个城市的不同机房中。并且，备用服务不处理请求。这样可以避免机房出现意外情况比如停电、火灾。"}]}]},{"ID":"20240201214163-cv4cdg7","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201214163-cv4cdg7","updated":"20240201214163"},"Children":[{"ID":"20240201214164-phz6xn5","Type":"NodeParagraph","Properties":{"id":"20240201214164-phz6xn5","updated":"20240201214164"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"异地灾备"},{"Type":"NodeText","Data":" ：类似于同城灾备，不同的是，相同服务部署在异地（通常距离较远，甚至是在不同的城市或者国家）的不同机房中"}]}]},{"ID":"20240201214165-0n2zjmq","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201214165-0n2zjmq","updated":"20240201214165"},"Children":[{"ID":"20240201214166-34l5jvm","Type":"NodeParagraph","Properties":{"id":"20240201214166-34l5jvm","updated":"20240201214166"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"同城多活"},{"Type":"NodeText","Data":" ：类似于同城灾备，但备用服务可以处理请求，这样可以充分利用系统资源，提高系统的并发。"}]}]},{"ID":"20240201214167-1b8bhtt","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201214167-1b8bhtt","updated":"20240201214167"},"Children":[{"ID":"20240201214168-rgxic0q","Type":"NodeParagraph","Properties":{"id":"20240201214168-rgxic0q","updated":"20240201214168"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"异地多活"},{"Type":"NodeText","Data":" : 将服务部署在异地的不同机房中，并且，它们可以同时对外提供服务。"}]}]}]},{"ID":"20240201214169-i12j4fm","Type":"NodeParagraph","Properties":{"id":"20240201214169-i12j4fm","updated":"20240201214169"},"Children":[{"Type":"NodeText","Data":"高可用集群单纯是服务的冗余，并没有强调地域。同城灾备、异地灾备、同城多活和异地多活实现了地域上的冗余。"}]},{"ID":"20240201214170-lz1vdyj","Type":"NodeParagraph","Properties":{"id":"20240201214170-lz1vdyj","updated":"20240201214170"},"Children":[{"Type":"NodeText","Data":"同城和异地的主要区别在于机房之间的距离。异地通常距离较远，甚至是在不同的城市或者国家。"}]},{"ID":"20240201214171-44an888","Type":"NodeParagraph","Properties":{"id":"20240201214171-44an888","updated":"20240201214171"},"Children":[{"Type":"NodeText","Data":"和传统的灾备设计相比，同城多活和异地多活最明显的改变在于“多活”，即所有站点都是同时在对外提供服务的。异地多活是为了应对突发状况比如火灾、地震等自然或者人为灾害。"}]},{"ID":"20240201214172-mb0jsls","Type":"NodeParagraph","Properties":{"id":"20240201214172-mb0jsls","updated":"20240201214172"},"Children":[{"Type":"NodeText","Data":"光做好冗余还不够，必须要配合上 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"故障转移"},{"Type":"NodeText","Data":" 才可以！ 所谓故障转移，简单来说就是实现不可用服务快速且自动地切换到可用服务，整个过程不需要人为干涉。"}]},{"ID":"20240201214173-9q250bb","Type":"NodeParagraph","Properties":{"id":"20240201214173-9q250bb","updated":"20240201214173"},"Children":[{"Type":"NodeText","Data":"举个例子：哨兵模式的 Redis 集群中，如果 Sentinel（哨兵） 检测到 master 节点出现故障的话， 它就会帮助我们实现故障转移，自动将某一台 slave 升级为 master，确保整个 Redis 系统的可用性。整个过程完全自动，不需要人工介入。我在"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://www.yuque.com/docs/share/f37fc804-bfe6-4b0d-b373-9c462188fec7","TextMarkTextContent":"《Java 面试指北》"},{"Type":"NodeText","Data":"的「技术面试题篇」中的数据库部分详细介绍了 Redis 集群相关的知识点\u0026面试题，感兴趣的小伙伴可以看看。"}]},{"ID":"20240201214174-iplo1hm","Type":"NodeParagraph","Properties":{"id":"20240201214174-iplo1hm","updated":"20240201214174"},"Children":[{"Type":"NodeText","Data":"再举个例子：Nginx 可以结合 Keepalived 来实现高可用。如果 Nginx 主服务器宕机的话，Keepalived 可以自动进行故障转移，备用 Nginx 主服务器升级为主服务。并且，这个切换对外是透明的，因为使用的虚拟 IP，虚拟 IP 不会改变。我在"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://www.yuque.com/docs/share/f37fc804-bfe6-4b0d-b373-9c462188fec7","TextMarkTextContent":"《Java 面试指北》"},{"Type":"NodeText","Data":"的「技术面试题篇」中的「服务器」部分详细介绍了 Nginx 相关的知识点\u0026面试题，感兴趣的小伙伴可以看看。"}]},{"ID":"20240201214175-ssrw1dr","Type":"NodeParagraph","Properties":{"id":"20240201214175-ssrw1dr","updated":"20240201214175"},"Children":[{"Type":"NodeText","Data":"异地多活架构实施起来非常难，需要考虑的因素非常多。本人不才，实际项目中并没有实践过异地多活架构，我对其了解还停留在书本知识。"}]},{"ID":"20240201214176-dk6dnvl","Type":"NodeParagraph","Properties":{"id":"20240201214176-dk6dnvl","updated":"20240201214176"},"Children":[{"Type":"NodeText","Data":"如果你想要深入学习异地多活相关的知识，我这里推荐几篇我觉得还不错的文章："}]},{"ID":"20240201214177-j5hk4ja","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201214177-j5hk4ja","updated":"20240201214177"},"Children":[{"ID":"20240201214178-ju7tdco","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201214178-ju7tdco","updated":"20240201214178"},"Children":[{"ID":"20240201214179-x7sgq7s","Type":"NodeParagraph","Properties":{"id":"20240201214179-x7sgq7s","updated":"20240201214179"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://mp.weixin.qq.com/s/T6mMDdtTfBuIiEowCpqu6Q","TextMarkTextContent":"搞懂异地多活，看这篇就够了- 水滴与银弹 - 2021"}]}]},{"ID":"20240201214180-0q3nkwh","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201214180-0q3nkwh","updated":"20240201214180"},"Children":[{"ID":"20240201214181-pj4hiwr","Type":"NodeParagraph","Properties":{"id":"20240201214181-pj4hiwr","updated":"20240201214181"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://mp.weixin.qq.com/s/hMD-IS__4JE5_nQhYPYSTg","TextMarkTextContent":"四步构建异地多活"}]}]},{"ID":"20240201214182-bagz7vl","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201214182-bagz7vl","updated":"20240201214182"},"Children":[{"ID":"20240201214183-0bcksd6","Type":"NodeParagraph","Properties":{"id":"20240201214183-0bcksd6","updated":"20240201214183"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"http://gk.link/a/10pKZ","TextMarkTextContent":"《从零开始学架构》— 28 | 业务高可用的保障：异地多活架构"}]}]}]},{"ID":"20240201214184-2zoe3lu","Type":"NodeParagraph","Properties":{"id":"20240201214184-2zoe3lu","updated":"20240201214184"},"Children":[{"Type":"NodeText","Data":"不过，这些文章大多也都是在介绍概念知识。目前，网上还缺少真正介绍具体要如何去实践落地异地多活架构的资料。"}]}]}