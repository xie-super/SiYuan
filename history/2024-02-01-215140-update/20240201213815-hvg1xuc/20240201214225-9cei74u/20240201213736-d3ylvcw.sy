{"ID":"20240201213736-d3ylvcw","Spec":"1","Type":"NodeDocument","Properties":{"id":"20240201213736-d3ylvcw","title":"d-1-mysql","updated":"20240201213737"},"Children":[{"ID":"20240201213737-s6mvux1","Type":"NodeParagraph","Properties":{"id":"20240201213737-s6mvux1","updated":"20240201213737"},"Children":[{"Type":"NodeText","Data":"4.2 MySQL"}]},{"ID":"20240201213738-mbg4ceb","Type":"NodeBlockquote","Properties":{"id":"20240201213738-mbg4ceb","updated":"20240201214458"},"Children":[{"Type":"NodeBlockquoteMarker","Data":"\u003e ","Properties":{"id":""}},{"ID":"20240201213739-gbij0hg","Type":"NodeParagraph","Properties":{"id":"20240201213739-gbij0hg","updated":"20240201213739"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://javaguide.cn/","TextMarkTextContent":"JavaGuide"},{"Type":"NodeText","Data":" ：「Java学习+面试指南」一份涵盖大部分 Java 程序员所需要掌握的核心知识。准备 Java 面试，首选 JavaGuide！"}]}]},{"ID":"20240201213740-4iwky7m","Type":"NodeParagraph","Properties":{"id":"20240201213740-4iwky7m","updated":"20240201214458"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/7965efc059b841aeb377e3b3e1e1005c~tplv-k3u1fbpfcp-zoom-1.image","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201213741-9kdv14c","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240201213741-9kdv14c","updated":"20240201214458"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"MySQL 基础"}]},{"ID":"20240201213742-0olzvud","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20240201213742-0olzvud","updated":"20240201214458"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"关系型数据库介绍"}]},{"ID":"20240201213743-nrwscx6","Type":"NodeParagraph","Properties":{"id":"20240201213743-nrwscx6","updated":"20240201214458"},"Children":[{"Type":"NodeText","Data":"顾名思义，关系型数据库就是一种建立在关系模型的基础上的数据库。关系模型表明了数据库中所存储的数据之间的联系（一对一、一对多、多对多）。"}]},{"ID":"20240201213744-lw646gm","Type":"NodeParagraph","Properties":{"id":"20240201213744-lw646gm","updated":"20240201214458"},"Children":[{"Type":"NodeText","Data":"关系型数据库中，我们的数据都被存放在了各种表中（比如用户表），表中的每一行就存放着一条数据（比如一个用户的信息）。"}]},{"ID":"20240201213745-bt2ztvp","Type":"NodeParagraph","Properties":{"id":"20240201213745-bt2ztvp","updated":"20240201214458"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"https://guide-blog-images.oss-cn-shenzhen.aliyuncs.com/java-guide-blog/5e3c1a71724a38245aa43b02_99bf70d46cc247be878de9d3a88f0c44.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201213746-55s2ju5","Type":"NodeParagraph","Properties":{"id":"20240201213746-55s2ju5","updated":"20240201214458"},"Children":[{"Type":"NodeText","Data":"大部分关系型数据库都使用 SQL 来操作数据库中的数据。并且，大部分关系型数据库都支持事务的四大特性(ACID)。"}]},{"ID":"20240201213747-szcm2tc","Type":"NodeParagraph","Properties":{"id":"20240201213747-szcm2tc","updated":"20240201214458"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"有哪些常见的关系型数据库呢？"}]},{"ID":"20240201213748-e962d60","Type":"NodeParagraph","Properties":{"id":"20240201213748-e962d60","updated":"20240201214458"},"Children":[{"Type":"NodeText","Data":"MySQL、PostgreSQL、Oracle、SQL Server、SQLite（微信本地的聊天记录的存储就是用的 SQLite） ......。"}]},{"ID":"20240201213749-5yorx32","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20240201213749-5yorx32","updated":"20240201214458"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"MySQL 介绍"}]},{"ID":"20240201213750-tb9sjp3","Type":"NodeParagraph","Properties":{"id":"20240201213750-tb9sjp3","updated":"20240201214458"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"https://img-blog.csdnimg.cn/20210327143351823.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201213751-5h3ze3e","Type":"NodeParagraph","Properties":{"id":"20240201213751-5h3ze3e","updated":"20240201214458"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"MySQL 是一种关系型数据库，主要用于持久化存储我们的系统中的一些数据比如用户信息。"}]},{"ID":"20240201213752-qzitp73","Type":"NodeParagraph","Properties":{"id":"20240201213752-qzitp73","updated":"20240201214458"},"Children":[{"Type":"NodeText","Data":"由于 MySQL 是开源免费并且比较成熟的数据库，因此，MySQL 被大量使用在各种系统中。任何人都可以在 GPL(General Public License) 的许可下下载并根据个性化的需要对其进行修改。MySQL 的默认端口号是"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"3306"},{"Type":"NodeText","Data":"。"}]},{"ID":"20240201213754-z3b2ws5","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240201213754-z3b2ws5","updated":"20240201214458"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"MySQL 基础架构"}]},{"ID":"20240201213755-sp8wsck","Type":"NodeParagraph","Properties":{"id":"20240201213755-sp8wsck","updated":"20240201214458"},"Children":[{"Type":"NodeText","Data":"下图是 MySQL 的一个简要架构图，从下图你可以很清晰的看到客户端的一条 SQL 语句在 MySQL 内部是如何执行的。"}]},{"ID":"20240201213756-2w6am6x","Type":"NodeParagraph","Properties":{"id":"20240201213756-2w6am6x","updated":"20240201214458"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"https://guide-blog-images.oss-cn-shenzhen.aliyuncs.com/javaguide/13526879-3037b144ed09eb88.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201213757-x6y09ux","Type":"NodeParagraph","Properties":{"id":"20240201213757-x6y09ux","updated":"20240201214458"},"Children":[{"Type":"NodeText","Data":"从上图可以看出， MySQL 主要由下面几部分构成："}]},{"ID":"20240201213758-cxxmn2h","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213758-cxxmn2h","updated":"20240201214458"},"Children":[{"ID":"20240201213759-6ogzzcn","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213759-6ogzzcn","updated":"20240201213759"},"Children":[{"ID":"20240201213760-wce4kbc","Type":"NodeParagraph","Properties":{"id":"20240201213760-wce4kbc","updated":"20240201213760"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"连接器："},{"Type":"NodeText","Data":" 身份认证和权限相关(登录 MySQL 的时候)。"}]}]},{"ID":"20240201213761-gidd8ev","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213761-gidd8ev","updated":"20240201213761"},"Children":[{"ID":"20240201213762-go6yskd","Type":"NodeParagraph","Properties":{"id":"20240201213762-go6yskd","updated":"20240201213762"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"查询缓存："},{"Type":"NodeText","Data":" 执行查询语句的时候，会先查询缓存（MySQL 8.0 版本后移除，因为这个功能不太实用）。"}]}]},{"ID":"20240201213763-0i5tdre","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213763-0i5tdre","updated":"20240201213763"},"Children":[{"ID":"20240201213764-lkhkfmp","Type":"NodeParagraph","Properties":{"id":"20240201213764-lkhkfmp","updated":"20240201213764"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"分析器："},{"Type":"NodeText","Data":" 没有命中缓存的话，SQL 语句就会经过分析器，分析器说白了就是要先看你的 SQL 语句要干嘛，再检查你的 SQL 语句语法是否正确。"}]}]},{"ID":"20240201213765-exsaamj","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213765-exsaamj","updated":"20240201213765"},"Children":[{"ID":"20240201213766-j1pkg51","Type":"NodeParagraph","Properties":{"id":"20240201213766-j1pkg51","updated":"20240201213766"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"优化器："},{"Type":"NodeText","Data":" 按照 MySQL 认为最优的方案去执行。"}]}]},{"ID":"20240201213767-lzjncol","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213767-lzjncol","updated":"20240201213767"},"Children":[{"ID":"20240201213768-i13foul","Type":"NodeParagraph","Properties":{"id":"20240201213768-i13foul","updated":"20240201213768"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"执行器："},{"Type":"NodeText","Data":" 执行语句，然后从存储引擎返回数据。 执行语句之前会先判断是否有权限，如果没有权限的话，就会报错。"}]}]},{"ID":"20240201213769-25bu2fb","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213769-25bu2fb","updated":"20240201213769"},"Children":[{"ID":"20240201213770-g5y5tn7","Type":"NodeParagraph","Properties":{"id":"20240201213770-g5y5tn7","updated":"20240201213770"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"插件式存储引擎"},{"Type":"NodeText","Data":" ： 主要负责数据的存储和读取，采用的是插件式架构，支持 InnoDB、MyISAM、Memory 等多种存储引擎。"}]}]}]},{"ID":"20240201213771-39z46na","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240201213771-39z46na","updated":"20240201214458"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"MySQL 存储引擎"}]},{"ID":"20240201213772-p6ente1","Type":"NodeParagraph","Properties":{"id":"20240201213772-p6ente1","updated":"20240201214458"},"Children":[{"Type":"NodeText","Data":"MySQL 核心在于存储引擎，想要深入学习 MySQL，必定要深入研究 MySQL 存储引擎。"}]},{"ID":"20240201213773-1napu3y","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20240201213773-1napu3y","updated":"20240201214458"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"MySQL 支持哪些存储引擎？默认使用哪个？"}]},{"ID":"20240201213774-assj83p","Type":"NodeParagraph","Properties":{"id":"20240201213774-assj83p","updated":"20240201214458"},"Children":[{"Type":"NodeText","Data":"MySQL 支持多种存储引擎，你可以通过 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"show engines"},{"Type":"NodeText","Data":" 命令来查看 MySQL 支持的所有存储引擎。"}]},{"ID":"20240201213775-huebelj","Type":"NodeParagraph","Properties":{"id":"20240201213775-huebelj","updated":"20240201214458"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"查看 MySQL 提供的所有存储引擎","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"https://guide-blog-images.oss-cn-shenzhen.aliyuncs.com/github/javaguide/mysql/image-20220510105408703.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201213776-qful0mj","Type":"NodeParagraph","Properties":{"id":"20240201213776-qful0mj","updated":"20240201214458"},"Children":[{"Type":"NodeText","Data":"从上图我们可以查看出， MySQL 当前默认的存储引擎是 InnoDB。并且，所有的存储引擎中只有 InnoDB 是事务性存储引擎，也就是说只有 InnoDB 支持事务。"}]},{"ID":"20240201213777-o59gkn8","Type":"NodeParagraph","Properties":{"id":"20240201213777-o59gkn8","updated":"20240201214458"},"Children":[{"Type":"NodeText","Data":"我这里使用的 MySQL 版本是 8.x，不同的 MySQL 版本之间可能会有差别。"}]},{"ID":"20240201213778-ihmikyr","Type":"NodeParagraph","Properties":{"id":"20240201213778-ihmikyr","updated":"20240201214458"},"Children":[{"Type":"NodeText","Data":"MySQL 5.5.5 之前，MyISAM 是 MySQL 的默认存储引擎。5.5.5 版本之后，InnoDB 是 MySQL 的默认存储引擎。"}]},{"ID":"20240201213779-x51nyd8","Type":"NodeParagraph","Properties":{"id":"20240201213779-x51nyd8","updated":"20240201214458"},"Children":[{"Type":"NodeText","Data":"你可以通过 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"select version()"},{"Type":"NodeText","Data":" 命令查看你的 MySQL 版本。"}]},{"ID":"20240201213780-o64ko7y","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"YmFzaA==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20240201213780-o64ko7y","updated":"20240201214458"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"YmFzaA==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":" mysql\u003e select version();\n+-----------+\n| version() |\n+-----------+\n| 8.0.27    |\n+-----------+\n1 row in set (0.00 sec)\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20240201213781-048gpum","Type":"NodeParagraph","Properties":{"id":"20240201213781-048gpum","updated":"20240201214458"},"Children":[{"Type":"NodeText","Data":"你也可以通过 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"show variables like '%storage_engine%'"},{"Type":"NodeText","Data":" 命令直接查看 MySQL 当前默认的存储引擎。"}]},{"ID":"20240201213782-r1x6vod","Type":"NodeParagraph","Properties":{"id":"20240201213782-r1x6vod","updated":"20240201214458"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"查看 MySQL 当前默认的存储引擎","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"https://guide-blog-images.oss-cn-shenzhen.aliyuncs.com/github/javaguide/mysql/image-20220510105837786.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201213783-05prz0k","Type":"NodeParagraph","Properties":{"id":"20240201213783-05prz0k","updated":"20240201214458"},"Children":[{"Type":"NodeText","Data":"如果你只想查看数据库中某个表使用的存储引擎的话，可以使用 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"show table status from db_name where name='table_name'"},{"Type":"NodeText","Data":"命令。"}]},{"ID":"20240201213784-19fe0fh","Type":"NodeParagraph","Properties":{"id":"20240201213784-19fe0fh","updated":"20240201214458"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"查看表的存储引擎","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"https://guide-blog-images.oss-cn-shenzhen.aliyuncs.com/github/javaguide/mysql/image-20220510110549140.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201213785-l6qsm8n","Type":"NodeParagraph","Properties":{"id":"20240201213785-l6qsm8n","updated":"20240201214458"},"Children":[{"Type":"NodeText","Data":"如果你想要深入了解每个存储引擎以及它们之间的区别，推荐你去阅读以下 MySQL 官方文档对应的介绍(面试不会问这么细，了解即可)："}]},{"ID":"20240201213786-o18p6h6","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213786-o18p6h6","updated":"20240201214458"},"Children":[{"ID":"20240201213787-orkp3ym","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213787-orkp3ym","updated":"20240201213787"},"Children":[{"ID":"20240201213788-5678uzg","Type":"NodeParagraph","Properties":{"id":"20240201213788-5678uzg","updated":"20240201213788"},"Children":[{"Type":"NodeText","Data":"InnoDB 存储引擎详细介绍：https://dev.mysql.com/doc/refman/8.0/en/innodb-storage-engine.html 。"}]}]},{"ID":"20240201213789-ff3y1e6","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213789-ff3y1e6","updated":"20240201213789"},"Children":[{"ID":"20240201213790-fjpdym8","Type":"NodeParagraph","Properties":{"id":"20240201213790-fjpdym8","updated":"20240201213790"},"Children":[{"Type":"NodeText","Data":"其他存储引擎详细介绍：https://dev.mysql.com/doc/refman/8.0/en/storage-engines.html 。"}]}]}]},{"ID":"20240201213791-vglkf1f","Type":"NodeParagraph","Properties":{"id":"20240201213791-vglkf1f","updated":"20240201214458"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"https://guide-blog-images.oss-cn-shenzhen.aliyuncs.com/github/javaguide/mysql/image-20220510155143458.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201213792-ym5wnxb","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20240201213792-ym5wnxb","updated":"20240201214458"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"MySQL 存储引擎架构了解吗？"}]},{"ID":"20240201213793-05d61d7","Type":"NodeParagraph","Properties":{"id":"20240201213793-05d61d7","updated":"20240201214458"},"Children":[{"Type":"NodeText","Data":"MySQL 存储引擎采用的是插件式架构，支持多种存储引擎，我们甚至可以为不同的数据库表设置不同的存储引擎以适应不同场景的需要。"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"存储引擎是基于表的，而不是数据库。"}]},{"ID":"20240201213794-1i1iq54","Type":"NodeParagraph","Properties":{"id":"20240201213794-1i1iq54","updated":"20240201214458"},"Children":[{"Type":"NodeText","Data":"并且，你还可以根据 MySQL 定义的存储引擎实现标准接口来编写一个属于自己的存储引擎。这些非官方提供的存储引擎可以称为第三方存储引擎，区别于官方存储引擎。像目前最常用的 InnoDB 其实刚开始就是一个第三方存储引擎，后面由于过于优秀，其被 Oracle 直接收购了。"}]},{"ID":"20240201213795-zwec8bb","Type":"NodeParagraph","Properties":{"id":"20240201213795-zwec8bb","updated":"20240201214458"},"Children":[{"Type":"NodeText","Data":"MySQL 官方文档也有介绍到如何编写一个自定义存储引擎，地址：https://dev.mysql.com/doc/internals/en/custom-engine.html 。"}]},{"ID":"20240201213796-w7i4rxn","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20240201213796-w7i4rxn","updated":"20240201214458"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"MyISAM 和 InnoDB 的区别是什么？"}]},{"ID":"20240201213797-trjdhtd","Type":"NodeParagraph","Properties":{"id":"20240201213797-trjdhtd","updated":"20240201214458"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"https://img-blog.csdnimg.cn/20210327145248960.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201213798-03micgl","Type":"NodeParagraph","Properties":{"id":"20240201213798-03micgl","updated":"20240201214458"},"Children":[{"Type":"NodeText","Data":"MySQL 5.5 之前，MyISAM 引擎是 MySQL 的默认存储引擎，可谓是风光一时。"}]},{"ID":"20240201213799-5u0qgkh","Type":"NodeParagraph","Properties":{"id":"20240201213799-5u0qgkh","updated":"20240201214458"},"Children":[{"Type":"NodeText","Data":"虽然，MyISAM 的性能还行，各种特性也还不错（比如全文索引、压缩、空间函数等）。但是，MyISAM 不支持事务和行级锁，而且最大的缺陷就是崩溃后无法安全恢复。"}]},{"ID":"20240201213800-lgqtl8a","Type":"NodeParagraph","Properties":{"id":"20240201213800-lgqtl8a","updated":"20240201214458"},"Children":[{"Type":"NodeText","Data":"MySQL 5.5.5 之前，MyISAM 是 MySQL 的默认存储引擎。5.5.5 版本之后，InnoDB 是 MySQL 的默认存储引擎。"}]},{"ID":"20240201213801-c5x1lex","Type":"NodeParagraph","Properties":{"id":"20240201213801-c5x1lex","updated":"20240201214458"},"Children":[{"Type":"NodeText","Data":"言归正传！咱们下面还是来简单对比一下两者："}]},{"ID":"20240201213802-f8r0khs","Type":"NodeParagraph","Properties":{"id":"20240201213802-f8r0khs","updated":"20240201214458"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"1.是否支持行级锁"}]},{"ID":"20240201213803-sx9cqup","Type":"NodeParagraph","Properties":{"id":"20240201213803-sx9cqup","updated":"20240201214458"},"Children":[{"Type":"NodeText","Data":"MyISAM 只有表级锁(table-level locking)，而 InnoDB 支持行级锁(row-level locking)和表级锁,默认为行级锁。"}]},{"ID":"20240201213804-kjmpp68","Type":"NodeParagraph","Properties":{"id":"20240201213804-kjmpp68","updated":"20240201214458"},"Children":[{"Type":"NodeText","Data":"也就说，MyISAM 一锁就是锁住了整张表，这在并发写的情况下是多么滴憨憨啊！这也是为什么 InnoDB 在并发写的时候，性能更牛皮了！"}]},{"ID":"20240201213805-uw9ypp7","Type":"NodeParagraph","Properties":{"id":"20240201213805-uw9ypp7","updated":"20240201214458"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"2.是否支持事务"}]},{"ID":"20240201213806-bye5kz2","Type":"NodeParagraph","Properties":{"id":"20240201213806-bye5kz2","updated":"20240201214458"},"Children":[{"Type":"NodeText","Data":"MyISAM 不提供事务支持。"}]},{"ID":"20240201213807-rnbl9kt","Type":"NodeParagraph","Properties":{"id":"20240201213807-rnbl9kt","updated":"20240201214458"},"Children":[{"Type":"NodeText","Data":"InnoDB 提供事务支持，实现了 SQL 标准定义了四个隔离级别，具有提交(commit)和回滚(rollback)事务的能力。并且，InnoDB 默认使用的 REPEATABLE-READ（可重读）隔离级别是可以解决幻读问题发生的（基于 MVCC 和 Next-Key Lock）。"}]},{"ID":"20240201213808-qppwmjm","Type":"NodeParagraph","Properties":{"id":"20240201213808-qppwmjm","updated":"20240201214458"},"Children":[{"Type":"NodeText","Data":"关于 MySQL 事务的详细介绍，可以看看我写的这篇文章："},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://javaguide.cn/database/mysql/transaction-isolation-level.html","TextMarkTextContent":"MySQL 事务隔离级别详解"},{"Type":"NodeText","Data":"。"}]},{"ID":"20240201213809-es3uz5f","Type":"NodeParagraph","Properties":{"id":"20240201213809-es3uz5f","updated":"20240201214458"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"3.是否支持外键"}]},{"ID":"20240201213810-30cr1zj","Type":"NodeParagraph","Properties":{"id":"20240201213810-30cr1zj","updated":"20240201214458"},"Children":[{"Type":"NodeText","Data":"MyISAM 不支持，而 InnoDB 支持。"}]},{"ID":"20240201213811-e9hh68i","Type":"NodeParagraph","Properties":{"id":"20240201213811-e9hh68i","updated":"20240201214458"},"Children":[{"Type":"NodeText","Data":"外键对于维护数据一致性非常有帮助，但是对性能有一定的损耗。因此，通常情况下，我们是不建议在实际生产项目中使用外键的，在业务代码中进行约束即可！"}]},{"ID":"20240201213812-ulk0ipm","Type":"NodeParagraph","Properties":{"id":"20240201213812-ulk0ipm","updated":"20240201214458"},"Children":[{"Type":"NodeText","Data":"阿里的《Java 开发手册》也是明确规定禁止使用外键的。"}]},{"ID":"20240201213813-2cq6auu","Type":"NodeParagraph","Properties":{"id":"20240201213813-2cq6auu","updated":"20240201214458"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"https://guide-blog-images.oss-cn-shenzhen.aliyuncs.com/github/javaguide/mysql/image-20220510090309427.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201213814-bo9d56j","Type":"NodeParagraph","Properties":{"id":"20240201213814-bo9d56j","updated":"20240201214458"},"Children":[{"Type":"NodeText","Data":"不过，在代码中进行约束的话，对程序员的能力要求更高，具体是否要采用外键还是要根据你的项目实际情况而定。"}]},{"ID":"20240201213815-3z1q3r7","Type":"NodeParagraph","Properties":{"id":"20240201213815-3z1q3r7","updated":"20240201214458"},"Children":[{"Type":"NodeText","Data":"总结：一般我们也是不建议在数据库层面使用外键的，应用层面可以解决。不过，这样会对数据的一致性造成威胁。具体要不要使用外键还是要根据你的项目来决定。"}]},{"ID":"20240201213816-ie9z33z","Type":"NodeParagraph","Properties":{"id":"20240201213816-ie9z33z","updated":"20240201214458"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"4.是否支持数据库异常崩溃后的安全恢复"}]},{"ID":"20240201213817-sttamq5","Type":"NodeParagraph","Properties":{"id":"20240201213817-sttamq5","updated":"20240201214458"},"Children":[{"Type":"NodeText","Data":"MyISAM 不支持，而 InnoDB 支持。"}]},{"ID":"20240201213818-yi0fivm","Type":"NodeParagraph","Properties":{"id":"20240201213818-yi0fivm","updated":"20240201214458"},"Children":[{"Type":"NodeText","Data":"使用 InnoDB 的数据库在异常崩溃后，数据库重新启动的时候会保证数据库恢复到崩溃前的状态。这个恢复的过程依赖于 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"redo log"},{"Type":"NodeText","Data":" 。"}]},{"ID":"20240201213819-rxumar2","Type":"NodeParagraph","Properties":{"id":"20240201213819-rxumar2","updated":"20240201214458"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"5.是否支持 MVCC"}]},{"ID":"20240201213820-zw3w4wk","Type":"NodeParagraph","Properties":{"id":"20240201213820-zw3w4wk","updated":"20240201214458"},"Children":[{"Type":"NodeText","Data":"MyISAM 不支持，而 InnoDB 支持。"}]},{"ID":"20240201213821-p1f5ook","Type":"NodeParagraph","Properties":{"id":"20240201213821-p1f5ook","updated":"20240201214458"},"Children":[{"Type":"NodeText","Data":"讲真，这个对比有点废话，毕竟 MyISAM 连行级锁都不支持。MVCC 可以看作是行级锁的一个升级，可以有效减少加锁操作，提高性能。"}]},{"ID":"20240201213822-b7jr1je","Type":"NodeParagraph","Properties":{"id":"20240201213822-b7jr1je","updated":"20240201214458"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"6.索引实现不一样。"}]},{"ID":"20240201213823-6l1w2yu","Type":"NodeParagraph","Properties":{"id":"20240201213823-6l1w2yu","updated":"20240201214458"},"Children":[{"Type":"NodeText","Data":"虽然 MyISAM 引擎和 InnoDB 引擎都是使用 B+Tree 作为索引结构，但是两者的实现方式不太一样。"}]},{"ID":"20240201213824-xsafe1o","Type":"NodeParagraph","Properties":{"id":"20240201213824-xsafe1o","updated":"20240201214458"},"Children":[{"Type":"NodeText","Data":"InnoDB 引擎中，其数据文件本身就是索引文件。相比 MyISAM，索引文件和数据文件是分离的，其表数据文件本身就是按 B+Tree 组织的一个索引结构，树的叶节点 data 域保存了完整的数据记录。"}]},{"ID":"20240201213825-bcq9onn","Type":"NodeParagraph","Properties":{"id":"20240201213825-bcq9onn","updated":"20240201214458"},"Children":[{"Type":"NodeText","Data":"详细区别，推荐你看看我写的这篇文章："},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://javaguide.cn/database/mysql/mysql-index.html","TextMarkTextContent":"MySQL 索引详解"},{"Type":"NodeText","Data":"。"}]},{"ID":"20240201213826-whad99u","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20240201213826-whad99u","updated":"20240201214458"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"MyISAM 和 InnoDB 如何选择？"}]},{"ID":"20240201213827-sgclmf6","Type":"NodeParagraph","Properties":{"id":"20240201213827-sgclmf6","updated":"20240201214458"},"Children":[{"Type":"NodeText","Data":"大多数时候我们使用的都是 InnoDB 存储引擎，在某些读密集的情况下，使用 MyISAM 也是合适的。不过，前提是你的项目不介意 MyISAM 不支持事务、崩溃恢复等缺点（可是~我们一般都会介意啊！）。"}]},{"ID":"20240201213828-jga835k","Type":"NodeParagraph","Properties":{"id":"20240201213828-jga835k","updated":"20240201214458"},"Children":[{"Type":"NodeText","Data":"《MySQL 高性能》上面有一句话这样写到:"}]},{"ID":"20240201213829-qoqxhz5","Type":"NodeBlockquote","Properties":{"id":"20240201213829-qoqxhz5","updated":"20240201214458"},"Children":[{"Type":"NodeBlockquoteMarker","Data":"\u003e ","Properties":{"id":""}},{"ID":"20240201213830-yyn8bc2","Type":"NodeParagraph","Properties":{"id":"20240201213830-yyn8bc2","updated":"20240201213830"},"Children":[{"Type":"NodeText","Data":"不要轻易相信“MyISAM 比 InnoDB 快”之类的经验之谈，这个结论往往不是绝对的。在很多我们已知场景中，InnoDB 的速度都可以让 MyISAM 望尘莫及，尤其是用到了聚簇索引，或者需要访问的数据都可以放入内存的应用。"}]}]},{"ID":"20240201213831-bgh2zeu","Type":"NodeParagraph","Properties":{"id":"20240201213831-bgh2zeu","updated":"20240201214458"},"Children":[{"Type":"NodeText","Data":"一般情况下我们选择 InnoDB 都是没有问题的，但是某些情况下你并不在乎可扩展能力和并发能力，也不需要事务支持，也不在乎崩溃后的安全恢复问题的话，选择 MyISAM 也是一个不错的选择。但是一般情况下，我们都是需要考虑到这些问题的。"}]},{"ID":"20240201213832-svcrw92","Type":"NodeParagraph","Properties":{"id":"20240201213832-svcrw92","updated":"20240201214458"},"Children":[{"Type":"NodeText","Data":"因此，对于咱们日常开发的业务系统来说，你几乎找不到什么理由再使用 MyISAM 作为自己的 MySQL 数据库的存储引擎。"}]},{"ID":"20240201213833-0ar3l3u","Type":"NodeHTMLBlock","Data":"\u003cdiv\u003e\n\u003cdiv align=\"center\"\u003e   \n    \u003cimg src=\"https://guide-blog-images.oss-cn-shenzhen.aliyuncs.com/github/javaguide/gongzhonghaoxuanchuan.png\" style=\"margin: 0 auto;\" /\u003e  \n\u003c/div\u003e","HtmlBlockType":6,"Properties":{"id":"20240201213833-0ar3l3u","updated":"20240201214458"}},{"ID":"20240201213834-h87cbvb","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240201213834-h87cbvb","updated":"20240201214458"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"MySQL 查询缓存"}]},{"ID":"20240201213835-t02hhts","Type":"NodeParagraph","Properties":{"id":"20240201213835-t02hhts","updated":"20240201214458"},"Children":[{"Type":"NodeText","Data":"执行查询语句的时候，会先查询缓存。不过，MySQL 8.0 版本后移除，因为这个功能不太实用"}]},{"ID":"20240201213836-8om6pdu","Type":"NodeParagraph","Properties":{"id":"20240201213836-8om6pdu","updated":"20240201214458"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"my.cnf"},{"Type":"NodeText","Data":" 加入以下配置，重启 MySQL 开启查询缓存"}]},{"ID":"20240201213837-gmvdmb9","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"cHJvcGVydGllcw==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20240201213837-gmvdmb9","updated":"20240201214458"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"cHJvcGVydGllcw==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"query_cache_type=1\nquery_cache_size=600000\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20240201213838-f05j1gn","Type":"NodeParagraph","Properties":{"id":"20240201213838-f05j1gn","updated":"20240201214458"},"Children":[{"Type":"NodeText","Data":"MySQL 执行以下命令也可以开启查询缓存"}]},{"ID":"20240201213839-af67urx","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"cHJvcGVydGllcw==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20240201213839-af67urx","updated":"20240201214458"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"cHJvcGVydGllcw==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"set global  query_cache_type=1;\nset global  query_cache_size=600000;\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20240201213840-8ru0q36","Type":"NodeParagraph","Properties":{"id":"20240201213840-8ru0q36","updated":"20240201214458"},"Children":[{"Type":"NodeText","Data":"如上，"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"开启查询缓存后在同样的查询条件以及数据情况下，会直接在缓存中返回结果"},{"Type":"NodeText","Data":"。这里的查询条件包括查询本身、当前要查询的数据库、客户端协议版本号等一些可能影响结果的信息。（"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"查询缓存不命中的情况：（1）"},{"Type":"NodeText","Data":"）因此任何两个查询在任何字符上的不同都会导致缓存不命中。此外，（"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"查询缓存不命中的情况：（2）"},{"Type":"NodeText","Data":"）如果查询中包含任何用户自定义函数、存储函数、用户变量、临时表、MySQL 库中的系统表，其查询结果也不会被缓存。"}]},{"ID":"20240201213841-wgejgzn","Type":"NodeParagraph","Properties":{"id":"20240201213841-wgejgzn","updated":"20240201214458"},"Children":[{"Type":"NodeText","Data":"（"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"查询缓存不命中的情况：（3）"},{"Type":"NodeText","Data":"）"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"缓存建立之后"},{"Type":"NodeText","Data":"，MySQL 的查询缓存系统会跟踪查询中涉及的每张表，如果这些表（数据或结构）发生变化，那么和这张表相关的所有缓存数据都将失效。"}]},{"ID":"20240201213842-rj8vh3b","Type":"NodeParagraph","Properties":{"id":"20240201213842-rj8vh3b","updated":"20240201214458"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"缓存虽然能够提升数据库的查询性能，但是缓存同时也带来了额外的开销，每次查询后都要做一次缓存操作，失效后还要销毁。"},{"Type":"NodeText","Data":" 因此，开启查询缓存要谨慎，尤其对于写密集的应用来说更是如此。如果开启，要注意合理控制缓存空间大小，一般来说其大小设置为几十 MB 比较合适。此外，"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"还可以通过 sql_cache 和 sql_no_cache 来控制某个查询语句是否需要缓存："}]},{"ID":"20240201213843-g0zmta5","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"c3Fs","CodeBlockCloseFence":"YGBg","Properties":{"id":"20240201213843-g0zmta5","updated":"20240201214458"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"c3Fs","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"select sql_no_cache count(*) from usr;\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20240201213844-i3oys8v","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240201213844-i3oys8v","updated":"20240201214458"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"MySQL 事务"}]},{"ID":"20240201213845-yb8e8vx","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20240201213845-yb8e8vx","updated":"20240201214458"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"何谓事务？"}]},{"ID":"20240201213846-yshom7w","Type":"NodeParagraph","Properties":{"id":"20240201213846-yshom7w","updated":"20240201214458"},"Children":[{"Type":"NodeText","Data":"我们设想一个场景，这个场景中我们需要插入多条相关联的数据到数据库，不幸的是，这个过程可能会遇到下面这些问题："}]},{"ID":"20240201213847-a0fxp5a","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213847-a0fxp5a","updated":"20240201214458"},"Children":[{"ID":"20240201213848-xbhflbt","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213848-xbhflbt","updated":"20240201213848"},"Children":[{"ID":"20240201213849-zou1l58","Type":"NodeParagraph","Properties":{"id":"20240201213849-zou1l58","updated":"20240201213849"},"Children":[{"Type":"NodeText","Data":"数据库中途突然因为某些原因挂掉了。"}]}]},{"ID":"20240201213850-9t1erks","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213850-9t1erks","updated":"20240201213850"},"Children":[{"ID":"20240201213851-2w5ty99","Type":"NodeParagraph","Properties":{"id":"20240201213851-2w5ty99","updated":"20240201213851"},"Children":[{"Type":"NodeText","Data":"客户端突然因为网络原因连接不上数据库了。"}]}]},{"ID":"20240201213852-0tqz0jl","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213852-0tqz0jl","updated":"20240201213852"},"Children":[{"ID":"20240201213853-7evowy8","Type":"NodeParagraph","Properties":{"id":"20240201213853-7evowy8","updated":"20240201213853"},"Children":[{"Type":"NodeText","Data":"并发访问数据库时，多个线程同时写入数据库，覆盖了彼此的更改。"}]}]},{"ID":"20240201213854-dc35vzf","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213854-dc35vzf","updated":"20240201213854"},"Children":[{"ID":"20240201213855-sknjvwa","Type":"NodeParagraph","Properties":{"id":"20240201213855-sknjvwa","updated":"20240201213855"},"Children":[{"Type":"NodeText","Data":"......"}]}]}]},{"ID":"20240201213856-tu2f4wg","Type":"NodeParagraph","Properties":{"id":"20240201213856-tu2f4wg","updated":"20240201214458"},"Children":[{"Type":"NodeText","Data":"上面的任何一个问题都可能会导致数据的不一致性。为了保证数据的一致性，系统必须能够处理这些问题。事务就是我们抽象出来简化这些问题的首选机制。事务的概念起源于数据库，目前，已经成为一个比较广泛的概念。"}]},{"ID":"20240201213857-mt08g51","Type":"NodeParagraph","Properties":{"id":"20240201213857-mt08g51","updated":"20240201214458"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"何为事务？"},{"Type":"NodeText","Data":" 一言蔽之，"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"事务是逻辑上的一组操作，要么都执行，要么都不执行。"}]},{"ID":"20240201213858-hs6gq6f","Type":"NodeParagraph","Properties":{"id":"20240201213858-hs6gq6f","updated":"20240201214458"},"Children":[{"Type":"NodeText","Data":"事务最经典也经常被拿出来说例子就是转账了。假如小明要给小红转账 1000 元，这个转账会涉及到两个关键操作，这两个操作必须都成功或者都失败。"}]},{"ID":"20240201213859-4930bny","Type":"NodeList","ListData":{"Typ":1,"Tight":true,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20240201213859-4930bny","updated":"20240201214458"},"Children":[{"ID":"20240201213860-5gzec5j","Type":"NodeListItem","Data":"1","ListData":{"Typ":1,"Tight":true,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20240201213860-5gzec5j","updated":"20240201213860"},"Children":[{"ID":"20240201213861-uwxkg7e","Type":"NodeParagraph","Properties":{"id":"20240201213861-uwxkg7e","updated":"20240201213861"},"Children":[{"Type":"NodeText","Data":"将小明的余额减少 1000 元"}]}]},{"ID":"20240201213862-a2loru0","Type":"NodeListItem","Data":"2","ListData":{"Typ":1,"Tight":true,"Start":2,"Delimiter":46,"Padding":3,"Marker":"Mg==","Num":2},"Properties":{"id":"20240201213862-a2loru0","updated":"20240201213862"},"Children":[{"ID":"20240201213863-ykh84v0","Type":"NodeParagraph","Properties":{"id":"20240201213863-ykh84v0","updated":"20240201213863"},"Children":[{"Type":"NodeText","Data":"将小红的余额增加 1000 元。"}]}]}]},{"ID":"20240201213864-qz0mmwa","Type":"NodeParagraph","Properties":{"id":"20240201213864-qz0mmwa","updated":"20240201214458"},"Children":[{"Type":"NodeText","Data":"事务会把这两个操作就可以看成逻辑上的一个整体，这个整体包含的操作要么都成功，要么都要失败。这样就不会出现小明余额减少而小红的余额却并没有增加的情况。"}]},{"ID":"20240201213865-9plird6","Type":"NodeParagraph","Properties":{"id":"20240201213865-9plird6","updated":"20240201214458"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"事务示意图","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"https://guide-blog-images.oss-cn-shenzhen.aliyuncs.com/github/javaguide/mysql/%E4%BA%8B%E5%8A%A1%E7%A4%BA%E6%84%8F%E5%9B%BE.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201213866-zu0pltj","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20240201213866-zu0pltj","updated":"20240201214458"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"何谓数据库事务？"}]},{"ID":"20240201213867-trpmscv","Type":"NodeParagraph","Properties":{"id":"20240201213867-trpmscv","updated":"20240201214458"},"Children":[{"Type":"NodeText","Data":"大多数情况下，我们在谈论事务的时候，如果没有特指"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"分布式事务"},{"Type":"NodeText","Data":"，往往指的就是"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"数据库事务"},{"Type":"NodeText","Data":"。"}]},{"ID":"20240201213868-5b6xtwx","Type":"NodeParagraph","Properties":{"id":"20240201213868-5b6xtwx","updated":"20240201214458"},"Children":[{"Type":"NodeText","Data":"数据库事务在我们日常开发中接触的最多了。如果你的项目属于单体架构的话，你接触到的往往就是数据库事务了。"}]},{"ID":"20240201213869-mao2ujx","Type":"NodeParagraph","Properties":{"id":"20240201213869-mao2ujx","updated":"20240201214458"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"那数据库事务有什么作用呢？"}]},{"ID":"20240201213870-re78qma","Type":"NodeParagraph","Properties":{"id":"20240201213870-re78qma","updated":"20240201214458"},"Children":[{"Type":"NodeText","Data":"简单来说，数据库事务可以保证多个对数据库的操作（也就是 SQL 语句）构成一个逻辑上的整体。构成这个逻辑上的整体的这些数据库操作遵循："},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"要么全部执行成功,要么全部不执行"},{"Type":"NodeText","Data":" 。"}]},{"ID":"20240201213871-ef3x40z","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"c3Fs","CodeBlockCloseFence":"YGBg","Properties":{"id":"20240201213871-ef3x40z","updated":"20240201214458"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"c3Fs","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"# 开启一个事务\nSTART TRANSACTION;\n# 多条 SQL 语句\nSQL1,SQL2...\n### 提交事务\nCOMMIT;\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20240201213872-g9jifi2","Type":"NodeParagraph","Properties":{"id":"20240201213872-g9jifi2","updated":"20240201214458"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"数据库事务示意图","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"https://guide-blog-images.oss-cn-shenzhen.aliyuncs.com/github/javaguide/mysql/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%BA%8B%E5%8A%A1%E7%A4%BA%E6%84%8F%E5%9B%BE.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201213873-v4jjn9t","Type":"NodeParagraph","Properties":{"id":"20240201213873-v4jjn9t","updated":"20240201214458"},"Children":[{"Type":"NodeText","Data":"另外，关系型数据库（例如："},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"MySQL"},{"Type":"NodeText","Data":"、"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"SQL Server"},{"Type":"NodeText","Data":"、"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"Oracle"},{"Type":"NodeText","Data":" 等）事务都有 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"ACID"},{"Type":"NodeText","Data":" 特性："}]},{"ID":"20240201213874-3vvma4o","Type":"NodeParagraph","Properties":{"id":"20240201213874-3vvma4o","updated":"20240201214458"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"ACID","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"https://guide-blog-images.oss-cn-shenzhen.aliyuncs.com/github/javaguide/mysql/ACID.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201213875-lnnbcj0","Type":"NodeList","ListData":{"Typ":1,"Tight":true,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20240201213875-lnnbcj0","updated":"20240201214458"},"Children":[{"ID":"20240201213876-9qniiwi","Type":"NodeListItem","Data":"1","ListData":{"Typ":1,"Tight":true,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20240201213876-9qniiwi","updated":"20240201213876"},"Children":[{"ID":"20240201213877-a3uvf29","Type":"NodeParagraph","Properties":{"id":"20240201213877-a3uvf29","updated":"20240201213877"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"原子性"},{"Type":"NodeText","Data":"（"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"Atomicity"},{"Type":"NodeText","Data":"） ： 事务是最小的执行单位，不允许分割。事务的原子性确保动作要么全部完成，要么完全不起作用；"}]}]},{"ID":"20240201213878-mqry0w9","Type":"NodeListItem","Data":"2","ListData":{"Typ":1,"Tight":true,"Start":2,"Delimiter":46,"Padding":3,"Marker":"Mg==","Num":2},"Properties":{"id":"20240201213878-mqry0w9","updated":"20240201213878"},"Children":[{"ID":"20240201213879-kto47u2","Type":"NodeParagraph","Properties":{"id":"20240201213879-kto47u2","updated":"20240201213879"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"一致性"},{"Type":"NodeText","Data":"（"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"Consistency"},{"Type":"NodeText","Data":"）： 执行事务前后，数据保持一致，例如转账业务中，无论事务是否成功，转账者和收款人的总额应该是不变的；"}]}]},{"ID":"20240201213880-0slndrv","Type":"NodeListItem","Data":"3","ListData":{"Typ":1,"Tight":true,"Start":3,"Delimiter":46,"Padding":3,"Marker":"Mw==","Num":3},"Properties":{"id":"20240201213880-0slndrv","updated":"20240201213880"},"Children":[{"ID":"20240201213881-z8oqbse","Type":"NodeParagraph","Properties":{"id":"20240201213881-z8oqbse","updated":"20240201213881"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"隔离性"},{"Type":"NodeText","Data":"（"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"Isolation"},{"Type":"NodeText","Data":"）： 并发访问数据库时，一个用户的事务不被其他事务所干扰，各并发事务之间数据库是独立的；"}]}]},{"ID":"20240201213882-0je3bw2","Type":"NodeListItem","Data":"4","ListData":{"Typ":1,"Tight":true,"Start":4,"Delimiter":46,"Padding":3,"Marker":"NA==","Num":4},"Properties":{"id":"20240201213882-0je3bw2","updated":"20240201213882"},"Children":[{"ID":"20240201213883-7d5l6rs","Type":"NodeParagraph","Properties":{"id":"20240201213883-7d5l6rs","updated":"20240201213883"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"持久性"},{"Type":"NodeText","Data":"（"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"Durabilily"},{"Type":"NodeText","Data":"）： 一个事务被提交之后。它对数据库中数据的改变是持久的，即使数据库发生故障也不应该对其有任何影响。"}]}]}]},{"ID":"20240201213884-nufyr2r","Type":"NodeParagraph","Properties":{"id":"20240201213884-nufyr2r","updated":"20240201214458"},"Children":[{"Type":"NodeText","Data":"🌈 这里要额外补充一点："},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"只有保证了事务的持久性、原子性、隔离性之后，一致性才能得到保障。也就是说 A、I、D 是手段，C 是目的！"},{"Type":"NodeText","Data":" 想必大家也和我一样，被 ACID 这个概念被误导了很久! 我也是看周志明老师的公开课"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://time.geekbang.org/opencourse/intro/100064201","TextMarkTextContent":"《周志明的软件架构课》"},{"Type":"NodeText","Data":"才搞清楚的（多看好书！！！）。"}]},{"ID":"20240201213885-a0juy2h","Type":"NodeParagraph","Properties":{"id":"20240201213885-a0juy2h","updated":"20240201214458"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"AID-\u003eC","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"https://guide-blog-images.oss-cn-shenzhen.aliyuncs.com/github/javaguide/mysql/AID-%3EC.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201213886-1hmodhw","Type":"NodeParagraph","Properties":{"id":"20240201213886-1hmodhw","updated":"20240201214458"},"Children":[{"Type":"NodeText","Data":"另外，DDIA 也就是 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://book.douban.com/subject/30329536/","TextMarkTextContent":"《Designing Data-Intensive Application（数据密集型应用系统设计）》"},{"Type":"NodeText","Data":" 的作者在他的这本书中如是说："}]},{"ID":"20240201213887-eb9emt4","Type":"NodeBlockquote","Properties":{"id":"20240201213887-eb9emt4","updated":"20240201214458"},"Children":[{"Type":"NodeBlockquoteMarker","Data":"\u003e ","Properties":{"id":""}},{"ID":"20240201213888-2wlm8bm","Type":"NodeParagraph","Properties":{"id":"20240201213888-2wlm8bm","updated":"20240201213888"},"Children":[{"Type":"NodeText","Data":"Atomicity, isolation, and durability are properties of the database, whereas consis‐"},{"Type":"NodeSoftBreak","Data":"\n","Properties":{"id":""}},{"Type":"NodeText","Data":"tency (in the ACID sense) is a property of the application. The application may rely"},{"Type":"NodeSoftBreak","Data":"\n","Properties":{"id":""}},{"Type":"NodeText","Data":"on the database’s atomicity and isolation properties in order to achieve consistency,"},{"Type":"NodeSoftBreak","Data":"\n","Properties":{"id":""}},{"Type":"NodeText","Data":"but it’s not up to the database alone."}]},{"ID":"20240201213889-6js19jf","Type":"NodeParagraph","Properties":{"id":"20240201213889-6js19jf","updated":"20240201213889"},"Children":[{"Type":"NodeText","Data":"翻译过来的意思是：原子性，隔离性和持久性是数据库的属性，而一致性（在 ACID 意义上）是应用程序的属性。应用可能依赖数据库的原子性和隔离属性来实现一致性，但这并不仅取决于数据库。因此，字母 C 不属于 ACID 。"}]}]},{"ID":"20240201213890-ifmtdjz","Type":"NodeParagraph","Properties":{"id":"20240201213890-ifmtdjz","updated":"20240201214458"},"Children":[{"Type":"NodeText","Data":"《Designing Data-Intensive Application（数据密集型应用系统设计）》这本书强推一波，值得读很多遍！豆瓣有接近 90% 的人看了这本书之后给了五星好评。另外，中文翻译版本已经在 Github 开源，地址："},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/Vonng/ddia","TextMarkTextContent":"https://github.com/Vonng/ddia"},{"Type":"NodeText","Data":" 。"}]},{"ID":"20240201213891-d96cy4o","Type":"NodeParagraph","Properties":{"id":"20240201213891-d96cy4o","updated":"20240201214458"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"https://img-blog.csdnimg.cn/20210526162552353.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201213892-62q49zd","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20240201213892-62q49zd","updated":"20240201214458"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"并发事务带来了哪些问题?"}]},{"ID":"20240201213893-x8uaoxs","Type":"NodeParagraph","Properties":{"id":"20240201213893-x8uaoxs","updated":"20240201214458"},"Children":[{"Type":"NodeText","Data":"在典型的应用程序中，多个事务并发运行，经常会操作相同的数据来完成各自的任务（多个用户对同一数据进行操作）。并发虽然是必须的，但可能会导致以下的问题。"}]},{"ID":"20240201213894-tbnufs6","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213894-tbnufs6","updated":"20240201214458"},"Children":[{"ID":"20240201213895-pwf5why","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213895-pwf5why","updated":"20240201213895"},"Children":[{"ID":"20240201213896-weq3ly7","Type":"NodeParagraph","Properties":{"id":"20240201213896-weq3ly7","updated":"20240201213896"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"脏读（Dirty read）:"},{"Type":"NodeText","Data":" 当一个事务正在访问数据并且对数据进行了修改，而这种修改还没有提交到数据库中，这时另外一个事务也访问了这个数据，然后使用了这个数据。因为这个数据是还没有提交的数据，那么另外一个事务读到的这个数据是“脏数据”，依据“脏数据”所做的操作可能是不正确的。"}]}]},{"ID":"20240201213897-zpy50qe","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213897-zpy50qe","updated":"20240201213897"},"Children":[{"ID":"20240201213898-sxzfk89","Type":"NodeParagraph","Properties":{"id":"20240201213898-sxzfk89","updated":"20240201213898"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"丢失修改（Lost to modify）:"},{"Type":"NodeText","Data":" 指在一个事务读取一个数据时，另外一个事务也访问了该数据，那么在第一个事务中修改了这个数据后，第二个事务也修改了这个数据。这样第一个事务内的修改结果就被丢失，因此称为丢失修改。 例如：事务 1 读取某表中的数据 A=20，事务 2 也读取 A=20，事务 1 修改 A=A-1，事务 2 也修改 A=A-1，最终结果 A=19，事务 1 的修改被丢失。"}]}]},{"ID":"20240201213899-wm7apx2","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213899-wm7apx2","updated":"20240201213899"},"Children":[{"ID":"20240201213900-a9ekh8s","Type":"NodeParagraph","Properties":{"id":"20240201213900-a9ekh8s","updated":"20240201213900"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"不可重复读（Unrepeatable read）:"},{"Type":"NodeText","Data":" 指在一个事务内多次读同一数据。在这个事务还没有结束时，另一个事务也访问该数据。那么，在第一个事务中的两次读数据之间，由于第二个事务的修改导致第一个事务两次读取的数据可能不太一样。这就发生了在一个事务内两次读到的数据是不一样的情况，因此称为不可重复读。"}]}]},{"ID":"20240201213901-p6gl1o5","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213901-p6gl1o5","updated":"20240201213901"},"Children":[{"ID":"20240201213902-q1bp1k4","Type":"NodeParagraph","Properties":{"id":"20240201213902-q1bp1k4","updated":"20240201213902"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"幻读（Phantom read）:"},{"Type":"NodeText","Data":" 幻读与不可重复读类似。它发生在一个事务（T1）读取了几行数据，接着另一个并发事务（T2）插入了一些数据时。在随后的查询中，第一个事务（T1）就会发现多了一些原本不存在的记录，就好像发生了幻觉一样，所以称为幻读。"}]}]}]},{"ID":"20240201213903-po9greu","Type":"NodeParagraph","Properties":{"id":"20240201213903-po9greu","updated":"20240201214458"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"不可重复读和幻读有什么区别呢？"}]},{"ID":"20240201213904-86dym1f","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213904-86dym1f","updated":"20240201214458"},"Children":[{"ID":"20240201213905-qf9rdb6","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213905-qf9rdb6","updated":"20240201213905"},"Children":[{"ID":"20240201213906-uk5401h","Type":"NodeParagraph","Properties":{"id":"20240201213906-uk5401h","updated":"20240201213906"},"Children":[{"Type":"NodeText","Data":"不可重复读的重点是内容修改或者记录减少比如多次读取一条记录发现其中某些记录的值被修改；"}]}]},{"ID":"20240201213907-ex0k4c4","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213907-ex0k4c4","updated":"20240201213907"},"Children":[{"ID":"20240201213908-7m3xl1a","Type":"NodeParagraph","Properties":{"id":"20240201213908-7m3xl1a","updated":"20240201213908"},"Children":[{"Type":"NodeText","Data":"幻读的重点在于记录新增比如多次执行同一条查询语句（DQL）时，发现查到的记录增加了。"}]}]}]},{"ID":"20240201213909-0veyai1","Type":"NodeParagraph","Properties":{"id":"20240201213909-0veyai1","updated":"20240201214458"},"Children":[{"Type":"NodeText","Data":"幻读其实可以看作是不可重复读的一种特殊情况，单独把区分幻读的原因主要是解决幻读和不可重复读的方案不一样。"}]},{"ID":"20240201213910-l2b1ooy","Type":"NodeParagraph","Properties":{"id":"20240201213910-l2b1ooy","updated":"20240201214458"},"Children":[{"Type":"NodeText","Data":"举个例子：执行 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"delete"},{"Type":"NodeText","Data":" 和 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"update"},{"Type":"NodeText","Data":" 操作的时候，可以直接对记录加锁，保证事务安全。而执行 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"insert"},{"Type":"NodeText","Data":" 操作的时候，由于记录锁（Record Lock）只能锁住已经存在的记录，为了避免插入新记录，需要依赖间隙锁（Gap Lock）。也就是说执行 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"insert"},{"Type":"NodeText","Data":" 操作的时候需要依赖 Next-Key Lock（Record Lock+Gap Lock） 进行加锁来保证不出现幻读。"}]},{"ID":"20240201213911-xu4puzk","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20240201213911-xu4puzk","updated":"20240201214458"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"SQL 标准定义了哪些事务隔离级别?"}]},{"ID":"20240201213912-c3yd1w0","Type":"NodeParagraph","Properties":{"id":"20240201213912-c3yd1w0","updated":"20240201214458"},"Children":[{"Type":"NodeText","Data":"SQL 标准定义了四个隔离级别："}]},{"ID":"20240201213913-jyvla3u","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213913-jyvla3u","updated":"20240201214458"},"Children":[{"ID":"20240201213914-nz0hp8m","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213914-nz0hp8m","updated":"20240201213914"},"Children":[{"ID":"20240201213915-9pxt8dw","Type":"NodeParagraph","Properties":{"id":"20240201213915-9pxt8dw","updated":"20240201213915"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"READ-UNCOMMITTED(读取未提交)"},{"Type":"NodeText","Data":" ： 最低的隔离级别，允许读取尚未提交的数据变更，可能会导致脏读、幻读或不可重复读。"}]}]},{"ID":"20240201213916-r710aqy","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213916-r710aqy","updated":"20240201213916"},"Children":[{"ID":"20240201213917-f48h8xw","Type":"NodeParagraph","Properties":{"id":"20240201213917-f48h8xw","updated":"20240201213917"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"READ-COMMITTED(读取已提交)"},{"Type":"NodeText","Data":" ： 允许读取并发事务已经提交的数据，可以阻止脏读，但是幻读或不可重复读仍有可能发生。"}]}]},{"ID":"20240201213918-smeo8t3","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213918-smeo8t3","updated":"20240201213918"},"Children":[{"ID":"20240201213919-i982mhw","Type":"NodeParagraph","Properties":{"id":"20240201213919-i982mhw","updated":"20240201213919"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"REPEATABLE-READ(可重复读)"},{"Type":"NodeText","Data":" ： 对同一字段的多次读取结果都是一致的，除非数据是被本身事务自己所修改，可以阻止脏读和不可重复读，但幻读仍有可能发生。"}]}]},{"ID":"20240201213920-xhgkbgd","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213920-xhgkbgd","updated":"20240201213920"},"Children":[{"ID":"20240201213921-ylfpdw8","Type":"NodeParagraph","Properties":{"id":"20240201213921-ylfpdw8","updated":"20240201213921"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"SERIALIZABLE(可串行化)"},{"Type":"NodeText","Data":" ： 最高的隔离级别，完全服从 ACID 的隔离级别。所有的事务依次逐个执行，这样事务之间就完全不可能产生干扰，也就是说，该级别可以防止脏读、不可重复读以及幻读。"}]}]}]},{"ID":"20240201213922-fltkp67","Type":"NodeThematicBreak","Properties":{"id":"20240201213922-fltkp67","updated":"20240201214458"}},{"ID":"20240201213923-0rbhc83","Type":"NodeTable","Data":"|     隔离级别     | 脏读 | 不可重复读 | 幻读 |\n| :--------------: | :--: | :--------: | :--: |\n| READ-UNCOMMITTED |  √   |     √      |  √   |\n|  READ-COMMITTED  |  ×   |     √      |  √   |\n| REPEATABLE-READ  |  ×   |     ×      |  √   |\n|   SERIALIZABLE   |  ×   |     ×      |  ×   |","TableAligns":[2,2,2,2],"Properties":{"id":"20240201213923-0rbhc83","updated":"20240201214458"},"Children":[{"Type":"NodeTableHead","Properties":{"id":""},"Children":[{"Type":"NodeTableRow","Properties":{"id":""},"Children":[{"Type":"NodeTableCell","TableCellAlign":2,"Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"隔离级别"}]},{"Type":"NodeTableCell","TableCellAlign":2,"Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"脏读"}]},{"Type":"NodeTableCell","TableCellAlign":2,"Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"不可重复读"}]},{"Type":"NodeTableCell","TableCellAlign":2,"Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"幻读"}]}]}]},{"Type":"NodeTableRow","TableAligns":[2,2,2,2],"Properties":{"id":""},"Children":[{"Type":"NodeTableCell","TableCellAlign":2,"Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"READ-UNCOMMITTED"}]},{"Type":"NodeTableCell","TableCellAlign":2,"Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"√"}]},{"Type":"NodeTableCell","TableCellAlign":2,"Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"√"}]},{"Type":"NodeTableCell","TableCellAlign":2,"Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"√"}]}]},{"Type":"NodeTableRow","TableAligns":[2,2,2,2],"Properties":{"id":""},"Children":[{"Type":"NodeTableCell","TableCellAlign":2,"Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"READ-COMMITTED"}]},{"Type":"NodeTableCell","TableCellAlign":2,"Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"×"}]},{"Type":"NodeTableCell","TableCellAlign":2,"Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"√"}]},{"Type":"NodeTableCell","TableCellAlign":2,"Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"√"}]}]},{"Type":"NodeTableRow","TableAligns":[2,2,2,2],"Properties":{"id":""},"Children":[{"Type":"NodeTableCell","TableCellAlign":2,"Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"REPEATABLE-READ"}]},{"Type":"NodeTableCell","TableCellAlign":2,"Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"×"}]},{"Type":"NodeTableCell","TableCellAlign":2,"Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"×"}]},{"Type":"NodeTableCell","TableCellAlign":2,"Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"√"}]}]},{"Type":"NodeTableRow","TableAligns":[2,2,2,2],"Properties":{"id":""},"Children":[{"Type":"NodeTableCell","TableCellAlign":2,"Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"SERIALIZABLE"}]},{"Type":"NodeTableCell","TableCellAlign":2,"Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"×"}]},{"Type":"NodeTableCell","TableCellAlign":2,"Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"×"}]},{"Type":"NodeTableCell","TableCellAlign":2,"Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"×"}]}]}]},{"ID":"20240201213924-cjbcdnn","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20240201213924-cjbcdnn","updated":"20240201214458"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"MySQL 的隔离级别是基于锁实现的吗？"}]},{"ID":"20240201213925-wqdu6h2","Type":"NodeParagraph","Properties":{"id":"20240201213925-wqdu6h2","updated":"20240201214458"},"Children":[{"Type":"NodeText","Data":"MySQL 的隔离级别基于锁和 MVCC 机制共同实现的。"}]},{"ID":"20240201213926-q8ab9s1","Type":"NodeParagraph","Properties":{"id":"20240201213926-q8ab9s1","updated":"20240201214458"},"Children":[{"Type":"NodeText","Data":"SERIALIZABLE 隔离级别，是通过锁来实现的。除了 SERIALIZABLE 隔离级别，其他的隔离级别都是基于 MVCC 实现。"}]},{"ID":"20240201213927-nn1gkx9","Type":"NodeParagraph","Properties":{"id":"20240201213927-nn1gkx9","updated":"20240201214458"},"Children":[{"Type":"NodeText","Data":"不过， SERIALIZABLE 之外的其他隔离级别可能也需要用到锁机制，就比如 REPEATABLE-READ 在当前读情况下需要使用加锁读来保证不会出现幻读。"}]},{"ID":"20240201213928-bsyqnh5","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20240201213928-bsyqnh5","updated":"20240201214458"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"MySQL 的默认隔离级别是什么?"}]},{"ID":"20240201213929-w09nv5q","Type":"NodeParagraph","Properties":{"id":"20240201213929-w09nv5q","updated":"20240201214458"},"Children":[{"Type":"NodeText","Data":"MySQL InnoDB 存储引擎的默认支持的隔离级别是 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"REPEATABLE-READ（可重读）"},{"Type":"NodeText","Data":"。我们可以通过"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"SELECT @@tx_isolation;"},{"Type":"NodeText","Data":"命令来查看，MySQL 8.0 该命令改为"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"SELECT @@transaction_isolation;"}]},{"ID":"20240201213930-j26c9tx","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"c3Fs","CodeBlockCloseFence":"YGBg","Properties":{"id":"20240201213930-j26c9tx","updated":"20240201214458"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"c3Fs","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"mysql\u003e SELECT @@tx_isolation;\n+-----------------+\n| @@tx_isolation  |\n+-----------------+\n| REPEATABLE-READ |\n+-----------------+\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20240201213931-kr9iu4e","Type":"NodeParagraph","Properties":{"id":"20240201213931-kr9iu4e","updated":"20240201214458"},"Children":[{"Type":"NodeText","Data":"关于 MySQL 事务隔离级别的详细介绍，可以看看我写的这篇文章："},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://javaguide.cn/database/mysql/transaction-isolation-level.html","TextMarkTextContent":"MySQL 事务隔离级别详解"},{"Type":"NodeText","Data":"。"}]},{"ID":"20240201213932-wc9wclb","Type":"NodeHTMLBlock","Data":"\u003cdiv\u003e\n\u003cdiv align=\"center\"\u003e   \n    \u003cimg src=\"https://guide-blog-images.oss-cn-shenzhen.aliyuncs.com/github/javaguide/gongzhonghaoxuanchuan.png\" style=\"margin: 0 auto;\" /\u003e  \n\u003c/div\u003e","HtmlBlockType":6,"Properties":{"id":"20240201213932-wc9wclb","updated":"20240201214458"}},{"ID":"20240201213933-0pf71tx","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240201213933-0pf71tx","updated":"20240201214458"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"MySQL 锁"}]},{"ID":"20240201213934-v0a1ckg","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20240201213934-v0a1ckg","updated":"20240201214458"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"表级锁和行级锁了解吗？有什么区别？"}]},{"ID":"20240201213935-3k1kl42","Type":"NodeParagraph","Properties":{"id":"20240201213935-3k1kl42","updated":"20240201214458"},"Children":[{"Type":"NodeText","Data":"MyISAM 仅仅支持表级锁(table-level locking)，一锁就锁整张表，这在并发写的情况下性非常差。"}]},{"ID":"20240201213936-kxp1y6y","Type":"NodeParagraph","Properties":{"id":"20240201213936-kxp1y6y","updated":"20240201214458"},"Children":[{"Type":"NodeText","Data":"InnoDB 不光支持表级锁(table-level locking)，还支持行级锁(row-level locking)，默认为行级锁。行级锁的粒度更小，仅对相关的记录上锁即可（对一行或者多行记录加锁），所以对于并发写入操作来说， InnoDB 的性能更高。"}]},{"ID":"20240201213937-zhgp2gb","Type":"NodeParagraph","Properties":{"id":"20240201213937-zhgp2gb","updated":"20240201214458"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"表级锁和行级锁对比"},{"Type":"NodeText","Data":" ："}]},{"ID":"20240201213938-rmc95o1","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213938-rmc95o1","updated":"20240201214458"},"Children":[{"ID":"20240201213939-7y4utmc","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213939-7y4utmc","updated":"20240201213939"},"Children":[{"ID":"20240201213940-b1j9fr8","Type":"NodeParagraph","Properties":{"id":"20240201213940-b1j9fr8","updated":"20240201213940"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"表级锁："},{"Type":"NodeText","Data":" MySQL 中锁定粒度最大的一种锁，是针对非索引字段加的锁，对当前操作的整张表加锁，实现简单，资源消耗也比较少，加锁快，不会出现死锁。其锁定粒度最大，触发锁冲突的概率最高，并发度最低，MyISAM 和 InnoDB 引擎都支持表级锁。"}]}]},{"ID":"20240201213941-zccv72u","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213941-zccv72u","updated":"20240201213941"},"Children":[{"ID":"20240201213942-jeviseu","Type":"NodeParagraph","Properties":{"id":"20240201213942-jeviseu","updated":"20240201213942"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"行级锁："},{"Type":"NodeText","Data":" MySQL 中锁定粒度最小的一种锁，是针对索引字段加的锁，只针对当前操作的行记录进行加锁。 行级锁能大大减少数据库操作的冲突。其加锁粒度最小，并发度高，但加锁的开销也最大，加锁慢，会出现死锁。"}]}]}]},{"ID":"20240201213943-1so1ttz","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20240201213943-1so1ttz","updated":"20240201214458"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"行级锁的使用有什么注意事项？"}]},{"ID":"20240201213944-gdvmly4","Type":"NodeParagraph","Properties":{"id":"20240201213944-gdvmly4","updated":"20240201214458"},"Children":[{"Type":"NodeText","Data":"InnoDB 的行锁是针对索引字段加的锁，表级锁是针对非索引字段加的锁。当我们执行 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"UPDATE"},{"Type":"NodeText","Data":"、"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"DELETE"},{"Type":"NodeText","Data":" 语句时，如果 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"WHERE"},{"Type":"NodeText","Data":"条件中字段没有命中唯一索引或者索引失效的话，就会导致扫描全表对表中的所有行记录进行加锁。这个在我们日常工作开发中经常会遇到，一定要多多注意！！！"}]},{"ID":"20240201213945-qqlg5cx","Type":"NodeParagraph","Properties":{"id":"20240201213945-qqlg5cx","updated":"20240201214458"},"Children":[{"Type":"NodeText","Data":"不过，很多时候即使用了索引也有可能会走全表扫描，这是因为 MySQL 优化器的原因。"}]},{"ID":"20240201213946-84ie8nq","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20240201213946-84ie8nq","updated":"20240201214458"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"共享锁和排他锁呢？"}]},{"ID":"20240201213947-wrmsu1c","Type":"NodeParagraph","Properties":{"id":"20240201213947-wrmsu1c","updated":"20240201214458"},"Children":[{"Type":"NodeText","Data":"不论是表级锁还是行级锁，都存在共享锁（Share Lock，S 锁）和排他锁（Exclusive Lock，X 锁）这两类："}]},{"ID":"20240201213948-4l1vuju","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213948-4l1vuju","updated":"20240201214458"},"Children":[{"ID":"20240201213949-xhtmvt9","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213949-xhtmvt9","updated":"20240201213949"},"Children":[{"ID":"20240201213950-4syakga","Type":"NodeParagraph","Properties":{"id":"20240201213950-4syakga","updated":"20240201213950"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"共享锁（S 锁）"},{"Type":"NodeText","Data":" ：又称读锁，事务在读取记录的时候获取共享锁，允许多个事务同时获取（锁兼容）。"}]}]},{"ID":"20240201213951-iga02bw","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213951-iga02bw","updated":"20240201213951"},"Children":[{"ID":"20240201213952-a6co7tu","Type":"NodeParagraph","Properties":{"id":"20240201213952-a6co7tu","updated":"20240201213952"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"排他锁（X 锁）"},{"Type":"NodeText","Data":" ：又称写锁/独占锁，事务在修改记录的时候获取排他锁，不允许多个事务同时获取。如果一个记录已经被加了排他锁，那其他事务不能再对这条事务加任何类型的锁（锁不兼容）。"}]}]}]},{"ID":"20240201213953-uub1y8k","Type":"NodeParagraph","Properties":{"id":"20240201213953-uub1y8k","updated":"20240201214458"},"Children":[{"Type":"NodeText","Data":"排他锁与任何的锁都不兼容，共享锁仅和共享锁兼容。"}]},{"ID":"20240201213954-52fvuoy","Type":"NodeTable","Data":"|      | S 锁   | X 锁 |\n| :--- | :----- | :--- |\n| S 锁 | 不冲突 | 冲突 |\n| X 锁 | 冲突   | 冲突 |","TableAligns":[1,1,1],"Properties":{"id":"20240201213954-52fvuoy","updated":"20240201214458"},"Children":[{"Type":"NodeTableHead","Properties":{"id":""},"Children":[{"Type":"NodeTableRow","Properties":{"id":""},"Children":[{"Type":"NodeTableCell","TableCellAlign":1,"Properties":{"id":""}},{"Type":"NodeTableCell","TableCellAlign":1,"Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"S 锁"}]},{"Type":"NodeTableCell","TableCellAlign":1,"Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"X 锁"}]}]}]},{"Type":"NodeTableRow","TableAligns":[1,1,1],"Properties":{"id":""},"Children":[{"Type":"NodeTableCell","TableCellAlign":1,"Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"S 锁"}]},{"Type":"NodeTableCell","TableCellAlign":1,"Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"不冲突"}]},{"Type":"NodeTableCell","TableCellAlign":1,"Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"冲突"}]}]},{"Type":"NodeTableRow","TableAligns":[1,1,1],"Properties":{"id":""},"Children":[{"Type":"NodeTableCell","TableCellAlign":1,"Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"X 锁"}]},{"Type":"NodeTableCell","TableCellAlign":1,"Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"冲突"}]},{"Type":"NodeTableCell","TableCellAlign":1,"Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"冲突"}]}]}]},{"ID":"20240201213955-nu13diz","Type":"NodeParagraph","Properties":{"id":"20240201213955-nu13diz","updated":"20240201214458"},"Children":[{"Type":"NodeText","Data":"由于 MVCC 的存在，对于一般的 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"SELECT"},{"Type":"NodeText","Data":" 语句，InnoDB 不会加任何锁。不过， 你可以通过以下语句显式加共享锁或排他锁。"}]},{"ID":"20240201213956-ax8rbe0","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"c3Fs","CodeBlockCloseFence":"YGBg","Properties":{"id":"20240201213956-ax8rbe0","updated":"20240201214458"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"c3Fs","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"# 共享锁\nSELECT ... LOCK IN SHARE MODE;\n# 排他锁\nSELECT ... FOR UPDATE;\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20240201213957-51a18d9","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20240201213957-51a18d9","updated":"20240201214458"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"意向锁有什么作用？"}]},{"ID":"20240201213958-sc2sr4v","Type":"NodeParagraph","Properties":{"id":"20240201213958-sc2sr4v","updated":"20240201214458"},"Children":[{"Type":"NodeText","Data":"如果需要用到表锁的话，如何判断表中的记录没有行锁呢？一行一行遍历肯定是不行，性能太差。我们需要用到一个叫做意向锁的东东来快速判断是否可以对某个表使用表锁。"}]},{"ID":"20240201213959-75l93in","Type":"NodeParagraph","Properties":{"id":"20240201213959-75l93in","updated":"20240201214458"},"Children":[{"Type":"NodeText","Data":"意向锁是表级锁，共有两种："}]},{"ID":"20240201213960-ovt5c5u","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213960-ovt5c5u","updated":"20240201214458"},"Children":[{"ID":"20240201213961-1xaf3xk","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213961-1xaf3xk","updated":"20240201213961"},"Children":[{"ID":"20240201213962-dtdqiok","Type":"NodeParagraph","Properties":{"id":"20240201213962-dtdqiok","updated":"20240201213962"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"意向共享锁（Intention Shared Lock，IS 锁）"},{"Type":"NodeText","Data":"：事务有意向对表中的某些加共享锁（S 锁），加共享锁前必须先取得该表的 IS 锁。"}]}]},{"ID":"20240201213963-58jymox","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213963-58jymox","updated":"20240201213963"},"Children":[{"ID":"20240201213964-wsi269i","Type":"NodeParagraph","Properties":{"id":"20240201213964-wsi269i","updated":"20240201213964"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"意向排他锁（Intention Exclusive Lock，IX 锁）"},{"Type":"NodeText","Data":"：事务有意向对表中的某些记录加排他锁（X 锁），加排他锁之前必须先取得该表的 IX 锁。"}]}]}]},{"ID":"20240201213965-7x0x8il","Type":"NodeParagraph","Properties":{"id":"20240201213965-7x0x8il","updated":"20240201214458"},"Children":[{"Type":"NodeText","Data":"意向锁是有数据引擎自己维护的，用户无法手动操作意向锁，在为数据行加共享 / 排他锁之前，InooDB 会先获取该数据行所在在数据表的对应意向锁。"}]},{"ID":"20240201213966-hxzgc4r","Type":"NodeParagraph","Properties":{"id":"20240201213966-hxzgc4r","updated":"20240201214458"},"Children":[{"Type":"NodeText","Data":"意向锁之间是互相兼容的。"}]},{"ID":"20240201213967-mlin963","Type":"NodeTable","Data":"|       | IS 锁 | IX 锁 |\n| ----- | ----- | ----- |\n| IS 锁 | 兼容  | 兼容  |\n| IX 锁 | 兼容  | 兼容  |","TableAligns":[0,0,0],"Properties":{"id":"20240201213967-mlin963","updated":"20240201214458"},"Children":[{"Type":"NodeTableHead","Properties":{"id":""},"Children":[{"Type":"NodeTableRow","Properties":{"id":""},"Children":[{"Type":"NodeTableCell","Properties":{"id":""}},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"IS 锁"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"IX 锁"}]}]}]},{"Type":"NodeTableRow","TableAligns":[0,0,0],"Properties":{"id":""},"Children":[{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"IS 锁"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"兼容"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"兼容"}]}]},{"Type":"NodeTableRow","TableAligns":[0,0,0],"Properties":{"id":""},"Children":[{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"IX 锁"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"兼容"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"兼容"}]}]}]},{"ID":"20240201213968-axqm0wz","Type":"NodeParagraph","Properties":{"id":"20240201213968-axqm0wz","updated":"20240201214458"},"Children":[{"Type":"NodeText","Data":"意向锁和共享锁和排它锁互斥（这里指的是表级别的共享锁和排他锁，意向锁不会与行级的共享锁和排他锁互斥）。"}]},{"ID":"20240201213969-nc8f171","Type":"NodeTable","Data":"|      | IS 锁 | IX 锁 |\n| ---- | ----- | ----- |\n| S 锁 | 兼容  | 互斥  |\n| X 锁 | 互斥  | 互斥  |","TableAligns":[0,0,0],"Properties":{"id":"20240201213969-nc8f171","updated":"20240201214458"},"Children":[{"Type":"NodeTableHead","Properties":{"id":""},"Children":[{"Type":"NodeTableRow","Properties":{"id":""},"Children":[{"Type":"NodeTableCell","Properties":{"id":""}},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"IS 锁"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"IX 锁"}]}]}]},{"Type":"NodeTableRow","TableAligns":[0,0,0],"Properties":{"id":""},"Children":[{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"S 锁"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"兼容"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"互斥"}]}]},{"Type":"NodeTableRow","TableAligns":[0,0,0],"Properties":{"id":""},"Children":[{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"X 锁"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"互斥"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"互斥"}]}]}]},{"ID":"20240201213970-wi6gdie","Type":"NodeParagraph","Properties":{"id":"20240201213970-wi6gdie","updated":"20240201214458"},"Children":[{"Type":"NodeText","Data":"《MySQL 技术内幕 InnoDB 存储引擎》这本书对应的描述应该是笔误了。"}]},{"ID":"20240201213971-hgq4t2h","Type":"NodeParagraph","Properties":{"id":"20240201213971-hgq4t2h","updated":"20240201214458"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"https://guide-blog-images.oss-cn-shenzhen.aliyuncs.com/github/javaguide/mysql/image-20220511171419081.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201213972-ppk0ok4","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20240201213972-ppk0ok4","updated":"20240201214458"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"InnoDB 有哪几类行锁？"}]},{"ID":"20240201213973-nfeozoi","Type":"NodeParagraph","Properties":{"id":"20240201213973-nfeozoi","updated":"20240201214458"},"Children":[{"Type":"NodeText","Data":"MySQL InnoDB 支持三种行锁定方式："}]},{"ID":"20240201213974-34u4gxp","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213974-34u4gxp","updated":"20240201214458"},"Children":[{"ID":"20240201213975-v9n2r3n","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213975-v9n2r3n","updated":"20240201213975"},"Children":[{"ID":"20240201213976-h9wf8pg","Type":"NodeParagraph","Properties":{"id":"20240201213976-h9wf8pg","updated":"20240201213976"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"记录锁（Record Lock）"},{"Type":"NodeText","Data":" ：也被称为记录锁，属于单个行记录上的锁。"}]}]},{"ID":"20240201213977-j6vzu8h","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213977-j6vzu8h","updated":"20240201213977"},"Children":[{"ID":"20240201213978-j18oni5","Type":"NodeParagraph","Properties":{"id":"20240201213978-j18oni5","updated":"20240201213978"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"间隙锁（Gap Lock）"},{"Type":"NodeText","Data":" ：锁定一个范围，不包括记录本身。"}]}]},{"ID":"20240201213979-rbifivm","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213979-rbifivm","updated":"20240201213979"},"Children":[{"ID":"20240201213980-kcqj61v","Type":"NodeParagraph","Properties":{"id":"20240201213980-kcqj61v","updated":"20240201213980"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"临键锁（Next-key Lock）"},{"Type":"NodeText","Data":" ：Record Lock+Gap Lock，锁定一个范围，包含记录本身。记录锁只能锁住已经存在的记录，为了避免插入新记录，需要依赖间隙锁。"}]}]}]},{"ID":"20240201213981-cf0159h","Type":"NodeParagraph","Properties":{"id":"20240201213981-cf0159h","updated":"20240201214458"},"Children":[{"Type":"NodeText","Data":"InnoDB 的默认隔离级别 RR（可重读）是可以解决幻读问题发生的，主要有下面两种情况："}]},{"ID":"20240201213982-n3boyfj","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213982-n3boyfj","updated":"20240201214458"},"Children":[{"ID":"20240201213983-w6nrjn0","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213983-w6nrjn0","updated":"20240201213983"},"Children":[{"ID":"20240201213984-v1cxaa0","Type":"NodeParagraph","Properties":{"id":"20240201213984-v1cxaa0","updated":"20240201213984"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"快照读"},{"Type":"NodeText","Data":"（一致性非锁定读） ：由 MVCC 机制来保证不出现幻读。"}]}]},{"ID":"20240201213985-x9ssna3","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213985-x9ssna3","updated":"20240201213985"},"Children":[{"ID":"20240201213986-9rhv2hc","Type":"NodeParagraph","Properties":{"id":"20240201213986-9rhv2hc","updated":"20240201213986"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"当前读"},{"Type":"NodeText","Data":" （一致性锁定读）： 使用 Next-Key Lock 进行加锁来保证不出现幻读。"}]}]}]},{"ID":"20240201213987-8w8ady6","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20240201213987-8w8ady6","updated":"20240201214458"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"当前读和快照读有什么区别？"}]},{"ID":"20240201213988-k80gq9g","Type":"NodeParagraph","Properties":{"id":"20240201213988-k80gq9g","updated":"20240201214458"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"快照读"},{"Type":"NodeText","Data":"（一致性非锁定读）就是单纯的 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"SELECT"},{"Type":"NodeText","Data":" 语句，但不包括下面这两类 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"SELECT"},{"Type":"NodeText","Data":" 语句："}]},{"ID":"20240201213989-l86kuc4","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"c3Fs","CodeBlockCloseFence":"YGBg","Properties":{"id":"20240201213989-l86kuc4","updated":"20240201214458"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"c3Fs","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"SELECT ... FOR UPDATE\nSELECT ... LOCK IN SHARE MODE\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20240201213990-i2sl2qs","Type":"NodeParagraph","Properties":{"id":"20240201213990-i2sl2qs","updated":"20240201214458"},"Children":[{"Type":"NodeText","Data":"快照即记录的历史版本，每行记录可能存在多个历史版本（多版本技术）。"}]},{"ID":"20240201213991-ub5ws9g","Type":"NodeParagraph","Properties":{"id":"20240201213991-ub5ws9g","updated":"20240201214458"},"Children":[{"Type":"NodeText","Data":"快照读的情况下，如果读取的记录正在执行 UPDATE/DELETE 操作，读取操作不会因此去等待记录上 X 锁的释放，而是会去读取行的一个快照。"}]},{"ID":"20240201213992-9bu2btu","Type":"NodeParagraph","Properties":{"id":"20240201213992-9bu2btu","updated":"20240201214458"},"Children":[{"Type":"NodeText","Data":"只有在事务隔离级别 RC(读取已提交) 和 RR（可重读）下，InnoDB 才会使用一致性非锁定读："}]},{"ID":"20240201213993-gc53ht2","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213993-gc53ht2","updated":"20240201214458"},"Children":[{"ID":"20240201213994-ukvl7fr","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213994-ukvl7fr","updated":"20240201213994"},"Children":[{"ID":"20240201213995-jkjybl2","Type":"NodeParagraph","Properties":{"id":"20240201213995-jkjybl2","updated":"20240201213995"},"Children":[{"Type":"NodeText","Data":"在 RC 级别下，对于快照数据，一致性非锁定读总是读取被锁定行的最新一份快照数据。"}]}]},{"ID":"20240201213996-ppa905i","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213996-ppa905i","updated":"20240201213996"},"Children":[{"ID":"20240201213997-t4xng7w","Type":"NodeParagraph","Properties":{"id":"20240201213997-t4xng7w","updated":"20240201213997"},"Children":[{"Type":"NodeText","Data":"在 RR 级别下，对于快照数据，一致性非锁定读总是读取本事务开始时的行数据版本。"}]}]}]},{"ID":"20240201213998-1llfukh","Type":"NodeParagraph","Properties":{"id":"20240201213998-1llfukh","updated":"20240201214458"},"Children":[{"Type":"NodeText","Data":"快照读比较适合对于数据一致性要求不是特别高且追求极致性能的业务场景。"}]},{"ID":"20240201213999-cflrjfy","Type":"NodeParagraph","Properties":{"id":"20240201213999-cflrjfy","updated":"20240201214458"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"当前读"},{"Type":"NodeText","Data":" （一致性锁定读）就是给行记录加 X 锁或 S 锁。"}]},{"ID":"20240201214000-2pb84ap","Type":"NodeParagraph","Properties":{"id":"20240201214000-2pb84ap","updated":"20240201214458"},"Children":[{"Type":"NodeText","Data":"当前读的一些常见 SQL 语句类型如下："}]},{"ID":"20240201214001-3gs5b3f","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"c3Fs","CodeBlockCloseFence":"YGBg","Properties":{"id":"20240201214001-3gs5b3f","updated":"20240201214458"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"c3Fs","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"# 对读的记录加一个X锁\nSELECT...FOR UPDATE\n# 对读的记录加一个S锁\nSELECT...LOCK IN SHARE MODE\n# 对修改的记录加一个X锁\nINSERT...\nUPDATE...\nDELETE...\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20240201214002-ssiip5u","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240201214002-ssiip5u","updated":"20240201214458"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"参考"}]},{"ID":"20240201214003-4zzzavd","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201214003-4zzzavd","updated":"20240201214458"},"Children":[{"ID":"20240201214004-65f1v0x","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201214004-65f1v0x","updated":"20240201214004"},"Children":[{"ID":"20240201214005-mcxf6dr","Type":"NodeParagraph","Properties":{"id":"20240201214005-mcxf6dr","updated":"20240201214005"},"Children":[{"Type":"NodeText","Data":"《高性能 MySQL》第 7 章 MySQL 高级特性"}]}]},{"ID":"20240201214006-1evbctr","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201214006-1evbctr","updated":"20240201214006"},"Children":[{"ID":"20240201214007-wossj1r","Type":"NodeParagraph","Properties":{"id":"20240201214007-wossj1r","updated":"20240201214007"},"Children":[{"Type":"NodeText","Data":"《MySQL 技术内幕 InnoDB 存储引擎》第 6 章 锁"}]}]},{"ID":"20240201214008-trr10cs","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201214008-trr10cs","updated":"20240201214008"},"Children":[{"ID":"20240201214009-wt1ca8w","Type":"NodeParagraph","Properties":{"id":"20240201214009-wt1ca8w","updated":"20240201214009"},"Children":[{"Type":"NodeText","Data":"Relational Database：https://www.omnisci.com/technical-glossary/relational-database"}]}]},{"ID":"20240201214010-jn9j24r","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201214010-jn9j24r","updated":"20240201214010"},"Children":[{"ID":"20240201214011-rrou2n1","Type":"NodeParagraph","Properties":{"id":"20240201214011-rrou2n1","updated":"20240201214011"},"Children":[{"Type":"NodeText","Data":"技术分享 | 隔离级别：正确理解幻读：https://opensource.actionsky.com/20210818-mysql/"}]}]},{"ID":"20240201214012-rfqb74h","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201214012-rfqb74h","updated":"20240201214012"},"Children":[{"ID":"20240201214013-36unoq2","Type":"NodeParagraph","Properties":{"id":"20240201214013-36unoq2","updated":"20240201214013"},"Children":[{"Type":"NodeText","Data":"MySQL Server Logs - MySQL 5.7 Reference Manual：https://dev.mysql.com/doc/refman/5.7/en/server-logs.html"}]}]},{"ID":"20240201214014-3we6q4m","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201214014-3we6q4m","updated":"20240201214014"},"Children":[{"ID":"20240201214015-m59mkb7","Type":"NodeParagraph","Properties":{"id":"20240201214015-m59mkb7","updated":"20240201214015"},"Children":[{"Type":"NodeText","Data":"Redo Log - MySQL 5.7 Reference Manual：https://dev.mysql.com/doc/refman/5.7/en/innodb-redo-log.html"}]}]},{"ID":"20240201214016-jjhvbhp","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201214016-jjhvbhp","updated":"20240201214016"},"Children":[{"ID":"20240201214017-gj7nq92","Type":"NodeParagraph","Properties":{"id":"20240201214017-gj7nq92","updated":"20240201214017"},"Children":[{"Type":"NodeText","Data":"Locking Reads - MySQL 5.7 Reference Manual：https://dev.mysql.com/doc/refman/5.7/en/innodb-locking-reads.html"}]}]},{"ID":"20240201214018-rk393io","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201214018-rk393io","updated":"20240201214018"},"Children":[{"ID":"20240201214019-jf8a78r","Type":"NodeParagraph","Properties":{"id":"20240201214019-jf8a78r","updated":"20240201214019"},"Children":[{"Type":"NodeText","Data":"深入理解数据库行锁与表锁 https://zhuanlan.zhihu.com/p/52678870"}]}]},{"ID":"20240201214020-id70suo","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201214020-id70suo","updated":"20240201214020"},"Children":[{"ID":"20240201214021-ouez49t","Type":"NodeParagraph","Properties":{"id":"20240201214021-ouez49t","updated":"20240201214021"},"Children":[{"Type":"NodeText","Data":"详解 MySQL InnoDB 中意向锁的作用：https://juejin.cn/post/6844903666332368909"}]}]},{"ID":"20240201214022-4xy1bxn","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201214022-4xy1bxn","updated":"20240201214022"},"Children":[{"ID":"20240201214023-asguef8","Type":"NodeParagraph","Properties":{"id":"20240201214023-asguef8","updated":"20240201214023"},"Children":[{"Type":"NodeText","Data":"在数据库中不可重复读和幻读到底应该怎么分？：https://www.zhihu.com/question/392569386"}]}]}]},{"ID":"20240201214024-k51zprw","Type":"NodeHTMLBlock","Data":"\u003cdiv\u003e\n\u003cdiv align=\"center\"\u003e   \n    \u003cimg src=\"https://guide-blog-images.oss-cn-shenzhen.aliyuncs.com/github/javaguide/gongzhonghaoxuanchuan.png\" style=\"margin: 0 auto;\" /\u003e  \n\u003c/div\u003e","HtmlBlockType":6,"Properties":{"id":"20240201214024-k51zprw","updated":"20240201214458"}}]}