{"ID":"20231225194158-vf4y1zo","Spec":"1","Type":"NodeDocument","Properties":{"id":"20231225194158-vf4y1zo","title":"单调栈","updated":"20231225194158"},"Children":[{"ID":"20231225194159-qpamfmq","Type":"NodeParagraph","Properties":{"id":"20231225194159-qpamfmq","updated":"20231225194159"},"Children":[{"Type":"NodeText","Data":"用来寻找左（右）边比他大（小）的最近的数.感觉一般是用来求面积类的题目。"}]},{"ID":"20231225194160-a8fniav","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20231225194160-a8fniav","updated":"20231225194160"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"直方图中最大的矩形"}]},{"ID":"20231225194161-srb3xlu","Type":"NodeParagraph","Properties":{"id":"20231225194161-srb3xlu","updated":"20231225194161"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://www.acwing.com/problem/content/description/133/","TextMarkTextContent":"原题链接"}]},{"ID":"20231225194162-9ufxh0u","Type":"NodeParagraph","Properties":{"id":"20231225194162-9ufxh0u","updated":"20231225194162"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"单调栈问题，找到当前元素中左右两边第一个小于该元素的索引如：24341。3的l[i]就是2所在的索引位置,r[i]就是1所在的索引位置，以3为顶边的去见长度 = r[i]-l[i]-1 单调栈存储的是递增数组如1 4 2 3 7 1 5。栈中最后遍历后存储的就是1 5"}]},{"ID":"20231225194163-ncpq2ru","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"Yysr","CodeBlockCloseFence":"YGBg","Properties":{"id":"20231225194163-ncpq2ru","updated":"20231225194163"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Yysr","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"#include\u003ciostream\u003e\n#include\u003cstack\u003e\n#include\u003ccstdio\u003e\nusing namespace std;\n\nconst int N = 100010;\nint a[N], l[N], r[N];\nint n;\nint main(){\n    stack\u003cint\u003e s;\n    while(scanf(\"%d\", \u0026n),n){\n        for(int i = 1;i\u003c=n;i++){\n            cin\u003e\u003ea[i];\n        }\n        //为方便，规定第0个元素和n+1元素为-1\n        a[0] = a[n+1] = -1;\n        //赋值l、r数组\n        s.push(0);//头元素索引进栈\n        for(int i = 1; i\u003c=n; i++){\n            //最小元素进栈\n            while(a[s.top()]\u003e=a[i]){\n                s.pop();\n            }\n            //i位置左边比其小的第一个元素的索引位置就是栈顶元素\n            l[i] = s.top();\n            s.push(i);\n        }\n        // 清空栈\n        while (!s.empty()) {\n            s.pop();\n        }\n        s.push(n+1);\n        //同理赋值r数组\n        for(int i = n; i\u003e=1; i--){\n             while(a[s.top()]\u003e=a[i]){\n                s.pop();\n            }\n            r[i] = s.top();\n            s.push(i);\n        }\n        \n        long long res = 0;\n        for(int i = 1; i\u003c=n; i++){\n            res = max(res, (long long)a[i]*(r[i]-l[i]-1));\n        }\n        printf(\"%lld\\n\", res);\n        \n    }\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20231225194164-h51z7fh","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20231225194164-h51z7fh","updated":"20231225194164"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"二维直方图中的最大矩形"}]},{"ID":"20231225194165-rvbt460","Type":"NodeParagraph","Properties":{"id":"20231225194165-rvbt460","updated":"20231225194165"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://www.acwing.com/problem/content/154/","TextMarkTextContent":"原题链接"},{"Type":"NodeSoftBreak","Data":"\n","Properties":{"id":""}},{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"https://cdn.acwing.com/media/article/image/2023/12/09/375993_5197438796-_-72202557__0ba192c1db0bec99fa1553a5da0b7c80_-1565326707_Screenshot_2023-12-09-22-13-38-123_com.acwing.app.acwing_app_0_wifi_0.jpg","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20231225194166-mgdzjbx","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"Yysr","CodeBlockCloseFence":"YGBg","Properties":{"id":"20231225194166-mgdzjbx","updated":"20231225194166"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Yysr","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"//还是单调栈问题，直方图的二维化将F看作高度，题目实例中最后一行的高度就是2 2 2 5 5 5，枚举每一行就可\n#include\u003ciostream\u003e\n#include\u003cstack\u003e\nusing namespace std;\nconst int N = 1010;\nint h[N][N];\nint l[N], r[N];\nint n, m;\nint area(int h[]){\n    stack\u003cint\u003e s;\n    h[0] = h[m+1] = -1;\n    s.push(0);\n    for(int i = 1; i\u003c=m; i++){\n        while(h[s.top()]\u003e=h[i]) s.pop();\n        l[i] = s.top();\n        s.push(i);\n    }\n    while(!s.empty())s.pop();s.push(m+1);\n    for(int i = m; i; i--){\n         while(h[s.top()]\u003e=h[i]) s.pop();\n        r[i] = s.top();\n        s.push(i);\n    }\n    int res = 0;\n    for(int i = 1; i\u003c=m; i++){\n        res = max(res, h[i]*(r[i]-l[i]-1));\n    }\n    return res;\n    \n}\nint main(){\n    cin\u003e\u003en\u003e\u003em;\n    for(int i = 1; i\u003c=n;i++){\n        for(int j = 1; j\u003c=m; j++){\n            char ch; cin\u003e\u003ech;\n            if(ch == 'F') h[i][j] = h[i-1][j]+1;\n            else h[i][j] = 0;\n        }\n    }\n   \n    int res = 0;\n    for(int i = 1; i\u003c=n; i++){\n        res = max(res, area(h[i]));\n    }\n    cout\u003c\u003cres*3\u003c\u003cendl;\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20231225194167-cp8ty1s","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20231225194167-cp8ty1s","updated":"20231225194167"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"接雨水"}]},{"ID":"20231225194168-6hssqgz","Type":"NodeParagraph","Properties":{"id":"20231225194168-6hssqgz","updated":"20231225194168"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"第一种,找左右最大值不是单调栈"}]},{"ID":"20231225194169-2mf2eyd","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"Yysr","CodeBlockCloseFence":"YGBg","Properties":{"id":"20231225194169-2mf2eyd","updated":"20231225194169"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"Yysr","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"class Solution {\n    public int trap(int[] height) {\n        int[] leftMax = new int[height.length];\n        int[] rightMax = new int[height.length];\n        leftMax[0] = height[0];\n        rightMax[height.length-1] = height[height.length-1];\n        for(int i = 1; i\u003cheight.length; i++){\n            leftMax[i] = Integer.max(leftMax[i-1], height[i]);\n        }\n        for(int i = height.length-2; i\u003e=0; i--){\n            rightMax[i] = Integer.max(rightMax[i+1], height[i]);\n        }\n        int count = 0;\n        for(int i = 0; i\u003cheight.length; i++){\n            count+=Integer.min(rightMax[i], leftMax[i])-height[i];\n        }\n        return count;\n\n    }\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20231225194170-4b488tx","Type":"NodeParagraph","Properties":{"id":"20231225194170-4b488tx","updated":"20231225194170"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"第二种，单调栈"},{"Type":"NodeSoftBreak","Data":"\n","Properties":{"id":""}},{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"https://cdn.acwing.com/media/article/image/2023/12/10/375993_92acc8f596-185141702140524_.pic_hd.jpg","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]}]}