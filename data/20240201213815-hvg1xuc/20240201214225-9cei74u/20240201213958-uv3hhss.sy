{"ID":"20240201213958-uv3hhss","Spec":"1","Type":"NodeDocument","Properties":{"id":"20240201213958-uv3hhss","title":"d-0数据库基础","updated":"20240201213958"},"Children":[{"ID":"20240201213959-nhsu7om","Type":"NodeThematicBreak","Properties":{"id":"20240201213959-nhsu7om","updated":"20240201213959"}},{"ID":"20240201213960-sb8awe8","Type":"NodeHeading","HeadingLevel":1,"Properties":{"id":"20240201213960-sb8awe8","updated":"20240201213960"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"# ","Properties":{"id":""}},{"Type":"NodeText","Data":"4. 数据库"}]},{"ID":"20240201213961-lq4felk","Type":"NodeBlockquote","Properties":{"id":"20240201213961-lq4felk","updated":"20240201213961"},"Children":[{"Type":"NodeBlockquoteMarker","Data":"\u003e ","Properties":{"id":""}},{"ID":"20240201213962-39qu6xa","Type":"NodeParagraph","Properties":{"id":"20240201213962-39qu6xa","updated":"20240201213962"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://javaguide.cn/","TextMarkTextContent":"JavaGuide"},{"Type":"NodeText","Data":" ：「Java学习+面试指南」一份涵盖大部分 Java 程序员所需要掌握的核心知识。准备 Java 面试，首选 JavaGuide！"}]}]},{"ID":"20240201213963-50aa56m","Type":"NodeHTMLBlock","Data":"\u003cdiv\u003e\n\u003cdiv align=\"center\"\u003e\n    \u003cp\u003e\n        \u003ca href=\"https://www.yuque.com/docs/share/8a30ffb5-83f3-40f9-baf9-38de68b906dc\"\u003e\n            \u003cimg src=\"https://guide-blog-images.oss-cn-shenzhen.aliyuncs.com/xingqiu/xingqiu.png\" style=\"margin: 0 auto; width: 850px;\" /\u003e\n        \u003c/a\u003e\n    \u003c/p\u003e\n    \u003cp\u003e\n        \u003ca href=\"https://github.com/Snailclimb/JavaGuide-Interview\"\u003eGithub\u003c/a\u003e |\n        \u003ca href=\"https://gitee.com/SnailClimb/JavaGuide-Interview\"\u003eGitee\u003c/a\u003e\n    \u003c/p\u003e  \n\u003c/div\u003e","HtmlBlockType":6,"Properties":{"id":"20240201213963-50aa56m","updated":"20240201213963"}},{"ID":"20240201213964-zoi6nc7","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240201213964-zoi6nc7","updated":"20240201213964"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"4.1 数据库基础"}]},{"ID":"20240201213965-qbrlmnc","Type":"NodeParagraph","Properties":{"id":"20240201213965-qbrlmnc","updated":"20240201213965"},"Children":[{"Type":"NodeText","Data":"数据库知识基础，这部分内容一定要理解记忆。虽然这部分内容只是理论知识，但是非常重要，这是后面学习 MySQL 数据库的基础。PS: 这部分内容由于涉及太多概念性内容，所以参考了维基百科和百度百科相应的介绍。"}]},{"ID":"20240201213966-qt625qd","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240201213966-qt625qd","updated":"20240201213966"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"什么是数据库, 数据库管理系统, 数据库系统, 数据库管理员?"}]},{"ID":"20240201213967-azwm5e3","Type":"NodeList","ListData":{"Tight":true,"BulletChar":42,"Padding":2,"Marker":"Kg==","Num":-1},"Properties":{"id":"20240201213967-azwm5e3","updated":"20240201213967"},"Children":[{"ID":"20240201213968-unxecil","Type":"NodeListItem","Data":"*","ListData":{"Tight":true,"BulletChar":42,"Padding":2,"Marker":"Kg==","Num":-1},"Properties":{"id":"20240201213968-unxecil","updated":"20240201213968"},"Children":[{"ID":"20240201213969-t9iibx3","Type":"NodeParagraph","Properties":{"id":"20240201213969-t9iibx3","updated":"20240201213969"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"数据库"},{"Type":"NodeText","Data":" : 数据库(DataBase 简称 DB)就是信息的集合或者说数据库是由数据库管理系统管理的数据的集合。"}]}]},{"ID":"20240201213970-5n9f725","Type":"NodeListItem","Data":"*","ListData":{"Tight":true,"BulletChar":42,"Padding":2,"Marker":"Kg==","Num":-1},"Properties":{"id":"20240201213970-5n9f725","updated":"20240201213970"},"Children":[{"ID":"20240201213971-lhi76ls","Type":"NodeParagraph","Properties":{"id":"20240201213971-lhi76ls","updated":"20240201213971"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"数据库管理系统"},{"Type":"NodeText","Data":" : 数据库管理系统(Database Management System 简称 DBMS)是一种操纵和管理数据库的大型软件，通常用于建立、使用和维护数据库。"}]}]},{"ID":"20240201213972-tsy3lsl","Type":"NodeListItem","Data":"*","ListData":{"Tight":true,"BulletChar":42,"Padding":2,"Marker":"Kg==","Num":-1},"Properties":{"id":"20240201213972-tsy3lsl","updated":"20240201213972"},"Children":[{"ID":"20240201213973-9zmlgy8","Type":"NodeParagraph","Properties":{"id":"20240201213973-9zmlgy8","updated":"20240201213973"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"数据库系统"},{"Type":"NodeText","Data":" : 数据库系统(Data Base System，简称 DBS)通常由软件、数据库和数据管理员(DBA)组成。"}]}]},{"ID":"20240201213974-87ozrz5","Type":"NodeListItem","Data":"*","ListData":{"Tight":true,"BulletChar":42,"Padding":2,"Marker":"Kg==","Num":-1},"Properties":{"id":"20240201213974-87ozrz5","updated":"20240201213974"},"Children":[{"ID":"20240201213975-hdzjtpn","Type":"NodeParagraph","Properties":{"id":"20240201213975-hdzjtpn","updated":"20240201213975"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"数据库管理员"},{"Type":"NodeText","Data":" : 数据库管理员(Database Administrator, 简称 DBA)负责全面管理和控制数据库系统。"}]}]}]},{"ID":"20240201213976-o9xllif","Type":"NodeParagraph","Properties":{"id":"20240201213976-o9xllif","updated":"20240201213976"},"Children":[{"Type":"NodeText","Data":"数据库系统基本构成如下图所示："}]},{"ID":"20240201213977-u47od1o","Type":"NodeParagraph","Properties":{"id":"20240201213977-u47od1o","updated":"20240201213977"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"数据库系统基本构成","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"https://img-blog.csdnimg.cn/img_convert/e21120184e63406526a4e873cacd23f2.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201213978-cxavmky","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240201213978-cxavmky","updated":"20240201213978"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"什么是元组, 码, 候选码, 主码, 外码, 主属性, 非主属性？"}]},{"ID":"20240201213979-bbdjdfs","Type":"NodeList","ListData":{"Tight":true,"BulletChar":42,"Padding":2,"Marker":"Kg==","Num":-1},"Properties":{"id":"20240201213979-bbdjdfs","updated":"20240201213979"},"Children":[{"ID":"20240201213980-ki0q47c","Type":"NodeListItem","Data":"*","ListData":{"Tight":true,"BulletChar":42,"Padding":2,"Marker":"Kg==","Num":-1},"Properties":{"id":"20240201213980-ki0q47c","updated":"20240201213980"},"Children":[{"ID":"20240201213981-j9n90jn","Type":"NodeParagraph","Properties":{"id":"20240201213981-j9n90jn","updated":"20240201213981"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"元组"},{"Type":"NodeText","Data":" ： 元组（tuple）是关系数据库中的基本概念，关系是一张表，表中的每行（即数据库中的每条记录）就是一个元组，每列就是一个属性。 在二维表里，元组也称为行。"}]}]},{"ID":"20240201213982-wn59lqr","Type":"NodeListItem","Data":"*","ListData":{"Tight":true,"BulletChar":42,"Padding":2,"Marker":"Kg==","Num":-1},"Properties":{"id":"20240201213982-wn59lqr","updated":"20240201213982"},"Children":[{"ID":"20240201213983-b4q14ek","Type":"NodeParagraph","Properties":{"id":"20240201213983-b4q14ek","updated":"20240201213983"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"码"},{"Type":"NodeText","Data":" ：码就是能唯一标识实体的属性，对应表中的列。"}]}]},{"ID":"20240201213984-3d11al7","Type":"NodeListItem","Data":"*","ListData":{"Tight":true,"BulletChar":42,"Padding":2,"Marker":"Kg==","Num":-1},"Properties":{"id":"20240201213984-3d11al7","updated":"20240201213984"},"Children":[{"ID":"20240201213985-oksa72a","Type":"NodeParagraph","Properties":{"id":"20240201213985-oksa72a","updated":"20240201213985"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"候选码"},{"Type":"NodeText","Data":" ： 若关系中的某一属性或属性组的值能唯一的标识一个元组，而其任何、子集都不能再标识，则称该属性组为候选码。例如：在学生实体中，“学号”是能唯一的区分学生实体的，同时又假设“姓名”、“班级”的属性组合足以区分学生实体，那么{学号}和{姓名，班级}都是候选码。"}]}]},{"ID":"20240201213986-vb9skzo","Type":"NodeListItem","Data":"*","ListData":{"Tight":true,"BulletChar":42,"Padding":2,"Marker":"Kg==","Num":-1},"Properties":{"id":"20240201213986-vb9skzo","updated":"20240201213986"},"Children":[{"ID":"20240201213987-3v54mgr","Type":"NodeParagraph","Properties":{"id":"20240201213987-3v54mgr","updated":"20240201213987"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"主码"},{"Type":"NodeText","Data":" : 主码也叫主键。主码是从候选码中选出来的。 一个实体集中只能有一个主码，但可以有多个候选码。"}]}]},{"ID":"20240201213988-yrh50nr","Type":"NodeListItem","Data":"*","ListData":{"Tight":true,"BulletChar":42,"Padding":2,"Marker":"Kg==","Num":-1},"Properties":{"id":"20240201213988-yrh50nr","updated":"20240201213988"},"Children":[{"ID":"20240201213989-752e1d2","Type":"NodeParagraph","Properties":{"id":"20240201213989-752e1d2","updated":"20240201213989"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"外码"},{"Type":"NodeText","Data":" : 外码也叫外键。如果一个关系中的一个属性是另外一个关系中的主码则这个属性为外码。"}]}]},{"ID":"20240201213990-d3kaodq","Type":"NodeListItem","Data":"*","ListData":{"Tight":true,"BulletChar":42,"Padding":2,"Marker":"Kg==","Num":-1},"Properties":{"id":"20240201213990-d3kaodq","updated":"20240201213990"},"Children":[{"ID":"20240201213991-zjwz7ul","Type":"NodeParagraph","Properties":{"id":"20240201213991-zjwz7ul","updated":"20240201213991"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"主属性"},{"Type":"NodeText","Data":" ： 候选码中出现过的属性称为主属性。比如关系 工人（工号，身份证号，姓名，性别，部门）. 显然工号和身份证号都能够唯一标示这个关系，所以都是候选码。工号、身份证号这两个属性就是主属性。如果主码是一个属性组，那么属性组中的属性都是主属性。"}]}]},{"ID":"20240201213992-prheily","Type":"NodeListItem","Data":"*","ListData":{"Tight":true,"BulletChar":42,"Padding":2,"Marker":"Kg==","Num":-1},"Properties":{"id":"20240201213992-prheily","updated":"20240201213992"},"Children":[{"ID":"20240201213993-qug4mv8","Type":"NodeParagraph","Properties":{"id":"20240201213993-qug4mv8","updated":"20240201213993"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"非主属性："},{"Type":"NodeText","Data":" 不包含在任何一个候选码中的属性称为非主属性。比如在关系——学生（学号，姓名，年龄，性别，班级）中，主码是“学号”，那么其他的“姓名”、“年龄”、“性别”、“班级”就都可以称为非主属性。"}]}]}]},{"ID":"20240201213994-qvdg2n5","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240201213994-qvdg2n5","updated":"20240201213994"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"主键和外键有什么区别?"}]},{"ID":"20240201213995-ec9pog8","Type":"NodeList","ListData":{"Tight":true,"BulletChar":42,"Padding":2,"Marker":"Kg==","Num":-1},"Properties":{"id":"20240201213995-ec9pog8","updated":"20240201213995"},"Children":[{"ID":"20240201213996-iw0znln","Type":"NodeListItem","Data":"*","ListData":{"Tight":true,"BulletChar":42,"Padding":2,"Marker":"Kg==","Num":-1},"Properties":{"id":"20240201213996-iw0znln","updated":"20240201213996"},"Children":[{"ID":"20240201213997-epyxaur","Type":"NodeParagraph","Properties":{"id":"20240201213997-epyxaur","updated":"20240201213997"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"主键(主码)"},{"Type":"NodeText","Data":" ：主键用于唯一标识一个元组，不能有重复，不允许为空。一个表只能有一个主键。"}]}]},{"ID":"20240201213998-s75daei","Type":"NodeListItem","Data":"*","ListData":{"Tight":true,"BulletChar":42,"Padding":2,"Marker":"Kg==","Num":-1},"Properties":{"id":"20240201213998-s75daei","updated":"20240201213998"},"Children":[{"ID":"20240201213999-7t7utyv","Type":"NodeParagraph","Properties":{"id":"20240201213999-7t7utyv","updated":"20240201213999"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"外键(外码)"},{"Type":"NodeText","Data":" ：外键用来和其他表建立联系用，外键是另一表的主键，外键是可以有重复的，可以是空值。一个表可以有多个外键。"}]}]}]},{"ID":"20240201214000-utse0d7","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240201214000-utse0d7","updated":"20240201214000"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"为什么不推荐使用外键与级联？"}]},{"ID":"20240201214001-qs594fx","Type":"NodeParagraph","Properties":{"id":"20240201214001-qs594fx","updated":"20240201214001"},"Children":[{"Type":"NodeText","Data":"对于外键和级联，阿里巴巴开发手册这样说到："}]},{"ID":"20240201214002-bkkdcp3","Type":"NodeBlockquote","Properties":{"id":"20240201214002-bkkdcp3","updated":"20240201214002"},"Children":[{"Type":"NodeBlockquoteMarker","Data":"\u003e ","Properties":{"id":""}},{"ID":"20240201214003-qkyk1j2","Type":"NodeParagraph","Properties":{"id":"20240201214003-qkyk1j2","updated":"20240201214003"},"Children":[{"Type":"NodeText","Data":"【强制】不得使用外键与级联，一切外键概念必须在应用层解决。"}]},{"ID":"20240201214004-2dq0rhl","Type":"NodeParagraph","Properties":{"id":"20240201214004-2dq0rhl","updated":"20240201214004"},"Children":[{"Type":"NodeText","Data":"说明: 以学生和成绩的关系为例，学生表中的 student_id 是主键，那么成绩表中的 student_id 则为外键。如果更新学生表中的 student_id，同时触发成绩表中的 student_id 更新，即为级联更新。外键与级联更新适用于单机低并发，不适合分布式、高并发集群; 级联更新是强阻塞，存在数据库更新风暴的风 险; 外键影响数据库的插入速度"}]}]},{"ID":"20240201214005-jdgx4ht","Type":"NodeParagraph","Properties":{"id":"20240201214005-jdgx4ht","updated":"20240201214005"},"Children":[{"Type":"NodeText","Data":"为什么不要用外键呢？大部分人可能会这样回答："}]},{"ID":"20240201214006-k2wciig","Type":"NodeBlockquote","Properties":{"id":"20240201214006-k2wciig","updated":"20240201214006"},"Children":[{"Type":"NodeBlockquoteMarker","Data":"\u003e ","Properties":{"id":""}},{"ID":"20240201214007-o0objo6","Type":"NodeList","ListData":{"Typ":1,"Tight":true,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20240201214007-o0objo6","updated":"20240201214007"},"Children":[{"ID":"20240201214008-7632o18","Type":"NodeListItem","Data":"1","ListData":{"Typ":1,"Tight":true,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20240201214008-7632o18","updated":"20240201214008"},"Children":[{"ID":"20240201214009-uotg2ho","Type":"NodeParagraph","Properties":{"id":"20240201214009-uotg2ho","updated":"20240201214009"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"增加了复杂性："},{"Type":"NodeText","Data":" a. 每次做DELETE 或者UPDATE都必须考虑外键约束，会导致开发的时候很痛苦, 测试数据极为不方便; b. 外键的主从关系是定的，假如那天需求有变化，数据库中的这个字段根本不需要和其他表有关联的话就会增加很多麻烦。"}]}]},{"ID":"20240201214010-w5uy266","Type":"NodeListItem","Data":"2","ListData":{"Typ":1,"Tight":true,"Start":2,"Delimiter":46,"Padding":3,"Marker":"Mg==","Num":2},"Properties":{"id":"20240201214010-w5uy266","updated":"20240201214010"},"Children":[{"ID":"20240201214011-hp3bs48","Type":"NodeParagraph","Properties":{"id":"20240201214011-hp3bs48","updated":"20240201214011"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"增加了额外工作"},{"Type":"NodeText","Data":"： 数据库需要增加维护外键的工作，比如当我们做一些涉及外键字段的增，删，更新操作之后，需要触发相关操作去检查，保证数据的的一致性和正确性，这样会不得不消耗资源；（个人觉得这个不是不用外键的原因，因为即使你不使用外键，你在应用层面也还是要保证的。所以，我觉得这个影响可以忽略不计。）"}]}]},{"ID":"20240201214012-owvsudi","Type":"NodeListItem","Data":"4","ListData":{"Typ":1,"Tight":true,"Start":4,"Delimiter":46,"Padding":3,"Marker":"NA==","Num":3},"Properties":{"id":"20240201214012-owvsudi","updated":"20240201214012"},"Children":[{"ID":"20240201214013-vo5kj75","Type":"NodeParagraph","Properties":{"id":"20240201214013-vo5kj75","updated":"20240201214013"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"对分库分表不友好"},{"Type":"NodeText","Data":" ：因为分库分表下外键是无法生效的。"}]}]},{"ID":"20240201214014-734h8v3","Type":"NodeListItem","Data":"5","ListData":{"Typ":1,"Tight":true,"Start":5,"Delimiter":46,"Padding":3,"Marker":"NQ==","Num":4},"Properties":{"id":"20240201214014-734h8v3","updated":"20240201214014"},"Children":[{"ID":"20240201214015-d33loxx","Type":"NodeParagraph","Properties":{"id":"20240201214015-d33loxx","updated":"20240201214015"},"Children":[{"Type":"NodeText","Data":"......"}]}]}]}]},{"ID":"20240201214016-gov0si3","Type":"NodeParagraph","Properties":{"id":"20240201214016-gov0si3","updated":"20240201214016"},"Children":[{"Type":"NodeText","Data":"我个人觉得上面这种回答不是特别的全面，只是说了外键存在的一个常见的问题。实际上，我们知道外键也是有很多好处的，比如："}]},{"ID":"20240201214017-ykt2qsk","Type":"NodeList","ListData":{"Typ":1,"Tight":true,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20240201214017-ykt2qsk","updated":"20240201214017"},"Children":[{"ID":"20240201214018-h3lmzal","Type":"NodeListItem","Data":"1","ListData":{"Typ":1,"Tight":true,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20240201214018-h3lmzal","updated":"20240201214018"},"Children":[{"ID":"20240201214019-08bsel9","Type":"NodeParagraph","Properties":{"id":"20240201214019-08bsel9","updated":"20240201214019"},"Children":[{"Type":"NodeText","Data":"保证了数据库数据的一致性和完整性；"}]}]},{"ID":"20240201214020-huy3d0l","Type":"NodeListItem","Data":"2","ListData":{"Typ":1,"Tight":true,"Start":2,"Delimiter":46,"Padding":3,"Marker":"Mg==","Num":2},"Properties":{"id":"20240201214020-huy3d0l","updated":"20240201214020"},"Children":[{"ID":"20240201214021-ayxmv3h","Type":"NodeParagraph","Properties":{"id":"20240201214021-ayxmv3h","updated":"20240201214021"},"Children":[{"Type":"NodeText","Data":"级联操作方便，减轻了程序代码量；"}]}]},{"ID":"20240201214022-8odfpc4","Type":"NodeListItem","Data":"3","ListData":{"Typ":1,"Tight":true,"Start":3,"Delimiter":46,"Padding":3,"Marker":"Mw==","Num":3},"Properties":{"id":"20240201214022-8odfpc4","updated":"20240201214022"},"Children":[{"ID":"20240201214023-l5t28t4","Type":"NodeParagraph","Properties":{"id":"20240201214023-l5t28t4","updated":"20240201214023"},"Children":[{"Type":"NodeText","Data":"......"}]}]}]},{"ID":"20240201214024-acfr9b5","Type":"NodeParagraph","Properties":{"id":"20240201214024-acfr9b5","updated":"20240201214024"},"Children":[{"Type":"NodeText","Data":"所以说，不要一股脑的就抛弃了外键这个概念，既然它存在就有它存在的道理，如果系统不涉及分库分表，并发量不是很高的情况还是可以考虑使用外键的。"}]},{"ID":"20240201214025-qjqxggk","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240201214025-qjqxggk","updated":"20240201214025"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"什么是 ER 图？"}]},{"ID":"20240201214026-dmy6925","Type":"NodeBlockquote","Properties":{"id":"20240201214026-dmy6925","updated":"20240201214026"},"Children":[{"Type":"NodeBlockquoteMarker","Data":"\u003e ","Properties":{"id":""}},{"ID":"20240201214027-ac9th42","Type":"NodeParagraph","Properties":{"id":"20240201214027-ac9th42","updated":"20240201214027"},"Children":[{"Type":"NodeText","Data":"我们做一个项目的时候一定要试着画 ER 图来捋清数据库设计，这个也是面试官问你项目的时候经常会被问道的。"}]}]},{"ID":"20240201214028-0hzfhha","Type":"NodeParagraph","Properties":{"id":"20240201214028-0hzfhha","updated":"20240201214028"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"E-R 图"},{"Type":"NodeText","Data":" 也称实体-联系图(Entity Relationship Diagram)，提供了表示实体类型、属性和联系的方法，用来描述现实世界的概念模型。 它是描述现实世界关系概念模型的有效方法。 是表示概念关系模型的一种方式。"}]},{"ID":"20240201214029-vdb612c","Type":"NodeParagraph","Properties":{"id":"20240201214029-vdb612c","updated":"20240201214029"},"Children":[{"Type":"NodeText","Data":"下图是一个学生选课的 ER 图，每个学生可以选若干门课程，同一门课程也可以被若干人选择，所以它们之间的关系是多对多（M: N）。另外，还有其他两种关系是：1 对 1（1:1）、1 对多（1: N）。"}]},{"ID":"20240201214030-lrma56g","Type":"NodeParagraph","Properties":{"id":"20240201214030-lrma56g","updated":"20240201214030"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"ER图示例","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"https://img-blog.csdnimg.cn/img_convert/4717673e36966e0e4b33fccfd753f6ea.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201214031-60cb7gq","Type":"NodeParagraph","Properties":{"id":"20240201214031-60cb7gq","updated":"20240201214031"},"Children":[{"Type":"NodeText","Data":"我们试着将上面的 ER 图转换成数据库实际的关系模型(实际设计中，我们通常会将任课教师也作为一个实体来处理)："}]},{"ID":"20240201214032-dsj2anj","Type":"NodeParagraph","Properties":{"id":"20240201214032-dsj2anj","updated":"20240201214032"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"关系模型","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"https://img-blog.csdnimg.cn/img_convert/5897753dfb301dfa3a814ab06e718a5e.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201214033-3xi8az9","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240201214033-3xi8az9","updated":"20240201214033"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"数据库范式了解吗?"}]},{"ID":"20240201214034-u04s5yk","Type":"NodeParagraph","Properties":{"id":"20240201214034-u04s5yk","updated":"20240201214034"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"1NF(第一范式)"}]},{"ID":"20240201214035-gbw48v9","Type":"NodeParagraph","Properties":{"id":"20240201214035-gbw48v9","updated":"20240201214035"},"Children":[{"Type":"NodeText","Data":"属性（对应于表中的字段）不能再被分割，也就是这个字段只能是一个值，不能再分为多个其他的字段了。"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"1NF 是所有关系型数据库的最基本要求"},{"Type":"NodeText","Data":" ，也就是说关系型数据库中创建的表一定满足第一范式。"}]},{"ID":"20240201214036-gscnmem","Type":"NodeParagraph","Properties":{"id":"20240201214036-gscnmem","updated":"20240201214036"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"2NF(第二范式)"}]},{"ID":"20240201214037-lxlajev","Type":"NodeParagraph","Properties":{"id":"20240201214037-lxlajev","updated":"20240201214037"},"Children":[{"Type":"NodeText","Data":"2NF 在 1NF 的基础之上，消除了非主属性对于码的部分函数依赖。如下图所示，展示了第一范式到第二范式的过渡。第二范式在第一范式的基础上增加了一个列，这个列称为主键，非主属性都依赖于主键。"}]},{"ID":"20240201214038-m4umsxq","Type":"NodeParagraph","Properties":{"id":"20240201214038-m4umsxq","updated":"20240201214038"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"第二范式","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"https://img-blog.csdnimg.cn/img_convert/bd1d31be3779342427fc9e462bf7f05c.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201214039-4tgfikp","Type":"NodeParagraph","Properties":{"id":"20240201214039-4tgfikp","updated":"20240201214039"},"Children":[{"Type":"NodeText","Data":"一些重要的概念："}]},{"ID":"20240201214040-iboh2xd","Type":"NodeList","ListData":{"Tight":true,"BulletChar":42,"Padding":2,"Marker":"Kg==","Num":-1},"Properties":{"id":"20240201214040-iboh2xd","updated":"20240201214040"},"Children":[{"ID":"20240201214041-5t06tor","Type":"NodeListItem","Data":"*","ListData":{"Tight":true,"BulletChar":42,"Padding":2,"Marker":"Kg==","Num":-1},"Properties":{"id":"20240201214041-5t06tor","updated":"20240201214041"},"Children":[{"ID":"20240201214042-5bfs05m","Type":"NodeParagraph","Properties":{"id":"20240201214042-5bfs05m","updated":"20240201214042"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"函数依赖（functional dependency）"},{"Type":"NodeText","Data":" ：若在一张表中，在属性（或属性组）X 的值确定的情况下，必定能确定属性 Y 的值，那么就可以说 Y 函数依赖于 X，写作 X → Y。"}]}]},{"ID":"20240201214043-67qlyh7","Type":"NodeListItem","Data":"*","ListData":{"Tight":true,"BulletChar":42,"Padding":2,"Marker":"Kg==","Num":-1},"Properties":{"id":"20240201214043-67qlyh7","updated":"20240201214043"},"Children":[{"ID":"20240201214044-hmkufhu","Type":"NodeParagraph","Properties":{"id":"20240201214044-hmkufhu","updated":"20240201214044"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"部分函数依赖（partial functional dependency）"},{"Type":"NodeText","Data":" ：如果 X→Y，并且存在 X 的一个真子集 X0，使得 X0→Y，则称 Y 对 X 部分函数依赖。比如学生基本信息表 R 中（学号，身份证号，姓名）当然学号属性取值是唯一的，在 R 关系中，（学号，身份证号）-\u003e（姓名），（学号）-\u003e（姓名），（身份证号）-\u003e（姓名）；所以姓名部分函数依赖与（学号，身份证号）；"}]}]},{"ID":"20240201214045-ep3vgvo","Type":"NodeListItem","Data":"*","ListData":{"Tight":true,"BulletChar":42,"Padding":2,"Marker":"Kg==","Num":-1},"Properties":{"id":"20240201214045-ep3vgvo","updated":"20240201214045"},"Children":[{"ID":"20240201214046-m11qv77","Type":"NodeParagraph","Properties":{"id":"20240201214046-m11qv77","updated":"20240201214046"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"完全函数依赖(Full functional dependency)"},{"Type":"NodeText","Data":" ：在一个关系中，若某个非主属性数据项依赖于全部关键字称之为完全函数依赖。比如学生基本信息表 R（学号，班级，姓名）假设不同的班级学号有相同的，班级内学号不能相同，在 R 关系中，（学号，班级）-\u003e（姓名），但是（学号）-\u003e(姓名)不成立，（班级）-\u003e(姓名)不成立，所以姓名完全函数依赖与（学号，班级）；"}]}]},{"ID":"20240201214047-6666msp","Type":"NodeListItem","Data":"*","ListData":{"Tight":true,"BulletChar":42,"Padding":2,"Marker":"Kg==","Num":-1},"Properties":{"id":"20240201214047-6666msp","updated":"20240201214047"},"Children":[{"ID":"20240201214048-5ue7cb3","Type":"NodeParagraph","Properties":{"id":"20240201214048-5ue7cb3","updated":"20240201214048"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"传递函数依赖"},{"Type":"NodeText","Data":" ： 在关系模式 R(U)中，设 X，Y，Z 是 U 的不同的属性子集，如果 X 确定 Y、Y 确定 Z，且有 X 不包含 Y，Y 不确定 X，（X∪Y）∩Z=空集合，则称 Z 传递函数依赖(transitive functional dependency) 于 X。传递函数依赖会导致数据冗余和异常。传递函数依赖的 Y 和 Z 子集往往同属于某一个事物，因此可将其合并放到一个表中。比如在关系 R(学号 , 姓名, 系名，系主任)中，学号 → 系名，系名 → 系主任，所以存在非主属性系主任对于学号的传递函数依赖。。"}]}]}]},{"ID":"20240201214049-cq6li2w","Type":"NodeParagraph","Properties":{"id":"20240201214049-cq6li2w","updated":"20240201214049"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"3NF(第三范式)"}]},{"ID":"20240201214050-hpz85am","Type":"NodeParagraph","Properties":{"id":"20240201214050-hpz85am","updated":"20240201214050"},"Children":[{"Type":"NodeText","Data":"3NF 在 2NF 的基础之上，消除了非主属性对于码的传递函数依赖 。符合 3NF 要求的数据库设计，"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"基本"},{"Type":"NodeText","Data":"上解决了数据冗余过大，插入异常，修改异常，删除异常的问题。比如在关系 R(学号 , 姓名, 系名，系主任)中，学号 → 系名，系名 → 系主任，所以存在非主属性系主任对于学号的传递函数依赖，所以该表的设计，不符合 3NF 的要求。"}]},{"ID":"20240201214051-c9pb8aj","Type":"NodeParagraph","Properties":{"id":"20240201214051-c9pb8aj","updated":"20240201214051"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"总结"}]},{"ID":"20240201214052-cziy134","Type":"NodeList","ListData":{"Tight":true,"BulletChar":42,"Padding":2,"Marker":"Kg==","Num":-1},"Properties":{"id":"20240201214052-cziy134","updated":"20240201214052"},"Children":[{"ID":"20240201214053-4czecc9","Type":"NodeListItem","Data":"*","ListData":{"Tight":true,"BulletChar":42,"Padding":2,"Marker":"Kg==","Num":-1},"Properties":{"id":"20240201214053-4czecc9","updated":"20240201214053"},"Children":[{"ID":"20240201214054-zvzpiyb","Type":"NodeParagraph","Properties":{"id":"20240201214054-zvzpiyb","updated":"20240201214054"},"Children":[{"Type":"NodeText","Data":"1NF：属性不可再分。"}]}]},{"ID":"20240201214055-k9y9k1i","Type":"NodeListItem","Data":"*","ListData":{"Tight":true,"BulletChar":42,"Padding":2,"Marker":"Kg==","Num":-1},"Properties":{"id":"20240201214055-k9y9k1i","updated":"20240201214055"},"Children":[{"ID":"20240201214056-n9b504d","Type":"NodeParagraph","Properties":{"id":"20240201214056-n9b504d","updated":"20240201214056"},"Children":[{"Type":"NodeText","Data":"2NF：1NF 的基础之上，消除了非主属性对于码的部分函数依赖。"}]}]},{"ID":"20240201214057-g8yfb19","Type":"NodeListItem","Data":"*","ListData":{"Tight":true,"BulletChar":42,"Padding":2,"Marker":"Kg==","Num":-1},"Properties":{"id":"20240201214057-g8yfb19","updated":"20240201214057"},"Children":[{"ID":"20240201214058-om7kd5r","Type":"NodeParagraph","Properties":{"id":"20240201214058-om7kd5r","updated":"20240201214058"},"Children":[{"Type":"NodeText","Data":"3NF：3NF 在 2NF 的基础之上，消除了非主属性对于码的传递函数依赖 。"}]}]}]},{"ID":"20240201214059-mnq2ozb","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240201214059-mnq2ozb","updated":"20240201214059"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"什么是存储过程?"}]},{"ID":"20240201214060-2a3quhf","Type":"NodeParagraph","Properties":{"id":"20240201214060-2a3quhf","updated":"20240201214060"},"Children":[{"Type":"NodeText","Data":"我们可以把存储过程看成是一些 SQL 语句的集合，中间加了点逻辑控制语句。存储过程在业务比较复杂的时候是非常实用的，比如很多时候我们完成一个操作可能需要写一大串 SQL 语句，这时候我们就可以写有一个存储过程，这样也方便了我们下一次的调用。存储过程一旦调试完成通过后就能稳定运行，另外，使用存储过程比单纯 SQL 语句执行要快，因为存储过程是预编译过的。"}]},{"ID":"20240201214061-nta5ljn","Type":"NodeParagraph","Properties":{"id":"20240201214061-nta5ljn","updated":"20240201214061"},"Children":[{"Type":"NodeText","Data":"存储过程在互联网公司应用不多，因为存储过程难以调试和扩展，而且没有移植性，还会消耗数据库资源。"}]},{"ID":"20240201214062-busymoj","Type":"NodeParagraph","Properties":{"id":"20240201214062-busymoj","updated":"20240201214062"},"Children":[{"Type":"NodeText","Data":"阿里巴巴 Java 开发手册里要求禁止使用存储过程。"}]},{"ID":"20240201214063-y37zfbg","Type":"NodeParagraph","Properties":{"id":"20240201214063-y37zfbg","updated":"20240201214063"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"阿里巴巴Java开发手册: 禁止存储过程","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"https://img-blog.csdnimg.cn/img_convert/0fa082bc4d4f919065767476a41b2156.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201214064-3yt5vjo","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240201214064-3yt5vjo","updated":"20240201214064"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"drop、delete 与 truncate 区别？"}]},{"ID":"20240201214065-dorxy47","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20240201214065-dorxy47","updated":"20240201214065"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"用法不同"}]},{"ID":"20240201214066-tmsy0fr","Type":"NodeList","ListData":{"Tight":true,"BulletChar":42,"Padding":2,"Marker":"Kg==","Num":-1},"Properties":{"id":"20240201214066-tmsy0fr","updated":"20240201214066"},"Children":[{"ID":"20240201214067-rdat0qp","Type":"NodeListItem","Data":"*","ListData":{"Tight":true,"BulletChar":42,"Padding":2,"Marker":"Kg==","Num":-1},"Properties":{"id":"20240201214067-rdat0qp","updated":"20240201214067"},"Children":[{"ID":"20240201214068-8d2fvo6","Type":"NodeParagraph","Properties":{"id":"20240201214068-8d2fvo6","updated":"20240201214068"},"Children":[{"Type":"NodeText","Data":"drop(丢弃数据): "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"drop table 表名"},{"Type":"NodeText","Data":" ，直接将表都删除掉，在删除表的时候使用。"}]}]},{"ID":"20240201214069-x7er28q","Type":"NodeListItem","Data":"*","ListData":{"Tight":true,"BulletChar":42,"Padding":2,"Marker":"Kg==","Num":-1},"Properties":{"id":"20240201214069-x7er28q","updated":"20240201214069"},"Children":[{"ID":"20240201214070-nrmgxpa","Type":"NodeParagraph","Properties":{"id":"20240201214070-nrmgxpa","updated":"20240201214070"},"Children":[{"Type":"NodeText","Data":"truncate (清空数据) : "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"truncate table 表名"},{"Type":"NodeText","Data":" ，只删除表中的数据，再插入数据的时候自增长 id 又从 1 开始，在清空表中数据的时候使用。"}]}]},{"ID":"20240201214071-5k0en1a","Type":"NodeListItem","Data":"*","ListData":{"Tight":true,"BulletChar":42,"Padding":2,"Marker":"Kg==","Num":-1},"Properties":{"id":"20240201214071-5k0en1a","updated":"20240201214071"},"Children":[{"ID":"20240201214072-2xw1b0a","Type":"NodeParagraph","Properties":{"id":"20240201214072-2xw1b0a","updated":"20240201214072"},"Children":[{"Type":"NodeText","Data":"delete（删除数据） : "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"delete from 表名 where 列名=值"},{"Type":"NodeText","Data":"，删除某一行的数据，如果不加 where 子句和"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"truncate table 表名"},{"Type":"NodeText","Data":"作用类似。"}]}]}]},{"ID":"20240201214073-aiex0sl","Type":"NodeParagraph","Properties":{"id":"20240201214073-aiex0sl","updated":"20240201214073"},"Children":[{"Type":"NodeText","Data":"truncate 和不带 where 子句的 delete、以及 drop 都会删除表内的数据，但是 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"truncate 和 delete 只删除数据不删除表的结构(定义)，执行 drop 语句，此表的结构也会删除，也就是执行 drop 之后对应的表不复存在。"}]},{"ID":"20240201214074-b6oaqz7","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20240201214074-b6oaqz7","updated":"20240201214074"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"属于不同的数据库语言"}]},{"ID":"20240201214075-4330kri","Type":"NodeParagraph","Properties":{"id":"20240201214075-4330kri","updated":"20240201214075"},"Children":[{"Type":"NodeText","Data":"truncate 和 drop 属于 DDL(数据定义语言)语句，操作立即生效，原数据不放到 rollback segment 中，不能回滚，操作不触发 trigger。而 delete 语句是 DML (数据库操作语言)语句，这个操作会放到 rollback segement 中，事务提交之后才生效。"}]},{"ID":"20240201214076-e2deri5","Type":"NodeParagraph","Properties":{"id":"20240201214076-e2deri5","updated":"20240201214076"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"DML 语句和 DDL 语句区别："}]},{"ID":"20240201214077-w4op9nz","Type":"NodeList","ListData":{"Tight":true,"BulletChar":42,"Padding":2,"Marker":"Kg==","Num":-1},"Properties":{"id":"20240201214077-w4op9nz","updated":"20240201214077"},"Children":[{"ID":"20240201214078-7yug90m","Type":"NodeListItem","Data":"*","ListData":{"Tight":true,"BulletChar":42,"Padding":2,"Marker":"Kg==","Num":-1},"Properties":{"id":"20240201214078-7yug90m","updated":"20240201214078"},"Children":[{"ID":"20240201214079-6wwsqud","Type":"NodeParagraph","Properties":{"id":"20240201214079-6wwsqud","updated":"20240201214079"},"Children":[{"Type":"NodeText","Data":"DML 是数据库操作语言（Data Manipulation Language）的缩写，是指对数据库中表记录的操作，主要包括表记录的插入（insert）、更新（update）、删除（delete）和查询（select），是开发人员日常使用最频繁的操作。"}]}]},{"ID":"20240201214080-b3ss84s","Type":"NodeListItem","Data":"*","ListData":{"Tight":true,"BulletChar":42,"Padding":2,"Marker":"Kg==","Num":-1},"Properties":{"id":"20240201214080-b3ss84s","updated":"20240201214080"},"Children":[{"ID":"20240201214081-9y8mwpo","Type":"NodeParagraph","Properties":{"id":"20240201214081-9y8mwpo","updated":"20240201214081"},"Children":[{"Type":"NodeText","Data":"DDL （Data Definition Language）是数据定义语言的缩写，简单来说，就是对数据库内部的对象进行创建、删除、修改的操作语言。它和 DML 语言的最大区别是 DML 只是对表内部数据的操作，而不涉及到表的定义、结构的修改，更不会涉及到其他对象。DDL 语句更多的被数据库管理员（DBA）所使用，一般的开发人员很少使用。"}]}]}]},{"ID":"20240201214082-525rcq9","Type":"NodeBlockquote","Properties":{"id":"20240201214082-525rcq9","updated":"20240201214082"},"Children":[{"Type":"NodeBlockquoteMarker","Data":"\u003e ","Properties":{"id":""}},{"ID":"20240201214083-oby6sma","Type":"NodeParagraph","Properties":{"id":"20240201214083-oby6sma","updated":"20240201214083"},"Children":[{"Type":"NodeText","Data":"由于"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"select"},{"Type":"NodeText","Data":"不会对表进行破坏，所以有的地方也会把"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"select"},{"Type":"NodeText","Data":"单独区分开叫做数据库查询语言DQL（Data Query Language）"}]}]},{"ID":"20240201214084-idkfyem","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20240201214084-idkfyem","updated":"20240201214084"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"执行速度不同"}]},{"ID":"20240201214085-yl2akk7","Type":"NodeParagraph","Properties":{"id":"20240201214085-yl2akk7","updated":"20240201214085"},"Children":[{"Type":"NodeText","Data":"一般来说：drop \u003e truncate \u003e delete（这个我没有设计测试过）。"}]},{"ID":"20240201214086-4rpb8co","Type":"NodeBlockquote","Properties":{"id":"20240201214086-4rpb8co","updated":"20240201214086"},"Children":[{"Type":"NodeBlockquoteMarker","Data":"\u003e ","Properties":{"id":""}},{"ID":"20240201214087-oy5a9rm","Type":"NodeParagraph","Properties":{"id":"20240201214087-oy5a9rm","updated":"20240201214087"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"delete"},{"Type":"NodeText","Data":"命令执行的时候会产生数据库的"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"binlog"},{"Type":"NodeText","Data":"日志，而日志记录是需要消耗时间的，但是也有个好处方便数据回滚恢复。"}]},{"ID":"20240201214088-o6166j7","Type":"NodeParagraph","Properties":{"id":"20240201214088-o6166j7","updated":"20240201214088"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"truncate"},{"Type":"NodeText","Data":"命令执行的时候不会产生数据库日志，因此比"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"delete"},{"Type":"NodeText","Data":"要快。除此之外，还会把表的自增值重置和索引恢复到初始大小等。"}]},{"ID":"20240201214089-r91ozqd","Type":"NodeParagraph","Properties":{"id":"20240201214089-r91ozqd","updated":"20240201214089"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"drop"},{"Type":"NodeText","Data":"命令会把表占用的空间全部释放掉。"}]},{"ID":"20240201214090-h0wk1i3","Type":"NodeParagraph","Properties":{"id":"20240201214090-h0wk1i3","updated":"20240201214090"},"Children":[{"Type":"NodeText","Data":"Tips：你应该更多地关注在使用场景上，而不是执行效率。"}]}]},{"ID":"20240201214091-8qfmdt8","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240201214091-8qfmdt8","updated":"20240201214091"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"数据库设计通常分为哪几步?"}]},{"ID":"20240201214092-bzalbni","Type":"NodeList","ListData":{"Typ":1,"Tight":true,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20240201214092-bzalbni","updated":"20240201214092"},"Children":[{"ID":"20240201214093-lynxpci","Type":"NodeListItem","Data":"1","ListData":{"Typ":1,"Tight":true,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20240201214093-lynxpci","updated":"20240201214093"},"Children":[{"ID":"20240201214094-yan3gff","Type":"NodeParagraph","Properties":{"id":"20240201214094-yan3gff","updated":"20240201214094"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"需求分析"},{"Type":"NodeText","Data":" : 分析用户的需求，包括数据、功能和性能需求。"}]}]},{"ID":"20240201214095-w1pwzo7","Type":"NodeListItem","Data":"2","ListData":{"Typ":1,"Tight":true,"Start":2,"Delimiter":46,"Padding":3,"Marker":"Mg==","Num":2},"Properties":{"id":"20240201214095-w1pwzo7","updated":"20240201214095"},"Children":[{"ID":"20240201214096-ge62pn4","Type":"NodeParagraph","Properties":{"id":"20240201214096-ge62pn4","updated":"20240201214096"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"概念结构设计"},{"Type":"NodeText","Data":" : 主要采用 E-R 模型进行设计，包括画 E-R 图。"}]}]},{"ID":"20240201214097-oafh9s7","Type":"NodeListItem","Data":"3","ListData":{"Typ":1,"Tight":true,"Start":3,"Delimiter":46,"Padding":3,"Marker":"Mw==","Num":3},"Properties":{"id":"20240201214097-oafh9s7","updated":"20240201214097"},"Children":[{"ID":"20240201214098-gp9w3td","Type":"NodeParagraph","Properties":{"id":"20240201214098-gp9w3td","updated":"20240201214098"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"逻辑结构设计"},{"Type":"NodeText","Data":" : 通过将 E-R 图转换成表，实现从 E-R 模型到关系模型的转换。"}]}]},{"ID":"20240201214099-484t2jt","Type":"NodeListItem","Data":"4","ListData":{"Typ":1,"Tight":true,"Start":4,"Delimiter":46,"Padding":3,"Marker":"NA==","Num":4},"Properties":{"id":"20240201214099-484t2jt","updated":"20240201214099"},"Children":[{"ID":"20240201214100-i3kiwhh","Type":"NodeParagraph","Properties":{"id":"20240201214100-i3kiwhh","updated":"20240201214100"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"物理结构设计"},{"Type":"NodeText","Data":" : 主要是为所设计的数据库选择合适的存储结构和存取路径。"}]}]},{"ID":"20240201214101-6irjw7t","Type":"NodeListItem","Data":"5","ListData":{"Typ":1,"Tight":true,"Start":5,"Delimiter":46,"Padding":3,"Marker":"NQ==","Num":5},"Properties":{"id":"20240201214101-6irjw7t","updated":"20240201214101"},"Children":[{"ID":"20240201214102-re223ia","Type":"NodeParagraph","Properties":{"id":"20240201214102-re223ia","updated":"20240201214102"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"数据库实施"},{"Type":"NodeText","Data":" : 包括编程、测试和试运行"}]}]},{"ID":"20240201214103-4pst4nf","Type":"NodeListItem","Data":"6","ListData":{"Typ":1,"Tight":true,"Start":6,"Delimiter":46,"Padding":3,"Marker":"Ng==","Num":6},"Properties":{"id":"20240201214103-4pst4nf","updated":"20240201214103"},"Children":[{"ID":"20240201214104-dx7gor0","Type":"NodeParagraph","Properties":{"id":"20240201214104-dx7gor0","updated":"20240201214104"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"数据库的运行和维护"},{"Type":"NodeText","Data":" : 系统的运行与数据库的日常维护。"}]}]}]}]}