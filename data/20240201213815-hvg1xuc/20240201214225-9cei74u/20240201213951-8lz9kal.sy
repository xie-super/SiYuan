{"ID":"20240201213951-8lz9kal","Spec":"1","Type":"NodeDocument","Properties":{"id":"20240201213951-8lz9kal","title":"f-2定时任务","updated":"20240201213951"},"Children":[{"ID":"20240201213952-ximnzq8","Type":"NodeThematicBreak","Properties":{"id":"20240201213952-ximnzq8","updated":"20240201213952"}},{"ID":"20240201213953-gafhbrg","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240201213953-gafhbrg","updated":"20240201213953"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"6.3 定时任务"}]},{"ID":"20240201213954-rzhs7o7","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240201213954-rzhs7o7","updated":"20240201213954"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"为什么需要定时任务？"}]},{"ID":"20240201213955-22143ud","Type":"NodeParagraph","Properties":{"id":"20240201213955-22143ud","updated":"20240201213955"},"Children":[{"Type":"NodeText","Data":"我们来看一下几个非常常见的业务场景："}]},{"ID":"20240201213956-pytiaut","Type":"NodeList","ListData":{"Typ":1,"Tight":true,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20240201213956-pytiaut","updated":"20240201213956"},"Children":[{"ID":"20240201213957-d4idg6h","Type":"NodeListItem","Data":"1","ListData":{"Typ":1,"Tight":true,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20240201213957-d4idg6h","updated":"20240201213957"},"Children":[{"ID":"20240201213958-2deiq1i","Type":"NodeParagraph","Properties":{"id":"20240201213958-2deiq1i","updated":"20240201213958"},"Children":[{"Type":"NodeText","Data":"某系统凌晨要进行数据备份。"}]}]},{"ID":"20240201213959-b92007a","Type":"NodeListItem","Data":"2","ListData":{"Typ":1,"Tight":true,"Start":2,"Delimiter":46,"Padding":3,"Marker":"Mg==","Num":2},"Properties":{"id":"20240201213959-b92007a","updated":"20240201213959"},"Children":[{"ID":"20240201213960-drlyqp4","Type":"NodeParagraph","Properties":{"id":"20240201213960-drlyqp4","updated":"20240201213960"},"Children":[{"Type":"NodeText","Data":"某电商平台，用户下单半个小时未支付的情况下需要自动取消订单。"}]}]},{"ID":"20240201213961-pjr5pl2","Type":"NodeListItem","Data":"3","ListData":{"Typ":1,"Tight":true,"Start":3,"Delimiter":46,"Padding":3,"Marker":"Mw==","Num":3},"Properties":{"id":"20240201213961-pjr5pl2","updated":"20240201213961"},"Children":[{"ID":"20240201213962-9q45mzq","Type":"NodeParagraph","Properties":{"id":"20240201213962-9q45mzq","updated":"20240201213962"},"Children":[{"Type":"NodeText","Data":"某媒体聚合平台，每 10 分钟动态抓取某某网站的数据为自己所用。"}]}]},{"ID":"20240201213963-fkwuunt","Type":"NodeListItem","Data":"4","ListData":{"Typ":1,"Tight":true,"Start":4,"Delimiter":46,"Padding":3,"Marker":"NA==","Num":4},"Properties":{"id":"20240201213963-fkwuunt","updated":"20240201213963"},"Children":[{"ID":"20240201213964-b48gles","Type":"NodeParagraph","Properties":{"id":"20240201213964-b48gles","updated":"20240201213964"},"Children":[{"Type":"NodeText","Data":"某博客平台，支持定时发送文章。"}]}]},{"ID":"20240201213965-i4p138j","Type":"NodeListItem","Data":"5","ListData":{"Typ":1,"Tight":true,"Start":5,"Delimiter":46,"Padding":3,"Marker":"NQ==","Num":5},"Properties":{"id":"20240201213965-i4p138j","updated":"20240201213965"},"Children":[{"ID":"20240201213966-0wulno7","Type":"NodeParagraph","Properties":{"id":"20240201213966-0wulno7","updated":"20240201213966"},"Children":[{"Type":"NodeText","Data":"某基金平台，每晚定时计算用户当日收益情况并推送给用户最新的数据。"}]}]},{"ID":"20240201213967-usu9wum","Type":"NodeListItem","Data":"6","ListData":{"Typ":1,"Tight":true,"Start":6,"Delimiter":46,"Padding":3,"Marker":"Ng==","Num":6},"Properties":{"id":"20240201213967-usu9wum","updated":"20240201213967"},"Children":[{"ID":"20240201213968-dg43m48","Type":"NodeParagraph","Properties":{"id":"20240201213968-dg43m48","updated":"20240201213968"},"Children":[{"Type":"NodeText","Data":"......"}]}]}]},{"ID":"20240201213969-n1oqh7y","Type":"NodeParagraph","Properties":{"id":"20240201213969-n1oqh7y","updated":"20240201213969"},"Children":[{"Type":"NodeText","Data":"这些场景往往都要求我们在某个特定的时间去做某个事情。"}]},{"ID":"20240201213970-0vgoykz","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240201213970-0vgoykz","updated":"20240201213970"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"单机定时任务技术选型有哪些？"}]},{"ID":"20240201213971-b6vclbt","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20240201213971-b6vclbt","updated":"20240201213971"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"Timer"}]},{"ID":"20240201213972-0w1wp09","Type":"NodeParagraph","Properties":{"id":"20240201213972-0w1wp09","updated":"20240201213972"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"java.util.Timer"},{"Type":"NodeText","Data":"是 JDK 1.3 开始就已经支持的一种定时任务的实现方式。"}]},{"ID":"20240201213973-ugh9ma4","Type":"NodeParagraph","Properties":{"id":"20240201213973-ugh9ma4","updated":"20240201213973"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"Timer"},{"Type":"NodeText","Data":" 内部使用一个叫做 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"TaskQueue"},{"Type":"NodeText","Data":" 的类存放定时任务，它是一个基于最小堆实现的优先级队列。"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"TaskQueue"},{"Type":"NodeText","Data":" 会按照任务距离下一次执行时间的大小将任务排序，保证在堆顶的任务最先执行。这样在需要执行任务时，每次只需要取出堆顶的任务运行即可！"}]},{"ID":"20240201213974-cb5s20j","Type":"NodeParagraph","Properties":{"id":"20240201213974-cb5s20j","updated":"20240201213974"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"Timer"},{"Type":"NodeText","Data":" 使用起来比较简单，通过下面的方式我们就能创建一个 1s 之后执行的定时任务。"}]},{"ID":"20240201213975-yorz2hx","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20240201213975-yorz2hx","updated":"20240201213975"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"// 示例代码：\nTimerTask task = new TimerTask() {\n    public void run() {\n        System.out.println(\"当前时间: \" + new Date() + \"n\" +\n                \"线程名称: \" + Thread.currentThread().getName());\n    }\n};\nSystem.out.println(\"当前时间: \" + new Date() + \"n\" +\n        \"线程名称: \" + Thread.currentThread().getName());\nTimer timer = new Timer(\"Timer\");\nlong delay = 1000L;\ntimer.schedule(task, delay);\n\n\n//输出：\n当前时间: Fri May 28 15:18:47 CST 2021n线程名称: main\n当前时间: Fri May 28 15:18:48 CST 2021n线程名称: Timer\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20240201213976-6agfobd","Type":"NodeParagraph","Properties":{"id":"20240201213976-6agfobd","updated":"20240201213976"},"Children":[{"Type":"NodeText","Data":"不过其缺陷较多，比如一个 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"Timer"},{"Type":"NodeText","Data":" 一个线程，这就导致 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"Timer"},{"Type":"NodeText","Data":" 的任务的执行只能串行执行，一个任务执行时间过长的话会影响其他任务（性能非常差），再比如发生异常时任务直接停止（"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"Timer"},{"Type":"NodeText","Data":" 只捕获了 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"InterruptedException"},{"Type":"NodeText","Data":" ）。"}]},{"ID":"20240201213977-dczazh7","Type":"NodeParagraph","Properties":{"id":"20240201213977-dczazh7","updated":"20240201213977"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"Timer"},{"Type":"NodeText","Data":" 类上的有一段注释是这样写的："}]},{"ID":"20240201213978-kpaaeiw","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"SkFWQQ==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20240201213978-kpaaeiw","updated":"20240201213978"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"SkFWQQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":" * This class does not offer real-time guarantees: it schedules\n * tasks using the \u003ctt\u003eObject.wait(long)\u003c/tt\u003e method.\n *Java 5.0 introduced the {@code java.util.concurrent} package and\n * one of the concurrency utilities therein is the {@link\n * java.util.concurrent.ScheduledThreadPoolExecutor\n * ScheduledThreadPoolExecutor} which is a thread pool for repeatedly\n * executing tasks at a given rate or delay.  It is effectively a more\n * versatile replacement for the {@code Timer}/{@code TimerTask}\n * combination, as it allows multiple service threads, accepts various\n * time units, and doesn't require subclassing {@code TimerTask} (just\n * implement {@code Runnable}).  Configuring {@code\n * ScheduledThreadPoolExecutor} with one thread makes it equivalent to\n * {@code Timer}.\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20240201213979-wqk4uym","Type":"NodeParagraph","Properties":{"id":"20240201213979-wqk4uym","updated":"20240201213979"},"Children":[{"Type":"NodeText","Data":"大概的意思就是： "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"ScheduledThreadPoolExecutor"},{"Type":"NodeText","Data":" 支持多线程执行定时任务并且功能更强大，是 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"Timer"},{"Type":"NodeText","Data":" 的替代品。"}]},{"ID":"20240201213980-a5q0rqt","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20240201213980-a5q0rqt","updated":"20240201213980"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"ScheduledExecutorService"}]},{"ID":"20240201213981-amtfw98","Type":"NodeParagraph","Properties":{"id":"20240201213981-amtfw98","updated":"20240201213981"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"ScheduledExecutorService"},{"Type":"NodeText","Data":" 是一个接口，有多个实现类，比较常用的是 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"ScheduledThreadPoolExecutor"},{"Type":"NodeText","Data":" 。"}]},{"ID":"20240201213982-t93doux","Type":"NodeParagraph","Properties":{"id":"20240201213982-t93doux","updated":"20240201213982"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"https://guide-blog-images.oss-cn-shenzhen.aliyuncs.com/javaguide/20210607154324712.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201213983-nis0o1p","Type":"NodeParagraph","Properties":{"id":"20240201213983-nis0o1p","updated":"20240201213983"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"ScheduledThreadPoolExecutor"},{"Type":"NodeText","Data":" 本身就是一个线程池，支持任务并发执行。并且，其内部使用 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"DelayQueue"},{"Type":"NodeText","Data":" 作为任务队列。"}]},{"ID":"20240201213984-e3jcm94","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20240201213984-e3jcm94","updated":"20240201213984"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"// 示例代码：\nTimerTask repeatedTask = new TimerTask() {\n    @SneakyThrows\n    public void run() {\n        System.out.println(\"当前时间: \" + new Date() + \"n\" +\n                \"线程名称: \" + Thread.currentThread().getName());\n    }\n};\nSystem.out.println(\"当前时间: \" + new Date() + \"n\" +\n        \"线程名称: \" + Thread.currentThread().getName());\nScheduledExecutorService executor = Executors.newScheduledThreadPool(3);\nlong delay  = 1000L;\nlong period = 1000L;\nexecutor.scheduleAtFixedRate(repeatedTask, delay, period, TimeUnit.MILLISECONDS);\nThread.sleep(delay + period * 5);\nexecutor.shutdown();\n//输出：\n当前时间: Fri May 28 15:40:46 CST 2021n线程名称: main\n当前时间: Fri May 28 15:40:47 CST 2021n线程名称: pool-1-thread-1\n当前时间: Fri May 28 15:40:48 CST 2021n线程名称: pool-1-thread-1\n当前时间: Fri May 28 15:40:49 CST 2021n线程名称: pool-1-thread-2\n当前时间: Fri May 28 15:40:50 CST 2021n线程名称: pool-1-thread-2\n当前时间: Fri May 28 15:40:51 CST 2021n线程名称: pool-1-thread-2\n当前时间: Fri May 28 15:40:52 CST 2021n线程名称: pool-1-thread-2\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20240201213985-fqao9ov","Type":"NodeParagraph","Properties":{"id":"20240201213985-fqao9ov","updated":"20240201213985"},"Children":[{"Type":"NodeText","Data":"不论是使用 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"Timer"},{"Type":"NodeText","Data":" 还是 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"ScheduledExecutorService"},{"Type":"NodeText","Data":" 都无法使用 Cron 表达式指定任务执行的具体时间。"}]},{"ID":"20240201213986-bem6y36","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20240201213986-bem6y36","updated":"20240201213986"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"Spring Task"}]},{"ID":"20240201213987-l3ofeti","Type":"NodeParagraph","Properties":{"id":"20240201213987-l3ofeti","updated":"20240201213987"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"https://img-blog.csdnimg.cn/20210528145056880.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201213988-uhsji8n","Type":"NodeParagraph","Properties":{"id":"20240201213988-uhsji8n","updated":"20240201213988"},"Children":[{"Type":"NodeText","Data":"我们直接通过 Spring 提供的 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"@Scheduled"},{"Type":"NodeText","Data":" 注解即可定义定时任务，非常方便！"}]},{"ID":"20240201213989-mvi8xco","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20240201213989-mvi8xco","updated":"20240201213989"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"/**\n * cron：使用Cron表达式。　每分钟的1，2秒运行\n */\n@Scheduled(cron = \"1-2 * * * * ? \")\npublic void reportCurrentTimeWithCronExpression() {\n  log.info(\"Cron Expression: The time is now {}\", dateFormat.format(new Date()));\n}\n\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20240201213990-u8v20m9","Type":"NodeParagraph","Properties":{"id":"20240201213990-u8v20m9","updated":"20240201213990"},"Children":[{"Type":"NodeText","Data":"我在大学那会做的一个 SSM 的企业级项目，就是用的 Spring Task 来做的定时任务。"}]},{"ID":"20240201213991-7y1ugkd","Type":"NodeParagraph","Properties":{"id":"20240201213991-7y1ugkd","updated":"20240201213991"},"Children":[{"Type":"NodeText","Data":"并且，Spring Task 还是支持 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"Cron 表达式"},{"Type":"NodeText","Data":" 的。Cron 表达式主要用于定时作业(定时任务)系统定义执行时间或执行频率的表达式，非常厉害，你可以通过 Cron 表达式进行设置定时任务每天或者每个月什么时候执行等等操作。咱们要学习定时任务的话，Cron 表达式是一定是要重点关注的。推荐一个在线 Cron 表达式生成器："},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"http://cron.qqe2.com/","TextMarkTextContent":"http://cron.qqe2.com/"},{"Type":"NodeText","Data":" 。"}]},{"ID":"20240201213992-4vyfnbx","Type":"NodeParagraph","Properties":{"id":"20240201213992-4vyfnbx","updated":"20240201213992"},"Children":[{"Type":"NodeText","Data":"但是，Spring 自带的定时调度只支持单机，并且提供的功能比较单一。之前写过一篇文章:"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://mp.weixin.qq.com/s?__biz=Mzg2OTA0Njk0OA==\u0026mid=2247485563\u0026idx=1\u0026sn=7419341f04036a10b141b74624a3f8c9\u0026chksm=cea247b0f9d5cea6440759e6d49b4e77d06f4c99470243a10c1463834e873ca90266413fbc92\u0026token=2133161636\u0026lang=zh_CN#rd","TextMarkTextContent":"《5 分钟搞懂如何在 Spring Boot 中 Schedule Tasks》"},{"Type":"NodeText","Data":" ，不了解的小伙伴可以参考一下。"}]},{"ID":"20240201213993-ribufzi","Type":"NodeParagraph","Properties":{"id":"20240201213993-ribufzi","updated":"20240201213993"},"Children":[{"Type":"NodeText","Data":"Spring Task 底层是基于 JDK 的 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"ScheduledThreadPoolExecutor"},{"Type":"NodeText","Data":" 线程池来实现的。"}]},{"ID":"20240201213994-p99k3d0","Type":"NodeParagraph","Properties":{"id":"20240201213994-p99k3d0","updated":"20240201213994"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"优缺点总结："}]},{"ID":"20240201213995-zo5fb3q","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213995-zo5fb3q","updated":"20240201213995"},"Children":[{"ID":"20240201213996-m8sq5nb","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213996-m8sq5nb","updated":"20240201213996"},"Children":[{"ID":"20240201213997-tp16kzs","Type":"NodeParagraph","Properties":{"id":"20240201213997-tp16kzs","updated":"20240201213997"},"Children":[{"Type":"NodeText","Data":"优点： 简单，轻量，支持 Cron 表达式"}]}]},{"ID":"20240201213998-um19pu6","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201213998-um19pu6","updated":"20240201213998"},"Children":[{"ID":"20240201213999-xdjfxal","Type":"NodeParagraph","Properties":{"id":"20240201213999-xdjfxal","updated":"20240201213999"},"Children":[{"Type":"NodeText","Data":"缺点 ：功能单一"}]}]}]},{"ID":"20240201214000-ukhlouu","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20240201214000-ukhlouu","updated":"20240201214000"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"时间轮"}]},{"ID":"20240201214001-i74jszx","Type":"NodeParagraph","Properties":{"id":"20240201214001-i74jszx","updated":"20240201214001"},"Children":[{"Type":"NodeText","Data":"Kafka、Dubbo、ZooKeeper、Netty 、Caffeine 、Akka 中都有对时间轮的实现。"}]},{"ID":"20240201214002-1rzmq7j","Type":"NodeParagraph","Properties":{"id":"20240201214002-1rzmq7j","updated":"20240201214002"},"Children":[{"Type":"NodeText","Data":"时间轮简单来说就是一个环形的队列（底层一般基于数组实现），队列中的每一个元素（时间格）都可以存放一个定时任务列表。"}]},{"ID":"20240201214003-w1arpjp","Type":"NodeParagraph","Properties":{"id":"20240201214003-w1arpjp","updated":"20240201214003"},"Children":[{"Type":"NodeText","Data":"时间轮中的每个时间格代表了时间轮的基本时间跨度或者说时间精度，加入时间一秒走一个时间格的话，那么这个时间轮的最高精度就是 1 秒（也就是说 3 s 和 3.9s 会在同一个时间格中）。"}]},{"ID":"20240201214004-2lnouwo","Type":"NodeParagraph","Properties":{"id":"20240201214004-2lnouwo","updated":"20240201214004"},"Children":[{"Type":"NodeText","Data":"下图是一个有 12 个时间格的时间轮，转完一圈需要 12 s。当我们需要新建一个 3s 后执行的定时任务，只需要将定时任务放在下标为 3 的时间格中即可。当我们需要新建一个 9s 后执行的定时任务，只需要将定时任务放在下标为 9 的时间格中即可。"}]},{"ID":"20240201214005-p7mdfms","Type":"NodeParagraph","Properties":{"id":"20240201214005-p7mdfms","updated":"20240201214005"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"https://guide-blog-images.oss-cn-shenzhen.aliyuncs.com/javaguide/20210607171334861.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201214006-64x8t09","Type":"NodeParagraph","Properties":{"id":"20240201214006-64x8t09","updated":"20240201214006"},"Children":[{"Type":"NodeText","Data":"那当我们需要创建一个 13s 后执行的定时任务怎么办呢？这个时候可以引入一叫做 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"圈数/轮数"},{"Type":"NodeText","Data":" 的概念，也就是说这个任务还是放在下标为 3 的时间格中， 不过它的圈数为 2 。"}]},{"ID":"20240201214007-zng57k5","Type":"NodeParagraph","Properties":{"id":"20240201214007-zng57k5","updated":"20240201214007"},"Children":[{"Type":"NodeText","Data":"除了增加圈数这种方法之外，还有一种 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"多层次时间轮"},{"Type":"NodeText","Data":" （类似手表），Kafka 采用的就是这种方案。"}]},{"ID":"20240201214008-zsqqfaf","Type":"NodeParagraph","Properties":{"id":"20240201214008-zsqqfaf","updated":"20240201214008"},"Children":[{"Type":"NodeText","Data":"针对下图的时间轮，我来举一个例子便于大家理解。"}]},{"ID":"20240201214009-rtvaobr","Type":"NodeParagraph","Properties":{"id":"20240201214009-rtvaobr","updated":"20240201214009"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"https://guide-blog-images.oss-cn-shenzhen.aliyuncs.com/javaguide/20210607193042151.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201214010-g82aajm","Type":"NodeParagraph","Properties":{"id":"20240201214010-g82aajm","updated":"20240201214010"},"Children":[{"Type":"NodeText","Data":"上图的时间轮，第 1 层的时间精度为 1 ，第 2 层的时间精度为 20 ，第 3 层的时间精度为 400。假如我们需要添加一个 350s 后执行的任务 A 的话（当前时间是 0s），这个任务会被放在第 2 层（因为第二层的时间跨度为 20"},{"Type":"NodeBackslash","Properties":{"id":""},"Children":[{"Type":"NodeBackslashContent","Data":"*","Properties":{"id":""}}]},{"Type":"NodeText","Data":"20=400\u003e350）的第 350/20=17 个时间格子。"}]},{"ID":"20240201214011-6eend1k","Type":"NodeParagraph","Properties":{"id":"20240201214011-6eend1k","updated":"20240201214011"},"Children":[{"Type":"NodeText","Data":"当第一层转了 17 圈之后，时间过去了 340s ，第 2 层的指针此时来到第 17 个时间格子。此时，第 2 层第 17 个格子的任务会被移动到第 1 层。"}]},{"ID":"20240201214012-cwa7y4l","Type":"NodeParagraph","Properties":{"id":"20240201214012-cwa7y4l","updated":"20240201214012"},"Children":[{"Type":"NodeText","Data":"任务 A 当前是 10s 之后执行，因此它会被移动到第 1 层的第 10 个时间格子。"}]},{"ID":"20240201214013-bviom1f","Type":"NodeParagraph","Properties":{"id":"20240201214013-bviom1f","updated":"20240201214013"},"Children":[{"Type":"NodeText","Data":"这里在层与层之间的移动也叫做时间轮的升降级。参考手表来理解就好！"}]},{"ID":"20240201214014-9spccus","Type":"NodeParagraph","Properties":{"id":"20240201214014-9spccus","updated":"20240201214014"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"https://img-blog.csdnimg.cn/20210607195206797.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201214015-3cs4dsc","Type":"NodeParagraph","Properties":{"id":"20240201214015-3cs4dsc","updated":"20240201214015"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"时间轮比较适合任务数量比较多的定时任务场景，它的任务写入和执行的时间复杂度都是 0（1）。"}]},{"ID":"20240201214016-dbjh0iu","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240201214016-dbjh0iu","updated":"20240201214016"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"分布式定时任务技术选型有哪些？"}]},{"ID":"20240201214017-4jph6fw","Type":"NodeParagraph","Properties":{"id":"20240201214017-4jph6fw","updated":"20240201214017"},"Children":[{"Type":"NodeText","Data":"上面提到的一些定时任务的解决方案都是在单机下执行的，适用于比较简单的定时任务场景比如每天凌晨备份一次数据。"}]},{"ID":"20240201214018-uika1nx","Type":"NodeParagraph","Properties":{"id":"20240201214018-uika1nx","updated":"20240201214018"},"Children":[{"Type":"NodeText","Data":"如果我们需要一些高级特性比如支持任务在分布式场景下的分片和高可用的话，我们就需要用到分布式任务调度框架了。"}]},{"ID":"20240201214019-lx35pc8","Type":"NodeParagraph","Properties":{"id":"20240201214019-lx35pc8","updated":"20240201214019"},"Children":[{"Type":"NodeText","Data":"通常情况下，一个定时任务的执行往往涉及到下面这些角色："}]},{"ID":"20240201214020-kjefm4y","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201214020-kjefm4y","updated":"20240201214020"},"Children":[{"ID":"20240201214021-1v0w8dt","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201214021-1v0w8dt","updated":"20240201214021"},"Children":[{"ID":"20240201214022-hzkx14h","Type":"NodeParagraph","Properties":{"id":"20240201214022-hzkx14h","updated":"20240201214022"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"任务"},{"Type":"NodeText","Data":" ： 首先肯定是要执行的任务，这个任务就是具体的业务逻辑比如定时发送文章。"}]}]},{"ID":"20240201214023-fgdasfj","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201214023-fgdasfj","updated":"20240201214023"},"Children":[{"ID":"20240201214024-lazdv67","Type":"NodeParagraph","Properties":{"id":"20240201214024-lazdv67","updated":"20240201214024"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"调度器"},{"Type":"NodeText","Data":" ：其次是调度中心，调度中心主要负责任务管理，会分配任务给执行器。"}]}]},{"ID":"20240201214025-f3iglah","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201214025-f3iglah","updated":"20240201214025"},"Children":[{"ID":"20240201214026-10zxyke","Type":"NodeParagraph","Properties":{"id":"20240201214026-10zxyke","updated":"20240201214026"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"执行器"},{"Type":"NodeText","Data":" ： 最后就是执行器，执行器接收调度器分派的任务并执行。"}]}]}]},{"ID":"20240201214027-2re52ke","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20240201214027-2re52ke","updated":"20240201214027"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"Quartz"}]},{"ID":"20240201214028-v6fm2ep","Type":"NodeParagraph","Properties":{"id":"20240201214028-v6fm2ep","updated":"20240201214028"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"https://img-blog.csdnimg.cn/2021052814502425.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201214029-gzm21j1","Type":"NodeParagraph","Properties":{"id":"20240201214029-gzm21j1","updated":"20240201214029"},"Children":[{"Type":"NodeText","Data":"一个很火的开源任务调度框架，完全由"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"Java"},{"Type":"NodeText","Data":"写成。"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"Quartz"},{"Type":"NodeText","Data":" 可以说是 Java 定时任务领域的老大哥或者说参考标准，其他的任务调度框架基本都是基于 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"Quartz"},{"Type":"NodeText","Data":" 开发的，比如当当网的"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"elastic-job"},{"Type":"NodeText","Data":"就是基于"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"quartz"},{"Type":"NodeText","Data":"二次开发之后的分布式调度解决方案。"}]},{"ID":"20240201214030-7l7u942","Type":"NodeParagraph","Properties":{"id":"20240201214030-7l7u942","updated":"20240201214030"},"Children":[{"Type":"NodeText","Data":"使用 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"Quartz"},{"Type":"NodeText","Data":" 可以很方便地与 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"Spring"},{"Type":"NodeText","Data":" 集成，并且支持动态添加任务和集群。但是，"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"Quartz"},{"Type":"NodeText","Data":" 使用起来也比较麻烦，API 繁琐。"}]},{"ID":"20240201214031-h5yzp0w","Type":"NodeParagraph","Properties":{"id":"20240201214031-h5yzp0w","updated":"20240201214031"},"Children":[{"Type":"NodeText","Data":"并且，"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"Quzrtz"},{"Type":"NodeText","Data":" 并没有内置 UI 管理控制台，不过你可以使用 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/zhaopeiym/quartzui","TextMarkTextContent":"quartzui"},{"Type":"NodeText","Data":" 这个开源项目来解决这个问题。"}]},{"ID":"20240201214032-4y97dht","Type":"NodeParagraph","Properties":{"id":"20240201214032-4y97dht","updated":"20240201214032"},"Children":[{"Type":"NodeText","Data":"另外，"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"Quartz"},{"Type":"NodeText","Data":" 虽然也支持分布式任务。但是，它是在数据库层面，通过数据库的锁机制做的，有非常多的弊端比如系统侵入性严重、节点负载不均衡。有点伪分布式的味道。"}]},{"ID":"20240201214033-rjqsk2a","Type":"NodeParagraph","Properties":{"id":"20240201214033-rjqsk2a","updated":"20240201214033"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"优缺点总结："}]},{"ID":"20240201214034-xyg5ctx","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201214034-xyg5ctx","updated":"20240201214034"},"Children":[{"ID":"20240201214035-lcce2qc","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201214035-lcce2qc","updated":"20240201214035"},"Children":[{"ID":"20240201214036-dtry2yx","Type":"NodeParagraph","Properties":{"id":"20240201214036-dtry2yx","updated":"20240201214036"},"Children":[{"Type":"NodeText","Data":"优点： 可以与 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"Spring"},{"Type":"NodeText","Data":" 集成，并且支持动态添加任务和集群。"}]}]},{"ID":"20240201214037-mem6z8y","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201214037-mem6z8y","updated":"20240201214037"},"Children":[{"ID":"20240201214038-msuw8dt","Type":"NodeParagraph","Properties":{"id":"20240201214038-msuw8dt","updated":"20240201214038"},"Children":[{"Type":"NodeText","Data":"缺点 ：分布式支持不友好，没有内置 UI 管理控制台、使用麻烦（相比于其他同类型框架来说）"}]}]}]},{"ID":"20240201214039-6dningb","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20240201214039-6dningb","updated":"20240201214039"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"Elastic-Job"}]},{"ID":"20240201214040-4flgyg3","Type":"NodeParagraph","Properties":{"id":"20240201214040-4flgyg3","updated":"20240201214040"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"https://img-blog.csdnimg.cn/20210528144508114.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201214041-p9w030r","Type":"NodeParagraph","Properties":{"id":"20240201214041-p9w030r","updated":"20240201214041"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"Elastic-Job"},{"Type":"NodeText","Data":" 是当当网开源的一个基于"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"Quartz"},{"Type":"NodeText","Data":"和"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"ZooKeeper"},{"Type":"NodeText","Data":"的分布式调度解决方案，由两个相互独立的子项目 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"Elastic-Job-Lite"},{"Type":"NodeText","Data":" 和 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"Elastic-Job-Cloud"},{"Type":"NodeText","Data":" 组成，一般我们只要使用 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"Elastic-Job-Lite"},{"Type":"NodeText","Data":" 就好。"}]},{"ID":"20240201214042-4wjs8ed","Type":"NodeParagraph","Properties":{"id":"20240201214042-4wjs8ed","updated":"20240201214042"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"ElasticJob"},{"Type":"NodeText","Data":" 支持任务在分布式场景下的分片和高可用、任务可视化管理等功能。"}]},{"ID":"20240201214043-manodgy","Type":"NodeParagraph","Properties":{"id":"20240201214043-manodgy","updated":"20240201214043"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"https://img-blog.csdnimg.cn/20210608080437356.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201214044-dbspmub","Type":"NodeParagraph","Properties":{"id":"20240201214044-dbspmub","updated":"20240201214044"},"Children":[{"Type":"NodeText","Data":"ElasticJob-Lite 的架构设计如下图所示："}]},{"ID":"20240201214045-qsuf1ip","Type":"NodeParagraph","Properties":{"id":"20240201214045-qsuf1ip","updated":"20240201214045"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"https://oscimg.oschina.net/oscnet/up-a8f63f828666d43009d5d3497bcbd2cfb61.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201214046-8en284n","Type":"NodeParagraph","Properties":{"id":"20240201214046-8en284n","updated":"20240201214046"},"Children":[{"Type":"NodeText","Data":"从上图可以看出，"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"Elastic-Job"},{"Type":"NodeText","Data":" 没有调度中心这一概念，而是使用 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"ZooKeeper"},{"Type":"NodeText","Data":" 作为注册中心，注册中心负责协调分配任务到不同的节点上。"}]},{"ID":"20240201214047-qw6mp55","Type":"NodeParagraph","Properties":{"id":"20240201214047-qw6mp55","updated":"20240201214047"},"Children":[{"Type":"NodeText","Data":"Elastic-Job 中的定时调度都是由执行器自行触发，这种设计也被称为去中心化设计（调度和处理都是执行器单独完成）。"}]},{"ID":"20240201214048-p5blgr8","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20240201214048-p5blgr8","updated":"20240201214048"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"@Component\n@ElasticJobConf(name = \"dayJob\", cron = \"0/10 * * * * ?\", shardingTotalCount = 2,\n        shardingItemParameters = \"0=AAAA,1=BBBB\", description = \"简单任务\", failover = true)\npublic class TestJob implements SimpleJob {\n    @Override\n    public void execute(ShardingContext shardingContext) {\n        log.info(\"TestJob任务名：【{}】, 片数：【{}】, param=【{}】\", shardingContext.getJobName(), shardingContext.getShardingTotalCount(),\n                shardingContext.getShardingParameter());\n    }\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20240201214049-rjufr4w","Type":"NodeParagraph","Properties":{"id":"20240201214049-rjufr4w","updated":"20240201214049"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"相关地址："}]},{"ID":"20240201214050-8yehcju","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201214050-8yehcju","updated":"20240201214050"},"Children":[{"ID":"20240201214051-bjmbhsw","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201214051-bjmbhsw","updated":"20240201214051"},"Children":[{"ID":"20240201214052-r3rmcrh","Type":"NodeParagraph","Properties":{"id":"20240201214052-r3rmcrh","updated":"20240201214052"},"Children":[{"Type":"NodeText","Data":"Github 地址：https://github.com/apache/shardingsphere-elasticjob。"}]}]},{"ID":"20240201214053-tjiqaua","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201214053-tjiqaua","updated":"20240201214053"},"Children":[{"ID":"20240201214054-nruo6cz","Type":"NodeParagraph","Properties":{"id":"20240201214054-nruo6cz","updated":"20240201214054"},"Children":[{"Type":"NodeText","Data":"官方网站：https://shardingsphere.apache.org/elasticjob/index_zh.html 。"}]}]}]},{"ID":"20240201214055-8lbszcm","Type":"NodeParagraph","Properties":{"id":"20240201214055-8lbszcm","updated":"20240201214055"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"优缺点总结："}]},{"ID":"20240201214056-zfwvumy","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201214056-zfwvumy","updated":"20240201214056"},"Children":[{"ID":"20240201214057-hc9k7p9","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201214057-hc9k7p9","updated":"20240201214057"},"Children":[{"ID":"20240201214058-7fvmo2v","Type":"NodeParagraph","Properties":{"id":"20240201214058-7fvmo2v","updated":"20240201214058"},"Children":[{"Type":"NodeText","Data":"优点 ：可以与 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"Spring"},{"Type":"NodeText","Data":" 集成、支持分布式、支持集群、性能不错"}]}]},{"ID":"20240201214059-sltm2ol","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201214059-sltm2ol","updated":"20240201214059"},"Children":[{"ID":"20240201214060-8asx2gu","Type":"NodeParagraph","Properties":{"id":"20240201214060-8asx2gu","updated":"20240201214060"},"Children":[{"Type":"NodeText","Data":"缺点 ：依赖了额外的中间件比如 Zookeeper（复杂度增加，可靠性降低、维护成本变高）"}]}]}]},{"ID":"20240201214061-did3r9v","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20240201214061-did3r9v","updated":"20240201214061"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"XXL-JOB"}]},{"ID":"20240201214062-x56ifbk","Type":"NodeParagraph","Properties":{"id":"20240201214062-x56ifbk","updated":"20240201214062"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"https://img-blog.csdnimg.cn/20210528144611728.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201214063-sfeez9q","Type":"NodeParagraph","Properties":{"id":"20240201214063-sfeez9q","updated":"20240201214063"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"XXL-JOB"},{"Type":"NodeText","Data":" 于 2015 年开源，是一款优秀的轻量级分布式任务调度框架，支持任务可视化管理、弹性扩容缩容、任务失败重试和告警、任务分片等功能，"}]},{"ID":"20240201214064-kk73ykd","Type":"NodeParagraph","Properties":{"id":"20240201214064-kk73ykd","updated":"20240201214064"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"https://img-blog.csdnimg.cn/20210608080550433.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201214065-2g3517b","Type":"NodeParagraph","Properties":{"id":"20240201214065-2g3517b","updated":"20240201214065"},"Children":[{"Type":"NodeText","Data":"根据 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"XXL-JOB"},{"Type":"NodeText","Data":" 官网介绍，其解决了很多 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"Quartz"},{"Type":"NodeText","Data":" 的不足。"}]},{"ID":"20240201214066-d1ytvlp","Type":"NodeParagraph","Properties":{"id":"20240201214066-d1ytvlp","updated":"20240201214066"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"https://img-blog.csdnimg.cn/20210607202503193.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201214067-bdxilu1","Type":"NodeParagraph","Properties":{"id":"20240201214067-bdxilu1","updated":"20240201214067"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"XXL-JOB"},{"Type":"NodeText","Data":" 的架构设计如下图所示："}]},{"ID":"20240201214068-gk81z30","Type":"NodeParagraph","Properties":{"id":"20240201214068-gk81z30","updated":"20240201214068"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"https://oscimg.oschina.net/oscnet/up-b8ecc6acf651f112c4dfae98243d72adea3.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201214069-gomuxxa","Type":"NodeParagraph","Properties":{"id":"20240201214069-gomuxxa","updated":"20240201214069"},"Children":[{"Type":"NodeText","Data":"从上图可以看出，"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"XXL-JOB"},{"Type":"NodeText","Data":" 由 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"调度中心"},{"Type":"NodeText","Data":" 和 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"执行器"},{"Type":"NodeText","Data":" 两大部分组成。调度中心主要负责任务管理、执行器管理以及日志管理。执行器主要是接收调度信号并处理。另外，调度中心进行任务调度时，是通过自研 RPC 来实现的。"}]},{"ID":"20240201214070-fvcr555","Type":"NodeParagraph","Properties":{"id":"20240201214070-fvcr555","updated":"20240201214070"},"Children":[{"Type":"NodeText","Data":"不同于 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"Elastic-Job"},{"Type":"NodeText","Data":" 的去中心化设计， "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"XXL-JOB"},{"Type":"NodeText","Data":" 的这种设计也被称为中心化设计（调度中心调度多个执行器执行任务）。"}]},{"ID":"20240201214071-u0m6nna","Type":"NodeParagraph","Properties":{"id":"20240201214071-u0m6nna","updated":"20240201214071"},"Children":[{"Type":"NodeText","Data":"和 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"Quzrtz"},{"Type":"NodeText","Data":" 类似 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"XXL-JOB"},{"Type":"NodeText","Data":" 也是基于数据库锁调度任务，存在性能瓶颈。不过，一般在任务量不是特别大的情况下，没有什么影响的，可以满足绝大部分公司的要求。"}]},{"ID":"20240201214072-rdp7lje","Type":"NodeParagraph","Properties":{"id":"20240201214072-rdp7lje","updated":"20240201214072"},"Children":[{"Type":"NodeText","Data":"不要被 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"XXL-JOB"},{"Type":"NodeText","Data":" 的架构图给吓着了，实际上，我们要用 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"XXL-JOB"},{"Type":"NodeText","Data":" 的话，只需要重写 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"IJobHandler"},{"Type":"NodeText","Data":" 自定义任务执行逻辑就可以了，非常易用！"}]},{"ID":"20240201214073-9v5z8lq","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20240201214073-9v5z8lq","updated":"20240201214073"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"@JobHandler(value=\"myApiJobHandler\")\n@Component\npublic class MyApiJobHandler extends IJobHandler {\n\n    @Override\n    public ReturnT\u003cString\u003e execute(String param) throws Exception {\n        //......\n        return ReturnT.SUCCESS;\n    }\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20240201214074-gxhxqbk","Type":"NodeParagraph","Properties":{"id":"20240201214074-gxhxqbk","updated":"20240201214074"},"Children":[{"Type":"NodeText","Data":"还可以直接基于注解定义任务。"}]},{"ID":"20240201214075-bizxgrz","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20240201214075-bizxgrz","updated":"20240201214075"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"@XxlJob(\"myAnnotationJobHandler\")\npublic ReturnT\u003cString\u003e myAnnotationJobHandler(String param) throws Exception {\n  //......\n  return ReturnT.SUCCESS;\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20240201214076-bca8utx","Type":"NodeParagraph","Properties":{"id":"20240201214076-bca8utx","updated":"20240201214076"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"https://img-blog.csdnimg.cn/20210607200728212.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201214077-801o8qy","Type":"NodeParagraph","Properties":{"id":"20240201214077-801o8qy","updated":"20240201214077"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"相关地址："}]},{"ID":"20240201214078-yets6bx","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201214078-yets6bx","updated":"20240201214078"},"Children":[{"ID":"20240201214079-80yx2yc","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201214079-80yx2yc","updated":"20240201214079"},"Children":[{"ID":"20240201214080-qui6swr","Type":"NodeParagraph","Properties":{"id":"20240201214080-qui6swr","updated":"20240201214080"},"Children":[{"Type":"NodeText","Data":"Github 地址：https://github.com/xuxueli/xxl-job/。"}]}]},{"ID":"20240201214081-3ncvz38","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201214081-3ncvz38","updated":"20240201214081"},"Children":[{"ID":"20240201214082-xv5ha8x","Type":"NodeParagraph","Properties":{"id":"20240201214082-xv5ha8x","updated":"20240201214082"},"Children":[{"Type":"NodeText","Data":"官方介绍：https://www.xuxueli.com/xxl-job/ 。"}]}]}]},{"ID":"20240201214083-c8434eq","Type":"NodeParagraph","Properties":{"id":"20240201214083-c8434eq","updated":"20240201214083"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"优缺点总结："}]},{"ID":"20240201214084-hpk402i","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201214084-hpk402i","updated":"20240201214084"},"Children":[{"ID":"20240201214085-zt225r6","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201214085-zt225r6","updated":"20240201214085"},"Children":[{"ID":"20240201214086-029mgpg","Type":"NodeParagraph","Properties":{"id":"20240201214086-029mgpg","updated":"20240201214086"},"Children":[{"Type":"NodeText","Data":"优点：开箱即用（学习成本比较低）、与 Spring 集成、支持分布式、支持集群、内置了 UI 管理控制台。"}]}]},{"ID":"20240201214087-cw651zm","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201214087-cw651zm","updated":"20240201214087"},"Children":[{"ID":"20240201214088-1sc5vcd","Type":"NodeParagraph","Properties":{"id":"20240201214088-1sc5vcd","updated":"20240201214088"},"Children":[{"Type":"NodeText","Data":"缺点：不支持动态添加任务（如果一定想要动态创建任务也是支持的，参见："},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://github.com/xuxueli/xxl-job/issues/277","TextMarkTextContent":"xxl-job issue277"},{"Type":"NodeText","Data":"）。"}]}]}]},{"ID":"20240201214089-yrvvlm2","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20240201214089-yrvvlm2","updated":"20240201214089"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"PowerJob"}]},{"ID":"20240201214090-rh10w1n","Type":"NodeParagraph","Properties":{"id":"20240201214090-rh10w1n","updated":"20240201214090"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"https://img-blog.csdnimg.cn/20210528145009701.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201214091-khbp66v","Type":"NodeParagraph","Properties":{"id":"20240201214091-khbp66v","updated":"20240201214091"},"Children":[{"Type":"NodeText","Data":"非常值得关注的一个分布式任务调度框架，分布式任务调度领域的新星。目前，已经有很多公司接入比如 OPPO、京东、中通、思科。"}]},{"ID":"20240201214092-6m4js6k","Type":"NodeParagraph","Properties":{"id":"20240201214092-6m4js6k","updated":"20240201214092"},"Children":[{"Type":"NodeText","Data":"这个框架的诞生也挺有意思的，PowerJob 的作者当时在阿里巴巴实习过，阿里巴巴那会使用的是内部自研的 SchedulerX（阿里云付费产品）。实习期满之后，PowerJob 的作者离开了阿里巴巴。想着说自研一个 SchedulerX，防止哪天 SchedulerX 满足不了需求，于是 PowerJob 就诞生了。"}]},{"ID":"20240201214093-rqdvl1c","Type":"NodeParagraph","Properties":{"id":"20240201214093-rqdvl1c","updated":"20240201214093"},"Children":[{"Type":"NodeText","Data":"更多关于 PowerJob 的故事，小伙伴们可以去看看 PowerJob 作者的视频 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://www.bilibili.com/video/BV1SK411A7F3/","TextMarkTextContent":"《我和我的任务调度中间件》"},{"Type":"NodeText","Data":"。简单点概括就是：“游戏没啥意思了，我要扛起了新一代分布式任务调度与计算框架的大旗！”。"}]},{"ID":"20240201214094-uh93vik","Type":"NodeParagraph","Properties":{"id":"20240201214094-uh93vik","updated":"20240201214094"},"Children":[{"Type":"NodeText","Data":"由于 SchedulerX 属于人民币产品，我这里就不过多介绍。PowerJob 官方也对比过其和 QuartZ、XXL-JOB 以及 SchedulerX。"}]},{"ID":"20240201214095-fwhwgjh","Type":"NodeParagraph","Properties":{"id":"20240201214095-fwhwgjh","updated":"20240201214095"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"https://oscimg.oschina.net/oscnet/up-795f5e9b0d875063717b1ee6a08f2ff1c01.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20240201214096-2dn2ob7","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20240201214096-2dn2ob7","updated":"20240201214096"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"总结"}]},{"ID":"20240201214097-fgwb0fz","Type":"NodeParagraph","Properties":{"id":"20240201214097-fgwb0fz","updated":"20240201214097"},"Children":[{"Type":"NodeText","Data":"这篇文章中，我主要介绍了："}]},{"ID":"20240201214098-wfdds7o","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201214098-wfdds7o","updated":"20240201214098"},"Children":[{"ID":"20240201214099-98h7uxw","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201214099-98h7uxw","updated":"20240201214099"},"Children":[{"ID":"20240201214100-1c6uc8d","Type":"NodeParagraph","Properties":{"id":"20240201214100-1c6uc8d","updated":"20240201214100"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"定时任务的相关概念"},{"Type":"NodeText","Data":" ：为什么需要定时任务、定时任务中的核心角色、分布式定时任务。"}]}]},{"ID":"20240201214101-so9iel3","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20240201214101-so9iel3","updated":"20240201214101"},"Children":[{"ID":"20240201214102-qaxdits","Type":"NodeParagraph","Properties":{"id":"20240201214102-qaxdits","updated":"20240201214102"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"定时任务的技术选型"},{"Type":"NodeText","Data":" ： XXL-JOB 2015 年推出，已经经过了很多年的考验。XXL-JOB 轻量级，并且使用起来非常简单。虽然存在性能瓶颈，但是，在绝大多数情况下，对于企业的基本需求来说是没有影响的。PowerJob 属于分布式任务调度领域里的新星，其稳定性还有待继续考察。ElasticJob 由于在架构设计上是基于 Zookeeper ，而 XXL-JOB 是基于数据库，性能方面的话，ElasticJob 略胜一筹。"}]}]}]},{"ID":"20240201214103-tsdcyv2","Type":"NodeParagraph","Properties":{"id":"20240201214103-tsdcyv2","updated":"20240201214103"},"Children":[{"Type":"NodeText","Data":"这篇文章并没有介绍到实际使用，但是，并不代表实际使用不重要。我在写这篇文章之前，已经动手写过相应的 Demo。像 Quartz，我在大学那会就用过。不过，当时用的是 Spring 。为了能够更好地体验，我自己又在 Spring Boot 上实际体验了一下。如果你并没有实际使用某个框架，就直接说它并不好用的话，是站不住脚的。"}]},{"ID":"20240201214104-h40r47z","Type":"NodeParagraph","Properties":{"id":"20240201214104-h40r47z","updated":"20240201214104"},"Children":[{"Type":"NodeText","Data":"最后，这篇文章要感谢艿艿的帮助，写这篇文章的时候向艿艿询问过一些问题。推荐一篇艿艿写的偏实战类型的硬核文章："},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://mp.weixin.qq.com/s?__biz=MzUzMTA2NTU2Ng==\u0026mid=2247490679\u0026idx=1\u0026sn=25374dbdcca95311d41be5d7b7db454d\u0026chksm=fa4963c6cd3eead055bb9cd10cca13224bb35d0f7373a27aa22a55495f71e24b8273a7603314\u0026scene=27#wechat_redirect","TextMarkTextContent":"《Spring Job？Quartz？XXL-Job？年轻人才做选择，艿艿全莽~》"},{"Type":"NodeText","Data":" 。"}]}]}